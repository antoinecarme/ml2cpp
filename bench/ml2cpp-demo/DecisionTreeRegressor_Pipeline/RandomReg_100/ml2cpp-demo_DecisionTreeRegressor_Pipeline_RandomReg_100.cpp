// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : DecisionTreeRegressor_Pipeline
// Dataset : RandomReg_100

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_DecisionTreeRegressor_Pipeline_RandomReg_100.exe ml2cpp-demo_DecisionTreeRegressor_Pipeline_RandomReg_100.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "impter_2", "impter_3", "impter_4", "impter_5", "impter_6", "impter_7", "impter_8", "impter_9", "impter_10", "impter_11", "impter_12", "impter_13", "impter_14", "impter_15", "impter_16", "impter_17", "impter_18", "impter_19", "impter_20", "impter_21", "impter_22", "impter_23", "impter_24", "impter_25", "impter_26", "impter_27", "impter_28", "impter_29", "impter_30", "impter_31", "impter_32", "impter_33", "impter_34", "impter_35", "impter_36", "impter_37", "impter_38", "impter_39", "impter_40", "impter_41", "impter_42", "impter_43", "impter_44", "impter_45", "impter_46", "impter_47", "impter_48", "impter_49", "impter_50", "impter_51", "impter_52", "impter_53", "impter_54", "impter_55", "impter_56", "impter_57", "impter_58", "impter_59", "impter_60", "impter_61", "impter_62", "impter_63", "impter_64", "impter_65", "impter_66", "impter_67", "impter_68", "impter_69", "impter_70", "impter_71", "impter_72", "impter_73", "impter_74", "impter_75", "impter_76", "impter_77", "impter_78", "impter_79", "impter_80", "impter_81", "impter_82", "impter_83", "impter_84", "impter_85", "impter_86", "impter_87", "impter_88", "impter_89", "impter_90", "impter_91", "impter_92", "impter_93", "impter_94", "impter_95", "impter_96", "impter_97", "impter_98", "impter_99", "impter_100", "impter_101" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
	
			tTable lTable;
	
			lTable["impter_2"] = { ((Feature_0 == std::any()) ?  ( -0.08128085300192169 ) : ( Feature_0)) };
			lTable["impter_3"] = { ((Feature_1 == std::any()) ?  ( -0.13436805172534722 ) : ( Feature_1)) };
			lTable["impter_4"] = { ((Feature_2 == std::any()) ?  ( -0.1171335439265335 ) : ( Feature_2)) };
			lTable["impter_5"] = { ((Feature_3 == std::any()) ?  ( 0.10314525691526008 ) : ( Feature_3)) };
			lTable["impter_6"] = { ((Feature_4 == std::any()) ?  ( 0.04859877061601238 ) : ( Feature_4)) };
			lTable["impter_7"] = { ((Feature_5 == std::any()) ?  ( 0.09985694677353979 ) : ( Feature_5)) };
			lTable["impter_8"] = { ((Feature_6 == std::any()) ?  ( 0.0672774556565916 ) : ( Feature_6)) };
			lTable["impter_9"] = { ((Feature_7 == std::any()) ?  ( 0.1622384092846963 ) : ( Feature_7)) };
			lTable["impter_10"] = { ((Feature_8 == std::any()) ?  ( 0.04069362852608218 ) : ( Feature_8)) };
			lTable["impter_11"] = { ((Feature_9 == std::any()) ?  ( 0.051659905088603277 ) : ( Feature_9)) };
			lTable["impter_12"] = { ((Feature_10 == std::any()) ?  ( 0.10179067839269526 ) : ( Feature_10)) };
			lTable["impter_13"] = { ((Feature_11 == std::any()) ?  ( -0.1759747362698276 ) : ( Feature_11)) };
			lTable["impter_14"] = { ((Feature_12 == std::any()) ?  ( -0.09675138494095058 ) : ( Feature_12)) };
			lTable["impter_15"] = { ((Feature_13 == std::any()) ?  ( -0.04608656912634662 ) : ( Feature_13)) };
			lTable["impter_16"] = { ((Feature_14 == std::any()) ?  ( 0.10165852286085655 ) : ( Feature_14)) };
			lTable["impter_17"] = { ((Feature_15 == std::any()) ?  ( 0.11179903010835046 ) : ( Feature_15)) };
			lTable["impter_18"] = { ((Feature_16 == std::any()) ?  ( -0.006110233359380335 ) : ( Feature_16)) };
			lTable["impter_19"] = { ((Feature_17 == std::any()) ?  ( 0.07144704068910084 ) : ( Feature_17)) };
			lTable["impter_20"] = { ((Feature_18 == std::any()) ?  ( -0.08808458650118434 ) : ( Feature_18)) };
			lTable["impter_21"] = { ((Feature_19 == std::any()) ?  ( -0.07182799000884085 ) : ( Feature_19)) };
			lTable["impter_22"] = { ((Feature_20 == std::any()) ?  ( -0.07230200847310368 ) : ( Feature_20)) };
			lTable["impter_23"] = { ((Feature_21 == std::any()) ?  ( 0.02896693079944173 ) : ( Feature_21)) };
			lTable["impter_24"] = { ((Feature_22 == std::any()) ?  ( 0.21388217632997558 ) : ( Feature_22)) };
			lTable["impter_25"] = { ((Feature_23 == std::any()) ?  ( -0.06669297919409706 ) : ( Feature_23)) };
			lTable["impter_26"] = { ((Feature_24 == std::any()) ?  ( 0.046152348549980085 ) : ( Feature_24)) };
			lTable["impter_27"] = { ((Feature_25 == std::any()) ?  ( 0.03249513222766133 ) : ( Feature_25)) };
			lTable["impter_28"] = { ((Feature_26 == std::any()) ?  ( 0.05224239330612866 ) : ( Feature_26)) };
			lTable["impter_29"] = { ((Feature_27 == std::any()) ?  ( 0.018745871966632584 ) : ( Feature_27)) };
			lTable["impter_30"] = { ((Feature_28 == std::any()) ?  ( 0.015553079229790346 ) : ( Feature_28)) };
			lTable["impter_31"] = { ((Feature_29 == std::any()) ?  ( 0.2258153729902979 ) : ( Feature_29)) };
			lTable["impter_32"] = { ((Feature_30 == std::any()) ?  ( -0.16989857778838335 ) : ( Feature_30)) };
			lTable["impter_33"] = { ((Feature_31 == std::any()) ?  ( 0.036044309156992346 ) : ( Feature_31)) };
			lTable["impter_34"] = { ((Feature_32 == std::any()) ?  ( -0.17199324162640067 ) : ( Feature_32)) };
			lTable["impter_35"] = { ((Feature_33 == std::any()) ?  ( 0.13781418887864322 ) : ( Feature_33)) };
			lTable["impter_36"] = { ((Feature_34 == std::any()) ?  ( -0.002438210964217244 ) : ( Feature_34)) };
			lTable["impter_37"] = { ((Feature_35 == std::any()) ?  ( 0.060833749131451356 ) : ( Feature_35)) };
			lTable["impter_38"] = { ((Feature_36 == std::any()) ?  ( -0.18905998689974024 ) : ( Feature_36)) };
			lTable["impter_39"] = { ((Feature_37 == std::any()) ?  ( -0.09635219278465344 ) : ( Feature_37)) };
			lTable["impter_40"] = { ((Feature_38 == std::any()) ?  ( -0.10160667507355636 ) : ( Feature_38)) };
			lTable["impter_41"] = { ((Feature_39 == std::any()) ?  ( 0.06475250541578681 ) : ( Feature_39)) };
			lTable["impter_42"] = { ((Feature_40 == std::any()) ?  ( -0.30264305036051603 ) : ( Feature_40)) };
			lTable["impter_43"] = { ((Feature_41 == std::any()) ?  ( -0.13264155681878692 ) : ( Feature_41)) };
			lTable["impter_44"] = { ((Feature_42 == std::any()) ?  ( -0.1334054780733323 ) : ( Feature_42)) };
			lTable["impter_45"] = { ((Feature_43 == std::any()) ?  ( -0.0011436009702802522 ) : ( Feature_43)) };
			lTable["impter_46"] = { ((Feature_44 == std::any()) ?  ( -0.05335157908923337 ) : ( Feature_44)) };
			lTable["impter_47"] = { ((Feature_45 == std::any()) ?  ( 0.01714537002687063 ) : ( Feature_45)) };
			lTable["impter_48"] = { ((Feature_46 == std::any()) ?  ( -0.059059449572612485 ) : ( Feature_46)) };
			lTable["impter_49"] = { ((Feature_47 == std::any()) ?  ( -0.09528879968183994 ) : ( Feature_47)) };
			lTable["impter_50"] = { ((Feature_48 == std::any()) ?  ( -0.15781363463365924 ) : ( Feature_48)) };
			lTable["impter_51"] = { ((Feature_49 == std::any()) ?  ( -0.23794433392453432 ) : ( Feature_49)) };
			lTable["impter_52"] = { ((Feature_50 == std::any()) ?  ( 0.13863850693032237 ) : ( Feature_50)) };
			lTable["impter_53"] = { ((Feature_51 == std::any()) ?  ( -0.01699621991492915 ) : ( Feature_51)) };
			lTable["impter_54"] = { ((Feature_52 == std::any()) ?  ( 0.19701490003754304 ) : ( Feature_52)) };
			lTable["impter_55"] = { ((Feature_53 == std::any()) ?  ( 0.05162990473238551 ) : ( Feature_53)) };
			lTable["impter_56"] = { ((Feature_54 == std::any()) ?  ( -0.13453002098662553 ) : ( Feature_54)) };
			lTable["impter_57"] = { ((Feature_55 == std::any()) ?  ( 0.14789370104559646 ) : ( Feature_55)) };
			lTable["impter_58"] = { ((Feature_56 == std::any()) ?  ( -0.013142759438358454 ) : ( Feature_56)) };
			lTable["impter_59"] = { ((Feature_57 == std::any()) ?  ( -0.09299162994657897 ) : ( Feature_57)) };
			lTable["impter_60"] = { ((Feature_58 == std::any()) ?  ( -0.24689492768975088 ) : ( Feature_58)) };
			lTable["impter_61"] = { ((Feature_59 == std::any()) ?  ( 0.13499727108287438 ) : ( Feature_59)) };
			lTable["impter_62"] = { ((Feature_60 == std::any()) ?  ( 0.0025544005507731047 ) : ( Feature_60)) };
			lTable["impter_63"] = { ((Feature_61 == std::any()) ?  ( 0.12527368663465327 ) : ( Feature_61)) };
			lTable["impter_64"] = { ((Feature_62 == std::any()) ?  ( -0.03739962296055886 ) : ( Feature_62)) };
			lTable["impter_65"] = { ((Feature_63 == std::any()) ?  ( -0.02998869580177853 ) : ( Feature_63)) };
			lTable["impter_66"] = { ((Feature_64 == std::any()) ?  ( -0.04286088516871345 ) : ( Feature_64)) };
			lTable["impter_67"] = { ((Feature_65 == std::any()) ?  ( -0.1438347006651433 ) : ( Feature_65)) };
			lTable["impter_68"] = { ((Feature_66 == std::any()) ?  ( -0.05269793910889183 ) : ( Feature_66)) };
			lTable["impter_69"] = { ((Feature_67 == std::any()) ?  ( 0.029267940271277926 ) : ( Feature_67)) };
			lTable["impter_70"] = { ((Feature_68 == std::any()) ?  ( 0.10431080888322372 ) : ( Feature_68)) };
			lTable["impter_71"] = { ((Feature_69 == std::any()) ?  ( -0.09619687433047125 ) : ( Feature_69)) };
			lTable["impter_72"] = { ((Feature_70 == std::any()) ?  ( 0.0067333192983315745 ) : ( Feature_70)) };
			lTable["impter_73"] = { ((Feature_71 == std::any()) ?  ( 0.03289665935367682 ) : ( Feature_71)) };
			lTable["impter_74"] = { ((Feature_72 == std::any()) ?  ( 0.08064277275460055 ) : ( Feature_72)) };
			lTable["impter_75"] = { ((Feature_73 == std::any()) ?  ( -0.10603556755491854 ) : ( Feature_73)) };
			lTable["impter_76"] = { ((Feature_74 == std::any()) ?  ( 0.09489100148295918 ) : ( Feature_74)) };
			lTable["impter_77"] = { ((Feature_75 == std::any()) ?  ( -0.19664887110008689 ) : ( Feature_75)) };
			lTable["impter_78"] = { ((Feature_76 == std::any()) ?  ( 0.11652643514949582 ) : ( Feature_76)) };
			lTable["impter_79"] = { ((Feature_77 == std::any()) ?  ( 0.19340218348071325 ) : ( Feature_77)) };
			lTable["impter_80"] = { ((Feature_78 == std::any()) ?  ( 0.11209709087907249 ) : ( Feature_78)) };
			lTable["impter_81"] = { ((Feature_79 == std::any()) ?  ( 0.10709013621222807 ) : ( Feature_79)) };
			lTable["impter_82"] = { ((Feature_80 == std::any()) ?  ( -0.01033042920922311 ) : ( Feature_80)) };
			lTable["impter_83"] = { ((Feature_81 == std::any()) ?  ( 0.11026552104356717 ) : ( Feature_81)) };
			lTable["impter_84"] = { ((Feature_82 == std::any()) ?  ( 0.01191634589453312 ) : ( Feature_82)) };
			lTable["impter_85"] = { ((Feature_83 == std::any()) ?  ( 0.013369825695028714 ) : ( Feature_83)) };
			lTable["impter_86"] = { ((Feature_84 == std::any()) ?  ( -0.1500512000702785 ) : ( Feature_84)) };
			lTable["impter_87"] = { ((Feature_85 == std::any()) ?  ( -0.09022177579448487 ) : ( Feature_85)) };
			lTable["impter_88"] = { ((Feature_86 == std::any()) ?  ( -0.16029625657228264 ) : ( Feature_86)) };
			lTable["impter_89"] = { ((Feature_87 == std::any()) ?  ( -0.10127017293489289 ) : ( Feature_87)) };
			lTable["impter_90"] = { ((Feature_88 == std::any()) ?  ( 0.3323543006292627 ) : ( Feature_88)) };
			lTable["impter_91"] = { ((Feature_89 == std::any()) ?  ( 0.051731173060791114 ) : ( Feature_89)) };
			lTable["impter_92"] = { ((Feature_90 == std::any()) ?  ( 0.1078879212202887 ) : ( Feature_90)) };
			lTable["impter_93"] = { ((Feature_91 == std::any()) ?  ( 0.21454931874740585 ) : ( Feature_91)) };
			lTable["impter_94"] = { ((Feature_92 == std::any()) ?  ( -0.16317337769942666 ) : ( Feature_92)) };
			lTable["impter_95"] = { ((Feature_93 == std::any()) ?  ( -0.2242384076879583 ) : ( Feature_93)) };
			lTable["impter_96"] = { ((Feature_94 == std::any()) ?  ( -0.27695847565296017 ) : ( Feature_94)) };
			lTable["impter_97"] = { ((Feature_95 == std::any()) ?  ( 0.037863552135044866 ) : ( Feature_95)) };
			lTable["impter_98"] = { ((Feature_96 == std::any()) ?  ( -0.02758852803141265 ) : ( Feature_96)) };
			lTable["impter_99"] = { ((Feature_97 == std::any()) ?  ( 0.1052877881031243 ) : ( Feature_97)) };
			lTable["impter_100"] = { ((Feature_98 == std::any()) ?  ( 0.06640703380221318 ) : ( Feature_98)) };
			lTable["impter_101"] = { ((Feature_99 == std::any()) ?  ( 0.06569930995842384 ) : ( Feature_99)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "impter_2", "impter_3", "impter_4", "impter_5", "impter_6", "impter_7", "impter_8", "impter_9", "impter_10", "impter_11", "impter_12", "impter_13", "impter_14", "impter_15", "impter_16", "impter_17", "impter_18", "impter_19", "impter_20", "impter_21", "impter_22", "impter_23", "impter_24", "impter_25", "impter_26", "impter_27", "impter_28", "impter_29", "impter_30", "impter_31", "impter_32", "impter_33", "impter_34", "impter_35", "impter_36", "impter_37", "impter_38", "impter_39", "impter_40", "impter_41", "impter_42", "impter_43", "impter_44", "impter_45", "impter_46", "impter_47", "impter_48", "impter_49", "impter_50", "impter_51", "impter_52", "impter_53", "impter_54", "impter_55", "impter_56", "impter_57", "impter_58", "impter_59", "impter_60", "impter_61", "impter_62", "impter_63", "impter_64", "impter_65", "impter_66", "impter_67", "impter_68", "impter_69", "impter_70", "impter_71", "impter_72", "impter_73", "impter_74", "impter_75", "impter_76", "impter_77", "impter_78", "impter_79", "impter_80", "impter_81", "impter_82", "impter_83", "impter_84", "impter_85", "impter_86", "impter_87", "impter_88", "impter_89", "impter_90", "impter_91", "impter_92", "impter_93", "impter_94", "impter_95", "impter_96", "impter_97", "impter_98", "impter_99", "impter_100", "impter_101" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any impter_2, std::any impter_3, std::any impter_4, std::any impter_5, std::any impter_6, std::any impter_7, std::any impter_8, std::any impter_9, std::any impter_10, std::any impter_11, std::any impter_12, std::any impter_13, std::any impter_14, std::any impter_15, std::any impter_16, std::any impter_17, std::any impter_18, std::any impter_19, std::any impter_20, std::any impter_21, std::any impter_22, std::any impter_23, std::any impter_24, std::any impter_25, std::any impter_26, std::any impter_27, std::any impter_28, std::any impter_29, std::any impter_30, std::any impter_31, std::any impter_32, std::any impter_33, std::any impter_34, std::any impter_35, std::any impter_36, std::any impter_37, std::any impter_38, std::any impter_39, std::any impter_40, std::any impter_41, std::any impter_42, std::any impter_43, std::any impter_44, std::any impter_45, std::any impter_46, std::any impter_47, std::any impter_48, std::any impter_49, std::any impter_50, std::any impter_51, std::any impter_52, std::any impter_53, std::any impter_54, std::any impter_55, std::any impter_56, std::any impter_57, std::any impter_58, std::any impter_59, std::any impter_60, std::any impter_61, std::any impter_62, std::any impter_63, std::any impter_64, std::any impter_65, std::any impter_66, std::any impter_67, std::any impter_68, std::any impter_69, std::any impter_70, std::any impter_71, std::any impter_72, std::any impter_73, std::any impter_74, std::any impter_75, std::any impter_76, std::any impter_77, std::any impter_78, std::any impter_79, std::any impter_80, std::any impter_81, std::any impter_82, std::any impter_83, std::any impter_84, std::any impter_85, std::any impter_86, std::any impter_87, std::any impter_88, std::any impter_89, std::any impter_90, std::any impter_91, std::any impter_92, std::any impter_93, std::any impter_94, std::any impter_95, std::any impter_96, std::any impter_97, std::any impter_98, std::any impter_99, std::any impter_100, std::any impter_101) {
	
			tTable lTable;
	
			lTable["scaler_2"] = { ( ( impter_2 - -0.08128085300192169 ) / 1.0000403559305833 ) };
			lTable["scaler_3"] = { ( ( impter_3 - -0.13436805172534722 ) / 0.8837904988184502 ) };
			lTable["scaler_4"] = { ( ( impter_4 - -0.1171335439265335 ) / 0.8570569022899862 ) };
			lTable["scaler_5"] = { ( ( impter_5 - 0.10314525691526008 ) / 1.0029176283530983 ) };
			lTable["scaler_6"] = { ( ( impter_6 - 0.04859877061601238 ) / 0.9128966632538227 ) };
			lTable["scaler_7"] = { ( ( impter_7 - 0.09985694677353979 ) / 0.8987090594452791 ) };
			lTable["scaler_8"] = { ( ( impter_8 - 0.0672774556565916 ) / 1.0142447611518557 ) };
			lTable["scaler_9"] = { ( ( impter_9 - 0.1622384092846963 ) / 1.0747662307530297 ) };
			lTable["scaler_10"] = { ( ( impter_10 - 0.04069362852608218 ) / 1.026267867232466 ) };
			lTable["scaler_11"] = { ( ( impter_11 - 0.051659905088603277 ) / 0.8402436043740567 ) };
			lTable["scaler_12"] = { ( ( impter_12 - 0.10179067839269526 ) / 1.0068242363938393 ) };
			lTable["scaler_13"] = { ( ( impter_13 - -0.1759747362698276 ) / 0.9240710764915452 ) };
			lTable["scaler_14"] = { ( ( impter_14 - -0.09675138494095058 ) / 0.9783790869772869 ) };
			lTable["scaler_15"] = { ( ( impter_15 - -0.04608656912634662 ) / 0.9781135354292492 ) };
			lTable["scaler_16"] = { ( ( impter_16 - 0.10165852286085655 ) / 0.9014456978711726 ) };
			lTable["scaler_17"] = { ( ( impter_17 - 0.11179903010835046 ) / 0.9779155034856741 ) };
			lTable["scaler_18"] = { ( ( impter_18 - -0.006110233359380335 ) / 0.9981020697621527 ) };
			lTable["scaler_19"] = { ( ( impter_19 - 0.07144704068910084 ) / 0.8874816465174282 ) };
			lTable["scaler_20"] = { ( ( impter_20 - -0.08808458650118434 ) / 0.8392925703736469 ) };
			lTable["scaler_21"] = { ( ( impter_21 - -0.07182799000884085 ) / 0.9507419765776924 ) };
			lTable["scaler_22"] = { ( ( impter_22 - -0.07230200847310368 ) / 1.066826998652098 ) };
			lTable["scaler_23"] = { ( ( impter_23 - 0.02896693079944173 ) / 0.9902823724923776 ) };
			lTable["scaler_24"] = { ( ( impter_24 - 0.21388217632997558 ) / 0.8623253968778218 ) };
			lTable["scaler_25"] = { ( ( impter_25 - -0.06669297919409706 ) / 0.9598770564082906 ) };
			lTable["scaler_26"] = { ( ( impter_26 - 0.046152348549980085 ) / 0.9878502885847017 ) };
			lTable["scaler_27"] = { ( ( impter_27 - 0.03249513222766133 ) / 0.9583954740248698 ) };
			lTable["scaler_28"] = { ( ( impter_28 - 0.05224239330612866 ) / 0.9771107275041324 ) };
			lTable["scaler_29"] = { ( ( impter_29 - 0.018745871966632584 ) / 1.0557199260759529 ) };
			lTable["scaler_30"] = { ( ( impter_30 - 0.015553079229790346 ) / 0.9376481022022428 ) };
			lTable["scaler_31"] = { ( ( impter_31 - 0.2258153729902979 ) / 1.0513597556957384 ) };
			lTable["scaler_32"] = { ( ( impter_32 - -0.16989857778838335 ) / 1.0578168863571897 ) };
			lTable["scaler_33"] = { ( ( impter_33 - 0.036044309156992346 ) / 0.9200106573435598 ) };
			lTable["scaler_34"] = { ( ( impter_34 - -0.17199324162640067 ) / 0.9814800251435433 ) };
			lTable["scaler_35"] = { ( ( impter_35 - 0.13781418887864322 ) / 0.9177012051168076 ) };
			lTable["scaler_36"] = { ( ( impter_36 - -0.002438210964217244 ) / 0.8944380116105023 ) };
			lTable["scaler_37"] = { ( ( impter_37 - 0.060833749131451356 ) / 0.9361651054882097 ) };
			lTable["scaler_38"] = { ( ( impter_38 - -0.18905998689974024 ) / 1.1290398175800667 ) };
			lTable["scaler_39"] = { ( ( impter_39 - -0.09635219278465344 ) / 1.0703546254505507 ) };
			lTable["scaler_40"] = { ( ( impter_40 - -0.10160667507355636 ) / 0.920646499226522 ) };
			lTable["scaler_41"] = { ( ( impter_41 - 0.06475250541578681 ) / 0.8986109106193976 ) };
			lTable["scaler_42"] = { ( ( impter_42 - -0.30264305036051603 ) / 1.1304324059677955 ) };
			lTable["scaler_43"] = { ( ( impter_43 - -0.13264155681878692 ) / 0.8585260796845616 ) };
			lTable["scaler_44"] = { ( ( impter_44 - -0.1334054780733323 ) / 0.962489523355931 ) };
			lTable["scaler_45"] = { ( ( impter_45 - -0.0011436009702802522 ) / 0.9049370484050282 ) };
			lTable["scaler_46"] = { ( ( impter_46 - -0.05335157908923337 ) / 1.0610026457631268 ) };
			lTable["scaler_47"] = { ( ( impter_47 - 0.01714537002687063 ) / 0.9557097858300829 ) };
			lTable["scaler_48"] = { ( ( impter_48 - -0.059059449572612485 ) / 1.0894822012599163 ) };
			lTable["scaler_49"] = { ( ( impter_49 - -0.09528879968183994 ) / 0.8571475953382788 ) };
			lTable["scaler_50"] = { ( ( impter_50 - -0.15781363463365924 ) / 0.9919635867517769 ) };
			lTable["scaler_51"] = { ( ( impter_51 - -0.23794433392453432 ) / 1.0067503129721596 ) };
			lTable["scaler_52"] = { ( ( impter_52 - 0.13863850693032237 ) / 1.0279273388893944 ) };
			lTable["scaler_53"] = { ( ( impter_53 - -0.01699621991492915 ) / 0.974408927553762 ) };
			lTable["scaler_54"] = { ( ( impter_54 - 0.19701490003754304 ) / 0.8684920711659356 ) };
			lTable["scaler_55"] = { ( ( impter_55 - 0.05162990473238551 ) / 0.8943974752234072 ) };
			lTable["scaler_56"] = { ( ( impter_56 - -0.13453002098662553 ) / 0.9634839659318408 ) };
			lTable["scaler_57"] = { ( ( impter_57 - 0.14789370104559646 ) / 1.0615399626185422 ) };
			lTable["scaler_58"] = { ( ( impter_58 - -0.013142759438358454 ) / 0.9772015278495697 ) };
			lTable["scaler_59"] = { ( ( impter_59 - -0.09299162994657897 ) / 1.007175843550957 ) };
			lTable["scaler_60"] = { ( ( impter_60 - -0.24689492768975088 ) / 0.9237354128048836 ) };
			lTable["scaler_61"] = { ( ( impter_61 - 0.13499727108287438 ) / 1.1015843688177136 ) };
			lTable["scaler_62"] = { ( ( impter_62 - 0.0025544005507731047 ) / 1.0664451639404966 ) };
			lTable["scaler_63"] = { ( ( impter_63 - 0.12527368663465327 ) / 1.1035677221918443 ) };
			lTable["scaler_64"] = { ( ( impter_64 - -0.03739962296055886 ) / 1.0321694444223468 ) };
			lTable["scaler_65"] = { ( ( impter_65 - -0.02998869580177853 ) / 1.0714904800508076 ) };
			lTable["scaler_66"] = { ( ( impter_66 - -0.04286088516871345 ) / 1.1900007472884844 ) };
			lTable["scaler_67"] = { ( ( impter_67 - -0.1438347006651433 ) / 0.9838632536243364 ) };
			lTable["scaler_68"] = { ( ( impter_68 - -0.05269793910889183 ) / 1.133004109638514 ) };
			lTable["scaler_69"] = { ( ( impter_69 - 0.029267940271277926 ) / 0.9505911883818412 ) };
			lTable["scaler_70"] = { ( ( impter_70 - 0.10431080888322372 ) / 0.9124892804740817 ) };
			lTable["scaler_71"] = { ( ( impter_71 - -0.09619687433047125 ) / 1.0435263748552108 ) };
			lTable["scaler_72"] = { ( ( impter_72 - 0.0067333192983315745 ) / 1.0686226130046215 ) };
			lTable["scaler_73"] = { ( ( impter_73 - 0.03289665935367682 ) / 0.859185924601115 ) };
			lTable["scaler_74"] = { ( ( impter_74 - 0.08064277275460055 ) / 1.031072803981909 ) };
			lTable["scaler_75"] = { ( ( impter_75 - -0.10603556755491854 ) / 0.9757644491800123 ) };
			lTable["scaler_76"] = { ( ( impter_76 - 0.09489100148295918 ) / 0.9082861753672621 ) };
			lTable["scaler_77"] = { ( ( impter_77 - -0.19664887110008689 ) / 0.9570091111503233 ) };
			lTable["scaler_78"] = { ( ( impter_78 - 0.11652643514949582 ) / 0.8906993645060894 ) };
			lTable["scaler_79"] = { ( ( impter_79 - 0.19340218348071325 ) / 1.015190635438741 ) };
			lTable["scaler_80"] = { ( ( impter_80 - 0.11209709087907249 ) / 1.0005941329026147 ) };
			lTable["scaler_81"] = { ( ( impter_81 - 0.10709013621222807 ) / 0.9981990995405838 ) };
			lTable["scaler_82"] = { ( ( impter_82 - -0.01033042920922311 ) / 1.1261340687039605 ) };
			lTable["scaler_83"] = { ( ( impter_83 - 0.11026552104356717 ) / 1.0203631595796565 ) };
			lTable["scaler_84"] = { ( ( impter_84 - 0.01191634589453312 ) / 0.9520198315890641 ) };
			lTable["scaler_85"] = { ( ( impter_85 - 0.013369825695028714 ) / 1.0539650476886062 ) };
			lTable["scaler_86"] = { ( ( impter_86 - -0.1500512000702785 ) / 0.9981993823991944 ) };
			lTable["scaler_87"] = { ( ( impter_87 - -0.09022177579448487 ) / 0.9119054985661357 ) };
			lTable["scaler_88"] = { ( ( impter_88 - -0.16029625657228264 ) / 1.0530611443946694 ) };
			lTable["scaler_89"] = { ( ( impter_89 - -0.10127017293489289 ) / 1.0673088162334932 ) };
			lTable["scaler_90"] = { ( ( impter_90 - 0.3323543006292627 ) / 0.8517398608796033 ) };
			lTable["scaler_91"] = { ( ( impter_91 - 0.051731173060791114 ) / 0.9036571972083375 ) };
			lTable["scaler_92"] = { ( ( impter_92 - 0.1078879212202887 ) / 0.9679161746442023 ) };
			lTable["scaler_93"] = { ( ( impter_93 - 0.21454931874740585 ) / 0.9059278397749674 ) };
			lTable["scaler_94"] = { ( ( impter_94 - -0.16317337769942666 ) / 1.097718994991099 ) };
			lTable["scaler_95"] = { ( ( impter_95 - -0.2242384076879583 ) / 0.7859624368027274 ) };
			lTable["scaler_96"] = { ( ( impter_96 - -0.27695847565296017 ) / 1.000759742410346 ) };
			lTable["scaler_97"] = { ( ( impter_97 - 0.037863552135044866 ) / 0.9617491014855645 ) };
			lTable["scaler_98"] = { ( ( impter_98 - -0.02758852803141265 ) / 0.888578840707713 ) };
			lTable["scaler_99"] = { ( ( impter_99 - 0.1052877881031243 ) / 0.9881179437649864 ) };
			lTable["scaler_100"] = { ( ( impter_100 - 0.06640703380221318 ) / 0.8931321524560405 ) };
			lTable["scaler_101"] = { ( ( impter_101 - 0.06569930995842384 ) / 0.9367001351824711 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("impter_2")[0], iTable.at("impter_3")[0], iTable.at("impter_4")[0], iTable.at("impter_5")[0], iTable.at("impter_6")[0], iTable.at("impter_7")[0], iTable.at("impter_8")[0], iTable.at("impter_9")[0], iTable.at("impter_10")[0], iTable.at("impter_11")[0], iTable.at("impter_12")[0], iTable.at("impter_13")[0], iTable.at("impter_14")[0], iTable.at("impter_15")[0], iTable.at("impter_16")[0], iTable.at("impter_17")[0], iTable.at("impter_18")[0], iTable.at("impter_19")[0], iTable.at("impter_20")[0], iTable.at("impter_21")[0], iTable.at("impter_22")[0], iTable.at("impter_23")[0], iTable.at("impter_24")[0], iTable.at("impter_25")[0], iTable.at("impter_26")[0], iTable.at("impter_27")[0], iTable.at("impter_28")[0], iTable.at("impter_29")[0], iTable.at("impter_30")[0], iTable.at("impter_31")[0], iTable.at("impter_32")[0], iTable.at("impter_33")[0], iTable.at("impter_34")[0], iTable.at("impter_35")[0], iTable.at("impter_36")[0], iTable.at("impter_37")[0], iTable.at("impter_38")[0], iTable.at("impter_39")[0], iTable.at("impter_40")[0], iTable.at("impter_41")[0], iTable.at("impter_42")[0], iTable.at("impter_43")[0], iTable.at("impter_44")[0], iTable.at("impter_45")[0], iTable.at("impter_46")[0], iTable.at("impter_47")[0], iTable.at("impter_48")[0], iTable.at("impter_49")[0], iTable.at("impter_50")[0], iTable.at("impter_51")[0], iTable.at("impter_52")[0], iTable.at("impter_53")[0], iTable.at("impter_54")[0], iTable.at("impter_55")[0], iTable.at("impter_56")[0], iTable.at("impter_57")[0], iTable.at("impter_58")[0], iTable.at("impter_59")[0], iTable.at("impter_60")[0], iTable.at("impter_61")[0], iTable.at("impter_62")[0], iTable.at("impter_63")[0], iTable.at("impter_64")[0], iTable.at("impter_65")[0], iTable.at("impter_66")[0], iTable.at("impter_67")[0], iTable.at("impter_68")[0], iTable.at("impter_69")[0], iTable.at("impter_70")[0], iTable.at("impter_71")[0], iTable.at("impter_72")[0], iTable.at("impter_73")[0], iTable.at("impter_74")[0], iTable.at("impter_75")[0], iTable.at("impter_76")[0], iTable.at("impter_77")[0], iTable.at("impter_78")[0], iTable.at("impter_79")[0], iTable.at("impter_80")[0], iTable.at("impter_81")[0], iTable.at("impter_82")[0], iTable.at("impter_83")[0], iTable.at("impter_84")[0], iTable.at("impter_85")[0], iTable.at("impter_86")[0], iTable.at("impter_87")[0], iTable.at("impter_88")[0], iTable.at("impter_89")[0], iTable.at("impter_90")[0], iTable.at("impter_91")[0], iTable.at("impter_92")[0], iTable.at("impter_93")[0], iTable.at("impter_94")[0], iTable.at("impter_95")[0], iTable.at("impter_96")[0], iTable.at("impter_97")[0], iTable.at("impter_98")[0], iTable.at("impter_99")[0], iTable.at("impter_100")[0], iTable.at("impter_101")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 8 ,  {-291.84388737 }} ,
				{ 9 ,  {-290.52672487 }} ,
				{ 11 ,  {-310.56333873 }} ,
				{ 12 ,  {-306.85826974 }} ,
				{ 14 ,  {-361.1632498 }} ,
				{ 15 ,  {-338.54994316 }} ,
				{ 18 ,  {-234.79191601 }} ,
				{ 19 ,  {-234.46580929 }} ,
				{ 20 ,  {-257.97922489 }} ,
				{ 22 ,  {-146.53732849 }} ,
				{ 24 ,  {-190.6470266 }} ,
				{ 25 ,  {-207.82497721 }} ,
				{ 27 ,  {-327.50301874 }} ,
				{ 30 ,  {-436.89308609 }} ,
				{ 31 ,  {-430.73224202 }} ,
				{ 32 ,  {-454.82158737 }} ,
				{ 36 ,  {-280.96508601 }} ,
				{ 38 ,  {-167.53786194 }} ,
				{ 41 ,  {-196.17622398 }} ,
				{ 42 ,  {-197.78121613 }} ,
				{ 43 ,  {-200.33739348 }} ,
				{ 45 ,  {-190.99779883 }} ,
				{ 48 ,  {-54.81786632 }} ,
				{ 49 ,  {-42.10296472 }} ,
				{ 51 ,  {-86.11645147 }} ,
				{ 52 ,  {-102.26347334 }} ,
				{ 56 ,  {39.44300012 }} ,
				{ 58 ,  {75.607022 }} ,
				{ 59 ,  {75.33652616 }} ,
				{ 60 ,  {-55.13785993 }} ,
				{ 63 ,  {215.90083762 }} ,
				{ 64 ,  {183.77184322 }} ,
				{ 66 ,  {136.92680038 }} ,
				{ 68 ,  {111.49818731 }} ,
				{ 69 ,  {114.45423223 }} ,
				{ 75 ,  {-30.69897773 }} ,
				{ 77 ,  {2.27397289 }} ,
				{ 78 ,  {-4.90459143 }} ,
				{ 82 ,  {62.60532339 }} ,
				{ 83 ,  {48.4233357 }} ,
				{ 84 ,  {90.67187466 }} ,
				{ 87 ,  {105.13302469 }} ,
				{ 88 ,  {122.37894791 }} ,
				{ 90 ,  {144.72865942 }} ,
				{ 91 ,  {157.32675575 }} ,
				{ 95 ,  {-172.78010698 }} ,
				{ 96 ,  {-202.60833883 }} ,
				{ 97 ,  {-140.57351312 }} ,
				{ 100 ,  {38.19976423 }} ,
				{ 101 ,  {-3.85906949 }} ,
				{ 103 ,  {-87.98512255 }} ,
				{ 107 ,  {-79.2896338 }} ,
				{ 108 ,  {-79.78381999 }} ,
				{ 109 ,  {-81.7867005 }} ,
				{ 110 ,  {-76.86275487 }} ,
				{ 113 ,  {94.43377409 }} ,
				{ 114 ,  {-10.71544337 }} ,
				{ 117 ,  {278.81453164 }} ,
				{ 118 ,  {327.27619653 }} ,
				{ 121 ,  {175.64031368 }} ,
				{ 122 ,  {178.09986345 }} ,
				{ 123 ,  {233.33694107 }} ,
				{ 130 ,  {130.61554227 }} ,
				{ 131 ,  {128.74971925 }} ,
				{ 132 ,  {114.66116148 }} ,
				{ 133 ,  {174.05588768 }} ,
				{ 137 ,  {294.89065558 }} ,
				{ 138 ,  {270.97867971 }} ,
				{ 140 ,  {245.21860441 }} ,
				{ 141 ,  {242.60253144 }} ,
				{ 144 ,  {167.43350007 }} ,
				{ 145 ,  {180.24317892 }} ,
				{ 148 ,  {212.8171045 }} ,
				{ 149 ,  {219.92766038 }} ,
				{ 150 ,  {195.39419395 }} ,
				{ 152 ,  {419.81179048 }} ,
				{ 154 ,  {294.76468454 }} ,
				{ 155 ,  {305.04020477 }} ,
				{ 157 ,  {-107.89147253 }} ,
				{ 158 ,  {-51.54063841 }} 
		};
		
	
		int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
			int lNodeIndex = (scaler_82 <= -0.17478496581315994) ? ( (scaler_43 <= -0.4531792104244232) ? ( (scaler_57 <= 0.6153919100761414) ? ( (scaler_75 <= 0.5293402150273323) ? ( (scaler_65 <= 0.07095328532159328) ? ( (scaler_98 <= 1.0108441710472107) ? ( (scaler_48 <= -0.13238966930657625) ? ( (scaler_84 <= -0.04563266038894653) ? ( 8 ) : ( 9 ) ) : ( (scaler_94 <= -0.4555416163057089) ? ( 11 ) : ( 12 ) ) ) : ( (scaler_55 <= -0.4576222598552704) ? ( 14 ) : ( 15 ) ) ) : ( (scaler_8 <= 0.403201587498188) ? ( (scaler_3 <= -0.2012306973338127) ? ( 18 ) : ( 19 ) ) : ( 20 ) ) ) : ( (scaler_80 <= -0.7859364449977875) ? ( 22 ) : ( (scaler_79 <= -0.7340942025184631) ? ( 24 ) : ( 25 ) ) ) ) : ( (scaler_10 <= -1.3481407463550568) ? ( 27 ) : ( (scaler_25 <= 0.2462170422077179) ? ( (scaler_85 <= -0.140591561794281) ? ( 30 ) : ( 31 ) ) : ( 32 ) ) ) ) : ( (scaler_65 <= 0.05197323486208916) ? ( (scaler_15 <= -0.43073292076587677) ? ( (scaler_33 <= -0.8228405714035034) ? ( 36 ) : ( (scaler_24 <= -1.6302632093429565) ? ( 38 ) : ( (scaler_85 <= 0.7858343720436096) ? ( (scaler_49 <= -0.278913214802742) ? ( 41 ) : ( 42 ) ) : ( 43 ) ) ) ) : ( (scaler_47 <= -1.1519026160240173) ? ( 45 ) : ( (scaler_8 <= 0.19147298857569695) ? ( (scaler_101 <= -0.36804064689204097) ? ( 48 ) : ( 49 ) ) : ( (scaler_93 <= 1.529849499464035) ? ( 51 ) : ( 52 ) ) ) ) ) : ( (scaler_35 <= -0.3489091545343399) ? ( (scaler_100 <= 1.2356961965560913) ? ( (scaler_87 <= -0.5450331568717957) ? ( 56 ) : ( (scaler_48 <= 1.3824865818023682) ? ( 58 ) : ( 59 ) ) ) : ( 60 ) ) : ( (scaler_88 <= -0.190049052471295) ? ( (scaler_25 <= -0.6285226121544838) ? ( 63 ) : ( 64 ) ) : ( (scaler_101 <= -0.971916526556015) ? ( 66 ) : ( (scaler_28 <= 0.43197110295295715) ? ( 68 ) : ( 69 ) ) ) ) ) ) ) : ( (scaler_41 <= 0.43509984016418457) ? ( (scaler_59 <= 0.8211808502674103) ? ( (scaler_96 <= -0.36030252277851105) ? ( (scaler_82 <= -0.07055003009736538) ? ( (scaler_47 <= -0.542614609003067) ? ( 75 ) : ( (scaler_81 <= -1.780664324760437) ? ( 77 ) : ( 78 ) ) ) : ( (scaler_33 <= -0.47752273827791214) ? ( (scaler_47 <= -0.5131566077470779) ? ( (scaler_7 <= -0.08170343935489655) ? ( 82 ) : ( 83 ) ) : ( 84 ) ) : ( (scaler_21 <= -0.7669143825769424) ? ( (scaler_88 <= 1.6291519403457642) ? ( 87 ) : ( 88 ) ) : ( (scaler_62 <= 0.027995869517326355) ? ( 90 ) : ( 91 ) ) ) ) ) : ( (scaler_13 <= -0.3199368491768837) ? ( (scaler_69 <= 0.3332366272807121) ? ( (scaler_100 <= 0.4059556573629379) ? ( 95 ) : ( 96 ) ) : ( 97 ) ) : ( (scaler_59 <= -0.32397792488336563) ? ( (scaler_20 <= 0.8870656043291092) ? ( 100 ) : ( 101 ) ) : ( (scaler_76 <= -1.7880671620368958) ? ( 103 ) : ( (scaler_48 <= 1.7568079829216003) ? ( (scaler_54 <= 0.7513522356748581) ? ( (scaler_51 <= -0.5777404010295868) ? ( 107 ) : ( 108 ) ) : ( 109 ) ) : ( 110 ) ) ) ) ) ) : ( (scaler_82 <= 0.8365673124790192) ? ( (scaler_60 <= -0.4430854916572571) ? ( 113 ) : ( 114 ) ) : ( (scaler_54 <= -0.5062251687049866) ? ( (scaler_22 <= 1.0060923993587494) ? ( 117 ) : ( 118 ) ) : ( (scaler_85 <= 0.1653457337524742) ? ( (scaler_78 <= 1.000733233988285) ? ( 121 ) : ( 122 ) ) : ( 123 ) ) ) ) ) : ( (scaler_3 <= 1.5182774662971497) ? ( (scaler_20 <= 0.7930586040019989) ? ( (scaler_4 <= -0.597478449344635) ? ( (scaler_54 <= 1.059417486190796) ? ( (scaler_75 <= 0.7919565588235855) ? ( (scaler_68 <= -0.601453609764576) ? ( 130 ) : ( 131 ) ) : ( 132 ) ) : ( 133 ) ) : ( (scaler_82 <= 0.41780059039592743) ? ( (scaler_31 <= 0.44664420187473297) ? ( (scaler_15 <= 0.20318511128425598) ? ( 137 ) : ( 138 ) ) : ( (scaler_59 <= 0.8462440967559814) ? ( 140 ) : ( 141 ) ) ) : ( (scaler_50 <= 0.1959361433982849) ? ( (scaler_30 <= -0.6185448542237282) ? ( 144 ) : ( 145 ) ) : ( (scaler_2 <= 1.2298635244369507) ? ( (scaler_39 <= 0.21769832074642181) ? ( 148 ) : ( 149 ) ) : ( 150 ) ) ) ) ) : ( (scaler_8 <= -0.3017552122473717) ? ( 152 ) : ( (scaler_70 <= 0.329233780503273) ? ( 154 ) : ( 155 ) ) ) ) : ( (scaler_101 <= -0.4182877689599991) ? ( 157 ) : ( 158 ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
			int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable;

		std::any  lEstimator = lTable_model[ "Estimator" ][0];
		lTable[ "Estimator" ] = { lEstimator };

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/RandomReg_100.csv");
	return 0;
}
