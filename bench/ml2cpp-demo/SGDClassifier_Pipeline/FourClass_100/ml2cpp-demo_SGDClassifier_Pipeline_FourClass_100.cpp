// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : SGDClassifier_Pipeline
// Dataset : FourClass_100

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_SGDClassifier_Pipeline_FourClass_100.exe ml2cpp-demo_SGDClassifier_Pipeline_FourClass_100.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	std::vector<std::any> get_classes(){
		std::vector<std::any> lClasses = { 0, 1, 2, 3 };

		return lClasses;
	}

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "impter_2", "impter_3", "impter_4", "impter_5", "impter_6", "impter_7", "impter_8", "impter_9", "impter_10", "impter_11", "impter_12", "impter_13", "impter_14", "impter_15", "impter_16", "impter_17", "impter_18", "impter_19", "impter_20", "impter_21", "impter_22", "impter_23", "impter_24", "impter_25", "impter_26", "impter_27", "impter_28", "impter_29", "impter_30", "impter_31", "impter_32", "impter_33", "impter_34", "impter_35", "impter_36", "impter_37", "impter_38", "impter_39", "impter_40", "impter_41", "impter_42", "impter_43", "impter_44", "impter_45", "impter_46", "impter_47", "impter_48", "impter_49", "impter_50", "impter_51", "impter_52", "impter_53", "impter_54", "impter_55", "impter_56", "impter_57", "impter_58", "impter_59", "impter_60", "impter_61", "impter_62", "impter_63", "impter_64", "impter_65", "impter_66", "impter_67", "impter_68", "impter_69", "impter_70", "impter_71", "impter_72", "impter_73", "impter_74", "impter_75", "impter_76", "impter_77", "impter_78", "impter_79", "impter_80", "impter_81", "impter_82", "impter_83", "impter_84", "impter_85", "impter_86", "impter_87", "impter_88", "impter_89", "impter_90", "impter_91", "impter_92", "impter_93", "impter_94", "impter_95", "impter_96", "impter_97", "impter_98", "impter_99", "impter_100", "impter_101" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
	
			tTable lTable;
	
			lTable["impter_2"] = { ((Feature_0 == std::any()) ?  ( -0.0014807007689716506 ) : ( Feature_0)) };
			lTable["impter_3"] = { ((Feature_1 == std::any()) ?  ( 0.08599214990681354 ) : ( Feature_1)) };
			lTable["impter_4"] = { ((Feature_2 == std::any()) ?  ( -0.006358164676411468 ) : ( Feature_2)) };
			lTable["impter_5"] = { ((Feature_3 == std::any()) ?  ( -0.024301807422776375 ) : ( Feature_3)) };
			lTable["impter_6"] = { ((Feature_4 == std::any()) ?  ( 0.015786548044298444 ) : ( Feature_4)) };
			lTable["impter_7"] = { ((Feature_5 == std::any()) ?  ( -0.13959329445651672 ) : ( Feature_5)) };
			lTable["impter_8"] = { ((Feature_6 == std::any()) ?  ( -0.06476745048019888 ) : ( Feature_6)) };
			lTable["impter_9"] = { ((Feature_7 == std::any()) ?  ( 0.025579810774090658 ) : ( Feature_7)) };
			lTable["impter_10"] = { ((Feature_8 == std::any()) ?  ( -0.03173937260977112 ) : ( Feature_8)) };
			lTable["impter_11"] = { ((Feature_9 == std::any()) ?  ( -0.1518141420862488 ) : ( Feature_9)) };
			lTable["impter_12"] = { ((Feature_10 == std::any()) ?  ( -0.13244576558492482 ) : ( Feature_10)) };
			lTable["impter_13"] = { ((Feature_11 == std::any()) ?  ( 0.044172679762224144 ) : ( Feature_11)) };
			lTable["impter_14"] = { ((Feature_12 == std::any()) ?  ( 0.010165946719810038 ) : ( Feature_12)) };
			lTable["impter_15"] = { ((Feature_13 == std::any()) ?  ( -0.03645872019103299 ) : ( Feature_13)) };
			lTable["impter_16"] = { ((Feature_14 == std::any()) ?  ( 0.06491512811593925 ) : ( Feature_14)) };
			lTable["impter_17"] = { ((Feature_15 == std::any()) ?  ( -0.11930146867074032 ) : ( Feature_15)) };
			lTable["impter_18"] = { ((Feature_16 == std::any()) ?  ( 0.007738863934852773 ) : ( Feature_16)) };
			lTable["impter_19"] = { ((Feature_17 == std::any()) ?  ( -0.1226774060147726 ) : ( Feature_17)) };
			lTable["impter_20"] = { ((Feature_18 == std::any()) ?  ( 0.019160881669086405 ) : ( Feature_18)) };
			lTable["impter_21"] = { ((Feature_19 == std::any()) ?  ( -0.26340351121131067 ) : ( Feature_19)) };
			lTable["impter_22"] = { ((Feature_20 == std::any()) ?  ( 0.035692361937735194 ) : ( Feature_20)) };
			lTable["impter_23"] = { ((Feature_21 == std::any()) ?  ( -0.010021324964069293 ) : ( Feature_21)) };
			lTable["impter_24"] = { ((Feature_22 == std::any()) ?  ( -0.1258614387723542 ) : ( Feature_22)) };
			lTable["impter_25"] = { ((Feature_23 == std::any()) ?  ( 0.09372773898231128 ) : ( Feature_23)) };
			lTable["impter_26"] = { ((Feature_24 == std::any()) ?  ( -0.1687929597880227 ) : ( Feature_24)) };
			lTable["impter_27"] = { ((Feature_25 == std::any()) ?  ( 0.10006283199629364 ) : ( Feature_25)) };
			lTable["impter_28"] = { ((Feature_26 == std::any()) ?  ( -0.10297858086822659 ) : ( Feature_26)) };
			lTable["impter_29"] = { ((Feature_27 == std::any()) ?  ( 0.19240514535870412 ) : ( Feature_27)) };
			lTable["impter_30"] = { ((Feature_28 == std::any()) ?  ( -0.052866434246092435 ) : ( Feature_28)) };
			lTable["impter_31"] = { ((Feature_29 == std::any()) ?  ( 0.26246121463661504 ) : ( Feature_29)) };
			lTable["impter_32"] = { ((Feature_30 == std::any()) ?  ( 0.002677575140361194 ) : ( Feature_30)) };
			lTable["impter_33"] = { ((Feature_31 == std::any()) ?  ( 0.09707041941284063 ) : ( Feature_31)) };
			lTable["impter_34"] = { ((Feature_32 == std::any()) ?  ( -0.032793219857333473 ) : ( Feature_32)) };
			lTable["impter_35"] = { ((Feature_33 == std::any()) ?  ( -0.003130273745908922 ) : ( Feature_33)) };
			lTable["impter_36"] = { ((Feature_34 == std::any()) ?  ( 0.053446276216279974 ) : ( Feature_34)) };
			lTable["impter_37"] = { ((Feature_35 == std::any()) ?  ( -0.18668146437412367 ) : ( Feature_35)) };
			lTable["impter_38"] = { ((Feature_36 == std::any()) ?  ( -0.029335964960866243 ) : ( Feature_36)) };
			lTable["impter_39"] = { ((Feature_37 == std::any()) ?  ( 0.07219772199502426 ) : ( Feature_37)) };
			lTable["impter_40"] = { ((Feature_38 == std::any()) ?  ( -0.0007762839781489412 ) : ( Feature_38)) };
			lTable["impter_41"] = { ((Feature_39 == std::any()) ?  ( 0.08270823712098274 ) : ( Feature_39)) };
			lTable["impter_42"] = { ((Feature_40 == std::any()) ?  ( 0.10432022852347983 ) : ( Feature_40)) };
			lTable["impter_43"] = { ((Feature_41 == std::any()) ?  ( 0.07058566385022276 ) : ( Feature_41)) };
			lTable["impter_44"] = { ((Feature_42 == std::any()) ?  ( 0.05096693098357383 ) : ( Feature_42)) };
			lTable["impter_45"] = { ((Feature_43 == std::any()) ?  ( 0.0660758203367818 ) : ( Feature_43)) };
			lTable["impter_46"] = { ((Feature_44 == std::any()) ?  ( -0.07075895636353369 ) : ( Feature_44)) };
			lTable["impter_47"] = { ((Feature_45 == std::any()) ?  ( 0.08422536561649958 ) : ( Feature_45)) };
			lTable["impter_48"] = { ((Feature_46 == std::any()) ?  ( 0.21367580667795616 ) : ( Feature_46)) };
			lTable["impter_49"] = { ((Feature_47 == std::any()) ?  ( -0.055897457335624984 ) : ( Feature_47)) };
			lTable["impter_50"] = { ((Feature_48 == std::any()) ?  ( -0.17453036726139812 ) : ( Feature_48)) };
			lTable["impter_51"] = { ((Feature_49 == std::any()) ?  ( -0.054944001818473996 ) : ( Feature_49)) };
			lTable["impter_52"] = { ((Feature_50 == std::any()) ?  ( -0.5961651261710368 ) : ( Feature_50)) };
			lTable["impter_53"] = { ((Feature_51 == std::any()) ?  ( 0.5020404526565605 ) : ( Feature_51)) };
			lTable["impter_54"] = { ((Feature_52 == std::any()) ?  ( -0.052340545201383926 ) : ( Feature_52)) };
			lTable["impter_55"] = { ((Feature_53 == std::any()) ?  ( 0.052943076116746535 ) : ( Feature_53)) };
			lTable["impter_56"] = { ((Feature_54 == std::any()) ?  ( 0.03835884479069335 ) : ( Feature_54)) };
			lTable["impter_57"] = { ((Feature_55 == std::any()) ?  ( -0.13571979014964694 ) : ( Feature_55)) };
			lTable["impter_58"] = { ((Feature_56 == std::any()) ?  ( -0.2190306843141183 ) : ( Feature_56)) };
			lTable["impter_59"] = { ((Feature_57 == std::any()) ?  ( -0.1191752362029383 ) : ( Feature_57)) };
			lTable["impter_60"] = { ((Feature_58 == std::any()) ?  ( 0.38058346912807667 ) : ( Feature_58)) };
			lTable["impter_61"] = { ((Feature_59 == std::any()) ?  ( -0.12720928974168508 ) : ( Feature_59)) };
			lTable["impter_62"] = { ((Feature_60 == std::any()) ?  ( -0.09072936496613782 ) : ( Feature_60)) };
			lTable["impter_63"] = { ((Feature_61 == std::any()) ?  ( -0.03915125937954538 ) : ( Feature_61)) };
			lTable["impter_64"] = { ((Feature_62 == std::any()) ?  ( 0.07075412393313481 ) : ( Feature_62)) };
			lTable["impter_65"] = { ((Feature_63 == std::any()) ?  ( 0.10124894587016948 ) : ( Feature_63)) };
			lTable["impter_66"] = { ((Feature_64 == std::any()) ?  ( -0.1945661449475579 ) : ( Feature_64)) };
			lTable["impter_67"] = { ((Feature_65 == std::any()) ?  ( -0.1759482981261233 ) : ( Feature_65)) };
			lTable["impter_68"] = { ((Feature_66 == std::any()) ?  ( 0.07473228971855511 ) : ( Feature_66)) };
			lTable["impter_69"] = { ((Feature_67 == std::any()) ?  ( 0.0377705562115906 ) : ( Feature_67)) };
			lTable["impter_70"] = { ((Feature_68 == std::any()) ?  ( 0.0139470898598917 ) : ( Feature_68)) };
			lTable["impter_71"] = { ((Feature_69 == std::any()) ?  ( 0.2582685725145942 ) : ( Feature_69)) };
			lTable["impter_72"] = { ((Feature_70 == std::any()) ?  ( 0.022975786233048922 ) : ( Feature_70)) };
			lTable["impter_73"] = { ((Feature_71 == std::any()) ?  ( 0.17445434061949525 ) : ( Feature_71)) };
			lTable["impter_74"] = { ((Feature_72 == std::any()) ?  ( -0.011413879692078346 ) : ( Feature_72)) };
			lTable["impter_75"] = { ((Feature_73 == std::any()) ?  ( 0.07898984156871978 ) : ( Feature_73)) };
			lTable["impter_76"] = { ((Feature_74 == std::any()) ?  ( 0.0952547273770713 ) : ( Feature_74)) };
			lTable["impter_77"] = { ((Feature_75 == std::any()) ?  ( -0.03997776839639901 ) : ( Feature_75)) };
			lTable["impter_78"] = { ((Feature_76 == std::any()) ?  ( -0.020839895874293496 ) : ( Feature_76)) };
			lTable["impter_79"] = { ((Feature_77 == std::any()) ?  ( -0.07284631986613152 ) : ( Feature_77)) };
			lTable["impter_80"] = { ((Feature_78 == std::any()) ?  ( -0.27389951764434384 ) : ( Feature_78)) };
			lTable["impter_81"] = { ((Feature_79 == std::any()) ?  ( 0.08057287885287609 ) : ( Feature_79)) };
			lTable["impter_82"] = { ((Feature_80 == std::any()) ?  ( -0.06244274245437891 ) : ( Feature_80)) };
			lTable["impter_83"] = { ((Feature_81 == std::any()) ?  ( -0.12290855334066887 ) : ( Feature_81)) };
			lTable["impter_84"] = { ((Feature_82 == std::any()) ?  ( 0.11639531793890918 ) : ( Feature_82)) };
			lTable["impter_85"] = { ((Feature_83 == std::any()) ?  ( -0.03350462786128603 ) : ( Feature_83)) };
			lTable["impter_86"] = { ((Feature_84 == std::any()) ?  ( -0.03914049968144583 ) : ( Feature_84)) };
			lTable["impter_87"] = { ((Feature_85 == std::any()) ?  ( 0.24193903072305167 ) : ( Feature_85)) };
			lTable["impter_88"] = { ((Feature_86 == std::any()) ?  ( -0.07389719862221904 ) : ( Feature_86)) };
			lTable["impter_89"] = { ((Feature_87 == std::any()) ?  ( 0.1400756228320113 ) : ( Feature_87)) };
			lTable["impter_90"] = { ((Feature_88 == std::any()) ?  ( 0.2765301935136145 ) : ( Feature_88)) };
			lTable["impter_91"] = { ((Feature_89 == std::any()) ?  ( -0.07957147169250885 ) : ( Feature_89)) };
			lTable["impter_92"] = { ((Feature_90 == std::any()) ?  ( 0.16295767680642717 ) : ( Feature_90)) };
			lTable["impter_93"] = { ((Feature_91 == std::any()) ?  ( 0.07062813888509549 ) : ( Feature_91)) };
			lTable["impter_94"] = { ((Feature_92 == std::any()) ?  ( 0.012995630151896219 ) : ( Feature_92)) };
			lTable["impter_95"] = { ((Feature_93 == std::any()) ?  ( 0.1055212408190415 ) : ( Feature_93)) };
			lTable["impter_96"] = { ((Feature_94 == std::any()) ?  ( -0.1408434425354362 ) : ( Feature_94)) };
			lTable["impter_97"] = { ((Feature_95 == std::any()) ?  ( -0.1574012366732725 ) : ( Feature_95)) };
			lTable["impter_98"] = { ((Feature_96 == std::any()) ?  ( 0.05477536676313335 ) : ( Feature_96)) };
			lTable["impter_99"] = { ((Feature_97 == std::any()) ?  ( 0.05673272205919614 ) : ( Feature_97)) };
			lTable["impter_100"] = { ((Feature_98 == std::any()) ?  ( -0.14226649213619527 ) : ( Feature_98)) };
			lTable["impter_101"] = { ((Feature_99 == std::any()) ?  ( -0.04042675289131947 ) : ( Feature_99)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "impter_2", "impter_3", "impter_4", "impter_5", "impter_6", "impter_7", "impter_8", "impter_9", "impter_10", "impter_11", "impter_12", "impter_13", "impter_14", "impter_15", "impter_16", "impter_17", "impter_18", "impter_19", "impter_20", "impter_21", "impter_22", "impter_23", "impter_24", "impter_25", "impter_26", "impter_27", "impter_28", "impter_29", "impter_30", "impter_31", "impter_32", "impter_33", "impter_34", "impter_35", "impter_36", "impter_37", "impter_38", "impter_39", "impter_40", "impter_41", "impter_42", "impter_43", "impter_44", "impter_45", "impter_46", "impter_47", "impter_48", "impter_49", "impter_50", "impter_51", "impter_52", "impter_53", "impter_54", "impter_55", "impter_56", "impter_57", "impter_58", "impter_59", "impter_60", "impter_61", "impter_62", "impter_63", "impter_64", "impter_65", "impter_66", "impter_67", "impter_68", "impter_69", "impter_70", "impter_71", "impter_72", "impter_73", "impter_74", "impter_75", "impter_76", "impter_77", "impter_78", "impter_79", "impter_80", "impter_81", "impter_82", "impter_83", "impter_84", "impter_85", "impter_86", "impter_87", "impter_88", "impter_89", "impter_90", "impter_91", "impter_92", "impter_93", "impter_94", "impter_95", "impter_96", "impter_97", "impter_98", "impter_99", "impter_100", "impter_101" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any impter_2, std::any impter_3, std::any impter_4, std::any impter_5, std::any impter_6, std::any impter_7, std::any impter_8, std::any impter_9, std::any impter_10, std::any impter_11, std::any impter_12, std::any impter_13, std::any impter_14, std::any impter_15, std::any impter_16, std::any impter_17, std::any impter_18, std::any impter_19, std::any impter_20, std::any impter_21, std::any impter_22, std::any impter_23, std::any impter_24, std::any impter_25, std::any impter_26, std::any impter_27, std::any impter_28, std::any impter_29, std::any impter_30, std::any impter_31, std::any impter_32, std::any impter_33, std::any impter_34, std::any impter_35, std::any impter_36, std::any impter_37, std::any impter_38, std::any impter_39, std::any impter_40, std::any impter_41, std::any impter_42, std::any impter_43, std::any impter_44, std::any impter_45, std::any impter_46, std::any impter_47, std::any impter_48, std::any impter_49, std::any impter_50, std::any impter_51, std::any impter_52, std::any impter_53, std::any impter_54, std::any impter_55, std::any impter_56, std::any impter_57, std::any impter_58, std::any impter_59, std::any impter_60, std::any impter_61, std::any impter_62, std::any impter_63, std::any impter_64, std::any impter_65, std::any impter_66, std::any impter_67, std::any impter_68, std::any impter_69, std::any impter_70, std::any impter_71, std::any impter_72, std::any impter_73, std::any impter_74, std::any impter_75, std::any impter_76, std::any impter_77, std::any impter_78, std::any impter_79, std::any impter_80, std::any impter_81, std::any impter_82, std::any impter_83, std::any impter_84, std::any impter_85, std::any impter_86, std::any impter_87, std::any impter_88, std::any impter_89, std::any impter_90, std::any impter_91, std::any impter_92, std::any impter_93, std::any impter_94, std::any impter_95, std::any impter_96, std::any impter_97, std::any impter_98, std::any impter_99, std::any impter_100, std::any impter_101) {
	
			tTable lTable;
	
			lTable["scaler_2"] = { ( ( impter_2 - -0.0014807007689716506 ) / 0.9211229790312512 ) };
			lTable["scaler_3"] = { ( ( impter_3 - 0.08599214990681354 ) / 0.9627516809237073 ) };
			lTable["scaler_4"] = { ( ( impter_4 - -0.006358164676411468 ) / 0.7890687835102894 ) };
			lTable["scaler_5"] = { ( ( impter_5 - -0.024301807422776375 ) / 1.0265272189083172 ) };
			lTable["scaler_6"] = { ( ( impter_6 - 0.015786548044298444 ) / 1.0198090908026474 ) };
			lTable["scaler_7"] = { ( ( impter_7 - -0.13959329445651672 ) / 0.9185551763293686 ) };
			lTable["scaler_8"] = { ( ( impter_8 - -0.06476745048019888 ) / 1.0393547249617474 ) };
			lTable["scaler_9"] = { ( ( impter_9 - 0.025579810774090658 ) / 0.8722131294644917 ) };
			lTable["scaler_10"] = { ( ( impter_10 - -0.03173937260977112 ) / 1.0164588299091024 ) };
			lTable["scaler_11"] = { ( ( impter_11 - -0.1518141420862488 ) / 1.0075402114297496 ) };
			lTable["scaler_12"] = { ( ( impter_12 - -0.13244576558492482 ) / 0.9215325459816371 ) };
			lTable["scaler_13"] = { ( ( impter_13 - 0.044172679762224144 ) / 0.9053279964066308 ) };
			lTable["scaler_14"] = { ( ( impter_14 - 0.010165946719810038 ) / 1.2190371046063362 ) };
			lTable["scaler_15"] = { ( ( impter_15 - -0.03645872019103299 ) / 1.0879005786584215 ) };
			lTable["scaler_16"] = { ( ( impter_16 - 0.06491512811593925 ) / 1.0274670201407186 ) };
			lTable["scaler_17"] = { ( ( impter_17 - -0.11930146867074032 ) / 0.9506312349761404 ) };
			lTable["scaler_18"] = { ( ( impter_18 - 0.007738863934852773 ) / 1.0928477585203984 ) };
			lTable["scaler_19"] = { ( ( impter_19 - -0.1226774060147726 ) / 0.9830561715965196 ) };
			lTable["scaler_20"] = { ( ( impter_20 - 0.019160881669086405 ) / 1.2117417920836373 ) };
			lTable["scaler_21"] = { ( ( impter_21 - -0.26340351121131067 ) / 0.9807419262255984 ) };
			lTable["scaler_22"] = { ( ( impter_22 - 0.035692361937735194 ) / 1.115824498468156 ) };
			lTable["scaler_23"] = { ( ( impter_23 - -0.010021324964069293 ) / 1.0790959803413318 ) };
			lTable["scaler_24"] = { ( ( impter_24 - -0.1258614387723542 ) / 1.0279672611547366 ) };
			lTable["scaler_25"] = { ( ( impter_25 - 0.09372773898231128 ) / 0.9690760299303989 ) };
			lTable["scaler_26"] = { ( ( impter_26 - -0.1687929597880227 ) / 0.8845858581996813 ) };
			lTable["scaler_27"] = { ( ( impter_27 - 0.10006283199629364 ) / 0.9149346104000894 ) };
			lTable["scaler_28"] = { ( ( impter_28 - -0.10297858086822659 ) / 1.0761397500557328 ) };
			lTable["scaler_29"] = { ( ( impter_29 - 0.19240514535870412 ) / 2.089882492597775 ) };
			lTable["scaler_30"] = { ( ( impter_30 - -0.052866434246092435 ) / 1.0030777529896888 ) };
			lTable["scaler_31"] = { ( ( impter_31 - 0.26246121463661504 ) / 1.9778491038473627 ) };
			lTable["scaler_32"] = { ( ( impter_32 - 0.002677575140361194 ) / 0.8833924915211555 ) };
			lTable["scaler_33"] = { ( ( impter_33 - 0.09707041941284063 ) / 0.8720005351713555 ) };
			lTable["scaler_34"] = { ( ( impter_34 - -0.032793219857333473 ) / 0.8745989090443193 ) };
			lTable["scaler_35"] = { ( ( impter_35 - -0.003130273745908922 ) / 0.9967699097535561 ) };
			lTable["scaler_36"] = { ( ( impter_36 - 0.053446276216279974 ) / 0.9997289112199433 ) };
			lTable["scaler_37"] = { ( ( impter_37 - -0.18668146437412367 ) / 1.0272287171310865 ) };
			lTable["scaler_38"] = { ( ( impter_38 - -0.029335964960866243 ) / 1.0427555960451658 ) };
			lTable["scaler_39"] = { ( ( impter_39 - 0.07219772199502426 ) / 0.8328229890456742 ) };
			lTable["scaler_40"] = { ( ( impter_40 - -0.0007762839781489412 ) / 0.9666524356457794 ) };
			lTable["scaler_41"] = { ( ( impter_41 - 0.08270823712098274 ) / 1.083670494683493 ) };
			lTable["scaler_42"] = { ( ( impter_42 - 0.10432022852347983 ) / 1.075472547982714 ) };
			lTable["scaler_43"] = { ( ( impter_43 - 0.07058566385022276 ) / 0.9993462791463713 ) };
			lTable["scaler_44"] = { ( ( impter_44 - 0.05096693098357383 ) / 0.8876971252794036 ) };
			lTable["scaler_45"] = { ( ( impter_45 - 0.0660758203367818 ) / 1.041246125313479 ) };
			lTable["scaler_46"] = { ( ( impter_46 - -0.07075895636353369 ) / 2.238310207242139 ) };
			lTable["scaler_47"] = { ( ( impter_47 - 0.08422536561649958 ) / 0.9520959686676432 ) };
			lTable["scaler_48"] = { ( ( impter_48 - 0.21367580667795616 ) / 0.9907230316111766 ) };
			lTable["scaler_49"] = { ( ( impter_49 - -0.055897457335624984 ) / 1.0392400714320487 ) };
			lTable["scaler_50"] = { ( ( impter_50 - -0.17453036726139812 ) / 2.001507098381001 ) };
			lTable["scaler_51"] = { ( ( impter_51 - -0.054944001818473996 ) / 1.0041645540091246 ) };
			lTable["scaler_52"] = { ( ( impter_52 - -0.5961651261710368 ) / 2.467511153399545 ) };
			lTable["scaler_53"] = { ( ( impter_53 - 0.5020404526565605 ) / 2.1929325118287792 ) };
			lTable["scaler_54"] = { ( ( impter_54 - -0.052340545201383926 ) / 0.98465558791252 ) };
			lTable["scaler_55"] = { ( ( impter_55 - 0.052943076116746535 ) / 1.8137042567337183 ) };
			lTable["scaler_56"] = { ( ( impter_56 - 0.03835884479069335 ) / 0.9241326354411343 ) };
			lTable["scaler_57"] = { ( ( impter_57 - -0.13571979014964694 ) / 0.8679095755948701 ) };
			lTable["scaler_58"] = { ( ( impter_58 - -0.2190306843141183 ) / 4.150428869748412 ) };
			lTable["scaler_59"] = { ( ( impter_59 - -0.1191752362029383 ) / 0.9123333408128436 ) };
			lTable["scaler_60"] = { ( ( impter_60 - 0.38058346912807667 ) / 3.5635011086986927 ) };
			lTable["scaler_61"] = { ( ( impter_61 - -0.12720928974168508 ) / 0.9301024475991629 ) };
			lTable["scaler_62"] = { ( ( impter_62 - -0.09072936496613782 ) / 0.9490501277306023 ) };
			lTable["scaler_63"] = { ( ( impter_63 - -0.03915125937954538 ) / 0.9029504608473613 ) };
			lTable["scaler_64"] = { ( ( impter_64 - 0.07075412393313481 ) / 0.9726561682528103 ) };
			lTable["scaler_65"] = { ( ( impter_65 - 0.10124894587016948 ) / 0.9403075920249493 ) };
			lTable["scaler_66"] = { ( ( impter_66 - -0.1945661449475579 ) / 0.9400903625732654 ) };
			lTable["scaler_67"] = { ( ( impter_67 - -0.1759482981261233 ) / 0.9435422049943787 ) };
			lTable["scaler_68"] = { ( ( impter_68 - 0.07473228971855511 ) / 0.8871003964319768 ) };
			lTable["scaler_69"] = { ( ( impter_69 - 0.0377705562115906 ) / 1.0228978549196588 ) };
			lTable["scaler_70"] = { ( ( impter_70 - 0.0139470898598917 ) / 0.9465728329079491 ) };
			lTable["scaler_71"] = { ( ( impter_71 - 0.2582685725145942 ) / 1.1027232016521478 ) };
			lTable["scaler_72"] = { ( ( impter_72 - 0.022975786233048922 ) / 0.9200436904809381 ) };
			lTable["scaler_73"] = { ( ( impter_73 - 0.17445434061949525 ) / 0.9009964742482128 ) };
			lTable["scaler_74"] = { ( ( impter_74 - -0.011413879692078346 ) / 0.9483377025565977 ) };
			lTable["scaler_75"] = { ( ( impter_75 - 0.07898984156871978 ) / 0.9726668138861088 ) };
			lTable["scaler_76"] = { ( ( impter_76 - 0.0952547273770713 ) / 0.9607867245873394 ) };
			lTable["scaler_77"] = { ( ( impter_77 - -0.03997776839639901 ) / 1.0318828686080972 ) };
			lTable["scaler_78"] = { ( ( impter_78 - -0.020839895874293496 ) / 0.945141993694461 ) };
			lTable["scaler_79"] = { ( ( impter_79 - -0.07284631986613152 ) / 0.9103416784348913 ) };
			lTable["scaler_80"] = { ( ( impter_80 - -0.27389951764434384 ) / 2.0362603862996735 ) };
			lTable["scaler_81"] = { ( ( impter_81 - 0.08057287885287609 ) / 0.9919292944224015 ) };
			lTable["scaler_82"] = { ( ( impter_82 - -0.06244274245437891 ) / 0.8113039293824552 ) };
			lTable["scaler_83"] = { ( ( impter_83 - -0.12290855334066887 ) / 1.0307302654711112 ) };
			lTable["scaler_84"] = { ( ( impter_84 - 0.11639531793890918 ) / 0.9993591951135242 ) };
			lTable["scaler_85"] = { ( ( impter_85 - -0.03350462786128603 ) / 1.0197598648594488 ) };
			lTable["scaler_86"] = { ( ( impter_86 - -0.03914049968144583 ) / 0.9022051622058084 ) };
			lTable["scaler_87"] = { ( ( impter_87 - 0.24193903072305167 ) / 0.9625742678392476 ) };
			lTable["scaler_88"] = { ( ( impter_88 - -0.07389719862221904 ) / 1.0080070985430696 ) };
			lTable["scaler_89"] = { ( ( impter_89 - 0.1400756228320113 ) / 0.9315791274848828 ) };
			lTable["scaler_90"] = { ( ( impter_90 - 0.2765301935136145 ) / 1.9455982323178656 ) };
			lTable["scaler_91"] = { ( ( impter_91 - -0.07957147169250885 ) / 0.9688848077884671 ) };
			lTable["scaler_92"] = { ( ( impter_92 - 0.16295767680642717 ) / 0.8952741904110189 ) };
			lTable["scaler_93"] = { ( ( impter_93 - 0.07062813888509549 ) / 0.8331748322730601 ) };
			lTable["scaler_94"] = { ( ( impter_94 - 0.012995630151896219 ) / 1.059167248118017 ) };
			lTable["scaler_95"] = { ( ( impter_95 - 0.1055212408190415 ) / 1.0525988978000902 ) };
			lTable["scaler_96"] = { ( ( impter_96 - -0.1408434425354362 ) / 0.9172372033996682 ) };
			lTable["scaler_97"] = { ( ( impter_97 - -0.1574012366732725 ) / 0.9930125433643069 ) };
			lTable["scaler_98"] = { ( ( impter_98 - 0.05477536676313335 ) / 0.9803136353653645 ) };
			lTable["scaler_99"] = { ( ( impter_99 - 0.05673272205919614 ) / 0.9296338032188498 ) };
			lTable["scaler_100"] = { ( ( impter_100 - -0.14226649213619527 ) / 1.174442941822933 ) };
			lTable["scaler_101"] = { ( ( impter_101 - -0.04042675289131947 ) / 1.983747550989713 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("impter_2")[0], iTable.at("impter_3")[0], iTable.at("impter_4")[0], iTable.at("impter_5")[0], iTable.at("impter_6")[0], iTable.at("impter_7")[0], iTable.at("impter_8")[0], iTable.at("impter_9")[0], iTable.at("impter_10")[0], iTable.at("impter_11")[0], iTable.at("impter_12")[0], iTable.at("impter_13")[0], iTable.at("impter_14")[0], iTable.at("impter_15")[0], iTable.at("impter_16")[0], iTable.at("impter_17")[0], iTable.at("impter_18")[0], iTable.at("impter_19")[0], iTable.at("impter_20")[0], iTable.at("impter_21")[0], iTable.at("impter_22")[0], iTable.at("impter_23")[0], iTable.at("impter_24")[0], iTable.at("impter_25")[0], iTable.at("impter_26")[0], iTable.at("impter_27")[0], iTable.at("impter_28")[0], iTable.at("impter_29")[0], iTable.at("impter_30")[0], iTable.at("impter_31")[0], iTable.at("impter_32")[0], iTable.at("impter_33")[0], iTable.at("impter_34")[0], iTable.at("impter_35")[0], iTable.at("impter_36")[0], iTable.at("impter_37")[0], iTable.at("impter_38")[0], iTable.at("impter_39")[0], iTable.at("impter_40")[0], iTable.at("impter_41")[0], iTable.at("impter_42")[0], iTable.at("impter_43")[0], iTable.at("impter_44")[0], iTable.at("impter_45")[0], iTable.at("impter_46")[0], iTable.at("impter_47")[0], iTable.at("impter_48")[0], iTable.at("impter_49")[0], iTable.at("impter_50")[0], iTable.at("impter_51")[0], iTable.at("impter_52")[0], iTable.at("impter_53")[0], iTable.at("impter_54")[0], iTable.at("impter_55")[0], iTable.at("impter_56")[0], iTable.at("impter_57")[0], iTable.at("impter_58")[0], iTable.at("impter_59")[0], iTable.at("impter_60")[0], iTable.at("impter_61")[0], iTable.at("impter_62")[0], iTable.at("impter_63")[0], iTable.at("impter_64")[0], iTable.at("impter_65")[0], iTable.at("impter_66")[0], iTable.at("impter_67")[0], iTable.at("impter_68")[0], iTable.at("impter_69")[0], iTable.at("impter_70")[0], iTable.at("impter_71")[0], iTable.at("impter_72")[0], iTable.at("impter_73")[0], iTable.at("impter_74")[0], iTable.at("impter_75")[0], iTable.at("impter_76")[0], iTable.at("impter_77")[0], iTable.at("impter_78")[0], iTable.at("impter_79")[0], iTable.at("impter_80")[0], iTable.at("impter_81")[0], iTable.at("impter_82")[0], iTable.at("impter_83")[0], iTable.at("impter_84")[0], iTable.at("impter_85")[0], iTable.at("impter_86")[0], iTable.at("impter_87")[0], iTable.at("impter_88")[0], iTable.at("impter_89")[0], iTable.at("impter_90")[0], iTable.at("impter_91")[0], iTable.at("impter_92")[0], iTable.at("impter_93")[0], iTable.at("impter_94")[0], iTable.at("impter_95")[0], iTable.at("impter_96")[0], iTable.at("impter_97")[0], iTable.at("impter_98")[0], iTable.at("impter_99")[0], iTable.at("impter_100")[0], iTable.at("impter_101")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		std::vector<std::any> get_classes(){
			std::vector<std::any> lClasses = { 0, 1, 2, 3 };
	
			return lClasses;
		}
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { 
				"Score_0", "Score_1", "Score_2", "Score_3",
				"Proba_0", "Proba_1", "Proba_2", "Proba_3",
				"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
				"Decision", "DecisionProba" };
	
			return lOutputs;
		}
	
		tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
			auto lClasses = get_classes();
	
			std::any score_0 = -55.64880842276869 * scaler_2 + -35.17877514337472 * scaler_3 + -27.44659385089025 * scaler_4 + 2.046816202120886 * scaler_5 + 8.534387304363616 * scaler_6 + 31.3404434091549 * scaler_7 + 39.3513891366983 * scaler_8 + -18.15116362158105 * scaler_9 + 6.491530971710233 * scaler_10 + -15.608495105316772 * scaler_11 + 36.67246557499242 * scaler_12 + -19.1441877719463 * scaler_13 + -27.161405497491852 * scaler_14 + 45.973337556406584 * scaler_15 + 21.5241847433362 * scaler_16 + 59.20217210708114 * scaler_17 + 20.11525050572901 * scaler_18 + -24.006621323350096 * scaler_19 + 19.032899428191975 * scaler_20 + 57.630496759710596 * scaler_21 + -58.62602285577869 * scaler_22 + 12.634002398096465 * scaler_23 + -9.144021929460315 * scaler_24 + 26.824576162643343 * scaler_25 + 44.668612097363614 * scaler_26 + -10.559609482629607 * scaler_27 + -8.593049736522055 * scaler_28 + -29.303205323462517 * scaler_29 + 11.36154360241122 * scaler_30 + -18.627950691766664 * scaler_31 + 47.96070847853394 * scaler_32 + -35.06258947013786 * scaler_33 + -21.34179650145791 * scaler_34 + -48.3701492572643 * scaler_35 + -7.090955531949854 * scaler_36 + -2.11447743904923 * scaler_37 + -19.441224840150404 * scaler_38 + 46.11781939574051 * scaler_39 + -62.7098000195819 * scaler_40 + -35.81194867330022 * scaler_41 + 28.533507669382338 * scaler_42 + -57.711303437660014 * scaler_43 + 17.346084846014385 * scaler_44 + 49.15251275824433 * scaler_45 + -31.05431930670137 * scaler_46 + 13.060386169248295 * scaler_47 + -30.494510079448215 * scaler_48 + -23.868024446534616 * scaler_49 + -48.23093884809752 * scaler_50 + 8.701850278361354 * scaler_51 + 72.7617360409281 * scaler_52 + -6.57511954215243 * scaler_53 + 7.246816484754505 * scaler_54 + -39.229710714912464 * scaler_55 + 2.4383462576092727 * scaler_56 + -30.95227847543403 * scaler_57 + 38.85474105277835 * scaler_58 + 25.417061172980755 * scaler_59 + -15.357639664270193 * scaler_60 + 11.435274509123207 * scaler_61 + -16.27364550106618 * scaler_62 + 41.38833816931484 * scaler_63 + 32.939777569725145 * scaler_64 + 1.8251635733109464 * scaler_65 + -6.958545273745699 * scaler_66 + -28.124382738058816 * scaler_67 + -44.8977942869261 * scaler_68 + 28.885617920454283 * scaler_69 + 69.21809341592834 * scaler_70 + 25.819957055290196 * scaler_71 + -26.46322941228317 * scaler_72 + 10.840317127529802 * scaler_73 + -5.74366662031667 * scaler_74 + 10.094885873311954 * scaler_75 + -36.28791961508622 * scaler_76 + 1.9537061773952455 * scaler_77 + 12.458664189326106 * scaler_78 + 16.395220459941413 * scaler_79 + 97.39080089264736 * scaler_80 + -54.073074642159085 * scaler_81 + -13.359062780122787 * scaler_82 + -16.857173390437143 * scaler_83 + -30.17481323298989 * scaler_84 + 12.8039073649091 * scaler_85 + 14.404146026417804 * scaler_86 + 3.648825700256957 * scaler_87 + 38.81091204761445 * scaler_88 + -31.19687182384963 * scaler_89 + -18.311610611650792 * scaler_90 + -56.02157060473081 * scaler_91 + -1.5817342894043362 * scaler_92 + -22.79510842020542 * scaler_93 + -82.49195526716093 * scaler_94 + 48.080381032224004 * scaler_95 + -36.87811524845029 * scaler_96 + 10.649264971581648 * scaler_97 + 0.5874843922978777 * scaler_98 + 15.079232766836839 * scaler_99 + 29.28136083361578 * scaler_100 + 31.39551233087455 * scaler_101 + -285.2690805565936;
	
			std::any score_1 = -12.619358640570349 * scaler_2 + 10.084106343019675 * scaler_3 + 63.37101662527021 * scaler_4 + 22.441645019296782 * scaler_5 + -17.85944424468744 * scaler_6 + -9.379673636833749 * scaler_7 + 1.8672613823727402 * scaler_8 + 32.08688324916528 * scaler_9 + -5.54742482428999 * scaler_10 + 67.12095583383227 * scaler_11 + 12.295270607663277 * scaler_12 + 5.3264880287061755 * scaler_13 + -1.3777773829198303 * scaler_14 + -27.77725767970983 * scaler_15 + -32.46384246866015 * scaler_16 + -37.99003986020476 * scaler_17 + 20.678455537545265 * scaler_18 + -2.883418495999433 * scaler_19 + -30.62879188840788 * scaler_20 + -51.946564551277035 * scaler_21 + -34.19727025835673 * scaler_22 + -0.2971539831416116 * scaler_23 + 12.398615160484926 * scaler_24 + -28.234900436076472 * scaler_25 + -47.106273981011064 * scaler_26 + -43.89188746031655 * scaler_27 + 15.050467343055884 * scaler_28 + 24.620802699295076 * scaler_29 + -23.090035156902733 * scaler_30 + -59.26664174043425 * scaler_31 + -18.053991840707276 * scaler_32 + -15.780464416420578 * scaler_33 + 8.504732677996993 * scaler_34 + 37.60019959432189 * scaler_35 + -27.995776898445484 * scaler_36 + 8.731469409876144 * scaler_37 + -18.231091904102104 * scaler_38 + 12.120401782464945 * scaler_39 + -35.48294425279127 * scaler_40 + 32.13919209406124 * scaler_41 + -17.247151433958663 * scaler_42 + 30.002012752272858 * scaler_43 + -5.0503426373435945 * scaler_44 + -4.422786083534398 * scaler_45 + 50.42529465801034 * scaler_46 + 23.54238075196406 * scaler_47 + -0.20299106518545604 * scaler_48 + 8.86029304012875 * scaler_49 + 0.9539859499442942 * scaler_50 + 16.432814029314454 * scaler_51 + -56.299223924194905 * scaler_52 + -17.43093395458521 * scaler_53 + -36.73613685429938 * scaler_54 + -26.410111227919547 * scaler_55 + 4.219077068379123 * scaler_56 + 36.86085201880904 * scaler_57 + 9.667177573001748 * scaler_58 + 14.435149076859831 * scaler_59 + 14.717803827478994 * scaler_60 + -6.508835362764823 * scaler_61 + 41.91282700432483 * scaler_62 + 6.024035260822285 * scaler_63 + -19.542555702751837 * scaler_64 + -7.043207504233554 * scaler_65 + 33.78190583446212 * scaler_66 + 42.62035597931879 * scaler_67 + 31.956774881721614 * scaler_68 + -68.70828072844377 * scaler_69 + 53.76955147053315 * scaler_70 + 1.4553546706941936 * scaler_71 + 14.946697157774956 * scaler_72 + -46.303606594843714 * scaler_73 + 18.01668861643253 * scaler_74 + -7.086981102630491 * scaler_75 + 58.829653461196536 * scaler_76 + 11.511228910076028 * scaler_77 + -22.318995764349605 * scaler_78 + 17.375770964864824 * scaler_79 + 11.783136702158348 * scaler_80 + -18.24787288804272 * scaler_81 + -68.93918725704869 * scaler_82 + -1.3430934075245102 * scaler_83 + 26.09966232641532 * scaler_84 + -12.617598116091765 * scaler_85 + -8.476420825150575 * scaler_86 + 3.9125091892965638 * scaler_87 + 6.5061307657314895 * scaler_88 + 37.255706499553995 * scaler_89 + 51.016322640377574 * scaler_90 + -52.89515531676815 * scaler_91 + 47.541332235682596 * scaler_92 + 48.041422323046284 * scaler_93 + 54.91489113036616 * scaler_94 + 33.94810280695711 * scaler_95 + 60.62211524325435 * scaler_96 + -7.491431262002424 * scaler_97 + -34.25808563656698 * scaler_98 + 18.236564361529794 * scaler_99 + 0.7607991218781699 * scaler_100 + -16.80804575845703 * scaler_101 + -248.40817494599017;
	
			std::any score_2 = -3.5841481932081587 * scaler_2 + -18.46788425290945 * scaler_3 + -39.285674893245876 * scaler_4 + -27.94652948834061 * scaler_5 + 3.0412622493565977 * scaler_6 + 22.089264388194845 * scaler_7 + -26.234120964376277 * scaler_8 + -19.99003133450442 * scaler_9 + 4.889574270585244 * scaler_10 + 1.5766988506276987 * scaler_11 + -33.734871718377285 * scaler_12 + 23.29164168343167 * scaler_13 + -14.730636644195537 * scaler_14 + -39.960056903133925 * scaler_15 + -24.661963628445218 * scaler_16 + -20.264853832432415 * scaler_17 + -20.41639626364876 * scaler_18 + -21.021295469607082 * scaler_19 + -10.238013027799 * scaler_20 + -17.16534641950229 * scaler_21 + 31.173573877137418 * scaler_22 + 11.09063692679384 * scaler_23 + -13.423226728031457 * scaler_24 + -1.0691500257453714 * scaler_25 + -0.5932113726340371 * scaler_26 + 24.66060755264387 * scaler_27 + -2.694968360339888 * scaler_28 + -2.170945199498716 * scaler_29 + 43.57714885649648 * scaler_30 + 34.002615692653755 * scaler_31 + 26.210217287011144 * scaler_32 + 20.181754895128247 * scaler_33 + 39.109898119921255 * scaler_34 + 19.445233078576535 * scaler_35 + 7.3390709642123015 * scaler_36 + -43.70619100380844 * scaler_37 + -12.317790214846669 * scaler_38 + 0.7422082378891676 * scaler_39 + 42.774238745214646 * scaler_40 + -8.463978586336511 * scaler_41 + 7.795232175683622 * scaler_42 + -5.405656225015167 * scaler_43 + -30.086919024000768 * scaler_44 + -36.73408133688379 * scaler_45 + -71.56647617758372 * scaler_46 + -32.740319864616325 * scaler_47 + 25.82466328405539 * scaler_48 + 30.523630611721174 * scaler_49 + 31.65857291091515 * scaler_50 + -17.29040761976414 * scaler_51 + -2.412647096554695 * scaler_52 + -32.3805156389574 * scaler_53 + 23.689007501651357 * scaler_54 + 18.670162461773188 * scaler_55 + -61.83494865103315 * scaler_56 + 4.762111725871109 * scaler_57 + -55.56471299662913 * scaler_58 + 46.14960339023073 * scaler_59 + 23.951771700357302 * scaler_60 + -18.41814891990005 * scaler_61 + -9.067327012612019 * scaler_62 + -37.91360055039273 * scaler_63 + -5.001458869721962 * scaler_64 + 34.19755672632843 * scaler_65 + -12.222180799169127 * scaler_66 + -11.041178810478375 * scaler_67 + -16.97184121905608 * scaler_68 + 4.759270929008272 * scaler_69 + -29.872424347894363 * scaler_70 + -19.446483153203722 * scaler_71 + 24.501403594623778 * scaler_72 + 28.377563898150758 * scaler_73 + -1.4828210799564172 * scaler_74 + -15.54791928412374 * scaler_75 + -24.11476928367601 * scaler_76 + -28.538237683996922 * scaler_77 + 16.325053395386778 * scaler_78 + -21.91962000685751 * scaler_79 + -30.003084524788285 * scaler_80 + 42.41311278351854 * scaler_81 + 6.204246317094869 * scaler_82 + 42.048713350861455 * scaler_83 + 4.087656894865734 * scaler_84 + 24.3015266647773 * scaler_85 + -17.92844747196823 * scaler_86 + 18.961225190110135 * scaler_87 + 2.0879474426224265 * scaler_88 + 13.372997771473532 * scaler_89 + 15.904069393304317 * scaler_90 + -0.946937454939293 * scaler_91 + -20.19571766180328 * scaler_92 + 9.178653047600966 * scaler_93 + 28.055329443039156 * scaler_94 + -7.572530629026009 * scaler_95 + -11.099704092005659 * scaler_96 + 6.873077624625274 * scaler_97 + -10.501216206785418 * scaler_98 + 9.47024593571957 * scaler_99 + -4.738294271300441 * scaler_100 + 25.69584448895925 * scaler_101 + -245.8721280070035;
	
			std::any score_3 = 43.339356018406484 * scaler_2 + 17.771519623001513 * scaler_3 + 14.359321164883928 * scaler_4 + -9.691946236697698 * scaler_5 + 7.609480690336903 * scaler_6 + -10.95845214116985 * scaler_7 + -17.332418609801312 * scaler_8 + -4.249578066400035 * scaler_9 + 36.240568678256416 * scaler_10 + -7.435746308026883 * scaler_11 + 0.4738870351446868 * scaler_12 + 18.35230516449368 * scaler_13 + 14.931922400692589 * scaler_14 + 52.239911539647984 * scaler_15 + 51.74424101670213 * scaler_16 + 26.18107933812352 * scaler_17 + -22.439630610400567 * scaler_18 + 28.36336510043917 * scaler_19 + -5.465828947202351 * scaler_20 + 32.743897803869864 * scaler_21 + 59.372565267973414 * scaler_22 + 17.9241279297129 * scaler_23 + -22.547156202592326 * scaler_24 + 19.389757277350036 * scaler_25 + 40.12308242345831 * scaler_26 + 32.334679740939364 * scaler_27 + -14.6312363435884 * scaler_28 + -33.406324719784 * scaler_29 + -0.3337296197832775 * scaler_30 + 42.423081616726755 * scaler_31 + -34.30789768187491 * scaler_32 + 3.4395614271609327 * scaler_33 + -16.211290818889395 * scaler_34 + -13.645830264514188 * scaler_35 + 13.104654563229449 * scaler_36 + 7.352504728213356 * scaler_37 + 26.74383381608583 * scaler_38 + -27.60773810618487 * scaler_39 + 26.006933464176985 * scaler_40 + 29.28522534287278 * scaler_41 + 3.9950534496161194 * scaler_42 + 13.798345184570167 * scaler_43 + 8.778002514101864 * scaler_44 + 24.18678862325774 * scaler_45 + 50.49909560803428 * scaler_46 + -20.419690862537337 * scaler_47 + 11.80223075729124 * scaler_48 + -17.62592774795855 * scaler_49 + 0.5368281700348659 * scaler_50 + 5.973365374319363 * scaler_51 + 12.391371587453285 * scaler_52 + 41.06537362523639 * scaler_53 + 9.187768755250541 * scaler_54 + 33.01206059075865 * scaler_55 + 52.1487980060755 * scaler_56 + -22.735575063049616 * scaler_57 + 19.48531775916011 * scaler_58 + -19.35813706569977 * scaler_59 + -18.260189948044633 * scaler_60 + -7.4004250553107545 * scaler_61 + 23.136392068718614 * scaler_62 + -9.520671861909925 * scaler_63 + 7.335638576502703 * scaler_64 + -24.774957979625405 * scaler_65 + -23.380365027691152 * scaler_66 + 16.300820691996496 * scaler_67 + 6.969761221234314 * scaler_68 + 43.47956326637992 * scaler_69 + -19.034248151480625 * scaler_70 + 14.951842176811315 * scaler_71 + -3.267356225396941 * scaler_72 + -46.20722026582338 * scaler_73 + -26.57973059061976 * scaler_74 + 1.5731273793178056 * scaler_75 + -18.7339153337706 * scaler_76 + -3.318108823142896 * scaler_77 + -4.13393609247318 * scaler_78 + -28.46500436119049 * scaler_79 + -43.08337673537537 * scaler_80 + 10.930995106832334 * scaler_81 + 49.026653394551055 * scaler_82 + -28.723017984480485 * scaler_83 + 17.953982702440047 * scaler_84 + -20.081839647168124 * scaler_85 + 19.1803491772646 * scaler_86 + -67.90923471947775 * scaler_87 + -9.196080101680488 * scaler_88 + 6.822904970029195 * scaler_89 + -31.04047983640566 * scaler_90 + 21.620859720503702 * scaler_91 + -38.47501616797724 * scaler_92 + -18.583238000551802 * scaler_93 + -4.672700447448182 * scaler_94 + -33.53249179290082 * scaler_95 + -20.327006053193898 * scaler_96 + -23.4983538592202 * scaler_97 + 9.946882289548514 * scaler_98 + -35.20629358122998 * scaler_99 + 5.138222309556279 * scaler_100 + -66.70628428434553 * scaler_101 + -258.26788637626146;
	
	
			tTable lTable;
	
			lTable["Score"] = { 
				score_0,
				score_1,
				score_2,
				score_3 
			} ;
			lTable["Proba"] = { 
				std::any(),
				std::any(),
				std::any(),
				std::any() 
			} ;
			int lBestClass = get_arg_max( lTable["Score"] );
			auto lDecision = lClasses[lBestClass];
			lTable["Decision"] = { lDecision } ;
			lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
	
			recompute_log_probas( lTable );
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { 
			"Score_0", "Score_1", "Score_2", "Score_3",
			"Proba_0", "Proba_1", "Proba_2", "Proba_3",
			"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
			"Decision", "DecisionProba" };

		return lOutputs;
	}

	tTable compute_classification_scores(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
		auto lClasses = get_classes();

		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable = lTable_model;

		int lBestClass = get_arg_max( lTable["Proba"] );
		auto lDecision = lClasses[lBestClass];
		lTable["Decision"] = { lDecision } ;
		lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };

		recompute_log_probas( lTable );

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_classification_scores(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/FourClass_100.csv");
	return 0;
}
