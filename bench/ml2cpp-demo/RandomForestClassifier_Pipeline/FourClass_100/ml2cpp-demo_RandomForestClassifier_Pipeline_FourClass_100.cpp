// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : RandomForestClassifier_Pipeline
// Dataset : FourClass_100

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_RandomForestClassifier_Pipeline_FourClass_100.exe ml2cpp-demo_RandomForestClassifier_Pipeline_FourClass_100.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	std::vector<std::any> get_classes(){
		std::vector<std::any> lClasses = { 0, 1, 2, 3 };

		return lClasses;
	}

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "impter_2", "impter_3", "impter_4", "impter_5", "impter_6", "impter_7", "impter_8", "impter_9", "impter_10", "impter_11", "impter_12", "impter_13", "impter_14", "impter_15", "impter_16", "impter_17", "impter_18", "impter_19", "impter_20", "impter_21", "impter_22", "impter_23", "impter_24", "impter_25", "impter_26", "impter_27", "impter_28", "impter_29", "impter_30", "impter_31", "impter_32", "impter_33", "impter_34", "impter_35", "impter_36", "impter_37", "impter_38", "impter_39", "impter_40", "impter_41", "impter_42", "impter_43", "impter_44", "impter_45", "impter_46", "impter_47", "impter_48", "impter_49", "impter_50", "impter_51", "impter_52", "impter_53", "impter_54", "impter_55", "impter_56", "impter_57", "impter_58", "impter_59", "impter_60", "impter_61", "impter_62", "impter_63", "impter_64", "impter_65", "impter_66", "impter_67", "impter_68", "impter_69", "impter_70", "impter_71", "impter_72", "impter_73", "impter_74", "impter_75", "impter_76", "impter_77", "impter_78", "impter_79", "impter_80", "impter_81", "impter_82", "impter_83", "impter_84", "impter_85", "impter_86", "impter_87", "impter_88", "impter_89", "impter_90", "impter_91", "impter_92", "impter_93", "impter_94", "impter_95", "impter_96", "impter_97", "impter_98", "impter_99", "impter_100", "impter_101" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
	
			tTable lTable;
	
			lTable["impter_2"] = { ((Feature_0 == std::any()) ?  ( -0.0014807007689716506 ) : ( Feature_0)) };
			lTable["impter_3"] = { ((Feature_1 == std::any()) ?  ( 0.08599214990681354 ) : ( Feature_1)) };
			lTable["impter_4"] = { ((Feature_2 == std::any()) ?  ( -0.006358164676411468 ) : ( Feature_2)) };
			lTable["impter_5"] = { ((Feature_3 == std::any()) ?  ( -0.024301807422776375 ) : ( Feature_3)) };
			lTable["impter_6"] = { ((Feature_4 == std::any()) ?  ( 0.015786548044298444 ) : ( Feature_4)) };
			lTable["impter_7"] = { ((Feature_5 == std::any()) ?  ( -0.13959329445651672 ) : ( Feature_5)) };
			lTable["impter_8"] = { ((Feature_6 == std::any()) ?  ( -0.06476745048019888 ) : ( Feature_6)) };
			lTable["impter_9"] = { ((Feature_7 == std::any()) ?  ( 0.025579810774090658 ) : ( Feature_7)) };
			lTable["impter_10"] = { ((Feature_8 == std::any()) ?  ( -0.03173937260977112 ) : ( Feature_8)) };
			lTable["impter_11"] = { ((Feature_9 == std::any()) ?  ( -0.1518141420862488 ) : ( Feature_9)) };
			lTable["impter_12"] = { ((Feature_10 == std::any()) ?  ( -0.13244576558492482 ) : ( Feature_10)) };
			lTable["impter_13"] = { ((Feature_11 == std::any()) ?  ( 0.044172679762224144 ) : ( Feature_11)) };
			lTable["impter_14"] = { ((Feature_12 == std::any()) ?  ( 0.010165946719810038 ) : ( Feature_12)) };
			lTable["impter_15"] = { ((Feature_13 == std::any()) ?  ( -0.03645872019103299 ) : ( Feature_13)) };
			lTable["impter_16"] = { ((Feature_14 == std::any()) ?  ( 0.06491512811593925 ) : ( Feature_14)) };
			lTable["impter_17"] = { ((Feature_15 == std::any()) ?  ( -0.11930146867074032 ) : ( Feature_15)) };
			lTable["impter_18"] = { ((Feature_16 == std::any()) ?  ( 0.007738863934852773 ) : ( Feature_16)) };
			lTable["impter_19"] = { ((Feature_17 == std::any()) ?  ( -0.1226774060147726 ) : ( Feature_17)) };
			lTable["impter_20"] = { ((Feature_18 == std::any()) ?  ( 0.019160881669086405 ) : ( Feature_18)) };
			lTable["impter_21"] = { ((Feature_19 == std::any()) ?  ( -0.26340351121131067 ) : ( Feature_19)) };
			lTable["impter_22"] = { ((Feature_20 == std::any()) ?  ( 0.035692361937735194 ) : ( Feature_20)) };
			lTable["impter_23"] = { ((Feature_21 == std::any()) ?  ( -0.010021324964069293 ) : ( Feature_21)) };
			lTable["impter_24"] = { ((Feature_22 == std::any()) ?  ( -0.1258614387723542 ) : ( Feature_22)) };
			lTable["impter_25"] = { ((Feature_23 == std::any()) ?  ( 0.09372773898231128 ) : ( Feature_23)) };
			lTable["impter_26"] = { ((Feature_24 == std::any()) ?  ( -0.1687929597880227 ) : ( Feature_24)) };
			lTable["impter_27"] = { ((Feature_25 == std::any()) ?  ( 0.10006283199629364 ) : ( Feature_25)) };
			lTable["impter_28"] = { ((Feature_26 == std::any()) ?  ( -0.10297858086822659 ) : ( Feature_26)) };
			lTable["impter_29"] = { ((Feature_27 == std::any()) ?  ( 0.19240514535870412 ) : ( Feature_27)) };
			lTable["impter_30"] = { ((Feature_28 == std::any()) ?  ( -0.052866434246092435 ) : ( Feature_28)) };
			lTable["impter_31"] = { ((Feature_29 == std::any()) ?  ( 0.26246121463661504 ) : ( Feature_29)) };
			lTable["impter_32"] = { ((Feature_30 == std::any()) ?  ( 0.002677575140361194 ) : ( Feature_30)) };
			lTable["impter_33"] = { ((Feature_31 == std::any()) ?  ( 0.09707041941284063 ) : ( Feature_31)) };
			lTable["impter_34"] = { ((Feature_32 == std::any()) ?  ( -0.032793219857333473 ) : ( Feature_32)) };
			lTable["impter_35"] = { ((Feature_33 == std::any()) ?  ( -0.003130273745908922 ) : ( Feature_33)) };
			lTable["impter_36"] = { ((Feature_34 == std::any()) ?  ( 0.053446276216279974 ) : ( Feature_34)) };
			lTable["impter_37"] = { ((Feature_35 == std::any()) ?  ( -0.18668146437412367 ) : ( Feature_35)) };
			lTable["impter_38"] = { ((Feature_36 == std::any()) ?  ( -0.029335964960866243 ) : ( Feature_36)) };
			lTable["impter_39"] = { ((Feature_37 == std::any()) ?  ( 0.07219772199502426 ) : ( Feature_37)) };
			lTable["impter_40"] = { ((Feature_38 == std::any()) ?  ( -0.0007762839781489412 ) : ( Feature_38)) };
			lTable["impter_41"] = { ((Feature_39 == std::any()) ?  ( 0.08270823712098274 ) : ( Feature_39)) };
			lTable["impter_42"] = { ((Feature_40 == std::any()) ?  ( 0.10432022852347983 ) : ( Feature_40)) };
			lTable["impter_43"] = { ((Feature_41 == std::any()) ?  ( 0.07058566385022276 ) : ( Feature_41)) };
			lTable["impter_44"] = { ((Feature_42 == std::any()) ?  ( 0.05096693098357383 ) : ( Feature_42)) };
			lTable["impter_45"] = { ((Feature_43 == std::any()) ?  ( 0.0660758203367818 ) : ( Feature_43)) };
			lTable["impter_46"] = { ((Feature_44 == std::any()) ?  ( -0.07075895636353369 ) : ( Feature_44)) };
			lTable["impter_47"] = { ((Feature_45 == std::any()) ?  ( 0.08422536561649958 ) : ( Feature_45)) };
			lTable["impter_48"] = { ((Feature_46 == std::any()) ?  ( 0.21367580667795616 ) : ( Feature_46)) };
			lTable["impter_49"] = { ((Feature_47 == std::any()) ?  ( -0.055897457335624984 ) : ( Feature_47)) };
			lTable["impter_50"] = { ((Feature_48 == std::any()) ?  ( -0.17453036726139812 ) : ( Feature_48)) };
			lTable["impter_51"] = { ((Feature_49 == std::any()) ?  ( -0.054944001818473996 ) : ( Feature_49)) };
			lTable["impter_52"] = { ((Feature_50 == std::any()) ?  ( -0.5961651261710368 ) : ( Feature_50)) };
			lTable["impter_53"] = { ((Feature_51 == std::any()) ?  ( 0.5020404526565605 ) : ( Feature_51)) };
			lTable["impter_54"] = { ((Feature_52 == std::any()) ?  ( -0.052340545201383926 ) : ( Feature_52)) };
			lTable["impter_55"] = { ((Feature_53 == std::any()) ?  ( 0.052943076116746535 ) : ( Feature_53)) };
			lTable["impter_56"] = { ((Feature_54 == std::any()) ?  ( 0.03835884479069335 ) : ( Feature_54)) };
			lTable["impter_57"] = { ((Feature_55 == std::any()) ?  ( -0.13571979014964694 ) : ( Feature_55)) };
			lTable["impter_58"] = { ((Feature_56 == std::any()) ?  ( -0.2190306843141183 ) : ( Feature_56)) };
			lTable["impter_59"] = { ((Feature_57 == std::any()) ?  ( -0.1191752362029383 ) : ( Feature_57)) };
			lTable["impter_60"] = { ((Feature_58 == std::any()) ?  ( 0.38058346912807667 ) : ( Feature_58)) };
			lTable["impter_61"] = { ((Feature_59 == std::any()) ?  ( -0.12720928974168508 ) : ( Feature_59)) };
			lTable["impter_62"] = { ((Feature_60 == std::any()) ?  ( -0.09072936496613782 ) : ( Feature_60)) };
			lTable["impter_63"] = { ((Feature_61 == std::any()) ?  ( -0.03915125937954538 ) : ( Feature_61)) };
			lTable["impter_64"] = { ((Feature_62 == std::any()) ?  ( 0.07075412393313481 ) : ( Feature_62)) };
			lTable["impter_65"] = { ((Feature_63 == std::any()) ?  ( 0.10124894587016948 ) : ( Feature_63)) };
			lTable["impter_66"] = { ((Feature_64 == std::any()) ?  ( -0.1945661449475579 ) : ( Feature_64)) };
			lTable["impter_67"] = { ((Feature_65 == std::any()) ?  ( -0.1759482981261233 ) : ( Feature_65)) };
			lTable["impter_68"] = { ((Feature_66 == std::any()) ?  ( 0.07473228971855511 ) : ( Feature_66)) };
			lTable["impter_69"] = { ((Feature_67 == std::any()) ?  ( 0.0377705562115906 ) : ( Feature_67)) };
			lTable["impter_70"] = { ((Feature_68 == std::any()) ?  ( 0.0139470898598917 ) : ( Feature_68)) };
			lTable["impter_71"] = { ((Feature_69 == std::any()) ?  ( 0.2582685725145942 ) : ( Feature_69)) };
			lTable["impter_72"] = { ((Feature_70 == std::any()) ?  ( 0.022975786233048922 ) : ( Feature_70)) };
			lTable["impter_73"] = { ((Feature_71 == std::any()) ?  ( 0.17445434061949525 ) : ( Feature_71)) };
			lTable["impter_74"] = { ((Feature_72 == std::any()) ?  ( -0.011413879692078346 ) : ( Feature_72)) };
			lTable["impter_75"] = { ((Feature_73 == std::any()) ?  ( 0.07898984156871978 ) : ( Feature_73)) };
			lTable["impter_76"] = { ((Feature_74 == std::any()) ?  ( 0.0952547273770713 ) : ( Feature_74)) };
			lTable["impter_77"] = { ((Feature_75 == std::any()) ?  ( -0.03997776839639901 ) : ( Feature_75)) };
			lTable["impter_78"] = { ((Feature_76 == std::any()) ?  ( -0.020839895874293496 ) : ( Feature_76)) };
			lTable["impter_79"] = { ((Feature_77 == std::any()) ?  ( -0.07284631986613152 ) : ( Feature_77)) };
			lTable["impter_80"] = { ((Feature_78 == std::any()) ?  ( -0.27389951764434384 ) : ( Feature_78)) };
			lTable["impter_81"] = { ((Feature_79 == std::any()) ?  ( 0.08057287885287609 ) : ( Feature_79)) };
			lTable["impter_82"] = { ((Feature_80 == std::any()) ?  ( -0.06244274245437891 ) : ( Feature_80)) };
			lTable["impter_83"] = { ((Feature_81 == std::any()) ?  ( -0.12290855334066887 ) : ( Feature_81)) };
			lTable["impter_84"] = { ((Feature_82 == std::any()) ?  ( 0.11639531793890918 ) : ( Feature_82)) };
			lTable["impter_85"] = { ((Feature_83 == std::any()) ?  ( -0.03350462786128603 ) : ( Feature_83)) };
			lTable["impter_86"] = { ((Feature_84 == std::any()) ?  ( -0.03914049968144583 ) : ( Feature_84)) };
			lTable["impter_87"] = { ((Feature_85 == std::any()) ?  ( 0.24193903072305167 ) : ( Feature_85)) };
			lTable["impter_88"] = { ((Feature_86 == std::any()) ?  ( -0.07389719862221904 ) : ( Feature_86)) };
			lTable["impter_89"] = { ((Feature_87 == std::any()) ?  ( 0.1400756228320113 ) : ( Feature_87)) };
			lTable["impter_90"] = { ((Feature_88 == std::any()) ?  ( 0.2765301935136145 ) : ( Feature_88)) };
			lTable["impter_91"] = { ((Feature_89 == std::any()) ?  ( -0.07957147169250885 ) : ( Feature_89)) };
			lTable["impter_92"] = { ((Feature_90 == std::any()) ?  ( 0.16295767680642717 ) : ( Feature_90)) };
			lTable["impter_93"] = { ((Feature_91 == std::any()) ?  ( 0.07062813888509549 ) : ( Feature_91)) };
			lTable["impter_94"] = { ((Feature_92 == std::any()) ?  ( 0.012995630151896219 ) : ( Feature_92)) };
			lTable["impter_95"] = { ((Feature_93 == std::any()) ?  ( 0.1055212408190415 ) : ( Feature_93)) };
			lTable["impter_96"] = { ((Feature_94 == std::any()) ?  ( -0.1408434425354362 ) : ( Feature_94)) };
			lTable["impter_97"] = { ((Feature_95 == std::any()) ?  ( -0.1574012366732725 ) : ( Feature_95)) };
			lTable["impter_98"] = { ((Feature_96 == std::any()) ?  ( 0.05477536676313335 ) : ( Feature_96)) };
			lTable["impter_99"] = { ((Feature_97 == std::any()) ?  ( 0.05673272205919614 ) : ( Feature_97)) };
			lTable["impter_100"] = { ((Feature_98 == std::any()) ?  ( -0.14226649213619527 ) : ( Feature_98)) };
			lTable["impter_101"] = { ((Feature_99 == std::any()) ?  ( -0.04042675289131947 ) : ( Feature_99)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "impter_2", "impter_3", "impter_4", "impter_5", "impter_6", "impter_7", "impter_8", "impter_9", "impter_10", "impter_11", "impter_12", "impter_13", "impter_14", "impter_15", "impter_16", "impter_17", "impter_18", "impter_19", "impter_20", "impter_21", "impter_22", "impter_23", "impter_24", "impter_25", "impter_26", "impter_27", "impter_28", "impter_29", "impter_30", "impter_31", "impter_32", "impter_33", "impter_34", "impter_35", "impter_36", "impter_37", "impter_38", "impter_39", "impter_40", "impter_41", "impter_42", "impter_43", "impter_44", "impter_45", "impter_46", "impter_47", "impter_48", "impter_49", "impter_50", "impter_51", "impter_52", "impter_53", "impter_54", "impter_55", "impter_56", "impter_57", "impter_58", "impter_59", "impter_60", "impter_61", "impter_62", "impter_63", "impter_64", "impter_65", "impter_66", "impter_67", "impter_68", "impter_69", "impter_70", "impter_71", "impter_72", "impter_73", "impter_74", "impter_75", "impter_76", "impter_77", "impter_78", "impter_79", "impter_80", "impter_81", "impter_82", "impter_83", "impter_84", "impter_85", "impter_86", "impter_87", "impter_88", "impter_89", "impter_90", "impter_91", "impter_92", "impter_93", "impter_94", "impter_95", "impter_96", "impter_97", "impter_98", "impter_99", "impter_100", "impter_101" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any impter_2, std::any impter_3, std::any impter_4, std::any impter_5, std::any impter_6, std::any impter_7, std::any impter_8, std::any impter_9, std::any impter_10, std::any impter_11, std::any impter_12, std::any impter_13, std::any impter_14, std::any impter_15, std::any impter_16, std::any impter_17, std::any impter_18, std::any impter_19, std::any impter_20, std::any impter_21, std::any impter_22, std::any impter_23, std::any impter_24, std::any impter_25, std::any impter_26, std::any impter_27, std::any impter_28, std::any impter_29, std::any impter_30, std::any impter_31, std::any impter_32, std::any impter_33, std::any impter_34, std::any impter_35, std::any impter_36, std::any impter_37, std::any impter_38, std::any impter_39, std::any impter_40, std::any impter_41, std::any impter_42, std::any impter_43, std::any impter_44, std::any impter_45, std::any impter_46, std::any impter_47, std::any impter_48, std::any impter_49, std::any impter_50, std::any impter_51, std::any impter_52, std::any impter_53, std::any impter_54, std::any impter_55, std::any impter_56, std::any impter_57, std::any impter_58, std::any impter_59, std::any impter_60, std::any impter_61, std::any impter_62, std::any impter_63, std::any impter_64, std::any impter_65, std::any impter_66, std::any impter_67, std::any impter_68, std::any impter_69, std::any impter_70, std::any impter_71, std::any impter_72, std::any impter_73, std::any impter_74, std::any impter_75, std::any impter_76, std::any impter_77, std::any impter_78, std::any impter_79, std::any impter_80, std::any impter_81, std::any impter_82, std::any impter_83, std::any impter_84, std::any impter_85, std::any impter_86, std::any impter_87, std::any impter_88, std::any impter_89, std::any impter_90, std::any impter_91, std::any impter_92, std::any impter_93, std::any impter_94, std::any impter_95, std::any impter_96, std::any impter_97, std::any impter_98, std::any impter_99, std::any impter_100, std::any impter_101) {
	
			tTable lTable;
	
			lTable["scaler_2"] = { ( ( impter_2 - -0.0014807007689716506 ) / 0.9211229790312512 ) };
			lTable["scaler_3"] = { ( ( impter_3 - 0.08599214990681354 ) / 0.9627516809237073 ) };
			lTable["scaler_4"] = { ( ( impter_4 - -0.006358164676411468 ) / 0.7890687835102894 ) };
			lTable["scaler_5"] = { ( ( impter_5 - -0.024301807422776375 ) / 1.0265272189083172 ) };
			lTable["scaler_6"] = { ( ( impter_6 - 0.015786548044298444 ) / 1.0198090908026474 ) };
			lTable["scaler_7"] = { ( ( impter_7 - -0.13959329445651672 ) / 0.9185551763293686 ) };
			lTable["scaler_8"] = { ( ( impter_8 - -0.06476745048019888 ) / 1.0393547249617474 ) };
			lTable["scaler_9"] = { ( ( impter_9 - 0.025579810774090658 ) / 0.8722131294644917 ) };
			lTable["scaler_10"] = { ( ( impter_10 - -0.03173937260977112 ) / 1.0164588299091024 ) };
			lTable["scaler_11"] = { ( ( impter_11 - -0.1518141420862488 ) / 1.0075402114297496 ) };
			lTable["scaler_12"] = { ( ( impter_12 - -0.13244576558492482 ) / 0.9215325459816371 ) };
			lTable["scaler_13"] = { ( ( impter_13 - 0.044172679762224144 ) / 0.9053279964066308 ) };
			lTable["scaler_14"] = { ( ( impter_14 - 0.010165946719810038 ) / 1.2190371046063362 ) };
			lTable["scaler_15"] = { ( ( impter_15 - -0.03645872019103299 ) / 1.0879005786584215 ) };
			lTable["scaler_16"] = { ( ( impter_16 - 0.06491512811593925 ) / 1.0274670201407186 ) };
			lTable["scaler_17"] = { ( ( impter_17 - -0.11930146867074032 ) / 0.9506312349761404 ) };
			lTable["scaler_18"] = { ( ( impter_18 - 0.007738863934852773 ) / 1.0928477585203984 ) };
			lTable["scaler_19"] = { ( ( impter_19 - -0.1226774060147726 ) / 0.9830561715965196 ) };
			lTable["scaler_20"] = { ( ( impter_20 - 0.019160881669086405 ) / 1.2117417920836373 ) };
			lTable["scaler_21"] = { ( ( impter_21 - -0.26340351121131067 ) / 0.9807419262255984 ) };
			lTable["scaler_22"] = { ( ( impter_22 - 0.035692361937735194 ) / 1.115824498468156 ) };
			lTable["scaler_23"] = { ( ( impter_23 - -0.010021324964069293 ) / 1.0790959803413318 ) };
			lTable["scaler_24"] = { ( ( impter_24 - -0.1258614387723542 ) / 1.0279672611547366 ) };
			lTable["scaler_25"] = { ( ( impter_25 - 0.09372773898231128 ) / 0.9690760299303989 ) };
			lTable["scaler_26"] = { ( ( impter_26 - -0.1687929597880227 ) / 0.8845858581996813 ) };
			lTable["scaler_27"] = { ( ( impter_27 - 0.10006283199629364 ) / 0.9149346104000894 ) };
			lTable["scaler_28"] = { ( ( impter_28 - -0.10297858086822659 ) / 1.0761397500557328 ) };
			lTable["scaler_29"] = { ( ( impter_29 - 0.19240514535870412 ) / 2.089882492597775 ) };
			lTable["scaler_30"] = { ( ( impter_30 - -0.052866434246092435 ) / 1.0030777529896888 ) };
			lTable["scaler_31"] = { ( ( impter_31 - 0.26246121463661504 ) / 1.9778491038473627 ) };
			lTable["scaler_32"] = { ( ( impter_32 - 0.002677575140361194 ) / 0.8833924915211555 ) };
			lTable["scaler_33"] = { ( ( impter_33 - 0.09707041941284063 ) / 0.8720005351713555 ) };
			lTable["scaler_34"] = { ( ( impter_34 - -0.032793219857333473 ) / 0.8745989090443193 ) };
			lTable["scaler_35"] = { ( ( impter_35 - -0.003130273745908922 ) / 0.9967699097535561 ) };
			lTable["scaler_36"] = { ( ( impter_36 - 0.053446276216279974 ) / 0.9997289112199433 ) };
			lTable["scaler_37"] = { ( ( impter_37 - -0.18668146437412367 ) / 1.0272287171310865 ) };
			lTable["scaler_38"] = { ( ( impter_38 - -0.029335964960866243 ) / 1.0427555960451658 ) };
			lTable["scaler_39"] = { ( ( impter_39 - 0.07219772199502426 ) / 0.8328229890456742 ) };
			lTable["scaler_40"] = { ( ( impter_40 - -0.0007762839781489412 ) / 0.9666524356457794 ) };
			lTable["scaler_41"] = { ( ( impter_41 - 0.08270823712098274 ) / 1.083670494683493 ) };
			lTable["scaler_42"] = { ( ( impter_42 - 0.10432022852347983 ) / 1.075472547982714 ) };
			lTable["scaler_43"] = { ( ( impter_43 - 0.07058566385022276 ) / 0.9993462791463713 ) };
			lTable["scaler_44"] = { ( ( impter_44 - 0.05096693098357383 ) / 0.8876971252794036 ) };
			lTable["scaler_45"] = { ( ( impter_45 - 0.0660758203367818 ) / 1.041246125313479 ) };
			lTable["scaler_46"] = { ( ( impter_46 - -0.07075895636353369 ) / 2.238310207242139 ) };
			lTable["scaler_47"] = { ( ( impter_47 - 0.08422536561649958 ) / 0.9520959686676432 ) };
			lTable["scaler_48"] = { ( ( impter_48 - 0.21367580667795616 ) / 0.9907230316111766 ) };
			lTable["scaler_49"] = { ( ( impter_49 - -0.055897457335624984 ) / 1.0392400714320487 ) };
			lTable["scaler_50"] = { ( ( impter_50 - -0.17453036726139812 ) / 2.001507098381001 ) };
			lTable["scaler_51"] = { ( ( impter_51 - -0.054944001818473996 ) / 1.0041645540091246 ) };
			lTable["scaler_52"] = { ( ( impter_52 - -0.5961651261710368 ) / 2.467511153399545 ) };
			lTable["scaler_53"] = { ( ( impter_53 - 0.5020404526565605 ) / 2.1929325118287792 ) };
			lTable["scaler_54"] = { ( ( impter_54 - -0.052340545201383926 ) / 0.98465558791252 ) };
			lTable["scaler_55"] = { ( ( impter_55 - 0.052943076116746535 ) / 1.8137042567337183 ) };
			lTable["scaler_56"] = { ( ( impter_56 - 0.03835884479069335 ) / 0.9241326354411343 ) };
			lTable["scaler_57"] = { ( ( impter_57 - -0.13571979014964694 ) / 0.8679095755948701 ) };
			lTable["scaler_58"] = { ( ( impter_58 - -0.2190306843141183 ) / 4.150428869748412 ) };
			lTable["scaler_59"] = { ( ( impter_59 - -0.1191752362029383 ) / 0.9123333408128436 ) };
			lTable["scaler_60"] = { ( ( impter_60 - 0.38058346912807667 ) / 3.5635011086986927 ) };
			lTable["scaler_61"] = { ( ( impter_61 - -0.12720928974168508 ) / 0.9301024475991629 ) };
			lTable["scaler_62"] = { ( ( impter_62 - -0.09072936496613782 ) / 0.9490501277306023 ) };
			lTable["scaler_63"] = { ( ( impter_63 - -0.03915125937954538 ) / 0.9029504608473613 ) };
			lTable["scaler_64"] = { ( ( impter_64 - 0.07075412393313481 ) / 0.9726561682528103 ) };
			lTable["scaler_65"] = { ( ( impter_65 - 0.10124894587016948 ) / 0.9403075920249493 ) };
			lTable["scaler_66"] = { ( ( impter_66 - -0.1945661449475579 ) / 0.9400903625732654 ) };
			lTable["scaler_67"] = { ( ( impter_67 - -0.1759482981261233 ) / 0.9435422049943787 ) };
			lTable["scaler_68"] = { ( ( impter_68 - 0.07473228971855511 ) / 0.8871003964319768 ) };
			lTable["scaler_69"] = { ( ( impter_69 - 0.0377705562115906 ) / 1.0228978549196588 ) };
			lTable["scaler_70"] = { ( ( impter_70 - 0.0139470898598917 ) / 0.9465728329079491 ) };
			lTable["scaler_71"] = { ( ( impter_71 - 0.2582685725145942 ) / 1.1027232016521478 ) };
			lTable["scaler_72"] = { ( ( impter_72 - 0.022975786233048922 ) / 0.9200436904809381 ) };
			lTable["scaler_73"] = { ( ( impter_73 - 0.17445434061949525 ) / 0.9009964742482128 ) };
			lTable["scaler_74"] = { ( ( impter_74 - -0.011413879692078346 ) / 0.9483377025565977 ) };
			lTable["scaler_75"] = { ( ( impter_75 - 0.07898984156871978 ) / 0.9726668138861088 ) };
			lTable["scaler_76"] = { ( ( impter_76 - 0.0952547273770713 ) / 0.9607867245873394 ) };
			lTable["scaler_77"] = { ( ( impter_77 - -0.03997776839639901 ) / 1.0318828686080972 ) };
			lTable["scaler_78"] = { ( ( impter_78 - -0.020839895874293496 ) / 0.945141993694461 ) };
			lTable["scaler_79"] = { ( ( impter_79 - -0.07284631986613152 ) / 0.9103416784348913 ) };
			lTable["scaler_80"] = { ( ( impter_80 - -0.27389951764434384 ) / 2.0362603862996735 ) };
			lTable["scaler_81"] = { ( ( impter_81 - 0.08057287885287609 ) / 0.9919292944224015 ) };
			lTable["scaler_82"] = { ( ( impter_82 - -0.06244274245437891 ) / 0.8113039293824552 ) };
			lTable["scaler_83"] = { ( ( impter_83 - -0.12290855334066887 ) / 1.0307302654711112 ) };
			lTable["scaler_84"] = { ( ( impter_84 - 0.11639531793890918 ) / 0.9993591951135242 ) };
			lTable["scaler_85"] = { ( ( impter_85 - -0.03350462786128603 ) / 1.0197598648594488 ) };
			lTable["scaler_86"] = { ( ( impter_86 - -0.03914049968144583 ) / 0.9022051622058084 ) };
			lTable["scaler_87"] = { ( ( impter_87 - 0.24193903072305167 ) / 0.9625742678392476 ) };
			lTable["scaler_88"] = { ( ( impter_88 - -0.07389719862221904 ) / 1.0080070985430696 ) };
			lTable["scaler_89"] = { ( ( impter_89 - 0.1400756228320113 ) / 0.9315791274848828 ) };
			lTable["scaler_90"] = { ( ( impter_90 - 0.2765301935136145 ) / 1.9455982323178656 ) };
			lTable["scaler_91"] = { ( ( impter_91 - -0.07957147169250885 ) / 0.9688848077884671 ) };
			lTable["scaler_92"] = { ( ( impter_92 - 0.16295767680642717 ) / 0.8952741904110189 ) };
			lTable["scaler_93"] = { ( ( impter_93 - 0.07062813888509549 ) / 0.8331748322730601 ) };
			lTable["scaler_94"] = { ( ( impter_94 - 0.012995630151896219 ) / 1.059167248118017 ) };
			lTable["scaler_95"] = { ( ( impter_95 - 0.1055212408190415 ) / 1.0525988978000902 ) };
			lTable["scaler_96"] = { ( ( impter_96 - -0.1408434425354362 ) / 0.9172372033996682 ) };
			lTable["scaler_97"] = { ( ( impter_97 - -0.1574012366732725 ) / 0.9930125433643069 ) };
			lTable["scaler_98"] = { ( ( impter_98 - 0.05477536676313335 ) / 0.9803136353653645 ) };
			lTable["scaler_99"] = { ( ( impter_99 - 0.05673272205919614 ) / 0.9296338032188498 ) };
			lTable["scaler_100"] = { ( ( impter_100 - -0.14226649213619527 ) / 1.174442941822933 ) };
			lTable["scaler_101"] = { ( ( impter_101 - -0.04042675289131947 ) / 1.983747550989713 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("impter_2")[0], iTable.at("impter_3")[0], iTable.at("impter_4")[0], iTable.at("impter_5")[0], iTable.at("impter_6")[0], iTable.at("impter_7")[0], iTable.at("impter_8")[0], iTable.at("impter_9")[0], iTable.at("impter_10")[0], iTable.at("impter_11")[0], iTable.at("impter_12")[0], iTable.at("impter_13")[0], iTable.at("impter_14")[0], iTable.at("impter_15")[0], iTable.at("impter_16")[0], iTable.at("impter_17")[0], iTable.at("impter_18")[0], iTable.at("impter_19")[0], iTable.at("impter_20")[0], iTable.at("impter_21")[0], iTable.at("impter_22")[0], iTable.at("impter_23")[0], iTable.at("impter_24")[0], iTable.at("impter_25")[0], iTable.at("impter_26")[0], iTable.at("impter_27")[0], iTable.at("impter_28")[0], iTable.at("impter_29")[0], iTable.at("impter_30")[0], iTable.at("impter_31")[0], iTable.at("impter_32")[0], iTable.at("impter_33")[0], iTable.at("impter_34")[0], iTable.at("impter_35")[0], iTable.at("impter_36")[0], iTable.at("impter_37")[0], iTable.at("impter_38")[0], iTable.at("impter_39")[0], iTable.at("impter_40")[0], iTable.at("impter_41")[0], iTable.at("impter_42")[0], iTable.at("impter_43")[0], iTable.at("impter_44")[0], iTable.at("impter_45")[0], iTable.at("impter_46")[0], iTable.at("impter_47")[0], iTable.at("impter_48")[0], iTable.at("impter_49")[0], iTable.at("impter_50")[0], iTable.at("impter_51")[0], iTable.at("impter_52")[0], iTable.at("impter_53")[0], iTable.at("impter_54")[0], iTable.at("impter_55")[0], iTable.at("impter_56")[0], iTable.at("impter_57")[0], iTable.at("impter_58")[0], iTable.at("impter_59")[0], iTable.at("impter_60")[0], iTable.at("impter_61")[0], iTable.at("impter_62")[0], iTable.at("impter_63")[0], iTable.at("impter_64")[0], iTable.at("impter_65")[0], iTable.at("impter_66")[0], iTable.at("impter_67")[0], iTable.at("impter_68")[0], iTable.at("impter_69")[0], iTable.at("impter_70")[0], iTable.at("impter_71")[0], iTable.at("impter_72")[0], iTable.at("impter_73")[0], iTable.at("impter_74")[0], iTable.at("impter_75")[0], iTable.at("impter_76")[0], iTable.at("impter_77")[0], iTable.at("impter_78")[0], iTable.at("impter_79")[0], iTable.at("impter_80")[0], iTable.at("impter_81")[0], iTable.at("impter_82")[0], iTable.at("impter_83")[0], iTable.at("impter_84")[0], iTable.at("impter_85")[0], iTable.at("impter_86")[0], iTable.at("impter_87")[0], iTable.at("impter_88")[0], iTable.at("impter_89")[0], iTable.at("impter_90")[0], iTable.at("impter_91")[0], iTable.at("impter_92")[0], iTable.at("impter_93")[0], iTable.at("impter_94")[0], iTable.at("impter_95")[0], iTable.at("impter_96")[0], iTable.at("impter_97")[0], iTable.at("impter_98")[0], iTable.at("impter_99")[0], iTable.at("impter_100")[0], iTable.at("impter_101")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		std::vector<std::any> get_classes(){
			std::vector<std::any> lClasses = { 0, 1, 2, 3 };
	
			return lClasses;
		}
	
		namespace RF_Tree_0 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 8 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 11 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 12 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 14 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 16 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 18 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 19 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 23 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 25 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 26 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 27 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 29 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 31 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 33 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 34 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 35 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 37 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 40 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 41 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 42 ,  {0.0, 0.0, 0.0, 1.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_67 <= 0.7965335547924042) ? ( (scaler_72 <= 1.1692557334899902) ? ( (scaler_36 <= 0.49093183875083923) ? ( (scaler_43 <= -0.3719777762889862) ? ( (scaler_101 <= 0.27076490223407745) ? ( 5 ) : ( (scaler_58 <= -0.5597272515296936) ? ( 7 ) : ( 8 ) ) ) : ( (scaler_19 <= -0.11931706592440605) ? ( (scaler_92 <= 1.7966480255126953) ? ( 11 ) : ( 12 ) ) : ( (scaler_26 <= 0.29750609397888184) ? ( 14 ) : ( (scaler_6 <= -0.8602233827114105) ? ( 16 ) : ( (scaler_39 <= 0.599022388458252) ? ( 18 ) : ( 19 ) ) ) ) ) ) : ( (scaler_10 <= -0.566867783665657) ? ( (scaler_84 <= -0.7166108787059784) ? ( (scaler_6 <= -0.48370426893234253) ? ( 23 ) : ( (scaler_8 <= -0.9021297991275787) ? ( 25 ) : ( 26 ) ) ) : ( 27 ) ) : ( (scaler_2 <= 0.35060809552669525) ? ( 29 ) : ( (scaler_15 <= 0.010281674563884735) ? ( 31 ) : ( (scaler_75 <= 0.11741852760314941) ? ( 33 ) : ( 34 ) ) ) ) ) ) : ( 35 ) ) : ( (scaler_46 <= -0.6053683459758759) ? ( 37 ) : ( (scaler_68 <= 1.5641776323318481) ? ( (scaler_15 <= -2.1116737723350525) ? ( 40 ) : ( 41 ) ) : ( 42 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_0
		
	
		namespace RF_Tree_1 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 6 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 10 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 12 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 16 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 18 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 19 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 22 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 23 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 25 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 27 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 28 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 31 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 32 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 34 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 35 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 37 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 39 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 40 ,  {0.0, 1.0, 0.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_22 <= 1.0979300737380981) ? ( (scaler_40 <= -0.5129785239696503) ? ( (scaler_46 <= 0.8107681572437286) ? ( (scaler_52 <= -1.1516187489032745) ? ( 4 ) : ( (scaler_31 <= 0.6125394105911255) ? ( 6 ) : ( 7 ) ) ) : ( (scaler_6 <= 1.4727898836135864) ? ( (scaler_43 <= -0.23595745116472244) ? ( 10 ) : ( 11 ) ) : ( 12 ) ) ) : ( (scaler_63 <= 0.31361016631126404) ? ( (scaler_15 <= -0.5488353371620178) ? ( (scaler_96 <= -0.5830457434058189) ? ( 16 ) : ( (scaler_58 <= 0.945585623383522) ? ( 18 ) : ( 19 ) ) ) : ( (scaler_99 <= 0.7509371936321259) ? ( (scaler_39 <= -1.2610338926315308) ? ( 22 ) : ( 23 ) ) : ( (scaler_52 <= -1.1687172651290894) ? ( 25 ) : ( (scaler_90 <= -0.05257636308670044) ? ( 27 ) : ( 28 ) ) ) ) ) : ( (scaler_101 <= 0.3002613037824631) ? ( (scaler_52 <= -0.34721263498067856) ? ( 31 ) : ( 32 ) ) : ( (scaler_33 <= 1.2811552286148071) ? ( 34 ) : ( 35 ) ) ) ) ) : ( (scaler_96 <= 0.46513715386390686) ? ( 37 ) : ( (scaler_12 <= -0.05630597472190857) ? ( 39 ) : ( 40 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_1
		
	
		namespace RF_Tree_2 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 5 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 6 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 8 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 12 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 13 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 16 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 19 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 21 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 23 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 24 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 26 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 27 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 30 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 32 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 34 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 35 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 36 ,  {0.0, 0.0, 0.0, 1.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_58 <= -0.6488082110881805) ? ( (scaler_4 <= -0.6445685029029846) ? ( (scaler_58 <= -1.0639798641204834) ? ( (scaler_76 <= -1.3545773029327393) ? ( 4 ) : ( 5 ) ) : ( 6 ) ) : ( (scaler_96 <= -0.15265594236552715) ? ( 8 ) : ( (scaler_84 <= 0.40131741762161255) ? ( (scaler_72 <= 1.5276011526584625) ? ( 11 ) : ( 12 ) ) : ( 13 ) ) ) ) : ( (scaler_26 <= 0.7272655963897705) ? ( (scaler_98 <= -1.4607586860656738) ? ( 16 ) : ( (scaler_23 <= -0.35530896484851837) ? ( (scaler_91 <= 0.8290952444076538) ? ( 19 ) : ( (scaler_63 <= -0.055212363600730896) ? ( 21 ) : ( (scaler_43 <= 0.8139462023973465) ? ( 23 ) : ( 24 ) ) ) ) : ( (scaler_35 <= -1.0344991385936737) ? ( 26 ) : ( 27 ) ) ) ) : ( (scaler_43 <= 0.6386263966560364) ? ( (scaler_31 <= 0.19752147607505322) ? ( 30 ) : ( (scaler_9 <= -0.5716939102858305) ? ( 32 ) : ( (scaler_38 <= -0.01678154617547989) ? ( 34 ) : ( 35 ) ) ) ) : ( 36 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_2
		
	
		namespace RF_Tree_3 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 4 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 9 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 11 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 12 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 15 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 19 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 20 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 22 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 23 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 25 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 26 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 28 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 29 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 31 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 34 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 35 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 37 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 38 ,  {0.0, 1.0, 0.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_43 <= 0.6110901534557343) ? ( (scaler_44 <= -1.1558669209480286) ? ( (scaler_98 <= 0.3548256754875183) ? ( 3 ) : ( 4 ) ) : ( (scaler_71 <= 0.9061970114707947) ? ( (scaler_7 <= -0.009328611195087433) ? ( (scaler_47 <= -0.843595027923584) ? ( (scaler_12 <= -0.9550706446170807) ? ( 9 ) : ( (scaler_73 <= -0.08011087775230408) ? ( 11 ) : ( 12 ) ) ) : ( (scaler_53 <= 0.6999587267637253) ? ( 14 ) : ( 15 ) ) ) : ( (scaler_71 <= 0.27750562131404877) ? ( (scaler_27 <= -0.3183088153600693) ? ( (scaler_14 <= 0.9069939404726028) ? ( 19 ) : ( 20 ) ) : ( (scaler_16 <= -0.45005159080028534) ? ( 22 ) : ( 23 ) ) ) : ( (scaler_77 <= 1.339783951640129) ? ( 25 ) : ( 26 ) ) ) ) : ( (scaler_12 <= -1.879703164100647) ? ( 28 ) : ( 29 ) ) ) ) : ( (scaler_21 <= -0.2989218831062317) ? ( 31 ) : ( (scaler_55 <= 1.4288249015808105) ? ( (scaler_94 <= -0.5729318559169769) ? ( 34 ) : ( 35 ) ) : ( (scaler_89 <= 0.4816547706723213) ? ( 37 ) : ( 38 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_3
		
	
		namespace RF_Tree_4 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 6 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 9 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 12 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 13 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 16 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 21 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 22 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 24 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 26 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 28 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 29 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 31 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 32 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 35 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 36 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 38 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 39 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 40 ,  {0.0, 0.0, 1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_79 <= 1.4421339631080627) ? ( (scaler_93 <= -0.25820616632699966) ? ( (scaler_48 <= -0.40615902841091156) ? ( (scaler_10 <= 0.06153354048728943) ? ( (scaler_53 <= -1.374634563922882) ? ( 5 ) : ( 6 ) ) : ( 7 ) ) : ( (scaler_94 <= 0.05711609683930874) ? ( 9 ) : ( (scaler_8 <= 0.4178790124133229) ? ( (scaler_65 <= -1.586480736732483) ? ( 12 ) : ( 13 ) ) : ( (scaler_86 <= -0.318607822060585) ? ( 15 ) : ( 16 ) ) ) ) ) : ( (scaler_89 <= 0.35530678927898407) ? ( (scaler_85 <= 0.6470779180526733) ? ( (scaler_46 <= -0.3658737540245056) ? ( (scaler_46 <= -1.3069459795951843) ? ( 21 ) : ( 22 ) ) : ( (scaler_72 <= -0.5905920267105103) ? ( 24 ) : ( (scaler_83 <= -0.3331635072827339) ? ( 26 ) : ( (scaler_70 <= 1.0376483500003815) ? ( 28 ) : ( 29 ) ) ) ) ) : ( (scaler_89 <= -0.11537660285830498) ? ( 31 ) : ( 32 ) ) ) : ( (scaler_34 <= 0.34244856238365173) ? ( (scaler_47 <= 0.8967550694942474) ? ( 35 ) : ( 36 ) ) : ( (scaler_21 <= 0.5022618006914854) ? ( 38 ) : ( 39 ) ) ) ) ) : ( 40 );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_4
		
	
		namespace RF_Tree_5 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 5 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 6 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 13 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 14 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 15 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 19 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 20 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 21 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 22 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 24 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 25 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 28 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 31 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 33 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 34 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 36 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 37 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 40 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 41 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 42 ,  {0.0, 0.0, 0.0, 1.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_58 <= 0.14397476986050606) ? ( (scaler_49 <= -0.4779029041528702) ? ( (scaler_14 <= 1.2010706961154938) ? ( (scaler_40 <= -0.6170152723789215) ? ( 4 ) : ( 5 ) ) : ( 6 ) ) : ( (scaler_33 <= 0.18903983384370804) ? ( (scaler_84 <= -0.14867868274450302) ? ( (scaler_48 <= 1.300564467906952) ? ( (scaler_40 <= 0.4012645334005356) ? ( 11 ) : ( (scaler_77 <= -0.5982265472412109) ? ( 13 ) : ( 14 ) ) ) : ( 15 ) ) : ( (scaler_11 <= 0.8758622407913208) ? ( (scaler_73 <= 2.2561954259872437) ? ( (scaler_95 <= -0.8710227754199877) ? ( 19 ) : ( 20 ) ) : ( 21 ) ) : ( 22 ) ) ) : ( (scaler_92 <= 1.8976480960845947) ? ( 24 ) : ( 25 ) ) ) ) : ( (scaler_74 <= 1.0657700896263123) ? ( (scaler_32 <= -0.6841744035482407) ? ( 28 ) : ( (scaler_40 <= 0.313112810254097) ? ( (scaler_69 <= -0.16487523168325424) ? ( 31 ) : ( (scaler_71 <= -1.3945822715759277) ? ( 33 ) : ( 34 ) ) ) : ( (scaler_48 <= 0.1788032203912735) ? ( 36 ) : ( 37 ) ) ) ) : ( (scaler_17 <= -0.5196677297353745) ? ( (scaler_49 <= 1.9061558842658997) ? ( 40 ) : ( 41 ) ) : ( 42 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_5
		
	
		namespace RF_Tree_6 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 9 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 10 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 13 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 16 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 17 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 19 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 21 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 22 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 27 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 29 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 30 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 31 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 32 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 35 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 36 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 37 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 40 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 41 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 43 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 44 ,  {0.0, 1.0, 0.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_73 <= 0.7871303260326385) ? ( (scaler_93 <= 0.11153698712587357) ? ( (scaler_61 <= 0.022955945692956448) ? ( (scaler_35 <= 0.15233516320586205) ? ( (scaler_43 <= 0.6527561247348785) ? ( (scaler_89 <= 1.428905725479126) ? ( 6 ) : ( 7 ) ) : ( (scaler_20 <= -0.9370656609535217) ? ( 9 ) : ( 10 ) ) ) : ( 11 ) ) : ( (scaler_70 <= -1.1997234225273132) ? ( 13 ) : ( (scaler_99 <= -0.15620260871946812) ? ( (scaler_85 <= 1.1256376206874847) ? ( 16 ) : ( 17 ) ) : ( (scaler_93 <= -0.3499831259250641) ? ( 19 ) : ( (scaler_18 <= 0.9304079711437225) ? ( 21 ) : ( 22 ) ) ) ) ) ) : ( (scaler_66 <= 0.20471114292740822) ? ( (scaler_34 <= 1.1683342456817627) ? ( (scaler_3 <= 1.3044325709342957) ? ( (scaler_35 <= 0.5243019759654999) ? ( 27 ) : ( (scaler_58 <= 0.41144128516316414) ? ( 29 ) : ( 30 ) ) ) : ( 31 ) ) : ( 32 ) ) : ( (scaler_92 <= -1.112424910068512) ? ( (scaler_91 <= 0.3838666081428528) ? ( 35 ) : ( 36 ) ) : ( 37 ) ) ) ) : ( (scaler_94 <= 0.14230568148195744) ? ( (scaler_26 <= 1.7403743863105774) ? ( 40 ) : ( 41 ) ) : ( (scaler_71 <= 0.5872098952531815) ? ( 43 ) : ( 44 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_6
		
	
		namespace RF_Tree_7 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 1 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 3 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 7 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 8 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 12 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 13 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 14 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 17 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 19 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 20 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 21 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 24 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 26 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 27 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 31 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 32 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 34 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 35 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 37 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 39 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 41 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 42 ,  {0.0, 0.0, 1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_69 <= -1.6593583822250366) ? ( 1 ) : ( (scaler_46 <= -0.9107336401939392) ? ( 3 ) : ( (scaler_101 <= -0.14281565696001053) ? ( (scaler_11 <= -0.5615441799163818) ? ( (scaler_54 <= 0.5265167504549026) ? ( 7 ) : ( 8 ) ) : ( (scaler_75 <= -0.2009883150458336) ? ( (scaler_35 <= 0.3836611285805702) ? ( (scaler_19 <= 1.1744749546051025) ? ( 12 ) : ( 13 ) ) : ( 14 ) ) : ( (scaler_73 <= 0.6401767581701279) ? ( (scaler_72 <= 1.387821614742279) ? ( 17 ) : ( (scaler_62 <= -0.09136715531349182) ? ( 19 ) : ( 20 ) ) ) : ( 21 ) ) ) ) : ( (scaler_31 <= -0.4958994835615158) ? ( (scaler_53 <= 1.258840560913086) ? ( 24 ) : ( (scaler_77 <= 0.12949950248003006) ? ( 26 ) : ( 27 ) ) ) : ( (scaler_97 <= -0.33596180379390717) ? ( (scaler_72 <= -0.06965567916631699) ? ( (scaler_13 <= -1.1795259714126587) ? ( 31 ) : ( 32 ) ) : ( (scaler_42 <= 1.0617157220840454) ? ( 34 ) : ( 35 ) ) ) : ( (scaler_72 <= -0.21816140413284302) ? ( 37 ) : ( (scaler_73 <= 0.47587205469608307) ? ( 39 ) : ( (scaler_53 <= 0.31344323605298996) ? ( 41 ) : ( 42 ) ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_7
		
	
		namespace RF_Tree_8 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 6 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 8 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 9 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 16 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 17 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 18 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 19 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 20 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 24 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 25 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 30 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 32 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 33 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 34 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 35 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 37 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 38 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 41 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 42 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 45 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 46 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 47 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 48 ,  {0.0, 0.0, 1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_98 <= 1.4170069694519043) ? ( (scaler_21 <= -0.2660372257232666) ? ( (scaler_60 <= 0.1671047993004322) ? ( (scaler_81 <= 0.027602799236774445) ? ( (scaler_57 <= -0.43854647874832153) ? ( 5 ) : ( 6 ) ) : ( (scaler_82 <= 0.9272336363792419) ? ( 8 ) : ( 9 ) ) ) : ( (scaler_78 <= 0.9726506471633911) ? ( (scaler_32 <= 0.9117032289505005) ? ( (scaler_49 <= -0.08036493510007858) ? ( (scaler_34 <= -0.5410494059324265) ? ( 14 ) : ( (scaler_76 <= 0.40808913111686707) ? ( 16 ) : ( 17 ) ) ) : ( 18 ) ) : ( 19 ) ) : ( 20 ) ) ) : ( (scaler_98 <= 0.46213269233703613) ? ( (scaler_13 <= -0.3762647807598114) ? ( (scaler_64 <= -1.581550121307373) ? ( 24 ) : ( 25 ) ) : ( (scaler_31 <= 0.3706260919570923) ? ( (scaler_20 <= 1.075798511505127) ? ( (scaler_30 <= -0.38489048182964325) ? ( (scaler_25 <= -1.70578932762146) ? ( 30 ) : ( (scaler_11 <= 0.3450971059501171) ? ( 32 ) : ( 33 ) ) ) : ( 34 ) ) : ( 35 ) ) : ( (scaler_46 <= -0.07295272313058376) ? ( 37 ) : ( 38 ) ) ) ) : ( (scaler_46 <= 0.5553921759128571) ? ( (scaler_44 <= -0.7008251789957285) ? ( 41 ) : ( 42 ) ) : ( (scaler_48 <= 0.7714846432209015) ? ( (scaler_14 <= -0.9393031001091003) ? ( 45 ) : ( 46 ) ) : ( 47 ) ) ) ) ) : ( 48 );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_8
		
	
		namespace RF_Tree_9 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 7 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 8 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 10 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 12 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 13 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 14 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 15 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 19 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 23 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 24 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 25 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 27 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 28 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 30 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 31 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 34 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 35 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 37 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 39 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 40 ,  {0.0, 0.0, 0.0, 1.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_70 <= -0.4335441291332245) ? ( (scaler_73 <= 0.6207298338413239) ? ( (scaler_13 <= 1.3421086072921753) ? ( (scaler_37 <= 0.031055673956871033) ? ( (scaler_10 <= 0.06880080699920654) ? ( 5 ) : ( (scaler_43 <= -0.3917674720287323) ? ( 7 ) : ( 8 ) ) ) : ( (scaler_67 <= -0.8381438851356506) ? ( 10 ) : ( (scaler_31 <= -0.3260265365242958) ? ( 12 ) : ( 13 ) ) ) ) : ( 14 ) ) : ( 15 ) ) : ( (scaler_95 <= 0.3558342158794403) ? ( (scaler_10 <= 1.2079416513442993) ? ( (scaler_44 <= -1.0053091645240784) ? ( 19 ) : ( (scaler_36 <= 0.5469848364591599) ? ( (scaler_88 <= -1.2294015288352966) ? ( (scaler_54 <= 0.3019731119275093) ? ( 23 ) : ( 24 ) ) : ( 25 ) ) : ( (scaler_25 <= 0.9324668347835541) ? ( 27 ) : ( 28 ) ) ) ) : ( (scaler_3 <= -0.2944049797952175) ? ( 30 ) : ( 31 ) ) ) : ( (scaler_36 <= -0.5484323352575302) ? ( (scaler_35 <= 0.4405362978577614) ? ( 34 ) : ( 35 ) ) : ( (scaler_98 <= -0.46607425808906555) ? ( 37 ) : ( (scaler_93 <= 1.629445195198059) ? ( 39 ) : ( 40 ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_9
		
	
		namespace RF_Tree_10 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 8 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 10 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 13 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 15 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 17 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 19 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 20 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 21 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 22 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 26 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 28 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 29 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 32 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 33 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 34 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 36 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 37 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 39 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 40 ,  {0.0, 1.0, 0.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_75 <= 1.6296749114990234) ? ( (scaler_58 <= 0.21445880085229874) ? ( (scaler_96 <= 1.794742465019226) ? ( (scaler_53 <= 1.1616695523262024) ? ( (scaler_58 <= -0.22148633003234863) ? ( (scaler_56 <= 0.31032196432352066) ? ( (scaler_55 <= -1.7169973254203796) ? ( 7 ) : ( 8 ) ) : ( (scaler_35 <= -0.5260591208934784) ? ( 10 ) : ( (scaler_84 <= 0.9558098316192627) ? ( (scaler_7 <= 0.06626338139176369) ? ( 13 ) : ( 14 ) ) : ( 15 ) ) ) ) : ( (scaler_29 <= 0.2129690945148468) ? ( 17 ) : ( (scaler_53 <= -0.14496848499402404) ? ( 19 ) : ( 20 ) ) ) ) : ( 21 ) ) : ( 22 ) ) : ( (scaler_64 <= 0.27200452238321304) ? ( (scaler_55 <= 1.132223665714264) ? ( (scaler_35 <= 0.6439482569694519) ? ( 26 ) : ( (scaler_89 <= 0.09086251258850098) ? ( 28 ) : ( 29 ) ) ) : ( (scaler_21 <= -0.1383885182440281) ? ( (scaler_89 <= 0.12957966327667236) ? ( 32 ) : ( 33 ) ) : ( 34 ) ) ) : ( (scaler_25 <= -0.20875857025384903) ? ( 36 ) : ( 37 ) ) ) ) : ( (scaler_77 <= -1.3879718482494354) ? ( 39 ) : ( 40 ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_10
		
	
		namespace RF_Tree_11 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 6 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 9 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 11 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 14 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 16 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 21 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 23 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 24 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 26 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 28 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 30 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 31 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 33 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 34 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 35 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 38 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 39 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 41 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 43 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 44 ,  {0.0, 1.0, 0.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_26 <= 0.8569047152996063) ? ( (scaler_80 <= -0.25150900334119797) ? ( (scaler_69 <= -0.1627538800239563) ? ( (scaler_62 <= 1.1796503365039825) ? ( (scaler_92 <= 1.1492054462432861) ? ( 5 ) : ( 6 ) ) : ( 7 ) ) : ( (scaler_58 <= -0.9005370438098907) ? ( 9 ) : ( (scaler_99 <= -0.16914774104952812) ? ( 11 ) : ( (scaler_11 <= -0.36776629090309143) ? ( (scaler_85 <= -0.12271672487258911) ? ( 14 ) : ( 15 ) ) : ( 16 ) ) ) ) ) : ( (scaler_27 <= 0.7954211533069611) ? ( (scaler_71 <= 1.2743257284164429) ? ( (scaler_87 <= -0.8142471313476562) ? ( (scaler_14 <= -0.20303310453891754) ? ( 21 ) : ( (scaler_78 <= 0.4233367294073105) ? ( 23 ) : ( 24 ) ) ) : ( (scaler_62 <= -1.6201053261756897) ? ( 26 ) : ( (scaler_88 <= 1.0084651410579681) ? ( 28 ) : ( (scaler_93 <= -0.19382573664188385) ? ( 30 ) : ( 31 ) ) ) ) ) : ( (scaler_38 <= 0.30206620693206787) ? ( 33 ) : ( 34 ) ) ) : ( 35 ) ) ) : ( (scaler_16 <= -0.3785784840583801) ? ( (scaler_18 <= -0.2582567110657692) ? ( 38 ) : ( 39 ) ) : ( (scaler_59 <= 1.4834586381912231) ? ( 41 ) : ( (scaler_76 <= 0.5956143736839294) ? ( 43 ) : ( 44 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_11
		
	
		namespace RF_Tree_12 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 2 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 5 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 8 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 14 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 15 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 16 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 17 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 19 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 21 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 23 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 24 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 26 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 30 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 31 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 32 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 33 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 35 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 37 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 39 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 41 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 42 ,  {0.0, 1.0, 0.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_73 <= 0.5624892115592957) ? ( (scaler_100 <= -1.158751666545868) ? ( 2 ) : ( (scaler_35 <= -0.8736299574375153) ? ( (scaler_18 <= 0.5635712295770645) ? ( 5 ) : ( (scaler_97 <= -0.6418159306049347) ? ( 7 ) : ( 8 ) ) ) : ( (scaler_11 <= 0.09524992667138577) ? ( (scaler_90 <= 0.5267166495323181) ? ( (scaler_37 <= -0.30236524529755116) ? ( (scaler_87 <= -0.07472457177937031) ? ( (scaler_3 <= -0.9558314085006714) ? ( 14 ) : ( 15 ) ) : ( 16 ) ) : ( 17 ) ) : ( (scaler_31 <= -1.058430939912796) ? ( 19 ) : ( (scaler_15 <= 0.010281674563884735) ? ( 21 ) : ( (scaler_77 <= 0.3205074369907379) ? ( 23 ) : ( 24 ) ) ) ) ) : ( (scaler_95 <= -0.5330676436424255) ? ( 26 ) : ( (scaler_101 <= 1.3692479729652405) ? ( (scaler_55 <= 0.7873340547084808) ? ( (scaler_25 <= 1.4245666414499283) ? ( 30 ) : ( 31 ) ) : ( 32 ) ) : ( 33 ) ) ) ) ) ) : ( (scaler_97 <= -0.2764899656176567) ? ( 35 ) : ( (scaler_46 <= -1.0627056062221527) ? ( 37 ) : ( (scaler_22 <= -0.4162159189581871) ? ( 39 ) : ( (scaler_14 <= 0.08126914873719215) ? ( 41 ) : ( 42 ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_12
		
	
		namespace RF_Tree_13 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 4 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 7 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 8 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 10 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 11 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 16 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 17 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 19 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 20 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 22 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 24 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 26 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 27 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 31 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 32 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 33 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 36 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 37 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 40 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 42 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 43 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 45 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 47 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 48 ,  {1.0, 0.0, 0.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_70 <= -0.5234010368585587) ? ( (scaler_11 <= -0.9898052513599396) ? ( (scaler_90 <= 0.3800216317176819) ? ( 3 ) : ( 4 ) ) : ( (scaler_95 <= -0.9302509427070618) ? ( (scaler_62 <= 0.35216961801052094) ? ( 7 ) : ( 8 ) ) : ( (scaler_92 <= -2.230618417263031) ? ( 10 ) : ( 11 ) ) ) ) : ( (scaler_22 <= -0.10855905339121819) ? ( (scaler_30 <= -0.42813636362552643) ? ( (scaler_60 <= -0.8129291534423828) ? ( (scaler_21 <= 0.07264702953398228) ? ( 16 ) : ( 17 ) ) : ( (scaler_7 <= 0.8640504777431488) ? ( 19 ) : ( 20 ) ) ) : ( (scaler_94 <= 0.14230568148195744) ? ( 22 ) : ( (scaler_15 <= -0.48550230264663696) ? ( 24 ) : ( (scaler_33 <= -0.9510079324245453) ? ( 26 ) : ( 27 ) ) ) ) ) : ( (scaler_96 <= -0.2077876180410385) ? ( (scaler_21 <= 1.0489413142204285) ? ( (scaler_81 <= 0.5434593856334686) ? ( 31 ) : ( 32 ) ) : ( 33 ) ) : ( (scaler_64 <= -0.9078073501586914) ? ( (scaler_35 <= 0.13725053146481514) ? ( 36 ) : ( 37 ) ) : ( (scaler_88 <= -1.1944090723991394) ? ( (scaler_84 <= 0.17122295498847961) ? ( 40 ) : ( (scaler_63 <= 0.6103394031524658) ? ( 42 ) : ( 43 ) ) ) : ( (scaler_2 <= -1.929480254650116) ? ( 45 ) : ( (scaler_35 <= 0.9344494342803955) ? ( 47 ) : ( 48 ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_13
		
	
		namespace RF_Tree_14 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 2 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 8 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 9 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 15 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 16 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 17 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 18 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 22 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 24 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 25 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 27 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 28 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 29 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 32 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 33 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 36 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 37 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 40 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 41 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 42 ,  {0.0, 0.0, 0.0, 1.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_26 <= 0.4293629974126816) ? ( (scaler_22 <= -1.038477599620819) ? ( 2 ) : ( (scaler_44 <= 0.04775530658662319) ? ( (scaler_11 <= -0.22048809379339218) ? ( (scaler_57 <= -0.4165790434926748) ? ( (scaler_47 <= 1.4903289675712585) ? ( 7 ) : ( 8 ) ) : ( 9 ) ) : ( (scaler_101 <= 0.3357979850843549) ? ( 11 ) : ( (scaler_93 <= -0.19609680771827698) ? ( (scaler_20 <= 1.2655660829041153) ? ( (scaler_45 <= -0.5497507750988007) ? ( 15 ) : ( 16 ) ) : ( 17 ) ) : ( 18 ) ) ) ) : ( (scaler_19 <= -0.11931706592440605) ? ( (scaler_29 <= -0.089350501075387) ? ( (scaler_26 <= -0.1801261007785797) ? ( 22 ) : ( (scaler_51 <= 0.28970710188150406) ? ( 24 ) : ( 25 ) ) ) : ( (scaler_29 <= 1.396382451057434) ? ( 27 ) : ( 28 ) ) ) : ( 29 ) ) ) ) : ( (scaler_20 <= -0.2947124093770981) ? ( (scaler_33 <= -1.2980328798294067) ? ( 32 ) : ( 33 ) ) : ( (scaler_92 <= -0.6313028335571289) ? ( (scaler_95 <= -0.4686429351568222) ? ( 36 ) : ( 37 ) ) : ( (scaler_43 <= 0.6386263966560364) ? ( (scaler_22 <= -1.2999072670936584) ? ( 40 ) : ( 41 ) ) : ( 42 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_14
		
	
		namespace RF_Tree_15 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1, 2, 3 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 7 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 8 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 9 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 11 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 15 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 17 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 18 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 23 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 24 ,  {1.0, 0.0, 0.0, 0.0 }} ,
					{ 27 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 28 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 30 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 32 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 33 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 34 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 35 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 39 ,  {0.0, 0.0, 0.0, 1.0 }} ,
					{ 40 ,  {0.0, 0.0, 1.0, 0.0 }} ,
					{ 41 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 43 ,  {0.0, 1.0, 0.0, 0.0 }} ,
					{ 44 ,  {0.0, 0.0, 0.0, 1.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				int lNodeIndex = (scaler_43 <= 0.6110901534557343) ? ( (scaler_31 <= -0.09067592956125736) ? ( (scaler_11 <= -0.2336425483226776) ? ( (scaler_98 <= 1.5510608553886414) ? ( (scaler_63 <= -0.4211391657590866) ? ( (scaler_57 <= -0.617670401930809) ? ( 6 ) : ( 7 ) ) : ( 8 ) ) : ( 9 ) ) : ( (scaler_48 <= 0.0969921387732029) ? ( 11 ) : ( (scaler_10 <= 0.42943812906742096) ? ( (scaler_25 <= 1.1225743889808655) ? ( 14 ) : ( 15 ) ) : ( (scaler_4 <= -0.7524423766881227) ? ( 17 ) : ( 18 ) ) ) ) ) : ( (scaler_21 <= 0.7955797910690308) ? ( (scaler_63 <= 1.3082651495933533) ? ( (scaler_4 <= -0.6407898962497711) ? ( (scaler_52 <= -0.27990632504224777) ? ( 23 ) : ( 24 ) ) : ( (scaler_66 <= 0.181046050041914) ? ( (scaler_94 <= -0.9462020248174667) ? ( 27 ) : ( 28 ) ) : ( (scaler_11 <= -0.6770864129066467) ? ( 30 ) : ( (scaler_79 <= 1.043843388557434) ? ( 32 ) : ( 33 ) ) ) ) ) : ( 34 ) ) : ( 35 ) ) ) : ( (scaler_95 <= -0.29410015046596527) ? ( (scaler_77 <= 0.42626114189624786) ? ( (scaler_63 <= -0.02765606716275215) ? ( 39 ) : ( 40 ) ) : ( 41 ) ) : ( (scaler_94 <= -0.40685683488845825) ? ( 43 ) : ( 44 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1", "Score_2", "Score_3",
					"Proba_0", "Proba_1", "Proba_2", "Proba_3",
					"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any(),
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ],
					lNodeValue [ 2 ],
					lNodeValue [ 3 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_15
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_2", "scaler_3", "scaler_4", "scaler_5", "scaler_6", "scaler_7", "scaler_8", "scaler_9", "scaler_10", "scaler_11", "scaler_12", "scaler_13", "scaler_14", "scaler_15", "scaler_16", "scaler_17", "scaler_18", "scaler_19", "scaler_20", "scaler_21", "scaler_22", "scaler_23", "scaler_24", "scaler_25", "scaler_26", "scaler_27", "scaler_28", "scaler_29", "scaler_30", "scaler_31", "scaler_32", "scaler_33", "scaler_34", "scaler_35", "scaler_36", "scaler_37", "scaler_38", "scaler_39", "scaler_40", "scaler_41", "scaler_42", "scaler_43", "scaler_44", "scaler_45", "scaler_46", "scaler_47", "scaler_48", "scaler_49", "scaler_50", "scaler_51", "scaler_52", "scaler_53", "scaler_54", "scaler_55", "scaler_56", "scaler_57", "scaler_58", "scaler_59", "scaler_60", "scaler_61", "scaler_62", "scaler_63", "scaler_64", "scaler_65", "scaler_66", "scaler_67", "scaler_68", "scaler_69", "scaler_70", "scaler_71", "scaler_72", "scaler_73", "scaler_74", "scaler_75", "scaler_76", "scaler_77", "scaler_78", "scaler_79", "scaler_80", "scaler_81", "scaler_82", "scaler_83", "scaler_84", "scaler_85", "scaler_86", "scaler_87", "scaler_88", "scaler_89", "scaler_90", "scaler_91", "scaler_92", "scaler_93", "scaler_94", "scaler_95", "scaler_96", "scaler_97", "scaler_98", "scaler_99", "scaler_100", "scaler_101" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { 
				"Score_0", "Score_1", "Score_2", "Score_3",
				"Proba_0", "Proba_1", "Proba_2", "Proba_3",
				"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
				"Decision", "DecisionProba" };
	
			return lOutputs;
		}
	
		tTable compute_classification_scores(std::any scaler_2, std::any scaler_3, std::any scaler_4, std::any scaler_5, std::any scaler_6, std::any scaler_7, std::any scaler_8, std::any scaler_9, std::any scaler_10, std::any scaler_11, std::any scaler_12, std::any scaler_13, std::any scaler_14, std::any scaler_15, std::any scaler_16, std::any scaler_17, std::any scaler_18, std::any scaler_19, std::any scaler_20, std::any scaler_21, std::any scaler_22, std::any scaler_23, std::any scaler_24, std::any scaler_25, std::any scaler_26, std::any scaler_27, std::any scaler_28, std::any scaler_29, std::any scaler_30, std::any scaler_31, std::any scaler_32, std::any scaler_33, std::any scaler_34, std::any scaler_35, std::any scaler_36, std::any scaler_37, std::any scaler_38, std::any scaler_39, std::any scaler_40, std::any scaler_41, std::any scaler_42, std::any scaler_43, std::any scaler_44, std::any scaler_45, std::any scaler_46, std::any scaler_47, std::any scaler_48, std::any scaler_49, std::any scaler_50, std::any scaler_51, std::any scaler_52, std::any scaler_53, std::any scaler_54, std::any scaler_55, std::any scaler_56, std::any scaler_57, std::any scaler_58, std::any scaler_59, std::any scaler_60, std::any scaler_61, std::any scaler_62, std::any scaler_63, std::any scaler_64, std::any scaler_65, std::any scaler_66, std::any scaler_67, std::any scaler_68, std::any scaler_69, std::any scaler_70, std::any scaler_71, std::any scaler_72, std::any scaler_73, std::any scaler_74, std::any scaler_75, std::any scaler_76, std::any scaler_77, std::any scaler_78, std::any scaler_79, std::any scaler_80, std::any scaler_81, std::any scaler_82, std::any scaler_83, std::any scaler_84, std::any scaler_85, std::any scaler_86, std::any scaler_87, std::any scaler_88, std::any scaler_89, std::any scaler_90, std::any scaler_91, std::any scaler_92, std::any scaler_93, std::any scaler_94, std::any scaler_95, std::any scaler_96, std::any scaler_97, std::any scaler_98, std::any scaler_99, std::any scaler_100, std::any scaler_101) {
			auto lClasses = get_classes();
	
			std::vector<tTable> lTreeScores = { 
				RF_Tree_0::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_1::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_2::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_3::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_4::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_5::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_6::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_7::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_8::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_9::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_10::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_11::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_12::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_13::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_14::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101),
				RF_Tree_15::compute_classification_scores(scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101)
			};
	
			tTable lAggregatedTable = aggregate_rf_scores(lTreeScores, {"Proba", "Score"});
	
	
			tTable lTable = lAggregatedTable;
	
			int lBestClass = get_arg_max( lTable["Proba"] );
			auto lDecision = lClasses[lBestClass];
			lTable["Decision"] = { lDecision } ;
			lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
	
			recompute_log_probas( lTable );
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_classification_scores(iTable.at("scaler_2")[0], iTable.at("scaler_3")[0], iTable.at("scaler_4")[0], iTable.at("scaler_5")[0], iTable.at("scaler_6")[0], iTable.at("scaler_7")[0], iTable.at("scaler_8")[0], iTable.at("scaler_9")[0], iTable.at("scaler_10")[0], iTable.at("scaler_11")[0], iTable.at("scaler_12")[0], iTable.at("scaler_13")[0], iTable.at("scaler_14")[0], iTable.at("scaler_15")[0], iTable.at("scaler_16")[0], iTable.at("scaler_17")[0], iTable.at("scaler_18")[0], iTable.at("scaler_19")[0], iTable.at("scaler_20")[0], iTable.at("scaler_21")[0], iTable.at("scaler_22")[0], iTable.at("scaler_23")[0], iTable.at("scaler_24")[0], iTable.at("scaler_25")[0], iTable.at("scaler_26")[0], iTable.at("scaler_27")[0], iTable.at("scaler_28")[0], iTable.at("scaler_29")[0], iTable.at("scaler_30")[0], iTable.at("scaler_31")[0], iTable.at("scaler_32")[0], iTable.at("scaler_33")[0], iTable.at("scaler_34")[0], iTable.at("scaler_35")[0], iTable.at("scaler_36")[0], iTable.at("scaler_37")[0], iTable.at("scaler_38")[0], iTable.at("scaler_39")[0], iTable.at("scaler_40")[0], iTable.at("scaler_41")[0], iTable.at("scaler_42")[0], iTable.at("scaler_43")[0], iTable.at("scaler_44")[0], iTable.at("scaler_45")[0], iTable.at("scaler_46")[0], iTable.at("scaler_47")[0], iTable.at("scaler_48")[0], iTable.at("scaler_49")[0], iTable.at("scaler_50")[0], iTable.at("scaler_51")[0], iTable.at("scaler_52")[0], iTable.at("scaler_53")[0], iTable.at("scaler_54")[0], iTable.at("scaler_55")[0], iTable.at("scaler_56")[0], iTable.at("scaler_57")[0], iTable.at("scaler_58")[0], iTable.at("scaler_59")[0], iTable.at("scaler_60")[0], iTable.at("scaler_61")[0], iTable.at("scaler_62")[0], iTable.at("scaler_63")[0], iTable.at("scaler_64")[0], iTable.at("scaler_65")[0], iTable.at("scaler_66")[0], iTable.at("scaler_67")[0], iTable.at("scaler_68")[0], iTable.at("scaler_69")[0], iTable.at("scaler_70")[0], iTable.at("scaler_71")[0], iTable.at("scaler_72")[0], iTable.at("scaler_73")[0], iTable.at("scaler_74")[0], iTable.at("scaler_75")[0], iTable.at("scaler_76")[0], iTable.at("scaler_77")[0], iTable.at("scaler_78")[0], iTable.at("scaler_79")[0], iTable.at("scaler_80")[0], iTable.at("scaler_81")[0], iTable.at("scaler_82")[0], iTable.at("scaler_83")[0], iTable.at("scaler_84")[0], iTable.at("scaler_85")[0], iTable.at("scaler_86")[0], iTable.at("scaler_87")[0], iTable.at("scaler_88")[0], iTable.at("scaler_89")[0], iTable.at("scaler_90")[0], iTable.at("scaler_91")[0], iTable.at("scaler_92")[0], iTable.at("scaler_93")[0], iTable.at("scaler_94")[0], iTable.at("scaler_95")[0], iTable.at("scaler_96")[0], iTable.at("scaler_97")[0], iTable.at("scaler_98")[0], iTable.at("scaler_99")[0], iTable.at("scaler_100")[0], iTable.at("scaler_101")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { 
			"Score_0", "Score_1", "Score_2", "Score_3",
			"Proba_0", "Proba_1", "Proba_2", "Proba_3",
			"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
			"Decision", "DecisionProba" };

		return lOutputs;
	}

	tTable compute_classification_scores(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
		auto lClasses = get_classes();

		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable = lTable_model;

		int lBestClass = get_arg_max( lTable["Proba"] );
		auto lDecision = lClasses[lBestClass];
		lTable["Decision"] = { lDecision } ;
		lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };

		recompute_log_probas( lTable );

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_classification_scores(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/FourClass_100.csv");
	return 0;
}
