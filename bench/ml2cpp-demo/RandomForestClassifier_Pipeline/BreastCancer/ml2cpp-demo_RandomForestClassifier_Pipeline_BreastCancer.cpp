// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : RandomForestClassifier_Pipeline
// Dataset : BreastCancer

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_RandomForestClassifier_Pipeline_BreastCancer.exe ml2cpp-demo_RandomForestClassifier_Pipeline_BreastCancer.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	std::vector<std::any> get_classes(){
		std::vector<std::any> lClasses = { 0, 1 };

		return lClasses;
	}

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11", "imputer_output_12", "imputer_output_13", "imputer_output_14", "imputer_output_15", "imputer_output_16", "imputer_output_17", "imputer_output_18", "imputer_output_19", "imputer_output_20", "imputer_output_21", "imputer_output_22", "imputer_output_23", "imputer_output_24", "imputer_output_25", "imputer_output_26", "imputer_output_27", "imputer_output_28", "imputer_output_29", "imputer_output_30", "imputer_output_31" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29) {
	
			tTable lTable;
	
			lTable["imputer_output_2"] = { ((Feature_0 == std::any()) ?  ( 14.077712087912083 ) : ( Feature_0)) };
			lTable["imputer_output_3"] = { ((Feature_1 == std::any()) ?  ( 19.03905494505495 ) : ( Feature_1)) };
			lTable["imputer_output_4"] = { ((Feature_2 == std::any()) ?  ( 91.66178021978023 ) : ( Feature_2)) };
			lTable["imputer_output_5"] = { ((Feature_3 == std::any()) ?  ( 650.9676923076925 ) : ( Feature_3)) };
			lTable["imputer_output_6"] = { ((Feature_4 == std::any()) ?  ( 0.09642184615384615 ) : ( Feature_4)) };
			lTable["imputer_output_7"] = { ((Feature_5 == std::any()) ?  ( 0.10441613186813191 ) : ( Feature_5)) };
			lTable["imputer_output_8"] = { ((Feature_6 == std::any()) ?  ( 0.08826232681318694 ) : ( Feature_6)) };
			lTable["imputer_output_9"] = { ((Feature_7 == std::any()) ?  ( 0.048516399999999966 ) : ( Feature_7)) };
			lTable["imputer_output_10"] = { ((Feature_8 == std::any()) ?  ( 0.1815885714285715 ) : ( Feature_8)) };
			lTable["imputer_output_11"] = { ((Feature_9 == std::any()) ?  ( 0.06294030769230768 ) : ( Feature_9)) };
			lTable["imputer_output_12"] = { ((Feature_10 == std::any()) ?  ( 0.4099173626373627 ) : ( Feature_10)) };
			lTable["imputer_output_13"] = { ((Feature_11 == std::any()) ?  ( 1.2170694505494501 ) : ( Feature_11)) };
			lTable["imputer_output_14"] = { ((Feature_12 == std::any()) ?  ( 2.90524901098901 ) : ( Feature_12)) };
			lTable["imputer_output_15"] = { ((Feature_13 == std::any()) ?  ( 40.87988571428572 ) : ( Feature_13)) };
			lTable["imputer_output_16"] = { ((Feature_14 == std::any()) ?  ( 0.007055971428571433 ) : ( Feature_14)) };
			lTable["imputer_output_17"] = { ((Feature_15 == std::any()) ?  ( 0.025567830769230776 ) : ( Feature_15)) };
			lTable["imputer_output_18"] = { ((Feature_16 == std::any()) ?  ( 0.03199925626373623 ) : ( Feature_16)) };
			lTable["imputer_output_19"] = { ((Feature_17 == std::any()) ?  ( 0.011972369230769237 ) : ( Feature_17)) };
			lTable["imputer_output_20"] = { ((Feature_18 == std::any()) ?  ( 0.020896200000000014 ) : ( Feature_18)) };
			lTable["imputer_output_21"] = { ((Feature_19 == std::any()) ?  ( 0.0038465518681318647 ) : ( Feature_19)) };
			lTable["imputer_output_22"] = { ((Feature_20 == std::any()) ?  ( 16.17776483516484 ) : ( Feature_20)) };
			lTable["imputer_output_23"] = { ((Feature_21 == std::any()) ?  ( 25.26505494505494 ) : ( Feature_21)) };
			lTable["imputer_output_24"] = { ((Feature_22 == std::any()) ?  ( 106.68156043956041 ) : ( Feature_22)) };
			lTable["imputer_output_25"] = { ((Feature_23 == std::any()) ?  ( 870.8639560439567 ) : ( Feature_23)) };
			lTable["imputer_output_26"] = { ((Feature_24 == std::any()) ?  ( 0.1318275604395605 ) : ( Feature_24)) };
			lTable["imputer_output_27"] = { ((Feature_25 == std::any()) ?  ( 0.24991806593406582 ) : ( Feature_25)) };
			lTable["imputer_output_28"] = { ((Feature_26 == std::any()) ?  ( 0.2654615934065932 ) : ( Feature_26)) };
			lTable["imputer_output_29"] = { ((Feature_27 == std::any()) ?  ( 0.11348798021978022 ) : ( Feature_27)) };
			lTable["imputer_output_30"] = { ((Feature_28 == std::any()) ?  ( 0.2897881318681319 ) : ( Feature_28)) };
			lTable["imputer_output_31"] = { ((Feature_29 == std::any()) ?  ( 0.08364145054945049 ) : ( Feature_29)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11", "imputer_output_12", "imputer_output_13", "imputer_output_14", "imputer_output_15", "imputer_output_16", "imputer_output_17", "imputer_output_18", "imputer_output_19", "imputer_output_20", "imputer_output_21", "imputer_output_22", "imputer_output_23", "imputer_output_24", "imputer_output_25", "imputer_output_26", "imputer_output_27", "imputer_output_28", "imputer_output_29", "imputer_output_30", "imputer_output_31" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any imputer_output_2, std::any imputer_output_3, std::any imputer_output_4, std::any imputer_output_5, std::any imputer_output_6, std::any imputer_output_7, std::any imputer_output_8, std::any imputer_output_9, std::any imputer_output_10, std::any imputer_output_11, std::any imputer_output_12, std::any imputer_output_13, std::any imputer_output_14, std::any imputer_output_15, std::any imputer_output_16, std::any imputer_output_17, std::any imputer_output_18, std::any imputer_output_19, std::any imputer_output_20, std::any imputer_output_21, std::any imputer_output_22, std::any imputer_output_23, std::any imputer_output_24, std::any imputer_output_25, std::any imputer_output_26, std::any imputer_output_27, std::any imputer_output_28, std::any imputer_output_29, std::any imputer_output_30, std::any imputer_output_31) {
	
			tTable lTable;
	
			lTable["scaler_output_2"] = { ( ( imputer_output_2 - 14.077712087912083 ) / 3.5451492987000814 ) };
			lTable["scaler_output_3"] = { ( ( imputer_output_3 - 19.03905494505495 ) / 4.1622971504218205 ) };
			lTable["scaler_output_4"] = { ( ( imputer_output_4 - 91.66178021978023 ) / 24.503971943475648 ) };
			lTable["scaler_output_5"] = { ( ( imputer_output_5 - 650.9676923076925 ) / 355.702823163891 ) };
			lTable["scaler_output_6"] = { ( ( imputer_output_6 - 0.09642184615384615 ) / 0.014197819663072304 ) };
			lTable["scaler_output_7"] = { ( ( imputer_output_7 - 0.10441613186813191 ) / 0.05340369466973436 ) };
			lTable["scaler_output_8"] = { ( ( imputer_output_8 - 0.08826232681318694 ) / 0.08191200162631372 ) };
			lTable["scaler_output_9"] = { ( ( imputer_output_9 - 0.048516399999999966 ) / 0.039373117396730245 ) };
			lTable["scaler_output_10"] = { ( ( imputer_output_10 - 0.1815885714285715 ) / 0.02779005832874822 ) };
			lTable["scaler_output_11"] = { ( ( imputer_output_11 - 0.06294030769230768 ) / 0.007019354586172742 ) };
			lTable["scaler_output_12"] = { ( ( imputer_output_12 - 0.4099173626373627 ) / 0.29120400836827026 ) };
			lTable["scaler_output_13"] = { ( ( imputer_output_13 - 1.2170694505494501 ) / 0.5363896396336265 ) };
			lTable["scaler_output_14"] = { ( ( imputer_output_14 - 2.90524901098901 ) / 2.1424944299808626 ) };
			lTable["scaler_output_15"] = { ( ( imputer_output_15 - 40.87988571428572 ) / 48.224754479577314 ) };
			lTable["scaler_output_16"] = { ( ( imputer_output_16 - 0.007055971428571433 ) / 0.002863651656569403 ) };
			lTable["scaler_output_17"] = { ( ( imputer_output_17 - 0.025567830769230776 ) / 0.017947013631032318 ) };
			lTable["scaler_output_18"] = { ( ( imputer_output_18 - 0.03199925626373623 ) / 0.03166493672136351 ) };
			lTable["scaler_output_19"] = { ( ( imputer_output_19 - 0.011972369230769237 ) / 0.006392005589396607 ) };
			lTable["scaler_output_20"] = { ( ( imputer_output_20 - 0.020896200000000014 ) / 0.008582910079869234 ) };
			lTable["scaler_output_21"] = { ( ( imputer_output_21 - 0.0038465518681318647 ) / 0.0027436075866190575 ) };
			lTable["scaler_output_22"] = { ( ( imputer_output_22 - 16.17776483516484 ) / 4.817458816201383 ) };
			lTable["scaler_output_23"] = { ( ( imputer_output_23 - 25.26505494505494 ) / 5.92332412866667 ) };
			lTable["scaler_output_24"] = { ( ( imputer_output_24 - 106.68156043956041 ) / 33.70385837605481 ) };
			lTable["scaler_output_25"] = { ( ( imputer_output_25 - 870.8639560439567 ) / 566.9950559872813 ) };
			lTable["scaler_output_26"] = { ( ( imputer_output_26 - 0.1318275604395605 ) / 0.02274820752228878 ) };
			lTable["scaler_output_27"] = { ( ( imputer_output_27 - 0.24991806593406582 ) / 0.15246893644279044 ) };
			lTable["scaler_output_28"] = { ( ( imputer_output_28 - 0.2654615934065932 ) / 0.20692568678204093 ) };
			lTable["scaler_output_29"] = { ( ( imputer_output_29 - 0.11348798021978022 ) / 0.06638141278520703 ) };
			lTable["scaler_output_30"] = { ( ( imputer_output_30 - 0.2897881318681319 ) / 0.06220470665051894 ) };
			lTable["scaler_output_31"] = { ( ( imputer_output_31 - 0.08364145054945049 ) / 0.01706514580694785 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("imputer_output_2")[0], iTable.at("imputer_output_3")[0], iTable.at("imputer_output_4")[0], iTable.at("imputer_output_5")[0], iTable.at("imputer_output_6")[0], iTable.at("imputer_output_7")[0], iTable.at("imputer_output_8")[0], iTable.at("imputer_output_9")[0], iTable.at("imputer_output_10")[0], iTable.at("imputer_output_11")[0], iTable.at("imputer_output_12")[0], iTable.at("imputer_output_13")[0], iTable.at("imputer_output_14")[0], iTable.at("imputer_output_15")[0], iTable.at("imputer_output_16")[0], iTable.at("imputer_output_17")[0], iTable.at("imputer_output_18")[0], iTable.at("imputer_output_19")[0], iTable.at("imputer_output_20")[0], iTable.at("imputer_output_21")[0], iTable.at("imputer_output_22")[0], iTable.at("imputer_output_23")[0], iTable.at("imputer_output_24")[0], iTable.at("imputer_output_25")[0], iTable.at("imputer_output_26")[0], iTable.at("imputer_output_27")[0], iTable.at("imputer_output_28")[0], iTable.at("imputer_output_29")[0], iTable.at("imputer_output_30")[0], iTable.at("imputer_output_31")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		std::vector<std::any> get_classes(){
			std::vector<std::any> lClasses = { 0, 1 };
	
			return lClasses;
		}
	
		namespace RF_Tree_0 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {1.0, 0.0 }} ,
					{ 5 ,  {0.0, 1.0 }} ,
					{ 9 ,  {1.0, 0.0 }} ,
					{ 10 ,  {0.0, 1.0 }} ,
					{ 11 ,  {1.0, 0.0 }} ,
					{ 12 ,  {1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 16 ,  {1.0, 0.0 }} ,
					{ 17 ,  {0.0, 1.0 }} ,
					{ 21 ,  {1.0, 0.0 }} ,
					{ 22 ,  {0.0, 1.0 }} ,
					{ 23 ,  {1.0, 0.0 }} ,
					{ 25 ,  {0.0, 1.0 }} ,
					{ 28 ,  {1.0, 0.0 }} ,
					{ 29 ,  {0.0, 1.0 }} ,
					{ 30 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_24 <= 0.19191985577344894) ? ( (scaler_output_28 <= 0.4873170107603073) ? ( (scaler_output_31 <= -1.6710346937179565) ? ( 3 ) : ( (scaler_output_15 <= -0.04717257060110569) ? ( 5 ) : ( (scaler_output_8 <= 0.35205674171447754) ? ( (scaler_output_26 <= 0.9131462275981903) ? ( (scaler_output_21 <= -0.12941057980060577) ? ( 9 ) : ( 10 ) ) : ( 11 ) ) : ( 12 ) ) ) ) : ( (scaler_output_27 <= 0.7688906192779541) ? ( 14 ) : ( (scaler_output_8 <= 2.054493486881256) ? ( 16 ) : ( 17 ) ) ) ) : ( (scaler_output_8 <= -0.27800963819026947) ? ( (scaler_output_3 <= 0.4086553752422333) ? ( (scaler_output_20 <= -1.0341713726520538) ? ( 21 ) : ( 22 ) ) : ( 23 ) ) : ( (scaler_output_5 <= -0.2844163328409195) ? ( 25 ) : ( (scaler_output_2 <= 0.18540485948324203) ? ( (scaler_output_16 <= 0.9203383922576904) ? ( 28 ) : ( 29 ) ) : ( 30 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_0
		
	
		namespace RF_Tree_1 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {1.0, 0.0 }} ,
					{ 7 ,  {0.0, 1.0 }} ,
					{ 9 ,  {0.0, 1.0 }} ,
					{ 10 ,  {1.0, 0.0 }} ,
					{ 12 ,  {1.0, 0.0 }} ,
					{ 13 ,  {0.0, 1.0 }} ,
					{ 15 ,  {0.0, 1.0 }} ,
					{ 16 ,  {1.0, 0.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 20 ,  {0.0, 1.0 }} ,
					{ 22 ,  {1.0, 0.0 }} ,
					{ 23 ,  {0.0, 1.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 28 ,  {1.0, 0.0 }} ,
					{ 29 ,  {0.0, 1.0 }} ,
					{ 30 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_24 <= 0.14296403527259827) ? ( (scaler_output_27 <= 1.7218716144561768) ? ( (scaler_output_31 <= -1.6710346937179565) ? ( 3 ) : ( (scaler_output_4 <= 0.30028682947158813) ? ( (scaler_output_15 <= 0.12763391807675362) ? ( (scaler_output_15 <= -0.13198378682136536) ? ( 7 ) : ( (scaler_output_26 <= 1.3703250586986542) ? ( 9 ) : ( 10 ) ) ) : ( (scaler_output_19 <= 0.6214998960494995) ? ( 12 ) : ( 13 ) ) ) : ( (scaler_output_15 <= -0.32814860343933105) ? ( 15 ) : ( 16 ) ) ) ) : ( 17 ) ) : ( (scaler_output_22 <= 0.2308759093284607) ? ( (scaler_output_26 <= 0.2691394276916981) ? ( 20 ) : ( (scaler_output_5 <= 0.18310877308249474) ? ( 22 ) : ( 23 ) ) ) : ( (scaler_output_8 <= -0.3172590881586075) ? ( (scaler_output_19 <= -0.3436119109392166) ? ( (scaler_output_22 <= 0.35853657126426697) ? ( 27 ) : ( 28 ) ) : ( 29 ) ) : ( 30 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_1
		
	
		namespace RF_Tree_2 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 1.0 }} ,
					{ 8 ,  {1.0, 0.0 }} ,
					{ 9 ,  {0.0, 1.0 }} ,
					{ 11 ,  {1.0, 0.0 }} ,
					{ 12 ,  {0.0, 1.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 18 ,  {0.0, 1.0 }} ,
					{ 20 ,  {0.0, 1.0 }} ,
					{ 21 ,  {1.0, 0.0 }} ,
					{ 26 ,  {1.0, 0.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 28 ,  {0.0, 1.0 }} ,
					{ 29 ,  {1.0, 0.0 }} ,
					{ 30 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_24 <= 0.19191985577344894) ? ( (scaler_output_26 <= 1.447254240512848) ? ( (scaler_output_3 <= 1.4717702269554138) ? ( (scaler_output_27 <= 1.2253770232200623) ? ( (scaler_output_12 <= 0.01779727390385233) ? ( 5 ) : ( (scaler_output_22 <= -0.003687594784423709) ? ( (scaler_output_27 <= -1.0988996624946594) ? ( 8 ) : ( 9 ) ) : ( (scaler_output_24 <= 0.0806566271930933) ? ( 11 ) : ( 12 ) ) ) ) : ( (scaler_output_7 <= 0.7056415677070618) ? ( 14 ) : ( 15 ) ) ) : ( (scaler_output_20 <= -1.2851352095603943) ? ( 17 ) : ( 18 ) ) ) : ( (scaler_output_24 <= -0.36261605471372604) ? ( 20 ) : ( 21 ) ) ) : ( (scaler_output_24 <= 0.43521544337272644) ? ( (scaler_output_11 <= -0.38896848261356354) ? ( (scaler_output_21 <= -0.740467369556427) ? ( (scaler_output_20 <= -0.9229037463665009) ? ( 26 ) : ( 27 ) ) : ( 28 ) ) : ( 29 ) ) : ( 30 ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_2
		
	
		namespace RF_Tree_3 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {0.0, 1.0 }} ,
					{ 6 ,  {0.0, 1.0 }} ,
					{ 8 ,  {1.0, 0.0 }} ,
					{ 9 ,  {0.0, 1.0 }} ,
					{ 11 ,  {1.0, 0.0 }} ,
					{ 13 ,  {0.0, 1.0 }} ,
					{ 14 ,  {1.0, 0.0 }} ,
					{ 16 ,  {0.0, 1.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 19 ,  {0.0, 1.0 }} ,
					{ 23 ,  {1.0, 0.0 }} ,
					{ 24 ,  {0.0, 1.0 }} ,
					{ 25 ,  {1.0, 0.0 }} ,
					{ 28 ,  {0.0, 1.0 }} ,
					{ 29 ,  {1.0, 0.0 }} ,
					{ 30 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_5 <= 0.045493898913264275) ? ( (scaler_output_29 <= 0.5086065232753754) ? ( (scaler_output_29 <= 0.1327482983469963) ? ( (scaler_output_13 <= 1.6414011120796204) ? ( 4 ) : ( (scaler_output_24 <= -0.6406257748603821) ? ( 6 ) : ( (scaler_output_7 <= -0.8397570848464966) ? ( 8 ) : ( 9 ) ) ) ) : ( (scaler_output_11 <= -0.8790420293807983) ? ( 11 ) : ( (scaler_output_22 <= 0.12501096352934837) ? ( 13 ) : ( 14 ) ) ) ) : ( (scaler_output_23 <= -0.06585067510604858) ? ( 16 ) : ( 17 ) ) ) : ( (scaler_output_12 <= -0.5731973350048065) ? ( 19 ) : ( (scaler_output_29 <= -0.15422962605953217) ? ( (scaler_output_30 <= -0.7634170353412628) ? ( (scaler_output_8 <= -0.5733265727758408) ? ( 23 ) : ( 24 ) ) : ( 25 ) ) : ( (scaler_output_25 <= 0.04768303316086531) ? ( (scaler_output_19 <= 0.340680368244648) ? ( 28 ) : ( 29 ) ) : ( 30 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_3
		
	
		namespace RF_Tree_4 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 1.0 }} ,
					{ 7 ,  {0.0, 1.0 }} ,
					{ 8 ,  {1.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0 }} ,
					{ 12 ,  {1.0, 0.0 }} ,
					{ 13 ,  {1.0, 0.0 }} ,
					{ 15 ,  {0.0, 1.0 }} ,
					{ 16 ,  {1.0, 0.0 }} ,
					{ 18 ,  {0.0, 1.0 }} ,
					{ 21 ,  {1.0, 0.0 }} ,
					{ 22 ,  {0.0, 1.0 }} ,
					{ 23 ,  {1.0, 0.0 }} ,
					{ 27 ,  {1.0, 0.0 }} ,
					{ 28 ,  {0.0, 1.0 }} ,
					{ 29 ,  {1.0, 0.0 }} ,
					{ 31 ,  {0.0, 1.0 }} ,
					{ 32 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_4 <= 0.3317102938890457) ? ( (scaler_output_8 <= 0.33740687370300293) ? ( (scaler_output_15 <= 0.18704324215650558) ? ( (scaler_output_29 <= 0.4837501645088196) ? ( (scaler_output_24 <= 0.17560124397277832) ? ( 5 ) : ( (scaler_output_26 <= 0.38343413546681404) ? ( 7 ) : ( 8 ) ) ) : ( (scaler_output_19 <= 0.0426518339663744) ? ( (scaler_output_24 <= 0.199337400496006) ? ( 11 ) : ( 12 ) ) : ( 13 ) ) ) : ( (scaler_output_27 <= -0.13726118206977844) ? ( 15 ) : ( 16 ) ) ) : ( (scaler_output_25 <= -0.6182839870452881) ? ( 18 ) : ( (scaler_output_26 <= 0.13286496046930552) ? ( (scaler_output_8 <= 0.5425050258636475) ? ( 21 ) : ( 22 ) ) : ( 23 ) ) ) ) : ( (scaler_output_17 <= -0.4044032543897629) ? ( (scaler_output_5 <= 0.553502231836319) ? ( (scaler_output_26 <= -0.4847661256790161) ? ( 27 ) : ( 28 ) ) : ( 29 ) ) : ( (scaler_output_26 <= -1.9275171756744385) ? ( 31 ) : ( 32 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_4
		
	
		namespace RF_Tree_5 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 1.0 }} ,
					{ 7 ,  {0.0, 1.0 }} ,
					{ 9 ,  {0.0, 1.0 }} ,
					{ 10 ,  {1.0, 0.0 }} ,
					{ 12 ,  {1.0, 0.0 }} ,
					{ 13 ,  {0.0, 1.0 }} ,
					{ 14 ,  {1.0, 0.0 }} ,
					{ 16 ,  {0.0, 1.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 20 ,  {1.0, 0.0 }} ,
					{ 22 ,  {1.0, 0.0 }} ,
					{ 23 ,  {0.0, 1.0 }} ,
					{ 26 ,  {1.0, 0.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 29 ,  {1.0, 0.0 }} ,
					{ 31 ,  {0.0, 1.0 }} ,
					{ 32 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_27 <= 0.623287171125412) ? ( (scaler_output_8 <= 0.18785615265369415) ? ( (scaler_output_15 <= 0.2688476890325546) ? ( (scaler_output_22 <= 0.13538987934589386) ? ( (scaler_output_22 <= -0.0898325964808464) ? ( 5 ) : ( (scaler_output_29 <= 0.32256047427654266) ? ( 7 ) : ( (scaler_output_16 <= -0.3587976321578026) ? ( 9 ) : ( 10 ) ) ) ) : ( (scaler_output_18 <= -0.3303103595972061) ? ( 12 ) : ( 13 ) ) ) : ( 14 ) ) : ( (scaler_output_22 <= 0.01499445317313075) ? ( 16 ) : ( 17 ) ) ) : ( (scaler_output_15 <= -0.4233279377222061) ? ( (scaler_output_7 <= 0.05119248968549073) ? ( 20 ) : ( (scaler_output_17 <= -0.0784437358379364) ? ( 22 ) : ( 23 ) ) ) : ( (scaler_output_24 <= -0.2473473697900772) ? ( (scaler_output_22 <= -0.5018755495548248) ? ( 26 ) : ( 27 ) ) : ( (scaler_output_17 <= 2.606961250305176) ? ( 29 ) : ( (scaler_output_27 <= 1.1276522278785706) ? ( 31 ) : ( 32 ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_5
		
	
		namespace RF_Tree_6 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 1.0 }} ,
					{ 7 ,  {0.0, 1.0 }} ,
					{ 8 ,  {1.0, 0.0 }} ,
					{ 10 ,  {1.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0 }} ,
					{ 13 ,  {1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 16 ,  {0.0, 1.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 22 ,  {0.0, 1.0 }} ,
					{ 23 ,  {1.0, 0.0 }} ,
					{ 24 ,  {0.0, 1.0 }} ,
					{ 25 ,  {1.0, 0.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 29 ,  {0.0, 1.0 }} ,
					{ 30 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_8 <= 0.059608763083815575) ? ( (scaler_output_24 <= 0.1770847588777542) ? ( (scaler_output_27 <= 0.8193927109241486) ? ( (scaler_output_12 <= 0.8007535338401794) ? ( (scaler_output_29 <= 0.32256047427654266) ? ( 5 ) : ( (scaler_output_12 <= -0.1999195171520114) ? ( 7 ) : ( 8 ) ) ) : ( (scaler_output_10 <= -0.5735350102186203) ? ( 10 ) : ( 11 ) ) ) : ( (scaler_output_15 <= -0.5410060882568359) ? ( 13 ) : ( 14 ) ) ) : ( (scaler_output_23 <= 0.10297343600541353) ? ( 16 ) : ( 17 ) ) ) : ( (scaler_output_26 <= 0.17023053020238876) ? ( (scaler_output_15 <= 0.30264776945114136) ? ( (scaler_output_17 <= 0.2920914515852928) ? ( (scaler_output_22 <= -0.04105169349350035) ? ( 22 ) : ( 23 ) ) : ( 24 ) ) : ( 25 ) ) : ( (scaler_output_4 <= -0.9903202950954437) ? ( 27 ) : ( (scaler_output_13 <= -1.3951973915100098) ? ( 29 ) : ( 30 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_6
		
	
		namespace RF_Tree_7 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.0, 1.0 }} ,
					{ 8 ,  {0.0, 1.0 }} ,
					{ 9 ,  {1.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0 }} ,
					{ 12 ,  {1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 16 ,  {1.0, 0.0 }} ,
					{ 18 ,  {0.0, 1.0 }} ,
					{ 20 ,  {1.0, 0.0 }} ,
					{ 21 ,  {0.0, 1.0 }} ,
					{ 25 ,  {0.0, 1.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 28 ,  {1.0, 0.0 }} ,
					{ 30 ,  {0.0, 1.0 }} ,
					{ 31 ,  {1.0, 0.0 }} ,
					{ 34 ,  {0.0, 1.0 }} ,
					{ 35 ,  {1.0, 0.0 }} ,
					{ 36 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_14 <= -0.004550308512989432) ? ( (scaler_output_5 <= 0.14782651141285896) ? ( (scaler_output_30 <= 1.2685835361480713) ? ( (scaler_output_31 <= 2.1452232599258423) ? ( (scaler_output_8 <= 0.3905126452445984) ? ( (scaler_output_7 <= 0.43131600320339203) ? ( 6 ) : ( (scaler_output_28 <= -0.033884599804878235) ? ( 8 ) : ( 9 ) ) ) : ( (scaler_output_5 <= -0.41514342091977596) ? ( 11 ) : ( 12 ) ) ) : ( (scaler_output_19 <= -0.04026423394680023) ? ( 14 ) : ( 15 ) ) ) : ( 16 ) ) : ( (scaler_output_3 <= -0.9259441792964935) ? ( 18 ) : ( (scaler_output_16 <= -0.17738590016961098) ? ( 20 ) : ( 21 ) ) ) ) : ( (scaler_output_15 <= 0.16672172397375107) ? ( (scaler_output_5 <= -0.017620586091652513) ? ( (scaler_output_27 <= 0.5963964760303497) ? ( 25 ) : ( (scaler_output_30 <= 0.8200644254684448) ? ( 27 ) : ( 28 ) ) ) : ( (scaler_output_28 <= 0.02531540021300316) ? ( 30 ) : ( 31 ) ) ) : ( (scaler_output_5 <= -0.2890550345182419) ? ( (scaler_output_13 <= 1.3226029872894287) ? ( 34 ) : ( 35 ) ) : ( 36 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_7
		
	
		namespace RF_Tree_8 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 1.0 }} ,
					{ 7 ,  {0.0, 1.0 }} ,
					{ 8 ,  {1.0, 0.0 }} ,
					{ 10 ,  {1.0, 0.0 }} ,
					{ 11 ,  {0.0, 1.0 }} ,
					{ 13 ,  {0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 16 ,  {0.0, 1.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 19 ,  {0.0, 1.0 }} ,
					{ 23 ,  {0.0, 1.0 }} ,
					{ 24 ,  {1.0, 0.0 }} ,
					{ 25 ,  {1.0, 0.0 }} ,
					{ 26 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_9 <= 0.18498916178941727) ? ( (scaler_output_25 <= 0.309766449034214) ? ( (scaler_output_9 <= 0.07374574989080429) ? ( (scaler_output_12 <= 0.6645946800708771) ? ( (scaler_output_28 <= 0.5474835336208344) ? ( 5 ) : ( (scaler_output_24 <= 0.010931670665740967) ? ( 7 ) : ( 8 ) ) ) : ( (scaler_output_10 <= 0.9449936151504517) ? ( 10 ) : ( 11 ) ) ) : ( (scaler_output_22 <= -0.18428073078393936) ? ( 13 ) : ( (scaler_output_5 <= 0.21262779273092747) ? ( 15 ) : ( 16 ) ) ) ) : ( 17 ) ) : ( (scaler_output_8 <= -0.21147483587265015) ? ( 19 ) : ( (scaler_output_4 <= 0.456588014960289) ? ( (scaler_output_23 <= 0.11141464486718178) ? ( (scaler_output_24 <= 0.3595564514398575) ? ( 23 ) : ( 24 ) ) : ( 25 ) ) : ( 26 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_8
		
	
		namespace RF_Tree_9 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.0, 1.0 }} ,
					{ 8 ,  {0.0, 1.0 }} ,
					{ 9 ,  {1.0, 0.0 }} ,
					{ 11 ,  {1.0, 0.0 }} ,
					{ 12 ,  {0.0, 1.0 }} ,
					{ 13 ,  {1.0, 0.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 18 ,  {0.0, 1.0 }} ,
					{ 21 ,  {1.0, 0.0 }} ,
					{ 22 ,  {0.0, 1.0 }} ,
					{ 23 ,  {1.0, 0.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 29 ,  {0.0, 1.0 }} ,
					{ 30 ,  {1.0, 0.0 }} ,
					{ 31 ,  {1.0, 0.0 }} ,
					{ 33 ,  {0.0, 1.0 }} ,
					{ 34 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_7 <= 0.35828734934329987) ? ( (scaler_output_15 <= 0.15998245030641556) ? ( (scaler_output_22 <= 0.35853657126426697) ? ( (scaler_output_8 <= 0.2879635691642761) ? ( (scaler_output_27 <= 0.8305425047874451) ? ( (scaler_output_14 <= -0.005483800312504172) ? ( 6 ) : ( (scaler_output_9 <= 0.021679766476154327) ? ( 8 ) : ( 9 ) ) ) : ( (scaler_output_18 <= 0.43188920617103577) ? ( 11 ) : ( 12 ) ) ) : ( 13 ) ) : ( (scaler_output_12 <= -0.29263801127672195) ? ( 15 ) : ( (scaler_output_7 <= -0.6210456490516663) ? ( 17 ) : ( 18 ) ) ) ) : ( (scaler_output_24 <= -0.42700037360191345) ? ( (scaler_output_8 <= -0.7236708402633667) ? ( 21 ) : ( 22 ) ) : ( 23 ) ) ) : ( (scaler_output_24 <= -0.018738520331680775) ? ( (scaler_output_29 <= 0.7195089161396027) ? ( (scaler_output_29 <= 0.46115347743034363) ? ( 27 ) : ( (scaler_output_30 <= 0.42379216849803925) ? ( 29 ) : ( 30 ) ) ) : ( 31 ) ) : ( (scaler_output_20 <= -1.2042768597602844) ? ( 33 ) : ( 34 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_9
		
	
		namespace RF_Tree_10 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.0, 1.0 }} ,
					{ 7 ,  {1.0, 0.0 }} ,
					{ 8 ,  {0.0, 1.0 }} ,
					{ 9 ,  {0.0, 1.0 }} ,
					{ 11 ,  {1.0, 0.0 }} ,
					{ 12 ,  {0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 16 ,  {0.0, 1.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 19 ,  {0.0, 1.0 }} ,
					{ 22 ,  {1.0, 0.0 }} ,
					{ 23 ,  {0.0, 1.0 }} ,
					{ 24 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_5 <= 0.219234436750412) ? ( (scaler_output_29 <= 0.5176452100276947) ? ( (scaler_output_13 <= 1.6414011120796204) ? ( (scaler_output_31 <= -0.885222464799881) ? ( (scaler_output_15 <= -0.16371022909879684) ? ( 5 ) : ( (scaler_output_10 <= 0.12635555863380432) ? ( 7 ) : ( 8 ) ) ) : ( 9 ) ) : ( (scaler_output_13 <= 1.7802926898002625) ? ( 11 ) : ( 12 ) ) ) : ( (scaler_output_23 <= -0.2169482633471489) ? ( (scaler_output_8 <= 2.0233625173568726) ? ( 15 ) : ( 16 ) ) : ( 17 ) ) ) : ( (scaler_output_24 <= 0.19043634086847305) ? ( 19 ) : ( (scaler_output_7 <= -0.35767434537410736) ? ( (scaler_output_11 <= -0.7237571179866791) ? ( 22 ) : ( 23 ) ) : ( 24 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_10
		
	
		namespace RF_Tree_11 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {0.0, 1.0 }} ,
					{ 6 ,  {0.0, 1.0 }} ,
					{ 7 ,  {1.0, 0.0 }} ,
					{ 8 ,  {1.0, 0.0 }} ,
					{ 12 ,  {1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 16 ,  {1.0, 0.0 }} ,
					{ 17 ,  {0.0, 1.0 }} ,
					{ 18 ,  {1.0, 0.0 }} ,
					{ 19 ,  {1.0, 0.0 }} ,
					{ 23 ,  {1.0, 0.0 }} ,
					{ 24 ,  {0.0, 1.0 }} ,
					{ 26 ,  {1.0, 0.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 28 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_24 <= 0.1815352886915207) ? ( (scaler_output_8 <= 0.20006437599658966) ? ( (scaler_output_15 <= 0.16786222159862518) ? ( (scaler_output_28 <= 0.5027815103530884) ? ( 4 ) : ( (scaler_output_15 <= -0.5723178088665009) ? ( 6 ) : ( 7 ) ) ) : ( 8 ) ) : ( (scaler_output_26 <= 1.130745768547058) ? ( (scaler_output_20 <= 3.2889543771743774) ? ( (scaler_output_11 <= -0.7244694232940674) ? ( 12 ) : ( (scaler_output_2 <= 0.3264426440000534) ? ( 14 ) : ( (scaler_output_11 <= -0.16530119627714157) ? ( 16 ) : ( 17 ) ) ) ) : ( 18 ) ) : ( 19 ) ) ) : ( (scaler_output_25 <= 0.3300488144159317) ? ( (scaler_output_28 <= 0.30295130610466003) ? ( (scaler_output_4 <= 0.24703014642000198) ? ( 23 ) : ( 24 ) ) : ( (scaler_output_21 <= 1.415999948978424) ? ( 26 ) : ( 27 ) ) ) : ( 28 ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_11
		
	
		namespace RF_Tree_12 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {0.0, 1.0 }} ,
					{ 4 ,  {1.0, 0.0 }} ,
					{ 7 ,  {0.0, 1.0 }} ,
					{ 9 ,  {1.0, 0.0 }} ,
					{ 10 ,  {0.0, 1.0 }} ,
					{ 12 ,  {1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 19 ,  {1.0, 0.0 }} ,
					{ 20 ,  {0.0, 1.0 }} ,
					{ 22 ,  {0.0, 1.0 }} ,
					{ 25 ,  {0.0, 1.0 }} ,
					{ 26 ,  {1.0, 0.0 }} ,
					{ 27 ,  {1.0, 0.0 }} ,
					{ 29 ,  {0.0, 1.0 }} ,
					{ 31 ,  {0.0, 1.0 }} ,
					{ 32 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_4 <= -0.04863620549440384) ? ( (scaler_output_17 <= -0.18180354684591293) ? ( (scaler_output_25 <= -0.055139731615781784) ? ( 3 ) : ( 4 ) ) : ( (scaler_output_28 <= 0.8352679908275604) ? ( (scaler_output_2 <= -0.11077448353171349) ? ( 7 ) : ( (scaler_output_14 <= 0.4986015260219574) ? ( 9 ) : ( 10 ) ) ) : ( (scaler_output_18 <= 0.3821496218442917) ? ( 12 ) : ( (scaler_output_20 <= 3.2889543771743774) ? ( 14 ) : ( 15 ) ) ) ) ) : ( (scaler_output_2 <= 0.33208416402339935) ? ( (scaler_output_9 <= 0.06269760243594646) ? ( (scaler_output_20 <= -1.1541772484779358) ? ( 19 ) : ( 20 ) ) : ( (scaler_output_28 <= -0.017936842516064644) ? ( 22 ) : ( (scaler_output_13 <= -0.8249030709266663) ? ( (scaler_output_31 <= 0.317814439535141) ? ( 25 ) : ( 26 ) ) : ( 27 ) ) ) ) : ( (scaler_output_14 <= -0.5284723341464996) ? ( 29 ) : ( (scaler_output_31 <= -1.3610461354255676) ? ( 31 ) : ( 32 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_12
		
	
		namespace RF_Tree_13 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.0, 1.0 }} ,
					{ 7 ,  {1.0, 0.0 }} ,
					{ 10 ,  {0.0, 1.0 }} ,
					{ 12 ,  {0.0, 1.0 }} ,
					{ 13 ,  {1.0, 0.0 }} ,
					{ 15 ,  {0.0, 1.0 }} ,
					{ 16 ,  {1.0, 0.0 }} ,
					{ 17 ,  {1.0, 0.0 }} ,
					{ 19 ,  {0.0, 1.0 }} ,
					{ 20 ,  {1.0, 0.0 }} ,
					{ 22 ,  {1.0, 0.0 }} ,
					{ 23 ,  {0.0, 1.0 }} ,
					{ 27 ,  {0.0, 1.0 }} ,
					{ 28 ,  {1.0, 0.0 }} ,
					{ 29 ,  {1.0, 0.0 }} ,
					{ 31 ,  {0.0, 1.0 }} ,
					{ 34 ,  {0.0, 1.0 }} ,
					{ 36 ,  {1.0, 0.0 }} ,
					{ 37 ,  {0.0, 1.0 }} ,
					{ 38 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_8 <= 0.059608763083815575) ? ( (scaler_output_5 <= 0.553502231836319) ? ( (scaler_output_22 <= 0.35853657126426697) ? ( (scaler_output_12 <= 1.932090938091278) ? ( (scaler_output_11 <= -1.2280769348144531) ? ( (scaler_output_10 <= -0.8811990022659302) ? ( 6 ) : ( 7 ) ) : ( (scaler_output_14 <= 0.4878663569688797) ? ( (scaler_output_28 <= 0.5474835336208344) ? ( 10 ) : ( (scaler_output_5 <= -0.32742976397275925) ? ( 12 ) : ( 13 ) ) ) : ( (scaler_output_9 <= -0.42215098440647125) ? ( 15 ) : ( 16 ) ) ) ) : ( 17 ) ) : ( (scaler_output_31 <= -0.6991707235574722) ? ( 19 ) : ( 20 ) ) ) : ( (scaler_output_13 <= 0.9478753954172134) ? ( 22 ) : ( 23 ) ) ) : ( (scaler_output_25 <= -0.18538778275251389) ? ( (scaler_output_30 <= 0.9181277453899384) ? ( (scaler_output_29 <= 1.0629785656929016) ? ( 27 ) : ( 28 ) ) : ( 29 ) ) : ( (scaler_output_9 <= -0.15890029445290565) ? ( 31 ) : ( (scaler_output_9 <= 0.3884274512529373) ? ( (scaler_output_21 <= -0.5584078133106232) ? ( 34 ) : ( (scaler_output_16 <= 0.9137035012245178) ? ( 36 ) : ( 37 ) ) ) : ( 38 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_13
		
	
		namespace RF_Tree_14 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {0.0, 1.0 }} ,
					{ 5 ,  {1.0, 0.0 }} ,
					{ 6 ,  {0.0, 1.0 }} ,
					{ 7 ,  {1.0, 0.0 }} ,
					{ 10 ,  {0.0, 1.0 }} ,
					{ 11 ,  {1.0, 0.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 17 ,  {0.0, 1.0 }} ,
					{ 20 ,  {0.0, 1.0 }} ,
					{ 21 ,  {1.0, 0.0 }} ,
					{ 22 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_28 <= 0.011783972848206758) ? ( (scaler_output_25 <= 0.3300488144159317) ? ( (scaler_output_2 <= 0.25451338291168213) ? ( 3 ) : ( (scaler_output_18 <= -0.43436865508556366) ? ( 5 ) : ( 6 ) ) ) : ( 7 ) ) : ( (scaler_output_25 <= -0.2587570250034332) ? ( (scaler_output_11 <= 4.595820426940918) ? ( 10 ) : ( 11 ) ) : ( (scaler_output_26 <= -0.7880867421627045) ? ( (scaler_output_8 <= 0.5254135131835938) ? ( 14 ) : ( 15 ) ) : ( (scaler_output_9 <= -0.15890029445290565) ? ( 17 ) : ( (scaler_output_24 <= 0.22752408683300018) ? ( (scaler_output_29 <= 0.04763410985469818) ? ( 20 ) : ( 21 ) ) : ( 22 ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_14
		
	
		namespace RF_Tree_15 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.0, 1.0 }} ,
					{ 7 ,  {1.0, 0.0 }} ,
					{ 8 ,  {0.0, 1.0 }} ,
					{ 9 ,  {0.0, 1.0 }} ,
					{ 12 ,  {0.0, 1.0 }} ,
					{ 14 ,  {0.0, 1.0 }} ,
					{ 15 ,  {1.0, 0.0 }} ,
					{ 16 ,  {1.0, 0.0 }} ,
					{ 20 ,  {0.0, 1.0 }} ,
					{ 21 ,  {1.0, 0.0 }} ,
					{ 22 ,  {1.0, 0.0 }} ,
					{ 25 ,  {0.0, 1.0 }} ,
					{ 26 ,  {1.0, 0.0 }} ,
					{ 27 ,  {1.0, 0.0 }} ,
					{ 29 ,  {0.0, 1.0 }} ,
					{ 32 ,  {0.0, 1.0 }} ,
					{ 33 ,  {1.0, 0.0 }} ,
					{ 36 ,  {1.0, 0.0 }} ,
					{ 37 ,  {0.0, 1.0 }} ,
					{ 38 ,  {1.0, 0.0 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				int lNodeIndex = (scaler_output_2 <= 0.27425867319107056) ? ( (scaler_output_31 <= 1.0230530500411987) ? ( (scaler_output_28 <= 0.25389987230300903) ? ( (scaler_output_31 <= -0.8485981225967407) ? ( (scaler_output_24 <= -0.6335049271583557) ? ( (scaler_output_12 <= 0.4647348001599312) ? ( 6 ) : ( 7 ) ) : ( 8 ) ) : ( 9 ) ) : ( (scaler_output_15 <= -0.1439071223139763) ? ( (scaler_output_30 <= 0.5845517218112946) ? ( 12 ) : ( (scaler_output_23 <= 0.1105705201625824) ? ( 14 ) : ( 15 ) ) ) : ( 16 ) ) ) : ( (scaler_output_22 <= -0.30052459239959717) ? ( (scaler_output_20 <= 3.2889543771743774) ? ( (scaler_output_26 <= 3.1858526468276978) ? ( 20 ) : ( 21 ) ) : ( 22 ) ) : ( (scaler_output_23 <= -0.025332890450954437) ? ( (scaler_output_31 <= 2.3854790925979614) ? ( 25 ) : ( 26 ) ) : ( 27 ) ) ) ) : ( (scaler_output_13 <= -1.3000240921974182) ? ( 29 ) : ( (scaler_output_28 <= -0.32553519308567047) ? ( (scaler_output_3 <= 0.5335863828659058) ? ( 32 ) : ( 33 ) ) : ( (scaler_output_14 <= -0.5382739901542664) ? ( (scaler_output_4 <= 0.4280212074518204) ? ( 36 ) : ( 37 ) ) : ( 38 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1",
					"Decision", "DecisionProba" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
				auto lClasses = get_classes();
		
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					std::any(),
					std::any() 
				} ;
				lTable["Proba"] = { 
					lNodeValue [ 0 ],
					lNodeValue [ 1 ] 
				} ;
				int lBestClass = get_arg_max( lTable["Proba"] );
				auto lDecision = lClasses[lBestClass];
				lTable["Decision"] = { lDecision } ;
				lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
		
				return lTable;
			}
		
		} // eof namespace RF_Tree_15
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14", "scaler_output_15", "scaler_output_16", "scaler_output_17", "scaler_output_18", "scaler_output_19", "scaler_output_20", "scaler_output_21", "scaler_output_22", "scaler_output_23", "scaler_output_24", "scaler_output_25", "scaler_output_26", "scaler_output_27", "scaler_output_28", "scaler_output_29", "scaler_output_30", "scaler_output_31" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { 
				"Score_0", "Score_1",
				"Proba_0", "Proba_1",
				"LogProba_0", "LogProba_1",
				"Decision", "DecisionProba" };
	
			return lOutputs;
		}
	
		tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14, std::any scaler_output_15, std::any scaler_output_16, std::any scaler_output_17, std::any scaler_output_18, std::any scaler_output_19, std::any scaler_output_20, std::any scaler_output_21, std::any scaler_output_22, std::any scaler_output_23, std::any scaler_output_24, std::any scaler_output_25, std::any scaler_output_26, std::any scaler_output_27, std::any scaler_output_28, std::any scaler_output_29, std::any scaler_output_30, std::any scaler_output_31) {
			auto lClasses = get_classes();
	
			std::vector<tTable> lTreeScores = { 
				RF_Tree_0::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_1::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_2::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_3::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_4::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_5::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_6::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_7::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_8::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_9::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_10::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_11::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_12::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_13::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_14::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31),
				RF_Tree_15::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31)
			};
	
			tTable lAggregatedTable = aggregate_rf_scores(lTreeScores, {"Proba", "Score"});
	
	
			tTable lTable = lAggregatedTable;
	
			int lBestClass = get_arg_max( lTable["Proba"] );
			auto lDecision = lClasses[lBestClass];
			lTable["Decision"] = { lDecision } ;
			lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
	
			recompute_log_probas( lTable );
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0], iTable.at("scaler_output_15")[0], iTable.at("scaler_output_16")[0], iTable.at("scaler_output_17")[0], iTable.at("scaler_output_18")[0], iTable.at("scaler_output_19")[0], iTable.at("scaler_output_20")[0], iTable.at("scaler_output_21")[0], iTable.at("scaler_output_22")[0], iTable.at("scaler_output_23")[0], iTable.at("scaler_output_24")[0], iTable.at("scaler_output_25")[0], iTable.at("scaler_output_26")[0], iTable.at("scaler_output_27")[0], iTable.at("scaler_output_28")[0], iTable.at("scaler_output_29")[0], iTable.at("scaler_output_30")[0], iTable.at("scaler_output_31")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { 
			"Score_0", "Score_1",
			"Proba_0", "Proba_1",
			"LogProba_0", "LogProba_1",
			"Decision", "DecisionProba" };

		return lOutputs;
	}

	tTable compute_classification_scores(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29) {
		auto lClasses = get_classes();

		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable = lTable_model;

		int lBestClass = get_arg_max( lTable["Proba"] );
		auto lDecision = lClasses[lBestClass];
		lTable["Decision"] = { lDecision } ;
		lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };

		recompute_log_probas( lTable );

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_classification_scores(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/BreastCancer.csv");
	return 0;
}
