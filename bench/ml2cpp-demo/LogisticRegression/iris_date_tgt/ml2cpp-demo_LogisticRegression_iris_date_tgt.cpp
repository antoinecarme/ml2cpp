// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : LogisticRegression
// Dataset : iris_date_tgt

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_LogisticRegression_iris_date_tgt.exe ml2cpp-demo_LogisticRegression_iris_date_tgt.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	std::vector<std::any> get_classes(){
		std::vector<std::any> lClasses = { 1789-07-14T00:00:00.000000000, 1789-08-14T00:00:00.000000000, 1789-09-14T00:00:00.000000000 };

		return lClasses;
	}

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { 
			"Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000",
			"Proba_1789-07-14T00:00:00.000000000", "Proba_1789-08-14T00:00:00.000000000", "Proba_1789-09-14T00:00:00.000000000",
			"LogProba_1789-07-14T00:00:00.000000000", "LogProba_1789-08-14T00:00:00.000000000", "LogProba_1789-09-14T00:00:00.000000000",
			"Decision", "DecisionProba" };

		return lOutputs;
	}

	tTable compute_classification_scores(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3) {
		auto lClasses = get_classes();

		std::any score_0 = -0.4170178217803156 * Feature_0 + 0.9733086653190239 * Feature_1 + -2.3901176179364887 * Feature_2 + -1.000487817247251 * Feature_3 + 9.24974950512474;

		std::any logistic_0 = logistic(score_0);

		std::any score_1 = 0.5485236863598083 * Feature_0 + -0.316877141045624 * Feature_1 + -0.2808300994270634 * Feature_2 + -0.8362312573863184 * Feature_3 + 2.172778683781014;

		std::any logistic_1 = logistic(score_1);

		std::any score_2 = -0.13150586457949467 * Feature_0 + -0.6564315242734007 * Feature_1 + 2.6709477173635237 * Feature_2 + 1.8367190746335778 * Feature_3 + -11.422528188906076;

		std::any logistic_2 = logistic(score_2);

		tTable lScores = tTable();

		lScores["Score"] = { 
			score_0,
			score_1,
			score_2
		};

		tTable lSoftMaxTable = soft_max(lScores, false);


		tTable lTable = lSoftMaxTable;

		int lBestClass = get_arg_max( lTable["Proba"] );
		auto lDecision = lClasses[lBestClass];
		lTable["Decision"] = { lDecision } ;
		lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };

		recompute_log_probas( lTable );

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_classification_scores(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/iris_date_tgt.csv");
	return 0;
}
