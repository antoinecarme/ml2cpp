// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : SVR_sigmoid
// Dataset : freidman3

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_SVR_sigmoid_freidman3.exe ml2cpp-demo_SVR_sigmoid_freidman3.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	std::vector<std::any> lProblem_data_dual = { 
	 0.1 , 0.1 , -0.1 , 0.1 , 0.1 , -0.1 , -0.1 , -0.1 , 0.1 , -0.1 , -0.1 , -0.1 , -0.1 , -0.1 , 0.1 , 0.1 , 0.1 , 0.1 , -0.1 , 0.1 , 0.1 , -0.1 , 0.1 , -0.1 , -0.1 , -0.1 , 0.1 , 0.1 , -0.1 , 0.1 , -0.1 , 0.1 , -0.1 , -0.1 , 0.1 , 0.1 , -0.1 , 0.1 , 0.1 , -0.1 , 0.1 , -0.1 ,};
	

	std::vector<std::vector<std::any> > lProblem_data_sv = { 
	 { 54.38834102865398, 1647.6623950430826, 0.5671724252803599, 3.09911625029609 },
	 { 20.562836726629964, 1667.9257595716754, 0.4895624792598544, 7.371731407367831 },
	 { 40.442330919192635, 551.0711911042478, 0.03866274947464787, 4.578076302455036 },
	 { 48.69438373960177, 1664.2552781105514, 0.31144836807627496, 4.632624341589297 },
	 { 44.88554870850716, 1627.38160654522, 0.8255815423347828, 10.063448888684775 },
	 { 50.620296436646505, 412.32368442868733, 0.10447729455745358, 2.8853801455282126 },
	 { 82.50361197375535, 515.4406205692956, 0.533834716927703, 4.786980133087125 },
	 { 99.96662363577734, 209.47236840414524, 0.7902072202716324, 1.8022959941601326 },
	 { 6.292766107513681, 1199.6652317213232, 0.8040097090382655, 5.490646907281224 },
	 { 62.911872734919996, 456.23422619927044, 0.054305830277497025, 10.085281642538757 },
	 { 38.96738973035813, 1162.8273648517609, 0.013518045508856713, 6.780775777362427 },
	 { 61.677300727460114, 819.5815430545475, 0.19176235240070616, 8.475580701491157 },
	 { 14.354024845151192, 1727.5875493321003, 0.005807417979881824, 3.518415193774599 },
	 { 87.46073175788041, 658.8446347865661, 0.30293111693014707, 3.766979759593161 },
	 { 5.555683279187528, 1271.8773900420756, 0.26523222910347455, 2.1959763981915064 },
	 { 60.58860696643238, 1469.843035787915, 0.6089512168171621, 2.3367948536223095 },
	 { 9.844209111159174, 1641.9469469028431, 0.7075346096235595, 5.986957496499917 },
	 { 35.204122625647635, 1709.6137391765267, 0.5384102305994837, 3.8037750547337037 },
	 { 96.45390231426003, 990.2254318826166, 0.18310123438213766, 1.134096666285749 },
	 { 69.85214811522404, 1639.1260281796144, 0.4296756544509407, 7.464140755060015 },
	 { 39.22420371373826, 1480.0362298674247, 0.979651504500836, 10.93827839877219 },
	 { 49.3998858198411, 243.93515665851513, 0.41374778042760696, 6.0193130914022674 },
	 { 15.326716261726414, 180.5390310694927, 0.7104185591645422, 9.612317521518237 },
	 { 75.72356153727631, 979.5390758373206, 0.3441595308948491, 6.689958461053408 },
	 { 91.36045636770356, 303.1369476103539, 0.5593024980266833, 3.665227001304319 },
	 { 72.53396569676332, 405.5391157928623, 0.5709666936221692, 6.973867159743634 },
	 { 45.60940687108932, 1252.3574286270157, 0.7470342432713207, 1.6312457787809178 },
	 { 28.195299489394664, 1658.7104507269821, 0.6353041988507154, 8.577711433319472 },
	 { 78.24559083961029, 711.0171497771485, 0.21965300342994898, 9.625089118836724 },
	 { 11.920432983287899, 1644.054573840725, 0.044505714773144245, 1.9788585131261551 },
	 { 68.93874612467783, 576.2510600295009, 0.23995122524602408, 7.786878726514889 },
	 { 43.578536957972446, 1663.9708446048005, 0.41510811578335083, 3.0852135693019114 },
	 { 76.49456162036661, 219.86925500897718, 0.7651752581595906, 6.7113407760374235 },
	 { 41.58280576983873, 435.19550661562505, 0.09995386118122851, 2.4819345970599818 },
	 { 0.14719983074734655, 264.70492824904755, 0.4977162892084863, 8.753034147728435 },
	 { 1.5021310253122144, 126.64944659397821, 0.3404027104874394, 9.813039096423058 },
	 { 16.01146852626628, 598.7469724076399, 0.058327505702267746, 10.06589099949547 },
	 { 49.065466008392974, 1317.9965671708464, 0.7514738660771196, 2.3145116809009814 },
	 { 89.79240360827384, 1393.0059875788913, 0.8484215372640762, 9.34953230770002 },
	 { 48.144031373730044, 761.0600872268959, 0.307483000073309, 1.151070185174692 },
	 { 79.10109600325073, 1315.2821922174621, 0.9863618489333056, 5.911474588008384 },
	 { 18.02682544461097, 861.2889920462572, 0.10216025778626836, 6.7984751522819336 },
	};
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3) {
		std::vector<std::any> inputs = { Feature_0, Feature_1, Feature_2, Feature_3 };

		std::any lDotProduct = sigmoid_kernel( lProblem_data_dual, lProblem_data_sv, inputs, 1.159796590742935e-06,0.0 ) + 0.9721567367462156;


		tTable lTable;

		std::any  lEstimator = lDotProduct;
		lTable[ "Estimator" ] = { lEstimator };

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/freidman3.csv");
	return 0;
}
