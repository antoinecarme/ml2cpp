// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : RandomForestRegressor
// Dataset : RandomReg_100

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_RandomForestRegressor_RandomReg_100.exe ml2cpp-demo_RandomForestRegressor_RandomReg_100.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	namespace EXT_SubModel_0 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {-361.1632498 }} ,
				{ 8 ,  {-327.50301874 }} ,
				{ 9 ,  {-338.54994316 }} ,
				{ 12 ,  {-280.96508601 }} ,
				{ 13 ,  {-257.97922489 }} ,
				{ 15 ,  {-306.85826974 }} ,
				{ 16 ,  {-310.56333873 }} ,
				{ 18 ,  {-430.73224202 }} ,
				{ 19 ,  {-436.89308609 }} ,
				{ 22 ,  {-200.33739348 }} ,
				{ 23 ,  {-197.78121613 }} ,
				{ 25 ,  {-167.53786194 }} ,
				{ 26 ,  {-172.78010698 }} ,
				{ 31 ,  {39.44300012 }} ,
				{ 32 ,  {-4.90459143 }} ,
				{ 34 ,  {-54.81786632 }} ,
				{ 35 ,  {-51.54063841 }} ,
				{ 39 ,  {136.92680038 }} ,
				{ 41 ,  {111.49818731 }} ,
				{ 42 ,  {114.45423223 }} ,
				{ 43 ,  {75.607022 }} ,
				{ 44 ,  {183.77184322 }} ,
				{ 50 ,  {-87.98512255 }} ,
				{ 51 ,  {-86.11645147 }} ,
				{ 52 ,  {-81.7867005 }} ,
				{ 53 ,  {-102.26347334 }} ,
				{ 54 ,  {-146.53732849 }} ,
				{ 56 ,  {-207.82497721 }} ,
				{ 57 ,  {-290.52672487 }} ,
				{ 62 ,  {-107.89147253 }} ,
				{ 65 ,  {-79.2896338 }} ,
				{ 66 ,  {-79.78381999 }} ,
				{ 67 ,  {-76.86275487 }} ,
				{ 69 ,  {-10.71544337 }} ,
				{ 70 ,  {-3.85906949 }} ,
				{ 72 ,  {94.43377409 }} ,
				{ 74 ,  {128.74971925 }} ,
				{ 75 ,  {122.37894791 }} ,
				{ 82 ,  {174.05588768 }} ,
				{ 83 ,  {175.64031368 }} ,
				{ 84 ,  {167.43350007 }} ,
				{ 86 ,  {178.09986345 }} ,
				{ 87 ,  {180.24317892 }} ,
				{ 89 ,  {212.8171045 }} ,
				{ 91 ,  {242.60253144 }} ,
				{ 92 ,  {270.97867971 }} ,
				{ 94 ,  {130.61554227 }} ,
				{ 95 ,  {38.19976423 }} ,
				{ 97 ,  {419.81179048 }} ,
				{ 98 ,  {294.76468454 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= 0.1426944024860859) ? ( (Feature_95 <= -0.2972280979156494) ? ( (Feature_41 <= -0.21187324821949005) ? ( (Feature_78 <= 1.3029955625534058) ? ( (Feature_6 <= 0.8647558093070984) ? ( (Feature_37 <= -1.4629270434379578) ? ( 6 ) : ( (Feature_96 <= -0.158211350440979) ? ( 8 ) : ( 9 ) ) ) : ( (Feature_8 <= 0.22394993901252747) ? ( (Feature_68 <= 0.0666138231754303) ? ( 12 ) : ( 13 ) ) : ( (Feature_53 <= -0.05984640121459961) ? ( 15 ) : ( 16 ) ) ) ) : ( (Feature_1 <= -0.40980667620897293) ? ( 18 ) : ( 19 ) ) ) : ( (Feature_55 <= 0.19129879772663116) ? ( (Feature_28 <= -0.4464637190103531) ? ( 22 ) : ( 23 ) ) : ( (Feature_94 <= -0.7360263764858246) ? ( 25 ) : ( 26 ) ) ) ) : ( (Feature_84 <= 0.0337207755073905) ? ( (Feature_38 <= -0.20867587625980377) ? ( (Feature_78 <= 0.6245041787624359) ? ( (Feature_69 <= -1.034869134426117) ? ( 31 ) : ( 32 ) ) : ( (Feature_21 <= -0.022766845300793648) ? ( 34 ) : ( 35 ) ) ) : ( (Feature_87 <= 0.21819912176579237) ? ( (Feature_98 <= 0.6528359651565552) ? ( (Feature_66 <= -0.7288788557052612) ? ( 39 ) : ( (Feature_79 <= 1.1233103275299072) ? ( 41 ) : ( 42 ) ) ) : ( 43 ) ) : ( 44 ) ) ) : ( (Feature_98 <= 0.8298361599445343) ? ( (Feature_75 <= 0.685088574886322) ? ( (Feature_67 <= 2.108838737010956) ? ( (Feature_37 <= 0.10197990387678146) ? ( (Feature_77 <= 0.33740416169166565) ? ( 50 ) : ( 51 ) ) : ( 52 ) ) : ( 53 ) ) : ( 54 ) ) : ( (Feature_31 <= 0.38762909173965454) ? ( 56 ) : ( 57 ) ) ) ) ) : ( (Feature_17 <= -0.22127560898661613) ? ( (Feature_99 <= 0.40885987877845764) ? ( (Feature_42 <= 0.5404656305909157) ? ( (Feature_95 <= -0.9646730336826295) ? ( 62 ) : ( (Feature_90 <= 0.6614910364151001) ? ( (Feature_23 <= -0.10980011522769928) ? ( 65 ) : ( 66 ) ) : ( 67 ) ) ) : ( (Feature_92 <= -1.049110621213913) ? ( 69 ) : ( 70 ) ) ) : ( (Feature_67 <= -0.8441693633794785) ? ( 72 ) : ( (Feature_59 <= 0.11742085218429565) ? ( 74 ) : ( 75 ) ) ) ) : ( (Feature_33 <= 0.8594520092010498) ? ( (Feature_81 <= 0.9222550690174103) ? ( (Feature_91 <= 1.079672247171402) ? ( (Feature_76 <= 1.0517721474170685) ? ( (Feature_62 <= -0.519431333988905) ? ( (Feature_95 <= -0.12077252566814423) ? ( 82 ) : ( 83 ) ) : ( 84 ) ) : ( (Feature_74 <= 0.08758214209228754) ? ( 86 ) : ( 87 ) ) ) : ( (Feature_18 <= -0.14808806777000427) ? ( 89 ) : ( (Feature_19 <= -2.162592887878418) ? ( 91 ) : ( 92 ) ) ) ) : ( (Feature_34 <= -0.7113195806741714) ? ( 94 ) : ( 95 ) ) ) : ( (Feature_46 <= -1.5678081512451172) ? ( 97 ) : ( 98 ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_0
	

	namespace EXT_SubModel_1 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 7 ,  {-280.96508601 }} ,
				{ 9 ,  {-291.84388737 }} ,
				{ 10 ,  {-290.52672487 }} ,
				{ 11 ,  {-234.79191601 }} ,
				{ 14 ,  {-327.50301874 }} ,
				{ 16 ,  {-310.56333873 }} ,
				{ 17 ,  {-306.85826974 }} ,
				{ 18 ,  {-361.1632498 }} ,
				{ 20 ,  {-454.82158737 }} ,
				{ 21 ,  {-436.89308609 }} ,
				{ 23 ,  {48.4233357 }} ,
				{ 25 ,  {-202.60833883 }} ,
				{ 27 ,  {-79.78381999 }} ,
				{ 28 ,  {-107.89147253 }} ,
				{ 32 ,  {94.43377409 }} ,
				{ 33 ,  {38.19976423 }} ,
				{ 35 ,  {215.90083762 }} ,
				{ 36 ,  {233.33694107 }} ,
				{ 38 ,  {-146.53732849 }} ,
				{ 39 ,  {-87.98512255 }} ,
				{ 46 ,  {212.8171045 }} ,
				{ 47 ,  {219.92766038 }} ,
				{ 49 ,  {242.60253144 }} ,
				{ 50 ,  {245.21860441 }} ,
				{ 53 ,  {183.77184322 }} ,
				{ 54 ,  {178.09986345 }} ,
				{ 55 ,  {167.43350007 }} ,
				{ 57 ,  {39.44300012 }} ,
				{ 60 ,  {136.92680038 }} ,
				{ 62 ,  {130.61554227 }} ,
				{ 63 ,  {128.74971925 }} ,
				{ 64 ,  {174.05588768 }} ,
				{ 67 ,  {294.76468454 }} ,
				{ 68 ,  {294.89065558 }} ,
				{ 69 ,  {419.81179048 }} ,
				{ 74 ,  {270.97867971 }} ,
				{ 75 ,  {305.04020477 }} ,
				{ 76 ,  {195.39419395 }} ,
				{ 79 ,  {114.45423223 }} ,
				{ 80 ,  {122.37894791 }} ,
				{ 81 ,  {75.607022 }} ,
				{ 86 ,  {-42.10296472 }} ,
				{ 88 ,  {-54.81786632 }} ,
				{ 89 ,  {-51.54063841 }} ,
				{ 91 ,  {-30.69897773 }} ,
				{ 92 ,  {-10.71544337 }} ,
				{ 93 ,  {75.33652616 }} ,
				{ 94 ,  {-140.57351312 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_41 <= -0.3403228223323822) ? ( (Feature_63 <= 0.3279445543885231) ? ( (Feature_80 <= 0.008369773626327515) ? ( (Feature_96 <= 1.2050738334655762) ? ( (Feature_46 <= -0.2032956387847662) ? ( (Feature_63 <= 0.041845716536045074) ? ( (Feature_24 <= 0.12966788560152054) ? ( 7 ) : ( (Feature_6 <= -0.1806553341448307) ? ( 9 ) : ( 10 ) ) ) : ( 11 ) ) : ( (Feature_10 <= 1.3981415629386902) ? ( (Feature_64 <= -1.1513879597187042) ? ( 14 ) : ( (Feature_33 <= 0.6961406171321869) ? ( 16 ) : ( 17 ) ) ) : ( 18 ) ) ) : ( (Feature_29 <= 1.4001205265522003) ? ( 20 ) : ( 21 ) ) ) : ( (Feature_97 <= 0.06213619653135538) ? ( 23 ) : ( (Feature_33 <= -0.13614892959594727) ? ( 25 ) : ( (Feature_56 <= -0.7971379455993883) ? ( 27 ) : ( 28 ) ) ) ) ) : ( (Feature_33 <= 0.33691950142383575) ? ( (Feature_56 <= 0.049692654982209206) ? ( (Feature_81 <= 1.3745170831680298) ? ( 32 ) : ( 33 ) ) : ( (Feature_12 <= 0.09860952384769917) ? ( 35 ) : ( 36 ) ) ) : ( (Feature_46 <= -0.1458137333393097) ? ( 38 ) : ( 39 ) ) ) ) : ( (Feature_96 <= 0.028901349753141403) ? ( (Feature_7 <= 0.7904861569404602) ? ( (Feature_12 <= -0.09162898361682892) ? ( (Feature_45 <= -0.10762648284435272) ? ( (Feature_41 <= 0.18999868305400014) ? ( (Feature_92 <= 0.8405751585960388) ? ( 46 ) : ( 47 ) ) : ( (Feature_43 <= 0.0069017112255096436) ? ( 49 ) : ( 50 ) ) ) : ( (Feature_38 <= 0.7403144538402557) ? ( (Feature_35 <= -0.10119486227631569) ? ( 53 ) : ( 54 ) ) : ( 55 ) ) ) : ( (Feature_7 <= -1.352945238351822) ? ( 57 ) : ( (Feature_7 <= 0.5530199408531189) ? ( (Feature_51 <= -0.056155264377593994) ? ( 60 ) : ( (Feature_0 <= -0.7609822172671556) ? ( 62 ) : ( 63 ) ) ) : ( 64 ) ) ) ) : ( (Feature_45 <= 0.3061685487627983) ? ( (Feature_89 <= 0.6732880920171738) ? ( 67 ) : ( 68 ) ) : ( 69 ) ) ) : ( (Feature_67 <= 0.13277308642864227) ? ( (Feature_23 <= 0.06565527431666851) ? ( (Feature_33 <= 0.6225982680916786) ? ( (Feature_71 <= -0.165849506855011) ? ( 74 ) : ( 75 ) ) : ( 76 ) ) : ( (Feature_24 <= -0.094029251486063) ? ( (Feature_18 <= -1.1533585786819458) ? ( 79 ) : ( 80 ) ) : ( 81 ) ) ) : ( (Feature_31 <= 0.5548044480383396) ? ( (Feature_5 <= 1.6341912746429443) ? ( (Feature_38 <= 0.36394569277763367) ? ( (Feature_75 <= -0.6284613013267517) ? ( 86 ) : ( (Feature_3 <= 0.41915784776210785) ? ( 88 ) : ( 89 ) ) ) : ( (Feature_54 <= -0.24978835135698318) ? ( 91 ) : ( 92 ) ) ) : ( 93 ) ) : ( 94 ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_1
	

	namespace EXT_SubModel_2 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 5 ,  {-87.98512255 }} ,
				{ 7 ,  {-79.78381999 }} ,
				{ 8 ,  {-81.7867005 }} ,
				{ 9 ,  {48.4233357 }} ,
				{ 11 ,  {-190.6470266 }} ,
				{ 12 ,  {-146.53732849 }} ,
				{ 16 ,  {-327.50301874 }} ,
				{ 17 ,  {-338.54994316 }} ,
				{ 20 ,  {-310.56333873 }} ,
				{ 21 ,  {-306.85826974 }} ,
				{ 23 ,  {-290.52672487 }} ,
				{ 24 ,  {-291.84388737 }} ,
				{ 27 ,  {-234.79191601 }} ,
				{ 28 ,  {-234.46580929 }} ,
				{ 29 ,  {-207.82497721 }} ,
				{ 34 ,  {-196.17622398 }} ,
				{ 35 ,  {-202.60833883 }} ,
				{ 36 ,  {-172.78010698 }} ,
				{ 40 ,  {157.32675575 }} ,
				{ 42 ,  {183.77184322 }} ,
				{ 43 ,  {175.64031368 }} ,
				{ 46 ,  {39.44300012 }} ,
				{ 47 ,  {62.60532339 }} ,
				{ 48 ,  {94.43377409 }} ,
				{ 52 ,  {-79.2896338 }} ,
				{ 53 ,  {-102.26347334 }} ,
				{ 54 ,  {-140.57351312 }} ,
				{ 56 ,  {-42.10296472 }} ,
				{ 59 ,  {-3.85906949 }} ,
				{ 60 ,  {-4.90459143 }} ,
				{ 61 ,  {2.27397289 }} ,
				{ 66 ,  {245.21860441 }} ,
				{ 67 ,  {219.92766038 }} ,
				{ 69 ,  {270.97867971 }} ,
				{ 71 ,  {294.76468454 }} ,
				{ 72 ,  {294.89065558 }} ,
				{ 75 ,  {130.61554227 }} ,
				{ 76 ,  {136.92680038 }} ,
				{ 77 ,  {174.05588768 }} ,
				{ 82 ,  {128.74971925 }} ,
				{ 84 ,  {114.45423223 }} ,
				{ 85 ,  {111.49818731 }} ,
				{ 87 ,  {75.607022 }} ,
				{ 88 ,  {90.67187466 }} ,
				{ 89 ,  {195.39419395 }} ,
				{ 90 ,  {-51.54063841 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_41 <= -0.6807610988616943) ? ( (Feature_67 <= -0.31610623002052307) ? ( (Feature_85 <= 0.08781564235687256) ? ( (Feature_48 <= 1.0822648108005524) ? ( (Feature_53 <= -0.04078143718652427) ? ( 5 ) : ( (Feature_50 <= 0.03363683819770813) ? ( 7 ) : ( 8 ) ) ) : ( 9 ) ) : ( (Feature_48 <= 0.14831000566482544) ? ( 11 ) : ( 12 ) ) ) : ( (Feature_54 <= 0.40855756402015686) ? ( (Feature_28 <= -0.4705016314983368) ? ( (Feature_38 <= -1.3833603858947754) ? ( 16 ) : ( 17 ) ) : ( (Feature_97 <= 0.5662049129605293) ? ( (Feature_66 <= 0.3943459391593933) ? ( 20 ) : ( 21 ) ) : ( (Feature_63 <= -1.1596201062202454) ? ( 23 ) : ( 24 ) ) ) ) : ( (Feature_70 <= 0.46314702928066254) ? ( (Feature_56 <= -0.020156610757112503) ? ( 27 ) : ( 28 ) ) : ( 29 ) ) ) ) : ( (Feature_39 <= 0.36675897240638733) ? ( (Feature_89 <= -0.380287304520607) ? ( (Feature_63 <= 0.38852158188819885) ? ( (Feature_76 <= -0.7607281655073166) ? ( 34 ) : ( 35 ) ) : ( 36 ) ) : ( (Feature_58 <= -0.05641855765134096) ? ( (Feature_4 <= -0.41879428923130035) ? ( (Feature_92 <= -0.12416434660553932) ? ( 40 ) : ( (Feature_22 <= 0.5206762626767159) ? ( 42 ) : ( 43 ) ) ) : ( (Feature_28 <= 0.94329434633255) ? ( (Feature_74 <= 0.23312225937843323) ? ( 46 ) : ( 47 ) ) : ( 48 ) ) ) : ( (Feature_10 <= -0.33381649293005466) ? ( (Feature_93 <= -0.2691231220960617) ? ( (Feature_3 <= -0.56349977850914) ? ( 52 ) : ( 53 ) ) : ( 54 ) ) : ( (Feature_43 <= -0.28941968083381653) ? ( 56 ) : ( (Feature_96 <= 1.1180713474750519) ? ( (Feature_27 <= 0.5348165333271027) ? ( 59 ) : ( 60 ) ) : ( 61 ) ) ) ) ) ) : ( (Feature_0 <= -0.2211725451052189) ? ( (Feature_59 <= 0.09184632822871208) ? ( (Feature_18 <= -0.6014783084392548) ? ( (Feature_50 <= 1.0929297655820847) ? ( 66 ) : ( 67 ) ) : ( (Feature_49 <= -0.4858284071087837) ? ( 69 ) : ( (Feature_24 <= 0.4700968563556671) ? ( 71 ) : ( 72 ) ) ) ) : ( (Feature_71 <= 0.963200218975544) ? ( (Feature_66 <= -1.135083794593811) ? ( 75 ) : ( 76 ) ) : ( 77 ) ) ) : ( (Feature_20 <= 0.28092286735773087) ? ( (Feature_56 <= 0.2189740464091301) ? ( (Feature_42 <= 0.5847959220409393) ? ( (Feature_86 <= 0.2512607090175152) ? ( 82 ) : ( (Feature_22 <= 0.7693407267797738) ? ( 84 ) : ( 85 ) ) ) : ( (Feature_36 <= 0.71093993447721) ? ( 87 ) : ( 88 ) ) ) : ( 89 ) ) : ( 90 ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_2
	

	namespace EXT_SubModel_3 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 3 ,  {233.33694107 }} ,
				{ 4 ,  {38.19976423 }} ,
				{ 8 ,  {-430.73224202 }} ,
				{ 9 ,  {-436.89308609 }} ,
				{ 14 ,  {-306.85826974 }} ,
				{ 15 ,  {-310.56333873 }} ,
				{ 16 ,  {-327.50301874 }} ,
				{ 18 ,  {-338.54994316 }} ,
				{ 19 ,  {-361.1632498 }} ,
				{ 21 ,  {-234.46580929 }} ,
				{ 22 ,  {-257.97922489 }} ,
				{ 25 ,  {-190.6470266 }} ,
				{ 26 ,  {-207.82497721 }} ,
				{ 28 ,  {-76.86275487 }} ,
				{ 29 ,  {-146.53732849 }} ,
				{ 33 ,  {-10.71544337 }} ,
				{ 35 ,  {-86.11645147 }} ,
				{ 36 ,  {-51.54063841 }} ,
				{ 38 ,  {-200.33739348 }} ,
				{ 39 ,  {-197.78121613 }} ,
				{ 44 ,  {-172.78010698 }} ,
				{ 46 ,  {-196.17622398 }} ,
				{ 47 ,  {-190.99779883 }} ,
				{ 48 ,  {-140.57351312 }} ,
				{ 50 ,  {-79.2896338 }} ,
				{ 51 ,  {-54.81786632 }} ,
				{ 55 ,  {-42.10296472 }} ,
				{ 59 ,  {122.37894791 }} ,
				{ 61 ,  {114.45423223 }} ,
				{ 62 ,  {111.49818731 }} ,
				{ 64 ,  {157.32675575 }} ,
				{ 65 ,  {136.92680038 }} ,
				{ 67 ,  {75.607022 }} ,
				{ 68 ,  {75.33652616 }} ,
				{ 71 ,  {130.61554227 }} ,
				{ 74 ,  {167.43350007 }} ,
				{ 76 ,  {174.05588768 }} ,
				{ 77 ,  {175.64031368 }} ,
				{ 78 ,  {183.77184322 }} ,
				{ 81 ,  {242.60253144 }} ,
				{ 83 ,  {219.92766038 }} ,
				{ 85 ,  {215.90083762 }} ,
				{ 86 ,  {212.8171045 }} ,
				{ 87 ,  {195.39419395 }} ,
				{ 90 ,  {305.04020477 }} ,
				{ 91 ,  {294.76468454 }} ,
				{ 92 ,  {270.97867971 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_41 <= -0.5217077285051346) ? ( (Feature_6 <= -1.5644700527191162) ? ( (Feature_33 <= 0.04585359990596771) ? ( 3 ) : ( 4 ) ) : ( (Feature_95 <= -0.13452733494341373) ? ( (Feature_4 <= -1.1543105244636536) ? ( (Feature_77 <= 0.5496645271778107) ? ( 8 ) : ( 9 ) ) : ( (Feature_25 <= 0.5095911026000977) ? ( (Feature_93 <= -0.044121201150119305) ? ( (Feature_98 <= -0.13826389238238335) ? ( (Feature_4 <= -0.2715285196900368) ? ( 14 ) : ( 15 ) ) : ( 16 ) ) : ( (Feature_24 <= -1.4363062381744385) ? ( 18 ) : ( 19 ) ) ) : ( (Feature_69 <= -1.2387460470199585) ? ( 21 ) : ( 22 ) ) ) ) : ( (Feature_15 <= 0.4713740646839142) ? ( (Feature_98 <= 0.4937342293560505) ? ( 25 ) : ( 26 ) ) : ( (Feature_0 <= 0.7357408367097378) ? ( 28 ) : ( 29 ) ) ) ) ) : ( (Feature_49 <= -1.235157549381256) ? ( (Feature_89 <= 0.11145905405282974) ? ( (Feature_94 <= 0.1957881599664688) ? ( 33 ) : ( (Feature_1 <= 1.473403513431549) ? ( 35 ) : ( 36 ) ) ) : ( (Feature_45 <= 1.3619422316551208) ? ( 38 ) : ( 39 ) ) ) : ( (Feature_39 <= -0.5363909304141998) ? ( (Feature_72 <= 0.5511557161808014) ? ( (Feature_92 <= -0.9874112904071808) ? ( (Feature_65 <= -0.060191426426172256) ? ( 44 ) : ( (Feature_58 <= -0.006016097497195005) ? ( 46 ) : ( 47 ) ) ) : ( 48 ) ) : ( (Feature_69 <= 0.13021016493439674) ? ( 50 ) : ( 51 ) ) ) : ( (Feature_13 <= 0.966616302728653) ? ( (Feature_51 <= -0.44506117701530457) ? ( (Feature_6 <= -1.4162279069423676) ? ( 55 ) : ( (Feature_15 <= 0.8100926578044891) ? ( (Feature_29 <= 0.8124915957450867) ? ( (Feature_85 <= -0.820048101246357) ? ( 59 ) : ( (Feature_43 <= 0.3024163395166397) ? ( 61 ) : ( 62 ) ) ) : ( (Feature_1 <= -0.8557818196713924) ? ( 64 ) : ( 65 ) ) ) : ( (Feature_30 <= 0.07785232458263636) ? ( 67 ) : ( 68 ) ) ) ) : ( (Feature_48 <= 0.3409659005701542) ? ( (Feature_9 <= -1.0913303196430206) ? ( 71 ) : ( (Feature_41 <= 0.8342300951480865) ? ( (Feature_19 <= -0.25899712927639484) ? ( 74 ) : ( (Feature_64 <= -0.6834207475185394) ? ( 76 ) : ( 77 ) ) ) : ( 78 ) ) ) : ( (Feature_79 <= 1.7308014929294586) ? ( (Feature_62 <= 0.2908000536262989) ? ( 81 ) : ( (Feature_91 <= 0.23607215285301208) ? ( 83 ) : ( (Feature_2 <= -0.4906742423772812) ? ( 85 ) : ( 86 ) ) ) ) : ( 87 ) ) ) ) : ( (Feature_32 <= 1.0881084501743317) ? ( (Feature_99 <= 0.3215135224163532) ? ( 90 ) : ( 91 ) ) : ( 92 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_3
	

	namespace EXT_SubModel_4 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 4 ,  {-146.53732849 }} ,
				{ 7 ,  {-257.97922489 }} ,
				{ 9 ,  {-234.79191601 }} ,
				{ 10 ,  {-234.46580929 }} ,
				{ 12 ,  {-338.54994316 }} ,
				{ 15 ,  {-280.96508601 }} ,
				{ 17 ,  {-291.84388737 }} ,
				{ 18 ,  {-290.52672487 }} ,
				{ 20 ,  {-306.85826974 }} ,
				{ 21 ,  {-310.56333873 }} ,
				{ 24 ,  {-167.53786194 }} ,
				{ 25 ,  {-190.99779883 }} ,
				{ 27 ,  {-55.13785993 }} ,
				{ 28 ,  {-86.11645147 }} ,
				{ 32 ,  {183.77184322 }} ,
				{ 33 ,  {136.92680038 }} ,
				{ 35 ,  {75.33652616 }} ,
				{ 36 ,  {75.607022 }} ,
				{ 37 ,  {-42.10296472 }} ,
				{ 43 ,  {94.43377409 }} ,
				{ 44 ,  {105.13302469 }} ,
				{ 45 ,  {128.74971925 }} ,
				{ 46 ,  {-10.71544337 }} ,
				{ 50 ,  {-107.89147253 }} ,
				{ 53 ,  {-79.78381999 }} ,
				{ 54 ,  {-79.2896338 }} ,
				{ 55 ,  {-81.7867005 }} ,
				{ 56 ,  {-3.85906949 }} ,
				{ 57 ,  {-202.60833883 }} ,
				{ 62 ,  {-30.69897773 }} ,
				{ 63 ,  {-4.90459143 }} ,
				{ 67 ,  {114.66116148 }} ,
				{ 69 ,  {130.61554227 }} ,
				{ 70 ,  {144.72865942 }} ,
				{ 73 ,  {157.32675575 }} ,
				{ 74 ,  {167.43350007 }} ,
				{ 76 ,  {175.64031368 }} ,
				{ 78 ,  {178.09986345 }} ,
				{ 79 ,  {180.24317892 }} ,
				{ 81 ,  {278.81453164 }} ,
				{ 83 ,  {245.21860441 }} ,
				{ 84 ,  {212.8171045 }} ,
				{ 86 ,  {419.81179048 }} ,
				{ 88 ,  {270.97867971 }} ,
				{ 89 ,  {327.27619653 }} ,
				{ 91 ,  {38.19976423 }} ,
				{ 93 ,  {-51.54063841 }} ,
				{ 94 ,  {-140.57351312 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.30302830785512924) ? ( (Feature_55 <= 1.1712522506713867) ? ( (Feature_7 <= 0.635056346654892) ? ( (Feature_17 <= -1.2251901626586914) ? ( 4 ) : ( (Feature_10 <= -0.7382772862911224) ? ( (Feature_96 <= -1.4592768549919128) ? ( 7 ) : ( (Feature_84 <= -0.3738049268722534) ? ( 9 ) : ( 10 ) ) ) : ( (Feature_56 <= -1.6270805895328522) ? ( 12 ) : ( (Feature_46 <= -0.2032956387847662) ? ( (Feature_66 <= 0.1005883663892746) ? ( 15 ) : ( (Feature_3 <= -1.1016171462833881) ? ( 17 ) : ( 18 ) ) ) : ( (Feature_68 <= -0.16579406708478928) ? ( 20 ) : ( 21 ) ) ) ) ) ) : ( (Feature_19 <= 0.8854284286499023) ? ( (Feature_22 <= -0.24050632119178772) ? ( 24 ) : ( 25 ) ) : ( (Feature_40 <= -1.3562796115875244) ? ( 27 ) : ( 28 ) ) ) ) : ( (Feature_62 <= 0.9911082684993744) ? ( (Feature_69 <= 0.4754069745540619) ? ( (Feature_37 <= -0.7434962723637) ? ( 32 ) : ( 33 ) ) : ( (Feature_44 <= 0.35036719404160976) ? ( 35 ) : ( 36 ) ) ) : ( 37 ) ) ) : ( (Feature_17 <= -0.36187705397605896) ? ( (Feature_29 <= -0.35964149236679077) ? ( (Feature_25 <= 0.9698193967342377) ? ( (Feature_65 <= 0.5988159775733948) ? ( (Feature_3 <= -0.7405123114585876) ? ( 43 ) : ( 44 ) ) : ( 45 ) ) : ( 46 ) ) : ( (Feature_26 <= 0.04062658175826073) ? ( (Feature_51 <= 1.0273681282997131) ? ( (Feature_28 <= -1.000057727098465) ? ( 50 ) : ( (Feature_58 <= 0.08642931561917067) ? ( (Feature_66 <= 0.49824175238609314) ? ( 53 ) : ( 54 ) ) : ( 55 ) ) ) : ( 56 ) ) : ( 57 ) ) ) : ( (Feature_22 <= 0.9849851429462433) ? ( (Feature_35 <= 0.8257830142974854) ? ( (Feature_92 <= -2.0568894743919373) ? ( (Feature_34 <= 0.2814682722091675) ? ( 62 ) : ( 63 ) ) : ( (Feature_68 <= 1.2244296669960022) ? ( (Feature_80 <= 0.679137259721756) ? ( (Feature_76 <= -0.7550529837608337) ? ( 67 ) : ( (Feature_50 <= -0.4907335638999939) ? ( 69 ) : ( 70 ) ) ) : ( (Feature_19 <= -0.12164461612701416) ? ( (Feature_61 <= 0.4247243106365204) ? ( 73 ) : ( 74 ) ) : ( (Feature_66 <= 0.8056425452232361) ? ( 76 ) : ( (Feature_56 <= 0.08112217485904694) ? ( 78 ) : ( 79 ) ) ) ) ) : ( (Feature_15 <= 0.6224966049194336) ? ( 81 ) : ( (Feature_55 <= -0.6489134803414345) ? ( 83 ) : ( 84 ) ) ) ) ) : ( (Feature_73 <= -1.78829425573349) ? ( 86 ) : ( (Feature_21 <= 0.6445539924316108) ? ( 88 ) : ( 89 ) ) ) ) : ( (Feature_41 <= -0.5981998592615128) ? ( 91 ) : ( (Feature_43 <= -0.25942614674568176) ? ( 93 ) : ( 94 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_4
	

	namespace EXT_SubModel_5 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 5 ,  {-207.82497721 }} ,
				{ 8 ,  {-327.50301874 }} ,
				{ 9 ,  {-310.56333873 }} ,
				{ 12 ,  {-291.84388737 }} ,
				{ 13 ,  {-290.52672487 }} ,
				{ 14 ,  {-280.96508601 }} ,
				{ 17 ,  {-430.73224202 }} ,
				{ 18 ,  {-436.89308609 }} ,
				{ 19 ,  {-361.1632498 }} ,
				{ 24 ,  {-196.17622398 }} ,
				{ 25 ,  {-197.78121613 }} ,
				{ 26 ,  {-190.99779883 }} ,
				{ 27 ,  {-167.53786194 }} ,
				{ 28 ,  {-86.11645147 }} ,
				{ 32 ,  {-190.6470266 }} ,
				{ 33 ,  {-234.46580929 }} ,
				{ 34 ,  {-146.53732849 }} ,
				{ 38 ,  {39.44300012 }} ,
				{ 40 ,  {75.607022 }} ,
				{ 41 ,  {75.33652616 }} ,
				{ 43 ,  {183.77184322 }} ,
				{ 45 ,  {111.49818731 }} ,
				{ 46 ,  {136.92680038 }} ,
				{ 48 ,  {-42.10296472 }} ,
				{ 50 ,  {-55.13785993 }} ,
				{ 51 ,  {-54.81786632 }} ,
				{ 55 ,  {-172.78010698 }} ,
				{ 56 ,  {-202.60833883 }} ,
				{ 57 ,  {-4.90459143 }} ,
				{ 62 ,  {-3.85906949 }} ,
				{ 63 ,  {48.4233357 }} ,
				{ 65 ,  {-140.57351312 }} ,
				{ 67 ,  {-79.2896338 }} ,
				{ 68 ,  {-87.98512255 }} ,
				{ 72 ,  {128.74971925 }} ,
				{ 73 ,  {167.43350007 }} ,
				{ 76 ,  {90.67187466 }} ,
				{ 77 ,  {94.43377409 }} ,
				{ 78 ,  {105.13302469 }} ,
				{ 79 ,  {38.19976423 }} ,
				{ 85 ,  {212.8171045 }} ,
				{ 86 ,  {219.92766038 }} ,
				{ 89 ,  {130.61554227 }} ,
				{ 90 ,  {144.72865942 }} ,
				{ 92 ,  {175.64031368 }} ,
				{ 93 ,  {157.32675575 }} ,
				{ 94 ,  {62.60532339 }} ,
				{ 96 ,  {419.81179048 }} ,
				{ 99 ,  {278.81453164 }} ,
				{ 101 ,  {294.89065558 }} ,
				{ 102 ,  {305.04020477 }} ,
				{ 104 ,  {174.05588768 }} ,
				{ 105 ,  {233.33694107 }} ,
				{ 107 ,  {-79.78381999 }} ,
				{ 108 ,  {-51.54063841 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.20716173201799393) ? ( (Feature_63 <= -0.05651876516640186) ? ( (Feature_41 <= -0.266196072101593) ? ( (Feature_2 <= 0.5573211312294006) ? ( (Feature_81 <= -1.5111894607543945) ? ( 5 ) : ( (Feature_51 <= -0.42626985907554626) ? ( (Feature_23 <= -0.11643749475479126) ? ( 8 ) : ( 9 ) ) : ( (Feature_34 <= 0.8081592619419098) ? ( (Feature_19 <= 0.47338077425956726) ? ( 12 ) : ( 13 ) ) : ( 14 ) ) ) ) : ( (Feature_57 <= 0.05376270040869713) ? ( (Feature_77 <= 0.5496645271778107) ? ( 17 ) : ( 18 ) ) : ( 19 ) ) ) : ( (Feature_28 <= 0.3121793121099472) ? ( (Feature_38 <= 0.9487830400466919) ? ( (Feature_58 <= -0.006016097497195005) ? ( (Feature_69 <= 0.43045568466186523) ? ( 24 ) : ( 25 ) ) : ( 26 ) ) : ( 27 ) ) : ( 28 ) ) ) : ( (Feature_22 <= -0.19556881487369537) ? ( (Feature_44 <= 1.0498907268047333) ? ( (Feature_2 <= -0.13995012640953064) ? ( 32 ) : ( 33 ) ) : ( 34 ) ) : ( (Feature_97 <= 0.7616576552391052) ? ( (Feature_9 <= 0.2276595956645906) ? ( (Feature_42 <= -0.6198199987411499) ? ( 38 ) : ( (Feature_84 <= -0.6982975006103516) ? ( 40 ) : ( 41 ) ) ) : ( (Feature_25 <= 0.74661985039711) ? ( 43 ) : ( (Feature_3 <= -1.059379905462265) ? ( 45 ) : ( 46 ) ) ) ) : ( (Feature_18 <= 0.007984286174178123) ? ( 48 ) : ( (Feature_67 <= 0.3106468468904495) ? ( 50 ) : ( 51 ) ) ) ) ) ) : ( (Feature_11 <= -1.1518600583076477) ? ( (Feature_57 <= 0.5202126502990723) ? ( (Feature_80 <= 0.5746912620961666) ? ( 55 ) : ( 56 ) ) : ( 57 ) ) : ( (Feature_70 <= -0.4990149289369583) ? ( (Feature_86 <= -0.18803562968969345) ? ( (Feature_99 <= -0.0772588849067688) ? ( (Feature_35 <= -0.1465846337378025) ? ( 62 ) : ( 63 ) ) : ( (Feature_73 <= -0.8058155179023743) ? ( 65 ) : ( (Feature_98 <= 0.2888861745595932) ? ( 67 ) : ( 68 ) ) ) ) : ( (Feature_94 <= 1.0546138882637024) ? ( (Feature_70 <= -1.349514126777649) ? ( (Feature_93 <= -0.43974221497774124) ? ( 72 ) : ( 73 ) ) : ( (Feature_78 <= 0.13359166122972965) ? ( (Feature_43 <= -0.12453147768974304) ? ( 76 ) : ( 77 ) ) : ( 78 ) ) ) : ( 79 ) ) ) : ( (Feature_4 <= 0.6326278448104858) ? ( (Feature_35 <= 0.5552060902118683) ? ( (Feature_29 <= 1.072105497121811) ? ( (Feature_41 <= 0.11928455205634236) ? ( (Feature_87 <= 0.7257322072982788) ? ( 85 ) : ( 86 ) ) : ( (Feature_28 <= -0.4740321412682533) ? ( (Feature_77 <= -0.07845647633075714) ? ( 89 ) : ( 90 ) ) : ( (Feature_74 <= -0.04546716809272766) ? ( 92 ) : ( 93 ) ) ) ) : ( 94 ) ) : ( (Feature_67 <= -1.042222410440445) ? ( 96 ) : ( (Feature_65 <= -0.3246422866359353) ? ( (Feature_64 <= -0.5242940485477448) ? ( 99 ) : ( (Feature_77 <= -0.7702085040509701) ? ( 101 ) : ( 102 ) ) ) : ( (Feature_33 <= -0.3162972331047058) ? ( 104 ) : ( 105 ) ) ) ) ) : ( (Feature_41 <= -0.6525624841451645) ? ( 107 ) : ( 108 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_5
	

	namespace EXT_SubModel_6 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 3 ,  {174.05588768 }} ,
				{ 4 ,  {-55.13785993 }} ,
				{ 9 ,  {-197.78121613 }} ,
				{ 10 ,  {-202.60833883 }} ,
				{ 11 ,  {-234.46580929 }} ,
				{ 12 ,  {-167.53786194 }} ,
				{ 17 ,  {-310.56333873 }} ,
				{ 18 ,  {-306.85826974 }} ,
				{ 19 ,  {-327.50301874 }} ,
				{ 21 ,  {-361.1632498 }} ,
				{ 22 ,  {-338.54994316 }} ,
				{ 23 ,  {-430.73224202 }} ,
				{ 27 ,  {-190.99779883 }} ,
				{ 28 ,  {-290.52672487 }} ,
				{ 30 ,  {-146.53732849 }} ,
				{ 33 ,  {-102.26347334 }} ,
				{ 35 ,  {-81.7867005 }} ,
				{ 36 ,  {-86.11645147 }} ,
				{ 38 ,  {-54.81786632 }} ,
				{ 39 ,  {-42.10296472 }} ,
				{ 45 ,  {-30.69897773 }} ,
				{ 47 ,  {-4.90459143 }} ,
				{ 48 ,  {-10.71544337 }} ,
				{ 50 ,  {39.44300012 }} ,
				{ 51 ,  {48.4233357 }} ,
				{ 55 ,  {128.74971925 }} ,
				{ 56 ,  {122.37894791 }} ,
				{ 57 ,  {114.66116148 }} ,
				{ 59 ,  {90.67187466 }} ,
				{ 60 ,  {75.33652616 }} ,
				{ 62 ,  {-234.79191601 }} ,
				{ 63 ,  {-207.82497721 }} ,
				{ 67 ,  {419.81179048 }} ,
				{ 71 ,  {294.89065558 }} ,
				{ 72 ,  {294.76468454 }} ,
				{ 73 ,  {305.04020477 }} ,
				{ 74 ,  {327.27619653 }} ,
				{ 77 ,  {215.90083762 }} ,
				{ 79 ,  {245.21860441 }} ,
				{ 80 ,  {233.33694107 }} ,
				{ 81 ,  {105.13302469 }} ,
				{ 84 ,  {183.77184322 }} ,
				{ 85 ,  {242.60253144 }} ,
				{ 89 ,  {62.60532339 }} ,
				{ 90 ,  {75.607022 }} ,
				{ 91 ,  {94.43377409 }} ,
				{ 93 ,  {130.61554227 }} ,
				{ 95 ,  {111.49818731 }} ,
				{ 96 ,  {114.45423223 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_95 <= -0.30316153168678284) ? ( (Feature_64 <= -1.6771283149719238) ? ( (Feature_79 <= -0.7902662456035614) ? ( 3 ) : ( 4 ) ) : ( (Feature_58 <= -0.558242529630661) ? ( (Feature_64 <= 0.3323913589119911) ? ( (Feature_13 <= -0.3880095789209008) ? ( (Feature_35 <= 0.4513739738613367) ? ( 9 ) : ( 10 ) ) : ( 11 ) ) : ( 12 ) ) : ( (Feature_17 <= 0.8242466151714325) ? ( (Feature_70 <= -0.3395361453294754) ? ( (Feature_15 <= 1.1558321118354797) ? ( (Feature_44 <= -0.9640744030475616) ? ( 17 ) : ( 18 ) ) : ( 19 ) ) : ( (Feature_53 <= -0.3576663210988045) ? ( 21 ) : ( 22 ) ) ) : ( 23 ) ) ) ) : ( (Feature_68 <= -0.5872457027435303) ? ( (Feature_71 <= -0.008007708936929703) ? ( (Feature_51 <= 0.21150793135166168) ? ( 27 ) : ( 28 ) ) : ( (Feature_58 <= -0.26145611330866814) ? ( 30 ) : ( (Feature_69 <= -0.24043350666761398) ? ( (Feature_24 <= -0.5269615799188614) ? ( 33 ) : ( (Feature_33 <= 0.9836885631084442) ? ( 35 ) : ( 36 ) ) ) : ( (Feature_64 <= 0.41145114600658417) ? ( 38 ) : ( 39 ) ) ) ) ) : ( (Feature_79 <= -0.027673793956637383) ? ( (Feature_54 <= 0.2935764044523239) ? ( (Feature_14 <= -0.18972518667578697) ? ( (Feature_76 <= 0.5301611125469208) ? ( (Feature_94 <= -0.889221727848053) ? ( 45 ) : ( (Feature_62 <= -0.0062283799052238464) ? ( 47 ) : ( 48 ) ) ) : ( (Feature_44 <= 1.0907872393727303) ? ( 50 ) : ( 51 ) ) ) : ( (Feature_22 <= 0.20508846547454596) ? ( (Feature_36 <= 0.043695881962776184) ? ( (Feature_35 <= -0.2586519420146942) ? ( 55 ) : ( 56 ) ) : ( 57 ) ) : ( (Feature_23 <= -0.21674969792366028) ? ( 59 ) : ( 60 ) ) ) ) : ( (Feature_41 <= -0.8226352035999298) ? ( 62 ) : ( 63 ) ) ) : ( (Feature_69 <= -0.44060735404491425) ? ( (Feature_84 <= -0.04372594133019447) ? ( (Feature_21 <= -0.8355502784252167) ? ( 67 ) : ( (Feature_15 <= 1.1880874335765839) ? ( (Feature_49 <= 0.5696882605552673) ? ( (Feature_85 <= -0.9181898385286331) ? ( 71 ) : ( 72 ) ) : ( 73 ) ) : ( 74 ) ) ) : ( (Feature_12 <= 0.8329566121101379) ? ( (Feature_89 <= 1.0167084038257599) ? ( 77 ) : ( (Feature_56 <= 0.1791774183511734) ? ( 79 ) : ( 80 ) ) ) : ( 81 ) ) ) : ( (Feature_21 <= -0.469802089035511) ? ( (Feature_3 <= 0.5909975320100784) ? ( 84 ) : ( 85 ) ) : ( (Feature_78 <= 0.24120688438415527) ? ( (Feature_86 <= 0.727054625749588) ? ( (Feature_39 <= -0.29084309935569763) ? ( 89 ) : ( 90 ) ) : ( 91 ) ) : ( (Feature_52 <= -0.29430657625198364) ? ( 93 ) : ( (Feature_28 <= 0.1641959622502327) ? ( 95 ) : ( 96 ) ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_6
	

	namespace EXT_SubModel_7 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {-257.97922489 }} ,
				{ 9 ,  {-291.84388737 }} ,
				{ 10 ,  {-290.52672487 }} ,
				{ 11 ,  {-306.85826974 }} ,
				{ 13 ,  {-327.50301874 }} ,
				{ 14 ,  {-338.54994316 }} ,
				{ 15 ,  {-436.89308609 }} ,
				{ 17 ,  {-310.56333873 }} ,
				{ 21 ,  {-234.79191601 }} ,
				{ 22 ,  {-234.46580929 }} ,
				{ 23 ,  {-207.82497721 }} ,
				{ 25 ,  {-146.53732849 }} ,
				{ 26 ,  {-190.6470266 }} ,
				{ 29 ,  {-202.60833883 }} ,
				{ 31 ,  {-76.86275487 }} ,
				{ 33 ,  {-79.78381999 }} ,
				{ 34 ,  {-81.7867005 }} ,
				{ 36 ,  {38.19976423 }} ,
				{ 37 ,  {48.4233357 }} ,
				{ 41 ,  {-79.2896338 }} ,
				{ 42 ,  {62.60532339 }} ,
				{ 44 ,  {-280.96508601 }} ,
				{ 47 ,  {-172.78010698 }} ,
				{ 48 ,  {-167.53786194 }} ,
				{ 49 ,  {-190.99779883 }} ,
				{ 54 ,  {-107.89147253 }} ,
				{ 55 ,  {-197.78121613 }} ,
				{ 58 ,  {2.27397289 }} ,
				{ 60 ,  {-42.10296472 }} ,
				{ 61 ,  {-55.13785993 }} ,
				{ 63 ,  {39.44300012 }} ,
				{ 64 ,  {75.33652616 }} ,
				{ 67 ,  {174.05588768 }} ,
				{ 69 ,  {180.24317892 }} ,
				{ 70 ,  {178.09986345 }} ,
				{ 72 ,  {128.74971925 }} ,
				{ 73 ,  {122.37894791 }} ,
				{ 77 ,  {-51.54063841 }} ,
				{ 78 ,  {75.607022 }} ,
				{ 81 ,  {157.32675575 }} ,
				{ 84 ,  {105.13302469 }} ,
				{ 86 ,  {111.49818731 }} ,
				{ 87 ,  {114.45423223 }} ,
				{ 88 ,  {130.61554227 }} ,
				{ 91 ,  {294.76468454 }} ,
				{ 94 ,  {219.92766038 }} ,
				{ 95 ,  {215.90083762 }} ,
				{ 96 ,  {245.21860441 }} ,
				{ 99 ,  {167.43350007 }} ,
				{ 100 ,  {175.64031368 }} ,
				{ 102 ,  {195.39419395 }} ,
				{ 103 ,  {183.77184322 }} ,
				{ 105 ,  {419.81179048 }} ,
				{ 108 ,  {278.81453164 }} ,
				{ 109 ,  {270.97867971 }} ,
				{ 111 ,  {305.04020477 }} ,
				{ 112 ,  {294.89065558 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_41 <= -0.5153412073850632) ? ( (Feature_80 <= -0.23479555174708366) ? ( (Feature_27 <= 0.12351588159799576) ? ( (Feature_21 <= 1.5292233526706696) ? ( (Feature_80 <= -0.7902402281761169) ? ( (Feature_90 <= -1.3124935626983643) ? ( 6 ) : ( (Feature_92 <= -0.25883815065026283) ? ( (Feature_93 <= -0.3648156668059528) ? ( 9 ) : ( 10 ) ) : ( 11 ) ) ) : ( (Feature_14 <= 0.08944320678710938) ? ( 13 ) : ( 14 ) ) ) : ( 15 ) ) : ( (Feature_26 <= -1.2727880030870438) ? ( 17 ) : ( (Feature_32 <= -0.4986899048089981) ? ( (Feature_1 <= 0.18196867825463414) ? ( (Feature_45 <= 0.5474562644958496) ? ( 21 ) : ( 22 ) ) : ( 23 ) ) : ( (Feature_80 <= -0.8849486410617828) ? ( 25 ) : ( 26 ) ) ) ) ) : ( (Feature_83 <= 0.5951622575521469) ? ( (Feature_32 <= -0.5226777791976929) ? ( 29 ) : ( (Feature_98 <= -0.5112282484769821) ? ( 31 ) : ( (Feature_43 <= -0.3126831352710724) ? ( 33 ) : ( 34 ) ) ) ) : ( (Feature_28 <= 0.8120737671852112) ? ( 36 ) : ( 37 ) ) ) ) : ( (Feature_92 <= -1.1308966875076294) ? ( (Feature_18 <= -0.45018841326236725) ? ( (Feature_14 <= -0.24508002400398254) ? ( 41 ) : ( 42 ) ) : ( (Feature_4 <= -0.7107781171798706) ? ( 44 ) : ( (Feature_44 <= 1.140932947397232) ? ( (Feature_44 <= -0.8118923604488373) ? ( 47 ) : ( 48 ) ) : ( 49 ) ) ) ) : ( (Feature_79 <= -0.025834066793322563) ? ( (Feature_80 <= 0.9238775968551636) ? ( (Feature_57 <= -0.9306380748748779) ? ( (Feature_17 <= 0.12935620546340942) ? ( 54 ) : ( 55 ) ) : ( (Feature_6 <= 0.24553579464554787) ? ( (Feature_87 <= -0.7456372827291489) ? ( 58 ) : ( (Feature_77 <= 0.42960093170404434) ? ( 60 ) : ( 61 ) ) ) : ( (Feature_40 <= -0.8036403656005859) ? ( 63 ) : ( 64 ) ) ) ) : ( (Feature_92 <= -0.18901684880256653) ? ( (Feature_34 <= -1.2998219430446625) ? ( 67 ) : ( (Feature_48 <= -0.9475703686475754) ? ( 69 ) : ( 70 ) ) ) : ( (Feature_96 <= -0.07764044404029846) ? ( 72 ) : ( 73 ) ) ) ) : ( (Feature_35 <= 0.5552060902118683) ? ( (Feature_29 <= -1.379435658454895) ? ( (Feature_65 <= 0.16042738407850266) ? ( 77 ) : ( 78 ) ) : ( (Feature_97 <= -0.11539775505661964) ? ( (Feature_37 <= -0.971821129322052) ? ( 81 ) : ( (Feature_51 <= 0.35434117913246155) ? ( (Feature_33 <= 0.23432527482509613) ? ( 84 ) : ( (Feature_62 <= 0.36184583604335785) ? ( 86 ) : ( 87 ) ) ) : ( 88 ) ) ) : ( (Feature_69 <= -0.12900223582983017) ? ( (Feature_69 <= -1.074606478214264) ? ( 91 ) : ( (Feature_40 <= -0.5742301195859909) ? ( (Feature_58 <= -0.2772809937596321) ? ( 94 ) : ( 95 ) ) : ( 96 ) ) ) : ( (Feature_95 <= 0.1756618618965149) ? ( (Feature_96 <= -0.21075665950775146) ? ( 99 ) : ( 100 ) ) : ( (Feature_7 <= -0.7293920516967773) ? ( 102 ) : ( 103 ) ) ) ) ) ) : ( (Feature_49 <= -1.2556358575820923) ? ( 105 ) : ( (Feature_3 <= -0.5382572747766972) ? ( (Feature_26 <= -0.35696248710155487) ? ( 108 ) : ( 109 ) ) : ( (Feature_74 <= 0.9729777574539185) ? ( 111 ) : ( 112 ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_7
	

	namespace EXT_SubModel_8 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 5 ,  {-430.73224202 }} ,
				{ 6 ,  {-436.89308609 }} ,
				{ 8 ,  {-338.54994316 }} ,
				{ 9 ,  {-327.50301874 }} ,
				{ 12 ,  {-146.53732849 }} ,
				{ 14 ,  {-197.78121613 }} ,
				{ 15 ,  {-207.82497721 }} ,
				{ 18 ,  {-280.96508601 }} ,
				{ 19 ,  {-290.52672487 }} ,
				{ 21 ,  {-257.97922489 }} ,
				{ 23 ,  {-234.46580929 }} ,
				{ 24 ,  {-234.79191601 }} ,
				{ 27 ,  {75.607022 }} ,
				{ 29 ,  {114.45423223 }} ,
				{ 30 ,  {136.92680038 }} ,
				{ 33 ,  {-102.26347334 }} ,
				{ 35 ,  {-42.10296472 }} ,
				{ 36 ,  {-55.13785993 }} ,
				{ 37 ,  {-200.33739348 }} ,
				{ 43 ,  {94.43377409 }} ,
				{ 45 ,  {195.39419395 }} ,
				{ 47 ,  {157.32675575 }} ,
				{ 49 ,  {174.05588768 }} ,
				{ 50 ,  {175.64031368 }} ,
				{ 53 ,  {270.97867971 }} ,
				{ 54 ,  {294.76468454 }} ,
				{ 56 ,  {233.33694107 }} ,
				{ 58 ,  {245.21860441 }} ,
				{ 59 ,  {242.60253144 }} ,
				{ 60 ,  {419.81179048 }} ,
				{ 61 ,  {-140.57351312 }} ,
				{ 66 ,  {90.67187466 }} ,
				{ 67 ,  {62.60532339 }} ,
				{ 70 ,  {130.61554227 }} ,
				{ 71 ,  {122.37894791 }} ,
				{ 72 ,  {144.72865942 }} ,
				{ 73 ,  {327.27619653 }} ,
				{ 76 ,  {105.13302469 }} ,
				{ 77 ,  {278.81453164 }} ,
				{ 81 ,  {-30.69897773 }} ,
				{ 82 ,  {-4.90459143 }} ,
				{ 85 ,  {-54.81786632 }} ,
				{ 86 ,  {-51.54063841 }} ,
				{ 92 ,  {-79.2896338 }} ,
				{ 93 ,  {-79.78381999 }} ,
				{ 94 ,  {-81.7867005 }} ,
				{ 95 ,  {-76.86275487 }} ,
				{ 96 ,  {-87.98512255 }} ,
				{ 97 ,  {-107.89147253 }} ,
				{ 99 ,  {-202.60833883 }} ,
				{ 100 ,  {-172.78010698 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.4055256098508835) ? ( (Feature_41 <= -0.004412546753883362) ? ( (Feature_24 <= -0.40564458817243576) ? ( (Feature_97 <= 0.14851308055222034) ? ( (Feature_33 <= -0.8289100974798203) ? ( 5 ) : ( 6 ) ) : ( (Feature_91 <= -0.9121091365814209) ? ( 8 ) : ( 9 ) ) ) : ( (Feature_61 <= -0.07909255102276802) ? ( (Feature_51 <= -0.08955985307693481) ? ( 12 ) : ( (Feature_64 <= 0.29677800089120865) ? ( 14 ) : ( 15 ) ) ) : ( (Feature_47 <= -0.7225531935691833) ? ( (Feature_45 <= 0.4636259749531746) ? ( 18 ) : ( 19 ) ) : ( (Feature_81 <= -0.7116419449448586) ? ( 21 ) : ( (Feature_77 <= 0.5924332439899445) ? ( 23 ) : ( 24 ) ) ) ) ) ) : ( (Feature_71 <= -0.6096671223640442) ? ( (Feature_68 <= 0.14803671091794968) ? ( 27 ) : ( (Feature_45 <= -0.5778729990124702) ? ( 29 ) : ( 30 ) ) ) : ( (Feature_57 <= 0.08020144701004028) ? ( (Feature_33 <= -1.9089555740356445) ? ( 33 ) : ( (Feature_93 <= 0.5491223409771919) ? ( 35 ) : ( 36 ) ) ) : ( 37 ) ) ) ) : ( (Feature_46 <= -0.30326057970523834) ? ( (Feature_15 <= 1.1586635112762451) ? ( (Feature_36 <= 1.1116344332695007) ? ( (Feature_95 <= 0.5913027822971344) ? ( (Feature_29 <= -1.2165670096874237) ? ( 43 ) : ( (Feature_47 <= -1.3072922825813293) ? ( 45 ) : ( (Feature_75 <= -2.241727352142334) ? ( 47 ) : ( (Feature_65 <= 0.2572024008259177) ? ( 49 ) : ( 50 ) ) ) ) ) : ( (Feature_57 <= 0.25407515093684196) ? ( (Feature_57 <= -0.7151968665421009) ? ( 53 ) : ( 54 ) ) : ( (Feature_41 <= -0.5466340929269791) ? ( 56 ) : ( (Feature_71 <= 0.2860786020755768) ? ( 58 ) : ( 59 ) ) ) ) ) : ( 60 ) ) : ( 61 ) ) : ( (Feature_94 <= -1.1156359314918518) ? ( (Feature_82 <= 1.4341003894805908) ? ( (Feature_91 <= 0.49006788432598114) ? ( (Feature_2 <= 0.0004362761974334717) ? ( 66 ) : ( 67 ) ) : ( (Feature_89 <= 0.4011165350675583) ? ( (Feature_56 <= 0.8581851720809937) ? ( 70 ) : ( 71 ) ) : ( 72 ) ) ) : ( 73 ) ) : ( (Feature_73 <= -1.0303369164466858) ? ( (Feature_43 <= 0.43769846111536026) ? ( 76 ) : ( 77 ) ) : ( (Feature_35 <= 0.8700553774833679) ? ( (Feature_92 <= -1.8596665859222412) ? ( (Feature_99 <= -0.39285731315612793) ? ( 81 ) : ( 82 ) ) : ( (Feature_53 <= -0.2154395692050457) ? ( (Feature_61 <= 0.33211493492126465) ? ( 85 ) : ( 86 ) ) : ( (Feature_68 <= 0.7564121782779694) ? ( (Feature_94 <= 0.35731557942926884) ? ( (Feature_15 <= 0.4459354616701603) ? ( (Feature_38 <= 0.12691380083560944) ? ( (Feature_2 <= 0.19721677154302597) ? ( 92 ) : ( 93 ) ) : ( 94 ) ) : ( 95 ) ) : ( 96 ) ) : ( 97 ) ) ) ) : ( (Feature_1 <= -0.2170242853462696) ? ( 99 ) : ( 100 ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_8
	

	namespace EXT_SubModel_9 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {-338.54994316 }} ,
				{ 7 ,  {-361.1632498 }} ,
				{ 9 ,  {-310.56333873 }} ,
				{ 11 ,  {-291.84388737 }} ,
				{ 12 ,  {-290.52672487 }} ,
				{ 14 ,  {-430.73224202 }} ,
				{ 15 ,  {-454.82158737 }} ,
				{ 18 ,  {-190.6470266 }} ,
				{ 19 ,  {-146.53732849 }} ,
				{ 21 ,  {-257.97922489 }} ,
				{ 22 ,  {-234.79191601 }} ,
				{ 25 ,  {-102.26347334 }} ,
				{ 28 ,  {-200.33739348 }} ,
				{ 29 ,  {-196.17622398 }} ,
				{ 30 ,  {-190.99779883 }} ,
				{ 32 ,  {39.44300012 }} ,
				{ 34 ,  {75.33652616 }} ,
				{ 35 ,  {75.607022 }} ,
				{ 40 ,  {-3.85906949 }} ,
				{ 42 ,  {90.67187466 }} ,
				{ 43 ,  {122.37894791 }} ,
				{ 47 ,  {178.09986345 }} ,
				{ 48 ,  {175.64031368 }} ,
				{ 49 ,  {157.32675575 }} ,
				{ 50 ,  {327.27619653 }} ,
				{ 55 ,  {-140.57351312 }} ,
				{ 56 ,  {-172.78010698 }} ,
				{ 58 ,  {-10.71544337 }} ,
				{ 60 ,  {-81.7867005 }} ,
				{ 61 ,  {-76.86275487 }} ,
				{ 62 ,  {-327.50301874 }} ,
				{ 67 ,  {-4.90459143 }} ,
				{ 68 ,  {2.27397289 }} ,
				{ 69 ,  {-30.69897773 }} ,
				{ 70 ,  {48.4233357 }} ,
				{ 72 ,  {144.72865942 }} ,
				{ 73 ,  {94.43377409 }} ,
				{ 76 ,  {419.81179048 }} ,
				{ 79 ,  {294.89065558 }} ,
				{ 80 ,  {294.76468454 }} ,
				{ 81 ,  {270.97867971 }} ,
				{ 85 ,  {114.66116148 }} ,
				{ 86 ,  {111.49818731 }} ,
				{ 88 ,  {130.61554227 }} ,
				{ 89 ,  {128.74971925 }} ,
				{ 91 ,  {195.39419395 }} ,
				{ 93 ,  {212.8171045 }} ,
				{ 94 ,  {219.92766038 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.6753641068935394) ? ( (Feature_41 <= -0.43629851937294006) ? ( (Feature_63 <= 0.04603707045316696) ? ( (Feature_69 <= 1.3683395981788635) ? ( (Feature_67 <= -0.2828321307897568) ? ( (Feature_0 <= 0.7315343022346497) ? ( 6 ) : ( 7 ) ) : ( (Feature_24 <= 0.11547477543354034) ? ( 9 ) : ( (Feature_10 <= -0.1736581176519394) ? ( 11 ) : ( 12 ) ) ) ) : ( (Feature_70 <= 1.243446409702301) ? ( 14 ) : ( 15 ) ) ) : ( (Feature_3 <= 0.17650255654007196) ? ( (Feature_0 <= 0.8880764096975327) ? ( 18 ) : ( 19 ) ) : ( (Feature_92 <= 0.6269004866480827) ? ( 21 ) : ( 22 ) ) ) ) : ( (Feature_81 <= -0.032849349081516266) ? ( (Feature_20 <= -1.6669259667396545) ? ( 25 ) : ( (Feature_18 <= 1.4611056447029114) ? ( (Feature_11 <= -0.9476287961006165) ? ( 28 ) : ( 29 ) ) : ( 30 ) ) ) : ( (Feature_43 <= -0.6221118345856667) ? ( 32 ) : ( (Feature_0 <= 0.4719519875943661) ? ( 34 ) : ( 35 ) ) ) ) ) : ( (Feature_39 <= 0.45573797821998596) ? ( (Feature_1 <= -0.20646128803491592) ? ( (Feature_55 <= -0.2034846395254135) ? ( (Feature_86 <= 0.16654622554779053) ? ( 40 ) : ( (Feature_48 <= 0.008749842643737793) ? ( 42 ) : ( 43 ) ) ) : ( (Feature_82 <= 1.0347885191440582) ? ( (Feature_0 <= -0.30593451857566833) ? ( (Feature_10 <= 0.5667998492717743) ? ( 47 ) : ( 48 ) ) : ( 49 ) ) : ( 50 ) ) ) : ( (Feature_27 <= -0.14331723749637604) ? ( (Feature_19 <= 1.2445380091667175) ? ( (Feature_32 <= -0.5065443515777588) ? ( (Feature_15 <= 1.531017243862152) ? ( 55 ) : ( 56 ) ) : ( (Feature_92 <= -0.36568212509155273) ? ( 58 ) : ( (Feature_88 <= 0.2182067520916462) ? ( 60 ) : ( 61 ) ) ) ) : ( 62 ) ) : ( (Feature_87 <= -0.40442822873592377) ? ( (Feature_64 <= 0.5389995276927948) ? ( (Feature_95 <= 0.04780562222003937) ? ( (Feature_58 <= 1.0675697159022093) ? ( 67 ) : ( 68 ) ) : ( 69 ) ) : ( 70 ) ) : ( (Feature_23 <= 0.6059518903493881) ? ( 72 ) : ( 73 ) ) ) ) ) : ( (Feature_53 <= -0.5848043113946915) ? ( (Feature_74 <= -1.0673075914382935) ? ( 76 ) : ( (Feature_52 <= 0.4866444170475006) ? ( (Feature_98 <= 0.11535844951868057) ? ( 79 ) : ( 80 ) ) : ( 81 ) ) ) : ( (Feature_2 <= -0.32381871342658997) ? ( (Feature_83 <= -0.3267862796783447) ? ( (Feature_92 <= -0.2969035506248474) ? ( 85 ) : ( 86 ) ) : ( (Feature_37 <= 0.5542564541101456) ? ( 88 ) : ( 89 ) ) ) : ( (Feature_11 <= -1.1383799314498901) ? ( 91 ) : ( (Feature_56 <= -0.9485935121774673) ? ( 93 ) : ( 94 ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_9
	

	namespace EXT_SubModel_10 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 7 ,  {-327.50301874 }} ,
				{ 8 ,  {-338.54994316 }} ,
				{ 9 ,  {-361.1632498 }} ,
				{ 12 ,  {-280.96508601 }} ,
				{ 13 ,  {-291.84388737 }} ,
				{ 15 ,  {-306.85826974 }} ,
				{ 16 ,  {-310.56333873 }} ,
				{ 17 ,  {-207.82497721 }} ,
				{ 20 ,  {-86.11645147 }} ,
				{ 21 ,  {-102.26347334 }} ,
				{ 23 ,  {-167.53786194 }} ,
				{ 24 ,  {-196.17622398 }} ,
				{ 29 ,  {39.44300012 }} ,
				{ 31 ,  {111.49818731 }} ,
				{ 33 ,  {75.33652616 }} ,
				{ 34 ,  {75.607022 }} ,
				{ 36 ,  {215.90083762 }} ,
				{ 37 ,  {136.92680038 }} ,
				{ 39 ,  {-55.13785993 }} ,
				{ 40 ,  {-42.10296472 }} ,
				{ 43 ,  {-257.97922489 }} ,
				{ 44 ,  {-234.79191601 }} ,
				{ 45 ,  {-190.6470266 }} ,
				{ 51 ,  {62.60532339 }} ,
				{ 52 ,  {48.4233357 }} ,
				{ 53 ,  {-30.69897773 }} ,
				{ 56 ,  {105.13302469 }} ,
				{ 57 ,  {90.67187466 }} ,
				{ 58 ,  {144.72865942 }} ,
				{ 62 ,  {-172.78010698 }} ,
				{ 63 ,  {-140.57351312 }} ,
				{ 65 ,  {-87.98512255 }} ,
				{ 67 ,  {-81.7867005 }} ,
				{ 70 ,  {-79.78381999 }} ,
				{ 71 ,  {-79.2896338 }} ,
				{ 72 ,  {-76.86275487 }} ,
				{ 75 ,  {-4.90459143 }} ,
				{ 76 ,  {38.19976423 }} ,
				{ 77 ,  {94.43377409 }} ,
				{ 80 ,  {-51.54063841 }} ,
				{ 82 ,  {130.61554227 }} ,
				{ 83 ,  {128.74971925 }} ,
				{ 87 ,  {305.04020477 }} ,
				{ 89 ,  {294.89065558 }} ,
				{ 90 ,  {294.76468454 }} ,
				{ 92 ,  {242.60253144 }} ,
				{ 93 ,  {270.97867971 }} ,
				{ 95 ,  {219.92766038 }} ,
				{ 97 ,  {174.05588768 }} ,
				{ 98 ,  {180.24317892 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.30302830785512924) ? ( (Feature_63 <= -0.03640756197273731) ? ( (Feature_41 <= -0.246329165995121) ? ( (Feature_49 <= 0.4398238956928253) ? ( (Feature_67 <= 0.22968493402004242) ? ( (Feature_36 <= -0.13767200708389282) ? ( (Feature_41 <= -0.7141401767730713) ? ( 7 ) : ( 8 ) ) : ( 9 ) ) : ( (Feature_29 <= 0.05905407667160034) ? ( (Feature_33 <= 0.11326395720243454) ? ( 12 ) : ( 13 ) ) : ( (Feature_36 <= -0.3642171025276184) ? ( 15 ) : ( 16 ) ) ) ) : ( 17 ) ) : ( (Feature_34 <= -0.296059874817729) ? ( (Feature_0 <= 1.087702214717865) ? ( 20 ) : ( 21 ) ) : ( (Feature_95 <= -0.659095823764801) ? ( 23 ) : ( 24 ) ) ) ) : ( (Feature_28 <= 1.040902704000473) ? ( (Feature_62 <= 1.0045172274112701) ? ( (Feature_6 <= 1.4434691667556763) ? ( (Feature_42 <= -1.4231138825416565) ? ( 29 ) : ( (Feature_81 <= -0.40175508707761765) ? ( 31 ) : ( (Feature_73 <= -0.8880945146083832) ? ( 33 ) : ( 34 ) ) ) ) : ( (Feature_80 <= -0.7937065064907074) ? ( 36 ) : ( 37 ) ) ) : ( (Feature_71 <= -0.06713639199733734) ? ( 39 ) : ( 40 ) ) ) : ( (Feature_42 <= 0.41417213529348373) ? ( (Feature_78 <= 0.5527071487158537) ? ( 43 ) : ( 44 ) ) : ( 45 ) ) ) ) : ( (Feature_39 <= 0.45573797821998596) ? ( (Feature_94 <= -0.8046480715274811) ? ( (Feature_37 <= -0.7574999928474426) ? ( (Feature_7 <= 1.0231095552444458) ? ( (Feature_77 <= 0.6092136465013027) ? ( 51 ) : ( 52 ) ) : ( 53 ) ) : ( (Feature_54 <= 0.16667112708091736) ? ( (Feature_67 <= 0.04840823356062174) ? ( 56 ) : ( 57 ) ) : ( 58 ) ) ) : ( (Feature_37 <= 0.8609812557697296) ? ( (Feature_66 <= -0.8442979156970978) ? ( (Feature_81 <= 0.6115191988646984) ? ( 62 ) : ( 63 ) ) : ( (Feature_16 <= -0.47535377740859985) ? ( 65 ) : ( (Feature_84 <= 0.18083008751273155) ? ( 67 ) : ( (Feature_85 <= -0.232138954102993) ? ( (Feature_24 <= 0.607282817363739) ? ( 70 ) : ( 71 ) ) : ( 72 ) ) ) ) ) : ( (Feature_55 <= -0.09484484046697617) ? ( (Feature_89 <= 0.20312420278787613) ? ( 75 ) : ( 76 ) ) : ( 77 ) ) ) ) : ( (Feature_16 <= -0.9206071197986603) ? ( (Feature_15 <= -0.8156405687332153) ? ( 80 ) : ( (Feature_71 <= 0.026132233440876007) ? ( 82 ) : ( 83 ) ) ) : ( (Feature_19 <= -0.05617894418537617) ? ( (Feature_65 <= -0.11817683838307858) ? ( (Feature_65 <= -0.9033989608287811) ? ( 87 ) : ( (Feature_98 <= 0.11535844951868057) ? ( 89 ) : ( 90 ) ) ) : ( (Feature_78 <= -0.08810658007860184) ? ( 92 ) : ( 93 ) ) ) : ( (Feature_61 <= -0.45395542681217194) ? ( 95 ) : ( (Feature_90 <= 0.14679351449012756) ? ( 97 ) : ( 98 ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_10
	

	namespace EXT_SubModel_11 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 7 ,  {-234.46580929 }} ,
				{ 9 ,  {-190.99779883 }} ,
				{ 11 ,  {-196.17622398 }} ,
				{ 12 ,  {-197.78121613 }} ,
				{ 15 ,  {-310.56333873 }} ,
				{ 16 ,  {-290.52672487 }} ,
				{ 17 ,  {-257.97922489 }} ,
				{ 18 ,  {-4.90459143 }} ,
				{ 21 ,  {-454.82158737 }} ,
				{ 23 ,  {-430.73224202 }} ,
				{ 24 ,  {-436.89308609 }} ,
				{ 25 ,  {-338.54994316 }} ,
				{ 29 ,  {-207.82497721 }} ,
				{ 32 ,  {-146.53732849 }} ,
				{ 33 ,  {-140.57351312 }} ,
				{ 34 ,  {-167.53786194 }} ,
				{ 36 ,  {-81.7867005 }} ,
				{ 37 ,  {-102.26347334 }} ,
				{ 38 ,  {114.45423223 }} ,
				{ 43 ,  {183.77184322 }} ,
				{ 44 ,  {144.72865942 }} ,
				{ 45 ,  {305.04020477 }} ,
				{ 48 ,  {75.607022 }} ,
				{ 49 ,  {75.33652616 }} ,
				{ 50 ,  {2.27397289 }} ,
				{ 51 ,  {-172.78010698 }} ,
				{ 54 ,  {48.4233357 }} ,
				{ 56 ,  {-202.60833883 }} ,
				{ 58 ,  {-79.78381999 }} ,
				{ 59 ,  {-107.89147253 }} ,
				{ 64 ,  {270.97867971 }} ,
				{ 65 ,  {278.81453164 }} ,
				{ 68 ,  {212.8171045 }} ,
				{ 69 ,  {219.92766038 }} ,
				{ 71 ,  {195.39419395 }} ,
				{ 73 ,  {175.64031368 }} ,
				{ 75 ,  {178.09986345 }} ,
				{ 76 ,  {180.24317892 }} ,
				{ 81 ,  {94.43377409 }} ,
				{ 82 ,  {90.67187466 }} ,
				{ 83 ,  {130.61554227 }} ,
				{ 86 ,  {157.32675575 }} ,
				{ 87 ,  {167.43350007 }} ,
				{ 88 ,  {233.33694107 }} ,
				{ 91 ,  {-3.85906949 }} ,
				{ 93 ,  {38.19976423 }} ,
				{ 94 ,  {62.60532339 }} ,
				{ 95 ,  {-76.86275487 }} ,
				{ 97 ,  {419.81179048 }} ,
				{ 99 ,  {294.76468454 }} ,
				{ 100 ,  {327.27619653 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= 0.19070805609226227) ? ( (Feature_63 <= 0.9405433237552643) ? ( (Feature_42 <= 0.1823420375585556) ? ( (Feature_49 <= 0.1381973996758461) ? ( (Feature_80 <= -0.457943432033062) ? ( (Feature_62 <= 0.7827870547771454) ? ( (Feature_66 <= -1.3909487128257751) ? ( 7 ) : ( (Feature_51 <= -0.3848596066236496) ? ( 9 ) : ( (Feature_28 <= 0.041486844420433044) ? ( 11 ) : ( 12 ) ) ) ) : ( (Feature_28 <= 1.1597053408622742) ? ( (Feature_71 <= -1.0320560038089752) ? ( 15 ) : ( 16 ) ) : ( 17 ) ) ) : ( 18 ) ) : ( (Feature_90 <= -0.09821522980928421) ? ( (Feature_78 <= 0.40675947070121765) ? ( 21 ) : ( (Feature_79 <= -0.56696368008852) ? ( 23 ) : ( 24 ) ) ) : ( 25 ) ) ) : ( (Feature_49 <= 0.9257956147193909) ? ( (Feature_6 <= 0.47272343933582306) ? ( (Feature_81 <= -1.308159977197647) ? ( 29 ) : ( (Feature_71 <= 0.41610307060182095) ? ( (Feature_4 <= 0.24536718800663948) ? ( 32 ) : ( 33 ) ) : ( 34 ) ) ) : ( (Feature_84 <= 0.9994686357676983) ? ( 36 ) : ( 37 ) ) ) : ( 38 ) ) ) : ( (Feature_34 <= 1.4876315593719482) ? ( (Feature_48 <= -0.12719183787703514) ? ( (Feature_6 <= -0.2904358506202698) ? ( (Feature_49 <= 0.785930261015892) ? ( 43 ) : ( 44 ) ) : ( 45 ) ) : ( (Feature_99 <= 0.6238366067409515) ? ( (Feature_61 <= 0.2656939774751663) ? ( 48 ) : ( 49 ) ) : ( 50 ) ) ) : ( 51 ) ) ) : ( (Feature_58 <= -1.1562639474868774) ? ( (Feature_67 <= -0.689279168844223) ? ( 54 ) : ( (Feature_71 <= -0.9228631108999252) ? ( 56 ) : ( (Feature_88 <= 0.4121329337358475) ? ( 58 ) : ( 59 ) ) ) ) : ( (Feature_93 <= 0.5080636590719223) ? ( (Feature_36 <= -0.9381733238697052) ? ( (Feature_55 <= -0.6814622059464455) ? ( (Feature_20 <= 0.45844703912734985) ? ( 64 ) : ( 65 ) ) : ( (Feature_99 <= -0.25921187736094) ? ( (Feature_32 <= 0.2695363163948059) ? ( 68 ) : ( 69 ) ) : ( (Feature_4 <= -1.3604208528995514) ? ( 71 ) : ( (Feature_44 <= 0.0276942178606987) ? ( 73 ) : ( (Feature_41 <= 0.37929469626396894) ? ( 75 ) : ( 76 ) ) ) ) ) ) : ( (Feature_79 <= 0.7640470266342163) ? ( (Feature_58 <= -0.15334169566631317) ? ( (Feature_79 <= 0.2552136182785034) ? ( (Feature_29 <= -0.840678608044982) ? ( 81 ) : ( 82 ) ) : ( 83 ) ) : ( (Feature_58 <= 1.4379669725894928) ? ( (Feature_31 <= 0.3082009367644787) ? ( 86 ) : ( 87 ) ) : ( 88 ) ) ) : ( (Feature_25 <= 0.3935632109642029) ? ( (Feature_69 <= -0.6693305224180222) ? ( 91 ) : ( (Feature_59 <= 0.8756966590881348) ? ( 93 ) : ( 94 ) ) ) : ( 95 ) ) ) ) : ( (Feature_21 <= -0.6230660825967789) ? ( 97 ) : ( (Feature_79 <= 1.1051301062107086) ? ( 99 ) : ( 100 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_11
	

	namespace EXT_SubModel_12 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 5 ,  {-290.52672487 }} ,
				{ 6 ,  {-327.50301874 }} ,
				{ 9 ,  {-207.82497721 }} ,
				{ 11 ,  {-234.46580929 }} ,
				{ 12 ,  {-234.79191601 }} ,
				{ 14 ,  {-146.53732849 }} ,
				{ 15 ,  {-190.6470266 }} ,
				{ 19 ,  {-338.54994316 }} ,
				{ 20 ,  {-361.1632498 }} ,
				{ 22 ,  {-310.56333873 }} ,
				{ 23 ,  {-306.85826974 }} ,
				{ 24 ,  {-454.82158737 }} ,
				{ 28 ,  {-280.96508601 }} ,
				{ 30 ,  {-197.78121613 }} ,
				{ 31 ,  {-196.17622398 }} ,
				{ 34 ,  {-55.13785993 }} ,
				{ 35 ,  {-102.26347334 }} ,
				{ 38 ,  {-4.90459143 }} ,
				{ 39 ,  {-30.69897773 }} ,
				{ 40 ,  {39.44300012 }} ,
				{ 44 ,  {114.45423223 }} ,
				{ 45 ,  {111.49818731 }} ,
				{ 46 ,  {75.33652616 }} ,
				{ 47 ,  {215.90083762 }} ,
				{ 53 ,  {294.76468454 }} ,
				{ 54 ,  {245.21860441 }} ,
				{ 59 ,  {167.43350007 }} ,
				{ 60 ,  {157.32675575 }} ,
				{ 61 ,  {144.72865942 }} ,
				{ 65 ,  {178.09986345 }} ,
				{ 66 ,  {180.24317892 }} ,
				{ 67 ,  {174.05588768 }} ,
				{ 68 ,  {195.39419395 }} ,
				{ 71 ,  {90.67187466 }} ,
				{ 72 ,  {105.13302469 }} ,
				{ 74 ,  {130.61554227 }} ,
				{ 76 ,  {114.66116148 }} ,
				{ 77 ,  {122.37894791 }} ,
				{ 78 ,  {-140.57351312 }} ,
				{ 83 ,  {305.04020477 }} ,
				{ 84 ,  {294.89065558 }} ,
				{ 85 ,  {327.27619653 }} ,
				{ 86 ,  {233.33694107 }} ,
				{ 87 ,  {419.81179048 }} ,
				{ 92 ,  {-51.54063841 }} ,
				{ 93 ,  {-3.85906949 }} ,
				{ 95 ,  {-107.89147253 }} ,
				{ 96 ,  {-87.98512255 }} ,
				{ 98 ,  {-172.78010698 }} ,
				{ 99 ,  {-202.60833883 }} ,
				{ 102 ,  {38.19976423 }} ,
				{ 103 ,  {94.43377409 }} ,
				{ 105 ,  {278.81453164 }} ,
				{ 106 ,  {212.8171045 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.10562758147716522) ? ( (Feature_41 <= -0.594190314412117) ? ( (Feature_6 <= 0.23566212505102158) ? ( (Feature_9 <= -0.3226659223437309) ? ( (Feature_26 <= 1.2737480998039246) ? ( 5 ) : ( 6 ) ) : ( (Feature_14 <= 1.0509714782238007) ? ( (Feature_77 <= -0.30994319915771484) ? ( 9 ) : ( (Feature_49 <= -0.9327569901943207) ? ( 11 ) : ( 12 ) ) ) : ( (Feature_30 <= -0.639786034822464) ? ( 14 ) : ( 15 ) ) ) ) : ( (Feature_13 <= -0.11438682675361633) ? ( (Feature_74 <= -0.6334052383899689) ? ( (Feature_64 <= 0.41254377365112305) ? ( 19 ) : ( 20 ) ) : ( (Feature_15 <= 0.21118833124637604) ? ( 22 ) : ( 23 ) ) ) : ( 24 ) ) ) : ( (Feature_8 <= 0.4328227788209915) ? ( (Feature_48 <= -0.7294075191020966) ? ( (Feature_16 <= -0.7771266289055347) ? ( 28 ) : ( (Feature_40 <= 0.11339165642857552) ? ( 30 ) : ( 31 ) ) ) : ( (Feature_25 <= 0.10013137012720108) ? ( (Feature_71 <= -0.1822967380285263) ? ( 34 ) : ( 35 ) ) : ( (Feature_34 <= 1.1645641922950745) ? ( (Feature_79 <= -1.2030313313007355) ? ( 38 ) : ( 39 ) ) : ( 40 ) ) ) ) : ( (Feature_9 <= 0.576729342341423) ? ( (Feature_27 <= 0.13392436504364014) ? ( (Feature_56 <= -0.7654868960380554) ? ( 44 ) : ( 45 ) ) : ( 46 ) ) : ( 47 ) ) ) ) : ( (Feature_94 <= 0.49792642891407013) ? ( (Feature_35 <= 0.6819241046905518) ? ( (Feature_91 <= 1.6974459886550903) ? ( (Feature_58 <= -1.0012833178043365) ? ( (Feature_9 <= 1.0572356581687927) ? ( 53 ) : ( 54 ) ) : ( (Feature_81 <= 0.8012186288833618) ? ( (Feature_28 <= -0.1927860677242279) ? ( (Feature_88 <= 0.7249253839254379) ? ( (Feature_88 <= 0.41732148826122284) ? ( 59 ) : ( 60 ) ) : ( 61 ) ) : ( (Feature_25 <= 0.0063040731474757195) ? ( (Feature_14 <= -0.02466893196105957) ? ( (Feature_49 <= 1.3781961798667908) ? ( 65 ) : ( 66 ) ) : ( 67 ) ) : ( 68 ) ) ) : ( (Feature_60 <= -0.6723149418830872) ? ( (Feature_20 <= -1.9354094862937927) ? ( 71 ) : ( 72 ) ) : ( (Feature_93 <= -1.200139343738556) ? ( 74 ) : ( (Feature_96 <= 0.33954253885895014) ? ( 76 ) : ( 77 ) ) ) ) ) ) : ( 78 ) ) : ( (Feature_17 <= 0.44940774142742157) ? ( (Feature_44 <= -0.5706353783607483) ? ( (Feature_54 <= 0.5292426645755768) ? ( (Feature_12 <= 0.2778349816799164) ? ( 83 ) : ( 84 ) ) : ( 85 ) ) : ( 86 ) ) : ( 87 ) ) ) : ( (Feature_16 <= 0.5505604594945908) ? ( (Feature_35 <= 0.44739965815097094) ? ( (Feature_68 <= -0.21371042728424072) ? ( (Feature_73 <= 0.9148807227611542) ? ( 92 ) : ( 93 ) ) : ( (Feature_52 <= 0.24062233418226242) ? ( 95 ) : ( 96 ) ) ) : ( (Feature_46 <= 0.8731784075498581) ? ( 98 ) : ( 99 ) ) ) : ( (Feature_46 <= 0.28643491491675377) ? ( (Feature_82 <= -1.1118379533290863) ? ( 102 ) : ( 103 ) ) : ( (Feature_93 <= -0.9592921137809753) ? ( 105 ) : ( 106 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_12
	

	namespace EXT_SubModel_13 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 5 ,  {-430.73224202 }} ,
				{ 6 ,  {-454.82158737 }} ,
				{ 9 ,  {-361.1632498 }} ,
				{ 11 ,  {-338.54994316 }} ,
				{ 12 ,  {-327.50301874 }} ,
				{ 14 ,  {-290.52672487 }} ,
				{ 15 ,  {-306.85826974 }} ,
				{ 19 ,  {-280.96508601 }} ,
				{ 20 ,  {-291.84388737 }} ,
				{ 23 ,  {-257.97922489 }} ,
				{ 26 ,  {-190.99779883 }} ,
				{ 27 ,  {-190.6470266 }} ,
				{ 29 ,  {-200.33739348 }} ,
				{ 30 ,  {-207.82497721 }} ,
				{ 32 ,  {-167.53786194 }} ,
				{ 33 ,  {-146.53732849 }} ,
				{ 34 ,  {-436.89308609 }} ,
				{ 37 ,  {215.90083762 }} ,
				{ 40 ,  {114.45423223 }} ,
				{ 41 ,  {111.49818731 }} ,
				{ 42 ,  {136.92680038 }} ,
				{ 45 ,  {-55.13785993 }} ,
				{ 46 ,  {-86.11645147 }} ,
				{ 48 ,  {-196.17622398 }} ,
				{ 50 ,  {-234.46580929 }} ,
				{ 51 ,  {-234.79191601 }} ,
				{ 56 ,  {-30.69897773 }} ,
				{ 58 ,  {-4.90459143 }} ,
				{ 59 ,  {-10.71544337 }} ,
				{ 61 ,  {48.4233357 }} ,
				{ 62 ,  {62.60532339 }} ,
				{ 66 ,  {233.33694107 }} ,
				{ 70 ,  {167.43350007 }} ,
				{ 72 ,  {174.05588768 }} ,
				{ 73 ,  {175.64031368 }} ,
				{ 74 ,  {157.32675575 }} ,
				{ 75 ,  {130.61554227 }} ,
				{ 79 ,  {278.81453164 }} ,
				{ 81 ,  {294.76468454 }} ,
				{ 82 ,  {305.04020477 }} ,
				{ 83 ,  {327.27619653 }} ,
				{ 85 ,  {245.21860441 }} ,
				{ 86 ,  {212.8171045 }} ,
				{ 90 ,  {122.37894791 }} ,
				{ 91 ,  {114.66116148 }} ,
				{ 92 ,  {128.74971925 }} ,
				{ 94 ,  {-3.85906949 }} ,
				{ 95 ,  {38.19976423 }} ,
				{ 97 ,  {-202.60833883 }} ,
				{ 99 ,  {-140.57351312 }} ,
				{ 100 ,  {-107.89147253 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.30302830785512924) ? ( (Feature_4 <= 0.13671354949474335) ? ( (Feature_99 <= 0.14852019399404526) ? ( (Feature_54 <= -0.9440477192401886) ? ( (Feature_40 <= -0.5453246384859085) ? ( 5 ) : ( 6 ) ) : ( (Feature_13 <= -0.6353059709072113) ? ( (Feature_97 <= -0.2097460776567459) ? ( 9 ) : ( (Feature_87 <= -0.33261488378047943) ? ( 11 ) : ( 12 ) ) ) : ( (Feature_22 <= -0.7734712362289429) ? ( 14 ) : ( 15 ) ) ) ) : ( (Feature_66 <= 1.9008798003196716) ? ( (Feature_30 <= -1.270420253276825) ? ( (Feature_96 <= -0.4426127225160599) ? ( 19 ) : ( 20 ) ) : ( (Feature_10 <= 0.5457843989133835) ? ( (Feature_18 <= -0.894097626209259) ? ( 23 ) : ( (Feature_45 <= 0.595599889755249) ? ( (Feature_88 <= 0.06600713729858398) ? ( 26 ) : ( 27 ) ) : ( (Feature_21 <= 0.6923558115959167) ? ( 29 ) : ( 30 ) ) ) ) : ( (Feature_83 <= 0.46674492955207825) ? ( 32 ) : ( 33 ) ) ) ) : ( 34 ) ) ) : ( (Feature_19 <= 0.10323789343237877) ? ( (Feature_80 <= -0.8885225355625153) ? ( 37 ) : ( (Feature_9 <= 0.7682058066129684) ? ( (Feature_7 <= 0.4330515074543655) ? ( 40 ) : ( 41 ) ) : ( 42 ) ) ) : ( (Feature_27 <= 0.6377706229686737) ? ( (Feature_12 <= 0.09609571099281311) ? ( 45 ) : ( 46 ) ) : ( (Feature_88 <= -0.410891130566597) ? ( 48 ) : ( (Feature_18 <= -0.05526895262300968) ? ( 50 ) : ( 51 ) ) ) ) ) ) : ( (Feature_62 <= 0.6714437007904053) ? ( (Feature_31 <= -0.8414900302886963) ? ( (Feature_65 <= 0.8963700607419014) ? ( (Feature_12 <= -0.48079776763916016) ? ( 56 ) : ( (Feature_20 <= 1.0469533503055573) ? ( 58 ) : ( 59 ) ) ) : ( (Feature_28 <= 0.897289365530014) ? ( 61 ) : ( 62 ) ) ) : ( (Feature_81 <= 1.1101313829421997) ? ( (Feature_49 <= -0.43147751688957214) ? ( (Feature_6 <= -1.4086045622825623) ? ( 66 ) : ( (Feature_98 <= 0.5915053188800812) ? ( (Feature_21 <= 0.9988370388746262) ? ( (Feature_26 <= 0.19175654649734497) ? ( 70 ) : ( (Feature_78 <= -0.4479060973972082) ? ( 72 ) : ( 73 ) ) ) : ( 74 ) ) : ( 75 ) ) ) : ( (Feature_84 <= -0.04372594133019447) ? ( (Feature_54 <= 1.0497495532035828) ? ( (Feature_3 <= -0.5141024328768253) ? ( 79 ) : ( (Feature_15 <= 0.4569655805826187) ? ( 81 ) : ( 82 ) ) ) : ( 83 ) ) : ( (Feature_43 <= 0.39309918135404587) ? ( 85 ) : ( 86 ) ) ) ) : ( (Feature_28 <= -0.12453746795654297) ? ( (Feature_21 <= 1.2205511927604675) ? ( (Feature_82 <= 0.808178573846817) ? ( 90 ) : ( 91 ) ) : ( 92 ) ) : ( (Feature_31 <= -0.0878027081489563) ? ( 94 ) : ( 95 ) ) ) ) ) : ( (Feature_90 <= 0.3143441304564476) ? ( 97 ) : ( (Feature_72 <= 0.6555492281913757) ? ( 99 ) : ( 100 ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_13
	

	namespace EXT_SubModel_14 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 7 ,  {-257.97922489 }} ,
				{ 8 ,  {-280.96508601 }} ,
				{ 10 ,  {-291.84388737 }} ,
				{ 11 ,  {-310.56333873 }} ,
				{ 14 ,  {-190.6470266 }} ,
				{ 15 ,  {-197.78121613 }} ,
				{ 17 ,  {-234.46580929 }} ,
				{ 18 ,  {-234.79191601 }} ,
				{ 20 ,  {-146.53732849 }} ,
				{ 21 ,  {-86.11645147 }} ,
				{ 25 ,  {-361.1632498 }} ,
				{ 26 ,  {-338.54994316 }} ,
				{ 27 ,  {-306.85826974 }} ,
				{ 28 ,  {-436.89308609 }} ,
				{ 31 ,  {183.77184322 }} ,
				{ 34 ,  {114.45423223 }} ,
				{ 35 ,  {75.607022 }} ,
				{ 36 ,  {39.44300012 }} ,
				{ 38 ,  {-102.26347334 }} ,
				{ 40 ,  {-55.13785993 }} ,
				{ 41 ,  {-42.10296472 }} ,
				{ 46 ,  {62.60532339 }} ,
				{ 47 ,  {105.13302469 }} ,
				{ 49 ,  {2.27397289 }} ,
				{ 51 ,  {-81.7867005 }} ,
				{ 52 ,  {-54.81786632 }} ,
				{ 55 ,  {-51.54063841 }} ,
				{ 57 ,  {111.49818731 }} ,
				{ 59 ,  {136.92680038 }} ,
				{ 60 ,  {144.72865942 }} ,
				{ 63 ,  {327.27619653 }} ,
				{ 65 ,  {294.76468454 }} ,
				{ 66 ,  {305.04020477 }} ,
				{ 71 ,  {174.05588768 }} ,
				{ 72 ,  {175.64031368 }} ,
				{ 73 ,  {167.43350007 }} ,
				{ 74 ,  {195.39419395 }} ,
				{ 76 ,  {278.81453164 }} ,
				{ 79 ,  {242.60253144 }} ,
				{ 80 ,  {233.33694107 }} ,
				{ 82 ,  {212.8171045 }} ,
				{ 83 ,  {219.92766038 }} ,
				{ 88 ,  {-107.89147253 }} ,
				{ 89 ,  {-79.2896338 }} ,
				{ 90 ,  {-140.57351312 }} ,
				{ 92 ,  {-3.85906949 }} ,
				{ 93 ,  {-30.69897773 }} ,
				{ 98 ,  {122.37894791 }} ,
				{ 99 ,  {128.74971925 }} ,
				{ 100 ,  {114.66116148 }} ,
				{ 101 ,  {94.43377409 }} ,
				{ 102 ,  {38.19976423 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.6753641068935394) ? ( (Feature_41 <= -0.004412546753883362) ? ( (Feature_96 <= 0.4126022271811962) ? ( (Feature_73 <= 1.0144427716732025) ? ( (Feature_92 <= 0.18422475457191467) ? ( (Feature_48 <= -0.40914925932884216) ? ( (Feature_87 <= 0.03551480174064636) ? ( 7 ) : ( 8 ) ) : ( (Feature_1 <= -1.071372151374817) ? ( 10 ) : ( 11 ) ) ) : ( (Feature_11 <= -1.4904899597167969) ? ( (Feature_33 <= -0.11953088268637657) ? ( 14 ) : ( 15 ) ) : ( (Feature_42 <= -0.5053147450089455) ? ( 17 ) : ( 18 ) ) ) ) : ( (Feature_69 <= -1.4958479702472687) ? ( 20 ) : ( 21 ) ) ) : ( (Feature_17 <= 0.770659327507019) ? ( (Feature_42 <= 0.6300369128584862) ? ( (Feature_12 <= -0.02751469612121582) ? ( 25 ) : ( 26 ) ) : ( 27 ) ) : ( 28 ) ) ) : ( (Feature_35 <= 0.04857935756444931) ? ( (Feature_12 <= -0.4190571457147598) ? ( 31 ) : ( (Feature_16 <= 1.250382900238037) ? ( (Feature_63 <= 0.5511167738586664) ? ( 34 ) : ( 35 ) ) : ( 36 ) ) ) : ( (Feature_90 <= -0.386052668094635) ? ( 38 ) : ( (Feature_89 <= -0.630501039326191) ? ( 40 ) : ( 41 ) ) ) ) ) : ( (Feature_81 <= 1.0959216356277466) ? ( (Feature_20 <= -0.7761925160884857) ? ( (Feature_5 <= 0.03765017166733742) ? ( (Feature_48 <= -0.3833359330892563) ? ( 46 ) : ( 47 ) ) : ( (Feature_94 <= -1.158968985080719) ? ( 49 ) : ( (Feature_36 <= -0.05055934190750122) ? ( 51 ) : ( 52 ) ) ) ) : ( (Feature_15 <= -0.8517882525920868) ? ( (Feature_26 <= 0.19318919256329536) ? ( 55 ) : ( (Feature_27 <= 0.12357759475708008) ? ( 57 ) : ( (Feature_74 <= -0.4250186160206795) ? ( 59 ) : ( 60 ) ) ) ) : ( (Feature_51 <= -0.5254173874855042) ? ( (Feature_60 <= -0.06435956805944443) ? ( 63 ) : ( (Feature_46 <= -0.7626602798700333) ? ( 65 ) : ( 66 ) ) ) : ( (Feature_34 <= -0.25415564328432083) ? ( (Feature_48 <= 0.45907915011048317) ? ( (Feature_92 <= 0.8384277820587158) ? ( (Feature_23 <= -0.1068533193320036) ? ( 71 ) : ( 72 ) ) : ( 73 ) ) : ( 74 ) ) : ( (Feature_62 <= -0.4225264601409435) ? ( 76 ) : ( (Feature_94 <= 0.5721584558486938) ? ( (Feature_36 <= -0.888342022895813) ? ( 79 ) : ( 80 ) ) : ( (Feature_55 <= 0.7725050672888756) ? ( 82 ) : ( 83 ) ) ) ) ) ) ) ) : ( (Feature_23 <= 0.2847796455025673) ? ( (Feature_98 <= 0.01774819940328598) ? ( (Feature_28 <= -0.6613170951604843) ? ( (Feature_34 <= 0.28653132915496826) ? ( 88 ) : ( 89 ) ) : ( 90 ) ) : ( (Feature_27 <= 0.5063816010951996) ? ( 92 ) : ( 93 ) ) ) : ( (Feature_77 <= 1.7662224769592285) ? ( (Feature_66 <= 0.33709584549069405) ? ( (Feature_43 <= 1.3153671622276306) ? ( (Feature_99 <= 1.8039413690567017) ? ( 98 ) : ( 99 ) ) : ( 100 ) ) : ( 101 ) ) : ( 102 ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_14
	

	namespace EXT_SubModel_15 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 4 ,  {-454.82158737 }} ,
				{ 7 ,  {-361.1632498 }} ,
				{ 9 ,  {-327.50301874 }} ,
				{ 10 ,  {-338.54994316 }} ,
				{ 12 ,  {-310.56333873 }} ,
				{ 14 ,  {-290.52672487 }} ,
				{ 15 ,  {-291.84388737 }} ,
				{ 17 ,  {-146.53732849 }} ,
				{ 20 ,  {-207.82497721 }} ,
				{ 22 ,  {-234.79191601 }} ,
				{ 23 ,  {-234.46580929 }} ,
				{ 24 ,  {-257.97922489 }} ,
				{ 28 ,  {-280.96508601 }} ,
				{ 30 ,  {-190.99779883 }} ,
				{ 31 ,  {-196.17622398 }} ,
				{ 33 ,  {-86.11645147 }} ,
				{ 34 ,  {-102.26347334 }} ,
				{ 38 ,  {136.92680038 }} ,
				{ 40 ,  {111.49818731 }} ,
				{ 41 ,  {114.45423223 }} ,
				{ 43 ,  {75.33652616 }} ,
				{ 44 ,  {39.44300012 }} ,
				{ 46 ,  {183.77184322 }} ,
				{ 47 ,  {215.90083762 }} ,
				{ 53 ,  {-140.57351312 }} ,
				{ 54 ,  {-172.78010698 }} ,
				{ 58 ,  {-79.78381999 }} ,
				{ 59 ,  {-79.2896338 }} ,
				{ 60 ,  {-81.7867005 }} ,
				{ 61 ,  {-107.89147253 }} ,
				{ 64 ,  {-87.98512255 }} ,
				{ 65 ,  {-30.69897773 }} ,
				{ 68 ,  {-10.71544337 }} ,
				{ 70 ,  {2.27397289 }} ,
				{ 71 ,  {-3.85906949 }} ,
				{ 72 ,  {38.19976423 }} ,
				{ 74 ,  {114.66116148 }} ,
				{ 75 ,  {327.27619653 }} ,
				{ 81 ,  {178.09986345 }} ,
				{ 83 ,  {212.8171045 }} ,
				{ 84 ,  {219.92766038 }} ,
				{ 86 ,  {245.21860441 }} ,
				{ 87 ,  {242.60253144 }} ,
				{ 89 ,  {278.81453164 }} ,
				{ 91 ,  {294.89065558 }} ,
				{ 92 ,  {305.04020477 }} ,
				{ 93 ,  {62.60532339 }} ,
				{ 95 ,  {-4.90459143 }} ,
				{ 98 ,  {94.43377409 }} ,
				{ 99 ,  {90.67187466 }} ,
				{ 100 ,  {144.72865942 }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = (Feature_80 <= -0.3630160912871361) ? ( (Feature_41 <= -0.594190314412117) ? ( (Feature_25 <= 0.39318130910396576) ? ( (Feature_59 <= -1.5784090757369995) ? ( 4 ) : ( (Feature_24 <= -0.4465591460466385) ? ( (Feature_86 <= -0.45904920995235443) ? ( 7 ) : ( (Feature_35 <= -0.8553631007671356) ? ( 9 ) : ( 10 ) ) ) : ( (Feature_52 <= -0.3980143070220947) ? ( 12 ) : ( (Feature_38 <= -0.29020312428474426) ? ( 14 ) : ( 15 ) ) ) ) ) : ( (Feature_17 <= -0.9611050188541412) ? ( 17 ) : ( (Feature_55 <= 0.353068545460701) ? ( (Feature_23 <= -0.255768284201622) ? ( 20 ) : ( (Feature_73 <= -0.6931064054369926) ? ( 22 ) : ( 23 ) ) ) : ( 24 ) ) ) ) : ( (Feature_63 <= -0.03693396411836147) ? ( (Feature_91 <= 0.8134230077266693) ? ( (Feature_35 <= -0.3309071771800518) ? ( 28 ) : ( (Feature_74 <= 0.652559444308281) ? ( 30 ) : ( 31 ) ) ) : ( (Feature_91 <= 1.6004826128482819) ? ( 33 ) : ( 34 ) ) ) : ( (Feature_95 <= 1.0373153686523438) ? ( (Feature_20 <= 0.1716141700744629) ? ( (Feature_93 <= -0.789446234703064) ? ( 38 ) : ( (Feature_2 <= -0.1428384929895401) ? ( 40 ) : ( 41 ) ) ) : ( (Feature_0 <= 0.0634545274078846) ? ( 43 ) : ( 44 ) ) ) : ( (Feature_89 <= 0.3071286454796791) ? ( 46 ) : ( 47 ) ) ) ) ) : ( (Feature_49 <= -0.05378713831305504) ? ( (Feature_82 <= 1.0590212047100067) ? ( (Feature_3 <= -0.23751197010278702) ? ( (Feature_2 <= -0.6826061904430389) ? ( (Feature_50 <= -0.2174677848815918) ? ( 53 ) : ( 54 ) ) : ( (Feature_89 <= 1.3983493745326996) ? ( (Feature_95 <= 0.35563551634550095) ? ( (Feature_39 <= -0.6664409041404724) ? ( 58 ) : ( 59 ) ) : ( 60 ) ) : ( 61 ) ) ) : ( (Feature_43 <= -0.4013911038637161) ? ( (Feature_70 <= -0.2317982017993927) ? ( 64 ) : ( 65 ) ) : ( (Feature_56 <= -0.2961715739220381) ? ( (Feature_51 <= -0.3243359625339508) ? ( 68 ) : ( (Feature_6 <= 0.629800233989954) ? ( 70 ) : ( 71 ) ) ) : ( 72 ) ) ) ) : ( (Feature_50 <= 0.661476194858551) ? ( 74 ) : ( 75 ) ) ) : ( (Feature_37 <= 0.8204372823238373) ? ( (Feature_63 <= 1.6694377064704895) ? ( (Feature_96 <= -0.11630591750144958) ? ( (Feature_26 <= 0.29716482758522034) ? ( (Feature_53 <= -0.8736667335033417) ? ( 81 ) : ( (Feature_81 <= -0.7833847105503082) ? ( 83 ) : ( 84 ) ) ) : ( (Feature_72 <= 0.04809485375881195) ? ( 86 ) : ( 87 ) ) ) : ( (Feature_64 <= -0.5242940485477448) ? ( 89 ) : ( (Feature_63 <= 1.6067866683006287) ? ( 91 ) : ( 92 ) ) ) ) : ( 93 ) ) : ( (Feature_90 <= -0.30294399708509445) ? ( 95 ) : ( (Feature_49 <= 1.005541443824768) ? ( (Feature_0 <= -0.07509955763816833) ? ( 98 ) : ( 99 ) ) : ( 100 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_15
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
		std::vector<tTable> lTreeScores = { 
			EXT_SubModel_0::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_1::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_2::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_3::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_4::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_5::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_6::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_7::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_8::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_9::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_10::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_11::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_12::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_13::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_14::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99),
			EXT_SubModel_15::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99)
		};

		tTable lAggregatedTable = aggregate_rf_scores(lTreeScores, {"Estimator"});


		tTable lTable = lAggregatedTable;


		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/RandomReg_100.csv");
	return 0;
}
