// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : RandomForestRegressor
// Dataset : diabetes

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_RandomForestRegressor_diabetes.exe ml2cpp-demo_RandomForestRegressor_diabetes.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	namespace EXT_SubModel_0 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {150. }} ,
				{ 7 ,  {200. }} ,
				{ 9 ,  {77. }} ,
				{ 11 ,  {101. }} ,
				{ 12 ,  {113. }} ,
				{ 20 ,  {48. }} ,
				{ 21 ,  {45. }} ,
				{ 22 ,  {37. }} ,
				{ 24 ,  {61. }} ,
				{ 25 ,  {60. }} ,
				{ 29 ,  {63. }} ,
				{ 30 ,  {70. }} ,
				{ 34 ,  {96. }} ,
				{ 35 ,  {104. }} ,
				{ 38 ,  {142. }} ,
				{ 39 ,  {160. }} ,
				{ 41 ,  {101. }} ,
				{ 42 ,  {125. }} ,
				{ 43 ,  {51. }} ,
				{ 48 ,  {90. }} ,
				{ 49 ,  {83. }} ,
				{ 52 ,  {74. }} ,
				{ 53 ,  {77. }} ,
				{ 55 ,  {68. }} ,
				{ 56 ,  {67. }} ,
				{ 60 ,  {60. }} ,
				{ 62 ,  {55. }} ,
				{ 63 ,  {53. }} ,
				{ 64 ,  {39. }} ,
				{ 67 ,  {72. }} ,
				{ 68 ,  {71. }} ,
				{ 69 ,  {59. }} ,
				{ 71 ,  {128. }} ,
				{ 72 ,  {113. }} ,
				{ 76 ,  {88. }} ,
				{ 77 ,  {96. }} ,
				{ 78 ,  {64. }} ,
				{ 81 ,  {31. }} ,
				{ 82 ,  {25. }} ,
				{ 84 ,  {75. }} ,
				{ 87 ,  {49. }} ,
				{ 88 ,  {48. }} ,
				{ 90 ,  {54. }} ,
				{ 92 ,  {52. }} ,
				{ 93 ,  {51. }} ,
				{ 94 ,  {135. }} ,
				{ 101 ,  {129. }} ,
				{ 103 ,  {78. }} ,
				{ 104 ,  {83. }} ,
				{ 106 ,  {160. }} ,
				{ 107 ,  {132. }} ,
				{ 110 ,  {55. }} ,
				{ 111 ,  {49. }} ,
				{ 114 ,  {127. }} ,
				{ 119 ,  {89. }} ,
				{ 120 ,  {88. }} ,
				{ 121 ,  {91. }} ,
				{ 122 ,  {97. }} ,
				{ 123 ,  {107. }} ,
				{ 124 ,  {53. }} ,
				{ 125 ,  {146. }} ,
				{ 126 ,  {179. }} ,
				{ 128 ,  {72. }} ,
				{ 132 ,  {97. }} ,
				{ 133 ,  {98. }} ,
				{ 134 ,  {92. }} ,
				{ 136 ,  {84. }} ,
				{ 137 ,  {87. }} ,
				{ 142 ,  {201. }} ,
				{ 143 ,  {210. }} ,
				{ 145 ,  {182. }} ,
				{ 146 ,  {184. }} ,
				{ 148 ,  {145. }} ,
				{ 149 ,  {121. }} ,
				{ 154 ,  {147. }} ,
				{ 155 ,  {144. }} ,
				{ 157 ,  {140. }} ,
				{ 158 ,  {141. }} ,
				{ 159 ,  {110. }} ,
				{ 161 ,  {95. }} ,
				{ 162 ,  {103. }} ,
				{ 169 ,  {178. }} ,
				{ 171 ,  {151. }} ,
				{ 172 ,  {162. }} ,
				{ 173 ,  {131. }} ,
				{ 176 ,  {126. }} ,
				{ 181 ,  {94. }} ,
				{ 183 ,  {91. }} ,
				{ 184 ,  {90. }} ,
				{ 186 ,  {85. }} ,
				{ 187 ,  {88. }} ,
				{ 189 ,  {102. }} ,
				{ 190 ,  {95. }} ,
				{ 192 ,  {78. }} ,
				{ 193 ,  {68. }} ,
				{ 196 ,  {200. }} ,
				{ 198 ,  {164. }} ,
				{ 199 ,  {180. }} ,
				{ 200 ,  {115. }} ,
				{ 202 ,  {220. }} ,
				{ 203 ,  {192. }} ,
				{ 209 ,  {272. }} ,
				{ 210 ,  {252. }} ,
				{ 214 ,  {190. }} ,
				{ 215 ,  {185. }} ,
				{ 217 ,  {200. }} ,
				{ 218 ,  {198. }} ,
				{ 219 ,  {161. }} ,
				{ 223 ,  {52. }} ,
				{ 224 ,  {58. }} ,
				{ 227 ,  {92. }} ,
				{ 229 ,  {93. }} ,
				{ 230 ,  {94. }} ,
				{ 231 ,  {101. }} ,
				{ 232 ,  {150. }} ,
				{ 235 ,  {258. }} ,
				{ 237 ,  {242. }} ,
				{ 238 ,  {225. }} ,
				{ 241 ,  {302. }} ,
				{ 245 ,  {153. }} ,
				{ 249 ,  {88. }} ,
				{ 250 ,  {84. }} ,
				{ 251 ,  {109. }} ,
				{ 253 ,  {134. }} ,
				{ 254 ,  {128. }} ,
				{ 257 ,  {173. }} ,
				{ 258 ,  {170. }} ,
				{ 259 ,  {142. }} ,
				{ 262 ,  {168. }} ,
				{ 264 ,  {178. }} ,
				{ 266 ,  {262. }} ,
				{ 268 ,  {245. }} ,
				{ 269 ,  {242. }} ,
				{ 273 ,  {151. }} ,
				{ 275 ,  {174. }} ,
				{ 276 ,  {172. }} ,
				{ 279 ,  {111. }} ,
				{ 280 ,  {122. }} ,
				{ 282 ,  {137. }} ,
				{ 283 ,  {150. }} ,
				{ 284 ,  {230. }} ,
				{ 288 ,  {233. }} ,
				{ 289 ,  {229. }} ,
				{ 290 ,  {220. }} ,
				{ 291 ,  {268. }} ,
				{ 293 ,  {69. }} ,
				{ 295 ,  {121. }} ,
				{ 296 ,  {131. }} ,
				{ 298 ,  {317. }} ,
				{ 299 ,  {306. }} ,
				{ 304 ,  {252. }} ,
				{ 306 ,  {107. }} ,
				{ 308 ,  {179. }} ,
				{ 309 ,  {163. }} ,
				{ 313 ,  {44. }} ,
				{ 314 ,  {48. }} ,
				{ 315 ,  {66. }} ,
				{ 318 ,  {135. }} ,
				{ 319 ,  {141. }} ,
				{ 321 ,  {100. }} ,
				{ 322 ,  {91. }} ,
				{ 326 ,  {71. }} ,
				{ 327 ,  {63. }} ,
				{ 328 ,  {80. }} ,
				{ 333 ,  {235. }} ,
				{ 334 ,  {219. }} ,
				{ 336 ,  {191. }} ,
				{ 337 ,  {190. }} ,
				{ 340 ,  {164. }} ,
				{ 341 ,  {120. }} ,
				{ 343 ,  {53. }} ,
				{ 344 ,  {67. }} ,
				{ 349 ,  {257. }} ,
				{ 350 ,  {253. }} ,
				{ 353 ,  {196. }} ,
				{ 354 ,  {197. }} ,
				{ 356 ,  {214. }} ,
				{ 357 ,  {217. }} ,
				{ 359 ,  {235. }} ,
				{ 361 ,  {127. }} ,
				{ 364 ,  {138. }} ,
				{ 365 ,  {143. }} ,
				{ 366 ,  {150. }} ,
				{ 368 ,  {185. }} ,
				{ 371 ,  {311. }} ,
				{ 374 ,  {281. }} ,
				{ 375 ,  {283. }} ,
				{ 376 ,  {277. }} ,
				{ 378 ,  {241. }} ,
				{ 379 ,  {248. }} ,
				{ 383 ,  {170. }} ,
				{ 384 ,  {175. }} ,
				{ 385 ,  {202. }} ,
				{ 389 ,  {297. }} ,
				{ 393 ,  {281. }} ,
				{ 396 ,  {232. }} ,
				{ 397 ,  {221. }} ,
				{ 399 ,  {246. }} ,
				{ 400 ,  {243. }} ,
				{ 402 ,  {242. }} ,
				{ 405 ,  {281. }} ,
				{ 406 ,  {277. }} ,
				{ 407 ,  {288. }} ,
				{ 411 ,  {263. }} ,
				{ 412 ,  {265. }} ,
				{ 413 ,  {244. }} ,
				{ 417 ,  {173. }} ,
				{ 418 ,  {178. }} ,
				{ 419 ,  {195. }} ,
				{ 422 ,  {215. }} ,
				{ 423 ,  {217. }} ,
				{ 428 ,  {232. }} ,
				{ 429 ,  {230. }} ,
				{ 430 ,  {236. }} ,
				{ 432 ,  {212. }} ,
				{ 433 ,  {222. }} ,
				{ 435 ,  {248. }} ,
				{ 436 ,  {252. }} ,
				{ 437 ,  {131. }} ,
				{ 443 ,  {257. }} ,
				{ 444 ,  {258. }} ,
				{ 445 ,  {261. }} ,
				{ 446 ,  {270. }} ,
				{ 448 ,  {275. }} ,
				{ 451 ,  {321. }} ,
				{ 452 ,  {332. }} ,
				{ 454 ,  {308. }} ,
				{ 455 ,  {310. }} ,
				{ 458 ,  {237. }} ,
				{ 459 ,  {264. }} ,
				{ 460 ,  {180. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_3 <= 0.017855672165751457) ? ( (Feature_8 <= -0.009924227371811867) ? ( (Feature_2 <= 0.007805602857843041) ? ( (Feature_0 <= -0.08906293660402298) ? ( (Feature_3 <= -0.045263622887432575) ? ( (Feature_0 <= -0.0981442853808403) ? ( 6 ) : ( 7 ) ) : ( (Feature_9 <= -0.044569820165634155) ? ( 9 ) : ( (Feature_2 <= -0.060635462403297424) ? ( 11 ) : ( 12 ) ) ) ) : ( (Feature_0 <= 0.003566791128832847) ? ( (Feature_9 <= 0.04241442494094372) ? ( (Feature_0 <= -0.01822843961417675) ? ( (Feature_7 <= -0.06403262913227081) ? ( (Feature_8 <= -0.053779054433107376) ? ( (Feature_8 <= -0.05866708420217037) ? ( (Feature_2 <= -0.06818014942109585) ? ( 20 ) : ( 21 ) ) : ( 22 ) ) : ( (Feature_0 <= -0.05455382354557514) ? ( 24 ) : ( 25 ) ) ) : ( (Feature_9 <= -0.048711927607655525) ? ( (Feature_8 <= -0.0640046875923872) ? ( (Feature_8 <= -0.08363888412714005) ? ( 29 ) : ( 30 ) ) : ( (Feature_4 <= 0.001182945845357608) ? ( (Feature_3 <= -0.06764228269457817) ? ( (Feature_7 <= -0.02491744060534984) ? ( 34 ) : ( 35 ) ) : ( (Feature_3 <= -0.04354218766093254) ? ( (Feature_6 <= -0.006584467366337776) ? ( 38 ) : ( 39 ) ) : ( (Feature_2 <= -0.057402025908231735) ? ( 41 ) : ( 42 ) ) ) ) : ( 43 ) ) ) : ( (Feature_6 <= 0.044958461076021194) ? ( (Feature_5 <= -0.027931496500968933) ? ( (Feature_8 <= -0.061764493584632874) ? ( (Feature_9 <= -0.0383566590026021) ? ( 48 ) : ( 49 ) ) : ( (Feature_3 <= -0.07108515314757824) ? ( (Feature_9 <= -0.028001392260193825) ? ( 52 ) : ( 53 ) ) : ( (Feature_0 <= -0.04183993861079216) ? ( 55 ) : ( 56 ) ) ) ) : ( (Feature_4 <= 0.008750686654821038) ? ( (Feature_9 <= 0.019632837269455194) ? ( (Feature_0 <= -0.07271651551127434) ? ( 60 ) : ( (Feature_5 <= -0.007889995322329924) ? ( 62 ) : ( 63 ) ) ) : ( 64 ) ) : ( (Feature_3 <= -0.010834916261956096) ? ( (Feature_2 <= -0.034767973236739635) ? ( 67 ) : ( 68 ) ) : ( 69 ) ) ) ) : ( (Feature_3 <= -0.0314921410754323) ? ( 71 ) : ( 72 ) ) ) ) ) : ( (Feature_6 <= 0.0007788079092279077) ? ( (Feature_2 <= -0.040695940144360065) ? ( (Feature_6 <= -0.050764121930114925) ? ( 76 ) : ( 77 ) ) : ( 78 ) ) : ( (Feature_6 <= 0.013664540369063616) ? ( (Feature_8 <= -0.04303835052996874) ? ( 81 ) : ( 82 ) ) : ( (Feature_5 <= -0.017910745926201344) ? ( 84 ) : ( (Feature_2 <= -0.05255187302827835) ? ( (Feature_4 <= -0.0008809833743725903) ? ( 87 ) : ( 88 ) ) : ( (Feature_6 <= 0.03207272896543145) ? ( 90 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 92 ) : ( 93 ) ) ) ) ) ) ) ) : ( 94 ) ) : ( (Feature_6 <= 0.04864009842276573) ? ( (Feature_6 <= 0.03943600505590439) ? ( (Feature_9 <= 0.05898285284638405) ? ( (Feature_4 <= -0.032527899369597435) ? ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_3 <= -0.0314921410754323) ? ( 101 ) : ( (Feature_5 <= -0.027618348598480225) ? ( 103 ) : ( 104 ) ) ) : ( (Feature_3 <= -0.01140872947871685) ? ( 106 ) : ( 107 ) ) ) : ( (Feature_8 <= -0.041274651885032654) ? ( (Feature_9 <= -0.001077696681022644) ? ( 110 ) : ( 111 ) ) : ( (Feature_8 <= -0.011402560397982597) ? ( (Feature_1 <= 0.003019241616129875) ? ( 114 ) : ( (Feature_4 <= 0.026638072915375233) ? ( (Feature_8 <= -0.015009476337581873) ? ( (Feature_4 <= 0.012878545094281435) ? ( (Feature_8 <= -0.027623306028544903) ? ( 119 ) : ( 120 ) ) : ( 121 ) ) : ( 122 ) ) : ( 123 ) ) ) : ( 124 ) ) ) ) : ( 125 ) ) : ( 126 ) ) : ( (Feature_6 <= 0.05416255630552769) ? ( 128 ) : ( (Feature_3 <= -0.03321357723325491) ? ( (Feature_6 <= 0.09834221005439758) ? ( (Feature_9 <= 0.0051354626775719225) ? ( 132 ) : ( 133 ) ) : ( 134 ) ) : ( (Feature_8 <= -0.019755974411964417) ? ( 136 ) : ( 137 ) ) ) ) ) ) ) : ( (Feature_2 <= 0.03798434138298035) ? ( (Feature_0 <= -0.021860977867618203) ? ( (Feature_6 <= -0.008425286738201976) ? ( (Feature_3 <= -0.06075654178857803) ? ( 142 ) : ( 143 ) ) : ( (Feature_8 <= -0.03356640413403511) ? ( 145 ) : ( 146 ) ) ) : ( (Feature_8 <= -0.03773548360913992) ? ( 148 ) : ( 149 ) ) ) : ( (Feature_6 <= 0.019186997320502996) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= 0.06061839498579502) ? ( (Feature_5 <= 0.019823644077405334) ? ( 154 ) : ( 155 ) ) : ( (Feature_0 <= 0.03625963814556599) ? ( 157 ) : ( 158 ) ) ) : ( 159 ) ) : ( (Feature_8 <= -0.04415262024849653) ? ( 161 ) : ( 162 ) ) ) ) ) : ( (Feature_7 <= 0.11918143928050995) ? ( (Feature_3 <= -0.03837788291275501) ? ( (Feature_7 <= 0.0715789906680584) ? ( (Feature_4 <= -0.03252789843827486) ? ( (Feature_6 <= -0.019470199244096875) ? ( (Feature_9 <= -0.007290858076885343) ? ( 169 ) : ( (Feature_7 <= -0.02104282204527408) ? ( 171 ) : ( 172 ) ) ) : ( 173 ) ) : ( (Feature_5 <= 0.0586540512740612) ? ( (Feature_6 <= -0.061809033155441284) ? ( 176 ) : ( (Feature_8 <= 0.044254669919610023) ? ( (Feature_9 <= 0.009277569828554988) ? ( (Feature_6 <= -0.0010620111133903265) ? ( (Feature_5 <= -0.012117498787119985) ? ( 181 ) : ( (Feature_6 <= -0.02867429470643401) ? ( 183 ) : ( 184 ) ) ) : ( (Feature_5 <= -0.012743796221911907) ? ( 186 ) : ( 187 ) ) ) : ( (Feature_6 <= -0.010266104713082314) ? ( 189 ) : ( 190 ) ) ) : ( (Feature_8 <= 0.05315203778445721) ? ( 192 ) : ( 193 ) ) ) ) : ( (Feature_6 <= -0.002902830019593239) ? ( (Feature_2 <= 0.014272475615143776) ? ( 196 ) : ( (Feature_9 <= 0.021703890524804592) ? ( 198 ) : ( 199 ) ) ) : ( 200 ) ) ) ) : ( (Feature_0 <= -0.020044708566274494) ? ( 202 ) : ( 203 ) ) ) : ( (Feature_4 <= 0.09061988070607185) ? ( (Feature_4 <= -0.012576582841575146) ? ( (Feature_5 <= -0.036699652671813965) ? ( (Feature_6 <= -0.045241665095090866) ? ( (Feature_0 <= -6.574741564691067e-05) ? ( 209 ) : ( 210 ) ) : ( (Feature_7 <= -0.014216114883311093) ? ( (Feature_8 <= 0.014255752379540354) ? ( (Feature_9 <= -0.0590671943500638) ? ( 214 ) : ( 215 ) ) : ( (Feature_2 <= -0.025606570998206735) ? ( 217 ) : ( 218 ) ) ) : ( 219 ) ) ) : ( (Feature_5 <= 0.0065148342691827565) ? ( (Feature_5 <= -0.02652232814580202) ? ( (Feature_3 <= -0.013130164057656657) ? ( 223 ) : ( 224 ) ) : ( (Feature_8 <= 0.03916265908628702) ? ( (Feature_7 <= -0.02104282204527408) ? ( 227 ) : ( (Feature_2 <= -0.025067664682865143) ? ( 229 ) : ( 230 ) ) ) : ( 231 ) ) ) : ( 232 ) ) ) : ( (Feature_3 <= -0.024032588116824627) ? ( (Feature_0 <= -0.02367724757641554) ? ( 235 ) : ( (Feature_3 <= -0.029196892865002155) ? ( 237 ) : ( 238 ) ) ) : ( (Feature_8 <= 0.0577821359038353) ? ( (Feature_0 <= -0.08724666759371758) ? ( 241 ) : ( (Feature_7 <= 0.029880723915994167) ? ( (Feature_5 <= 0.04377950169146061) ? ( (Feature_2 <= -0.04931843839585781) ? ( 245 ) : ( (Feature_8 <= 0.018140866421163082) ? ( (Feature_2 <= -0.0029725178028456867) ? ( (Feature_9 <= 0.007206516806036234) ? ( 249 ) : ( 250 ) ) : ( 251 ) ) : ( (Feature_7 <= -0.007020396180450916) ? ( 253 ) : ( 254 ) ) ) ) : ( (Feature_5 <= 0.05928034894168377) ? ( (Feature_3 <= 0.0029365664813667536) ? ( 257 ) : ( 258 ) ) : ( 259 ) ) ) : ( (Feature_5 <= 0.03469819575548172) ? ( (Feature_3 <= -0.02116352878510952) ? ( 262 ) : ( (Feature_0 <= -0.020044709090143442) ? ( 264 ) : ( (Feature_2 <= -0.001894705812446773) ? ( 266 ) : ( (Feature_2 <= 0.08648588077630848) ? ( 268 ) : ( 269 ) ) ) ) ) : ( (Feature_6 <= 0.002619626699015498) ? ( (Feature_5 <= 0.051921362057328224) ? ( (Feature_0 <= 0.0035667913034558296) ? ( 273 ) : ( (Feature_0 <= 0.04897352121770382) ? ( 275 ) : ( 276 ) ) ) : ( (Feature_8 <= 0.03395563364028931) ? ( (Feature_7 <= 0.05275942012667656) ? ( 279 ) : ( 280 ) ) : ( (Feature_6 <= -0.04340084455907345) ? ( 282 ) : ( 283 ) ) ) ) : ( 284 ) ) ) ) ) : ( (Feature_5 <= 0.05630544014275074) ? ( (Feature_0 <= 0.014464406296610832) ? ( (Feature_5 <= 0.04064801707863808) ? ( 288 ) : ( 289 ) ) : ( 290 ) ) : ( 291 ) ) ) ) ) : ( (Feature_9 <= -0.01971717778360471) ? ( 293 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 295 ) : ( 296 ) ) ) ) ) : ( (Feature_7 <= 0.13763199746608734) ? ( 298 ) : ( 299 ) ) ) ) : ( (Feature_2 <= 0.01319466345012188) ? ( (Feature_0 <= 0.01809694431722164) ? ( (Feature_0 <= -0.02186097763478756) ? ( (Feature_2 <= -0.025067664682865143) ? ( 304 ) : ( (Feature_4 <= -0.002944912761449814) ? ( 306 ) : ( (Feature_8 <= 0.031478612683713436) ? ( 308 ) : ( 309 ) ) ) ) : ( (Feature_5 <= 0.006201685522682965) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_9 <= -0.0010776976123452187) ? ( 313 ) : ( 314 ) ) : ( 315 ) ) : ( (Feature_8 <= 0.005527282890398055) ? ( (Feature_3 <= 0.03564383741468191) ? ( 318 ) : ( 319 ) ) : ( (Feature_3 <= 0.02531522512435913) ? ( 321 ) : ( 322 ) ) ) ) ) : ( (Feature_8 <= -0.030238069593906403) ? ( (Feature_6 <= 0.03023191075772047) ? ( (Feature_6 <= 0.004460446070879698) ? ( 326 ) : ( 327 ) ) : ( 328 ) ) : ( (Feature_0 <= 0.03262709826231003) ? ( (Feature_0 <= 0.02536202222108841) ? ( (Feature_9 <= 0.02377494378015399) ? ( (Feature_6 <= -0.028674293775111437) ? ( 333 ) : ( 334 ) ) : ( (Feature_4 <= 0.024574143812060356) ? ( 336 ) : ( 337 ) ) ) : ( (Feature_6 <= -0.021311018150299788) ? ( (Feature_3 <= 0.03621764946728945) ? ( 340 ) : ( 341 ) ) : ( (Feature_5 <= 0.03610736515838653) ? ( 343 ) : ( 344 ) ) ) ) : ( (Feature_9 <= 0.03413021191954613) ? ( (Feature_2 <= 0.0034943545470014215) ? ( (Feature_0 <= 0.043524714186787605) ? ( (Feature_5 <= 0.05442655039951205) ? ( 349 ) : ( 350 ) ) : ( (Feature_9 <= -0.015575071331113577) ? ( (Feature_8 <= 0.10191963985562325) ? ( 353 ) : ( 354 ) ) : ( (Feature_9 <= 0.003064409364014864) ? ( 356 ) : ( 357 ) ) ) ) : ( (Feature_3 <= 0.040808143094182014) ? ( 359 ) : ( (Feature_0 <= 0.0417084451764822) ? ( 361 ) : ( (Feature_8 <= 0.043090445920825005) ? ( (Feature_0 <= 0.05805486813187599) ? ( 364 ) : ( 365 ) ) : ( 366 ) ) ) ) ) : ( (Feature_2 <= -0.028301101177930832) ? ( 368 ) : ( (Feature_8 <= 0.09273767843842506) ? ( (Feature_0 <= 0.04897352121770382) ? ( 371 ) : ( (Feature_0 <= 0.08893144503235817) ? ( (Feature_2 <= -0.013750639045611024) ? ( 374 ) : ( 375 ) ) : ( 376 ) ) ) : ( (Feature_8 <= 0.11768684163689613) ? ( 378 ) : ( 379 ) ) ) ) ) ) ) ) : ( (Feature_7 <= -0.02602447336539626) ? ( (Feature_0 <= -0.009147093165665865) ? ( (Feature_3 <= 0.08040115609765053) ? ( 383 ) : ( 384 ) ) : ( 385 ) ) : ( (Feature_2 <= 0.07355214282870293) ? ( (Feature_2 <= 0.07193542271852493) ? ( (Feature_2 <= 0.015350287780165672) ? ( 389 ) : ( (Feature_5 <= -0.00788999511860311) ? ( (Feature_2 <= 0.06115729920566082) ? ( (Feature_8 <= 0.029458388686180115) ? ( 393 ) : ( (Feature_4 <= -0.005008842330425978) ? ( (Feature_2 <= 0.047684650868177414) ? ( 396 ) : ( 397 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 399 ) : ( 400 ) ) ) ) : ( (Feature_6 <= -0.06917231157422066) ? ( 402 ) : ( (Feature_2 <= 0.06977979838848114) ? ( (Feature_5 <= -0.03607335686683655) ? ( 405 ) : ( 406 ) ) : ( 407 ) ) ) ) : ( (Feature_8 <= 0.018106686882674694) ? ( (Feature_7 <= 0.034308859962038696) ? ( (Feature_4 <= -0.0022569363936781883) ? ( 411 ) : ( 412 ) ) : ( 413 ) ) : ( (Feature_4 <= 0.014942474663257599) ? ( (Feature_8 <= 0.03676894214004278) ? ( (Feature_6 <= -0.03235593345016241) ? ( 417 ) : ( 418 ) ) : ( 419 ) ) : ( (Feature_0 <= -0.007330824097152799) ? ( (Feature_5 <= 0.08041787054389715) ? ( 422 ) : ( 423 ) ) : ( (Feature_5 <= 0.06538674235343933) ? ( (Feature_5 <= 0.04080459102988243) ? ( (Feature_3 <= 0.08671308681368828) ? ( (Feature_5 <= 0.024207722395658493) ? ( 428 ) : ( 429 ) ) : ( 430 ) ) : ( (Feature_3 <= 0.03736527357250452) ? ( 432 ) : ( 433 ) ) ) : ( (Feature_2 <= 0.053612615913152695) ? ( 435 ) : ( 436 ) ) ) ) ) ) ) ) : ( 437 ) ) : ( (Feature_5 <= 0.02326827682554722) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_7 <= 0.027482151053845882) ? ( (Feature_0 <= 0.04897352121770382) ? ( (Feature_7 <= 0.011983680655248463) ? ( 443 ) : ( 444 ) ) : ( 445 ) ) : ( 446 ) ) : ( (Feature_2 <= 0.07570776343345642) ? ( 448 ) : ( (Feature_8 <= 0.03239992167800665) ? ( (Feature_9 <= 0.04241442494094372) ? ( 451 ) : ( 452 ) ) : ( (Feature_9 <= 0.06726706796325743) ? ( 454 ) : ( 455 ) ) ) ) ) : ( (Feature_5 <= 0.050825340673327446) ? ( (Feature_7 <= 0.034308859962038696) ? ( 458 ) : ( 459 ) ) : ( 460 ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_0
	

	namespace EXT_SubModel_1 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 5 ,  {55. }} ,
				{ 9 ,  {99. }} ,
				{ 10 ,  {71. }} ,
				{ 12 ,  {200. }} ,
				{ 15 ,  {101. }} ,
				{ 17 ,  {137. }} ,
				{ 18 ,  {142. }} ,
				{ 21 ,  {185. }} ,
				{ 22 ,  {168. }} ,
				{ 25 ,  {158. }} ,
				{ 26 ,  {152. }} ,
				{ 28 ,  {150. }} ,
				{ 29 ,  {144. }} ,
				{ 31 ,  {68. }} ,
				{ 32 ,  {51. }} ,
				{ 38 ,  {45. }} ,
				{ 40 ,  {37. }} ,
				{ 42 ,  {40. }} ,
				{ 43 ,  {39. }} ,
				{ 44 ,  {92. }} ,
				{ 49 ,  {83. }} ,
				{ 51 ,  {55. }} ,
				{ 54 ,  {70. }} ,
				{ 55 ,  {67. }} ,
				{ 56 ,  {63. }} ,
				{ 57 ,  {125. }} ,
				{ 59 ,  {138. }} ,
				{ 60 ,  {104. }} ,
				{ 64 ,  {31. }} ,
				{ 66 ,  {44. }} ,
				{ 67 ,  {42. }} ,
				{ 70 ,  {65. }} ,
				{ 71 ,  {64. }} ,
				{ 72 ,  {55. }} ,
				{ 77 ,  {72. }} ,
				{ 79 ,  {81. }} ,
				{ 80 ,  {89. }} ,
				{ 81 ,  {96. }} ,
				{ 82 ,  {118. }} ,
				{ 84 ,  {60. }} ,
				{ 85 ,  {49. }} ,
				{ 89 ,  {129. }} ,
				{ 90 ,  {190. }} ,
				{ 93 ,  {25. }} ,
				{ 96 ,  {104. }} ,
				{ 97 ,  {88. }} ,
				{ 99 ,  {61. }} ,
				{ 100 ,  {53. }} ,
				{ 104 ,  {150. }} ,
				{ 106 ,  {72. }} ,
				{ 109 ,  {93. }} ,
				{ 110 ,  {92. }} ,
				{ 111 ,  {88. }} ,
				{ 115 ,  {96. }} ,
				{ 116 ,  {79. }} ,
				{ 117 ,  {153. }} ,
				{ 120 ,  {179. }} ,
				{ 121 ,  {160. }} ,
				{ 122 ,  {97. }} ,
				{ 125 ,  {111. }} ,
				{ 126 ,  {107. }} ,
				{ 131 ,  {54. }} ,
				{ 132 ,  {53. }} ,
				{ 135 ,  {71. }} ,
				{ 136 ,  {72. }} ,
				{ 138 ,  {59. }} ,
				{ 139 ,  {64. }} ,
				{ 140 ,  {91. }} ,
				{ 142 ,  {59. }} ,
				{ 145 ,  {94. }} ,
				{ 146 ,  {97. }} ,
				{ 148 ,  {87. }} ,
				{ 149 ,  {84. }} ,
				{ 152 ,  {177. }} ,
				{ 154 ,  {158. }} ,
				{ 155 ,  {146. }} ,
				{ 156 ,  {104. }} ,
				{ 157 ,  {230. }} ,
				{ 161 ,  {201. }} ,
				{ 164 ,  {182. }} ,
				{ 165 ,  {184. }} ,
				{ 166 ,  {191. }} ,
				{ 167 ,  {121. }} ,
				{ 171 ,  {167. }} ,
				{ 172 ,  {147. }} ,
				{ 176 ,  {140. }} ,
				{ 177 ,  {141. }} ,
				{ 178 ,  {187. }} ,
				{ 181 ,  {110. }} ,
				{ 182 ,  {103. }} ,
				{ 183 ,  {78. }} ,
				{ 184 ,  {70. }} ,
				{ 190 ,  {170. }} ,
				{ 191 ,  {175. }} ,
				{ 192 ,  {216. }} ,
				{ 194 ,  {219. }} ,
				{ 197 ,  {52. }} ,
				{ 198 ,  {77. }} ,
				{ 203 ,  {118. }} ,
				{ 204 ,  {124. }} ,
				{ 205 ,  {141. }} ,
				{ 207 ,  {104. }} ,
				{ 208 ,  {103. }} ,
				{ 209 ,  {73. }} ,
				{ 210 ,  {253. }} ,
				{ 212 ,  {288. }} ,
				{ 214 ,  {263. }} ,
				{ 215 ,  {237. }} ,
				{ 223 ,  {156. }} ,
				{ 224 ,  {163. }} ,
				{ 225 ,  {178. }} ,
				{ 228 ,  {66. }} ,
				{ 230 ,  {94. }} ,
				{ 232 ,  {86. }} ,
				{ 233 ,  {88. }} ,
				{ 234 ,  {154. }} ,
				{ 237 ,  {185. }} ,
				{ 239 ,  {168. }} ,
				{ 240 ,  {172. }} ,
				{ 242 ,  {200. }} ,
				{ 243 ,  {206. }} ,
				{ 247 ,  {84. }} ,
				{ 249 ,  {91. }} ,
				{ 250 ,  {90. }} ,
				{ 252 ,  {69. }} ,
				{ 253 ,  {78. }} ,
				{ 254 ,  {120. }} ,
				{ 264 ,  {151. }} ,
				{ 266 ,  {206. }} ,
				{ 267 ,  {200. }} ,
				{ 269 ,  {258. }} ,
				{ 270 ,  {249. }} ,
				{ 272 ,  {115. }} ,
				{ 273 ,  {134. }} ,
				{ 277 ,  {109. }} ,
				{ 278 ,  {101. }} ,
				{ 279 ,  {137. }} ,
				{ 283 ,  {174. }} ,
				{ 287 ,  {151. }} ,
				{ 288 ,  {144. }} ,
				{ 289 ,  {161. }} ,
				{ 290 ,  {131. }} ,
				{ 292 ,  {111. }} ,
				{ 294 ,  {122. }} ,
				{ 295 ,  {131. }} ,
				{ 297 ,  {185. }} ,
				{ 298 ,  {196. }} ,
				{ 300 ,  {202. }} ,
				{ 301 ,  {229. }} ,
				{ 303 ,  {259. }} ,
				{ 304 ,  {220. }} ,
				{ 307 ,  {84. }} ,
				{ 308 ,  {94. }} ,
				{ 310 ,  {123. }} ,
				{ 312 ,  {142. }} ,
				{ 313 ,  {150. }} ,
				{ 314 ,  {262. }} ,
				{ 316 ,  {48. }} ,
				{ 321 ,  {257. }} ,
				{ 323 ,  {236. }} ,
				{ 324 ,  {235. }} ,
				{ 325 ,  {283. }} ,
				{ 329 ,  {292. }} ,
				{ 330 ,  {232. }} ,
				{ 333 ,  {129. }} ,
				{ 337 ,  {173. }} ,
				{ 338 ,  {166. }} ,
				{ 340 ,  {195. }} ,
				{ 341 ,  {202. }} ,
				{ 342 ,  {232. }} ,
				{ 347 ,  {214. }} ,
				{ 348 ,  {212. }} ,
				{ 349 ,  {217. }} ,
				{ 350 ,  {198. }} ,
				{ 351 ,  {241. }} ,
				{ 354 ,  {144. }} ,
				{ 355 ,  {143. }} ,
				{ 356 ,  {67. }} ,
				{ 361 ,  {283. }} ,
				{ 362 ,  {277. }} ,
				{ 364 ,  {297. }} ,
				{ 365 ,  {311. }} ,
				{ 366 ,  {248. }} ,
				{ 367 ,  {191. }} ,
				{ 372 ,  {178. }} ,
				{ 373 ,  {151. }} ,
				{ 374 ,  {121. }} ,
				{ 376 ,  {308. }} ,
				{ 378 ,  {233. }} ,
				{ 380 ,  {221. }} ,
				{ 381 ,  {215. }} ,
				{ 384 ,  {192. }} ,
				{ 385 ,  {164. }} ,
				{ 389 ,  {272. }} ,
				{ 390 ,  {275. }} ,
				{ 392 ,  {306. }} ,
				{ 393 ,  {317. }} ,
				{ 397 ,  {321. }} ,
				{ 398 ,  {303. }} ,
				{ 400 ,  {242. }} ,
				{ 405 ,  {275. }} ,
				{ 406 ,  {277. }} ,
				{ 407 ,  {270. }} ,
				{ 409 ,  {261. }} ,
				{ 410 ,  {264. }} ,
				{ 411 ,  {310. }} ,
				{ 414 ,  {186. }} ,
				{ 415 ,  {180. }} ,
				{ 419 ,  {258. }} ,
				{ 420 ,  {252. }} ,
				{ 421 ,  {268. }} ,
				{ 423 ,  {230. }} ,
				{ 424 ,  {217. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_8 <= 0.0015758189256303012) ? ( (Feature_3 <= 0.023593789897859097) ? ( (Feature_2 <= 0.0061888848431408405) ? ( (Feature_0 <= -0.07271651551127434) ? ( (Feature_3 <= -0.09518525004386902) ? ( 5 ) : ( (Feature_4 <= -0.011200630106031895) ? ( (Feature_8 <= -0.07611488923430443) ? ( (Feature_7 <= -0.05794394388794899) ? ( 9 ) : ( 10 ) ) : ( (Feature_8 <= -0.06850090995430946) ? ( 12 ) : ( (Feature_2 <= -0.07141358405351639) ? ( (Feature_2 <= -0.08057498559355736) ? ( 15 ) : ( (Feature_4 <= -0.08687803521752357) ? ( 17 ) : ( 18 ) ) ) : ( (Feature_6 <= 0.009982902556657791) ? ( (Feature_5 <= -0.06566588580608368) ? ( 21 ) : ( 22 ) ) : ( (Feature_3 <= -0.06592084839940071) ? ( (Feature_0 <= -0.08724666759371758) ? ( 25 ) : ( 26 ) ) : ( (Feature_3 <= -0.03493501036427915) ? ( 28 ) : ( 29 ) ) ) ) ) ) ) : ( (Feature_6 <= 0.04679928068071604) ? ( 31 ) : ( 32 ) ) ) ) : ( (Feature_5 <= 0.09858047962188721) ? ( (Feature_8 <= -0.033886250108480453) ? ( (Feature_7 <= -0.06329460628330708) ? ( (Feature_8 <= -0.04472579248249531) ? ( (Feature_0 <= -0.040023671463131905) ? ( 38 ) : ( (Feature_9 <= -0.04249876644462347) ? ( 40 ) : ( (Feature_2 <= -0.0234509464353323) ? ( 42 ) : ( 43 ) ) ) ) : ( 44 ) ) : ( (Feature_4 <= -0.03940766304731369) ? ( (Feature_4 <= -0.05041528679430485) ? ( (Feature_6 <= 0.02470945380628109) ? ( (Feature_5 <= -0.07130255922675133) ? ( 49 ) : ( (Feature_6 <= -0.026833476033061743) ? ( 51 ) : ( (Feature_6 <= 0.00630126497708261) ? ( (Feature_4 <= -0.08068624883890152) ? ( 54 ) : ( 55 ) ) : ( 56 ) ) ) ) : ( 57 ) ) : ( (Feature_2 <= -0.039618128910660744) ? ( 59 ) : ( 60 ) ) ) : ( (Feature_4 <= -0.008448724467598367) ? ( (Feature_4 <= -0.030463969334959984) ? ( (Feature_9 <= -0.03421455295756459) ? ( 64 ) : ( (Feature_8 <= -0.03716665506362915) ? ( 66 ) : ( 67 ) ) ) : ( (Feature_3 <= -0.022884964710101485) ? ( (Feature_3 <= -0.07051134295761585) ? ( 70 ) : ( 71 ) ) : ( 72 ) ) ) : ( (Feature_2 <= -0.003511423827148974) ? ( (Feature_3 <= -0.007392045808956027) ? ( (Feature_3 <= -0.019442093558609486) ? ( (Feature_4 <= 0.0032468751815031283) ? ( 77 ) : ( (Feature_8 <= -0.04274503514170647) ? ( 79 ) : ( 80 ) ) ) : ( 81 ) ) : ( 82 ) ) : ( (Feature_0 <= -0.007330824621021748) ? ( 84 ) : ( 85 ) ) ) ) ) ) : ( (Feature_9 <= 0.03413021191954613) ? ( (Feature_5 <= -0.041710030287504196) ? ( (Feature_8 <= -0.019365303684026003) ? ( 89 ) : ( 90 ) ) : ( (Feature_4 <= -0.02633611112833023) ? ( (Feature_8 <= -0.019755974411964417) ? ( 93 ) : ( (Feature_8 <= -0.011906188912689686) ? ( (Feature_2 <= -0.059018746949732304) ? ( 96 ) : ( 97 ) ) : ( (Feature_6 <= -0.036037569399923086) ? ( 99 ) : ( 100 ) ) ) ) : ( (Feature_4 <= 0.0025588986463844776) ? ( (Feature_4 <= -0.007760747568681836) ? ( (Feature_3 <= -0.02977070491760969) ? ( 104 ) : ( (Feature_2 <= -0.039618127048015594) ? ( 106 ) : ( (Feature_4 <= -0.011888606008142233) ? ( (Feature_3 <= -0.019442093558609486) ? ( 109 ) : ( 110 ) ) : ( 111 ) ) ) ) : ( (Feature_2 <= -0.046623905189335346) ? ( (Feature_0 <= -6.574729923158884e-05) ? ( (Feature_8 <= -0.025519979186356068) ? ( 115 ) : ( 116 ) ) : ( 117 ) ) : ( (Feature_9 <= -0.01971717900596559) ? ( (Feature_7 <= -0.02104282204527408) ? ( 120 ) : ( 121 ) ) : ( 122 ) ) ) ) : ( (Feature_6 <= 0.0081420837668702) ? ( (Feature_6 <= -0.002902829903177917) ? ( 125 ) : ( 126 ) ) : ( (Feature_6 <= 0.04864010028541088) ? ( (Feature_0 <= 0.05260606110095978) ? ( (Feature_4 <= 0.010814615990966558) ? ( (Feature_9 <= -0.03214349830523133) ? ( 131 ) : ( 132 ) ) : ( (Feature_5 <= 0.04049144312739372) ? ( (Feature_4 <= 0.02319819200783968) ? ( 135 ) : ( 136 ) ) : ( (Feature_4 <= 0.04246153309941292) ? ( 138 ) : ( 139 ) ) ) ) : ( 140 ) ) : ( (Feature_9 <= -0.042498765513300896) ? ( 142 ) : ( (Feature_6 <= 0.06336665153503418) ? ( (Feature_9 <= -0.01971717778360471) ? ( 145 ) : ( 146 ) ) : ( (Feature_7 <= -0.03949338395614177) ? ( 148 ) : ( 149 ) ) ) ) ) ) ) ) ) : ( (Feature_5 <= 0.06413415260612965) ? ( (Feature_5 <= 0.03109698835760355) ? ( 152 ) : ( (Feature_7 <= 0.006448511965572834) ? ( 154 ) : ( 155 ) ) ) : ( 156 ) ) ) ) : ( 157 ) ) ) : ( (Feature_2 <= 0.0363676231354475) ? ( (Feature_8 <= -0.017058268189430237) ? ( (Feature_6 <= -0.024992656894028187) ? ( 161 ) : ( (Feature_4 <= 0.037645695731043816) ? ( (Feature_2 <= 0.030439656227827072) ? ( 164 ) : ( 165 ) ) : ( 166 ) ) ) : ( 167 ) ) : ( (Feature_0 <= 0.06895248591899872) ? ( (Feature_2 <= 0.041756683960556984) ? ( (Feature_5 <= -0.002409897046163678) ? ( 171 ) : ( 172 ) ) : ( (Feature_8 <= -0.03415451478213072) ? ( (Feature_6 <= 0.019186997320502996) ? ( (Feature_6 <= -0.0065844678319990635) ? ( 176 ) : ( 177 ) ) : ( 178 ) ) : ( (Feature_2 <= 0.06439073570072651) ? ( (Feature_6 <= 0.01734617818146944) ? ( 181 ) : ( 182 ) ) : ( 183 ) ) ) ) : ( 184 ) ) ) ) : ( (Feature_2 <= 0.0525348037481308) ? ( (Feature_4 <= 0.07548439875245094) ? ( (Feature_0 <= -0.012779632117599249) ? ( (Feature_5 <= -0.01963306311517954) ? ( (Feature_3 <= 0.08040115609765053) ? ( 190 ) : ( 191 ) ) : ( 192 ) ) : ( (Feature_4 <= -0.06211088411509991) ? ( 194 ) : ( (Feature_9 <= -0.011432964820414782) ? ( (Feature_3 <= 0.0626129899173975) ? ( 197 ) : ( 198 ) ) : ( (Feature_8 <= -0.0010539205104578286) ? ( (Feature_3 <= 0.06433442793786526) ? ( (Feature_8 <= -0.003321947471704334) ? ( (Feature_7 <= 0.0051569732604548335) ? ( 203 ) : ( 204 ) ) : ( 205 ) ) : ( (Feature_3 <= 0.08728690072894096) ? ( 207 ) : ( 208 ) ) ) : ( 209 ) ) ) ) ) : ( 210 ) ) : ( (Feature_0 <= 0.027178291231393814) ? ( 212 ) : ( (Feature_9 <= -0.011432964587584138) ? ( 214 ) : ( 215 ) ) ) ) ) : ( (Feature_2 <= 0.047145744785666466) ? ( (Feature_2 <= -0.021295323967933655) ? ( (Feature_4 <= 0.028014025650918484) ? ( (Feature_9 <= 0.025845997966825962) ? ( (Feature_6 <= -0.023151836823672056) ? ( (Feature_6 <= -0.04340084455907345) ? ( (Feature_7 <= 0.034308859962038696) ? ( 223 ) : ( 224 ) ) : ( 225 ) ) : ( (Feature_5 <= 0.0027570525417104363) ? ( (Feature_6 <= -0.012106924317777157) ? ( 228 ) : ( (Feature_0 <= -0.07998159155249596) ? ( 230 ) : ( (Feature_6 <= -0.002902830019593239) ? ( 232 ) : ( 233 ) ) ) ) : ( 234 ) ) ) : ( (Feature_8 <= 0.02537127397954464) ? ( (Feature_7 <= 0.015858298051171005) ? ( 237 ) : ( (Feature_8 <= 0.01947084255516529) ? ( 239 ) : ( 240 ) ) ) : ( (Feature_2 <= -0.042851563543081284) ? ( 242 ) : ( 243 ) ) ) ) : ( (Feature_3 <= 0.039086708799004555) ? ( (Feature_2 <= -0.03261235170066357) ? ( (Feature_0 <= 0.0035667913616634905) ? ( 247 ) : ( (Feature_8 <= 0.052732767537236214) ? ( 249 ) : ( 250 ) ) ) : ( (Feature_8 <= 0.034559374675154686) ? ( 252 ) : ( 253 ) ) ) : ( 254 ) ) ) : ( (Feature_3 <= 0.01670804899185896) ? ( (Feature_9 <= 0.0900486521422863) ? ( (Feature_9 <= 0.05484074540436268) ? ( (Feature_9 <= 0.029988105408847332) ? ( (Feature_8 <= 0.0821911171078682) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_0 <= 0.03807590715587139) ? ( (Feature_8 <= 0.027253619395196438) ? ( (Feature_2 <= -0.01375063881278038) ? ( 264 ) : ( (Feature_4 <= 0.03076593205332756) ? ( 266 ) : ( 267 ) ) ) : ( (Feature_4 <= 0.035581766394898295) ? ( 269 ) : ( 270 ) ) ) : ( (Feature_3 <= -0.036656446754932404) ? ( 272 ) : ( 273 ) ) ) : ( (Feature_9 <= -0.015575071331113577) ? ( (Feature_4 <= 0.039021650329232216) ? ( (Feature_7 <= -0.002592261880636215) ? ( 277 ) : ( 278 ) ) : ( 279 ) ) : ( (Feature_6 <= -0.02683347463607788) ? ( (Feature_9 <= 0.021703890524804592) ? ( (Feature_8 <= 0.01162322424352169) ? ( 283 ) : ( (Feature_5 <= 0.04487552214413881) ? ( (Feature_4 <= -0.03871968761086464) ? ( (Feature_8 <= 0.026841464452445507) ? ( 287 ) : ( 288 ) ) : ( 289 ) ) : ( 290 ) ) ) : ( (Feature_5 <= -0.0013138774666003883) ? ( 292 ) : ( (Feature_8 <= 0.018886395264416933) ? ( 294 ) : ( 295 ) ) ) ) : ( (Feature_4 <= 0.010126639157533646) ? ( 297 ) : ( 298 ) ) ) ) ) : ( (Feature_2 <= -0.0013557997299358249) ? ( 300 ) : ( 301 ) ) ) : ( (Feature_0 <= 0.014464406296610832) ? ( 303 ) : ( 304 ) ) ) : ( (Feature_8 <= 0.021140551194548607) ? ( (Feature_3 <= 0.005231813527643681) ? ( 307 ) : ( 308 ) ) : ( (Feature_6 <= -0.021311018615961075) ? ( 310 ) : ( (Feature_3 <= 0.0029365660157054663) ? ( 312 ) : ( 313 ) ) ) ) ) : ( 314 ) ) : ( (Feature_0 <= -0.012779631884768605) ? ( 316 ) : ( (Feature_9 <= 0.04448547773063183) ? ( (Feature_9 <= -0.01971717830747366) ? ( (Feature_5 <= 0.06820508278906345) ? ( (Feature_6 <= -0.06917230784893036) ? ( 321 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 323 ) : ( 324 ) ) ) : ( 325 ) ) : ( (Feature_5 <= 0.04722413420677185) ? ( (Feature_4 <= -0.013264559209346771) ? ( (Feature_9 <= 0.01756178284995258) ? ( 329 ) : ( 330 ) ) : ( (Feature_4 <= 0.025950096547603607) ? ( (Feature_2 <= 0.010500133270397782) ? ( 333 ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= 0.04283449612557888) ? ( (Feature_3 <= 0.03564383741468191) ? ( 337 ) : ( 338 ) ) : ( (Feature_6 <= 0.0063012647442519665) ? ( 340 ) : ( 341 ) ) ) : ( 342 ) ) ) : ( (Feature_9 <= 0.03205915819853544) ? ( (Feature_2 <= 0.025050596334040165) ? ( (Feature_9 <= 0.01756178354844451) ? ( (Feature_9 <= 0.0009933561086654663) ? ( 347 ) : ( 348 ) ) : ( 349 ) ) : ( 350 ) ) : ( 351 ) ) ) ) : ( (Feature_9 <= 0.0051354626775719225) ? ( (Feature_6 <= 0.0063012633472681046) ? ( 354 ) : ( 355 ) ) : ( 356 ) ) ) ) : ( (Feature_6 <= 0.057844193652272224) ? ( (Feature_7 <= 0.07120997831225395) ? ( (Feature_4 <= -0.010512653272598982) ? ( (Feature_0 <= 0.08893144503235817) ? ( 361 ) : ( 362 ) ) : ( (Feature_6 <= -0.036037569865584373) ? ( 364 ) : ( 365 ) ) ) : ( 366 ) ) : ( 367 ) ) ) ) ) ) : ( (Feature_9 <= 0.013419676572084427) ? ( (Feature_6 <= -0.023151837289333344) ? ( (Feature_2 <= 0.0649296436458826) ? ( (Feature_0 <= 0.003566790372133255) ? ( 372 ) : ( 373 ) ) : ( 374 ) ) : ( (Feature_6 <= -0.019470199942588806) ? ( 376 ) : ( (Feature_0 <= -0.06908397749066353) ? ( 378 ) : ( (Feature_0 <= -0.03639113204553723) ? ( 380 ) : ( 381 ) ) ) ) ) : ( (Feature_3 <= -0.05042793042957783) ? ( (Feature_0 <= 0.02172948425868526) ? ( 384 ) : ( 385 ) ) : ( (Feature_3 <= -0.021163528552278876) ? ( (Feature_4 <= 0.014942473731935024) ? ( (Feature_2 <= 0.06492964178323746) ? ( 389 ) : ( 390 ) ) : ( (Feature_9 <= 0.09211970865726471) ? ( 392 ) : ( 393 ) ) ) : ( (Feature_4 <= 0.03970962576568127) ? ( (Feature_4 <= -0.012576582841575146) ? ( (Feature_4 <= -0.024960158858448267) ? ( 397 ) : ( 398 ) ) : ( (Feature_6 <= -0.07469476759433746) ? ( 400 ) : ( (Feature_4 <= 0.02801402658224106) ? ( (Feature_0 <= 0.05623859912157059) ? ( (Feature_3 <= 0.07351541519165039) ? ( (Feature_9 <= 0.05691179819405079) ? ( 405 ) : ( 406 ) ) : ( 407 ) ) : ( (Feature_5 <= 0.025303740985691547) ? ( 409 ) : ( 410 ) ) ) : ( 411 ) ) ) ) : ( (Feature_8 <= 0.0508537981659174) ? ( (Feature_7 <= 0.05275942012667656) ? ( 414 ) : ( 415 ) ) : ( (Feature_8 <= 0.07358080893754959) ? ( (Feature_0 <= -6.574729923158884e-05) ? ( (Feature_6 <= -0.023151837289333344) ? ( 419 ) : ( 420 ) ) : ( 421 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 423 ) : ( 424 ) ) ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_1
	

	namespace EXT_SubModel_2 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 10 ,  {101. }} ,
				{ 11 ,  {104. }} ,
				{ 12 ,  {90. }} ,
				{ 15 ,  {70. }} ,
				{ 17 ,  {37. }} ,
				{ 19 ,  {55. }} ,
				{ 20 ,  {48. }} ,
				{ 23 ,  {72. }} ,
				{ 25 ,  {79. }} ,
				{ 26 ,  {77. }} ,
				{ 27 ,  {96. }} ,
				{ 32 ,  {74. }} ,
				{ 33 ,  {71. }} ,
				{ 35 ,  {64. }} ,
				{ 36 ,  {61. }} ,
				{ 38 ,  {132. }} ,
				{ 43 ,  {88. }} ,
				{ 44 ,  {89. }} ,
				{ 46 ,  {97. }} ,
				{ 47 ,  {104. }} ,
				{ 49 ,  {83. }} ,
				{ 51 ,  {77. }} ,
				{ 52 ,  {71. }} ,
				{ 53 ,  {53. }} ,
				{ 58 ,  {78. }} ,
				{ 60 ,  {47. }} ,
				{ 61 ,  {53. }} ,
				{ 64 ,  {83. }} ,
				{ 65 ,  {113. }} ,
				{ 67 ,  {127. }} ,
				{ 68 ,  {138. }} ,
				{ 73 ,  {150. }} ,
				{ 74 ,  {144. }} ,
				{ 76 ,  {168. }} ,
				{ 77 ,  {160. }} ,
				{ 79 ,  {219. }} ,
				{ 80 ,  {200. }} ,
				{ 82 ,  {88. }} ,
				{ 84 ,  {104. }} ,
				{ 85 ,  {107. }} ,
				{ 90 ,  {143. }} ,
				{ 92 ,  {114. }} ,
				{ 93 ,  {104. }} ,
				{ 96 ,  {65. }} ,
				{ 98 ,  {77. }} ,
				{ 99 ,  {75. }} ,
				{ 101 ,  {128. }} ,
				{ 103 ,  {80. }} ,
				{ 105 ,  {96. }} ,
				{ 107 ,  {90. }} ,
				{ 108 ,  {92. }} ,
				{ 111 ,  {118. }} ,
				{ 113 ,  {179. }} ,
				{ 114 ,  {158. }} ,
				{ 116 ,  {91. }} ,
				{ 117 ,  {102. }} ,
				{ 121 ,  {60. }} ,
				{ 123 ,  {65. }} ,
				{ 124 ,  {66. }} ,
				{ 125 ,  {71. }} ,
				{ 127 ,  {103. }} ,
				{ 129 ,  {87. }} ,
				{ 130 ,  {84. }} ,
				{ 134 ,  {31. }} ,
				{ 135 ,  {39. }} ,
				{ 139 ,  {61. }} ,
				{ 140 ,  {60. }} ,
				{ 141 ,  {59. }} ,
				{ 145 ,  {51. }} ,
				{ 146 ,  {49. }} ,
				{ 147 ,  {44. }} ,
				{ 148 ,  {59. }} ,
				{ 149 ,  {88. }} ,
				{ 150 ,  {230. }} ,
				{ 151 ,  {216. }} ,
				{ 158 ,  {95. }} ,
				{ 159 ,  {90. }} ,
				{ 161 ,  {52. }} ,
				{ 162 ,  {70. }} ,
				{ 164 ,  {103. }} ,
				{ 165 ,  {118. }} ,
				{ 167 ,  {182. }} ,
				{ 169 ,  {127. }} ,
				{ 170 ,  {147. }} ,
				{ 172 ,  {170. }} ,
				{ 173 ,  {175. }} ,
				{ 176 ,  {113. }} ,
				{ 178 ,  {182. }} ,
				{ 179 ,  {191. }} ,
				{ 180 ,  {263. }} ,
				{ 191 ,  {162. }} ,
				{ 193 ,  {140. }} ,
				{ 194 ,  {131. }} ,
				{ 196 ,  {94. }} ,
				{ 197 ,  {88. }} ,
				{ 199 ,  {151. }} ,
				{ 201 ,  {202. }} ,
				{ 203 ,  {178. }} ,
				{ 204 ,  {190. }} ,
				{ 208 ,  {93. }} ,
				{ 209 ,  {92. }} ,
				{ 210 ,  {107. }} ,
				{ 211 ,  {52. }} ,
				{ 215 ,  {214. }} ,
				{ 216 ,  {206. }} ,
				{ 218 ,  {302. }} ,
				{ 219 ,  {258. }} ,
				{ 223 ,  {178. }} ,
				{ 224 ,  {153. }} ,
				{ 225 ,  {109. }} ,
				{ 227 ,  {235. }} ,
				{ 228 ,  {214. }} ,
				{ 231 ,  {86. }} ,
				{ 232 ,  {58. }} ,
				{ 236 ,  {154. }} ,
				{ 237 ,  {167. }} ,
				{ 239 ,  {111. }} ,
				{ 240 ,  {131. }} ,
				{ 242 ,  {102. }} ,
				{ 244 ,  {73. }} ,
				{ 245 ,  {84. }} ,
				{ 248 ,  {252. }} ,
				{ 249 ,  {257. }} ,
				{ 252 ,  {202. }} ,
				{ 253 ,  {217. }} ,
				{ 254 ,  {178. }} ,
				{ 257 ,  {126. }} ,
				{ 260 ,  {252. }} ,
				{ 261 ,  {242. }} ,
				{ 265 ,  {198. }} ,
				{ 266 ,  {195. }} ,
				{ 267 ,  {185. }} ,
				{ 270 ,  {221. }} ,
				{ 271 ,  {236. }} ,
				{ 274 ,  {209. }} ,
				{ 276 ,  {215. }} ,
				{ 277 ,  {212. }} ,
				{ 278 ,  {197. }} ,
				{ 281 ,  {90. }} ,
				{ 282 ,  {134. }} ,
				{ 284 ,  {202. }} ,
				{ 285 ,  {170. }} ,
				{ 289 ,  {137. }} ,
				{ 290 ,  {200. }} ,
				{ 297 ,  {91. }} ,
				{ 298 ,  {95. }} ,
				{ 299 ,  {68. }} ,
				{ 301 ,  {78. }} ,
				{ 303 ,  {69. }} ,
				{ 304 ,  {67. }} ,
				{ 305 ,  {141. }} ,
				{ 307 ,  {122. }} ,
				{ 308 ,  {121. }} ,
				{ 310 ,  {115. }} ,
				{ 313 ,  {143. }} ,
				{ 314 ,  {138. }} ,
				{ 315 ,  {131. }} ,
				{ 317 ,  {219. }} ,
				{ 318 ,  {196. }} ,
				{ 322 ,  {124. }} ,
				{ 324 ,  {102. }} ,
				{ 325 ,  {100. }} ,
				{ 327 ,  {241. }} ,
				{ 330 ,  {190. }} ,
				{ 332 ,  {179. }} ,
				{ 334 ,  {168. }} ,
				{ 335 ,  {172. }} ,
				{ 336 ,  {120. }} ,
				{ 340 ,  {272. }} ,
				{ 341 ,  {303. }} ,
				{ 345 ,  {277. }} ,
				{ 347 ,  {262. }} ,
				{ 348 ,  {259. }} ,
				{ 349 ,  {311. }} ,
				{ 352 ,  {164. }} ,
				{ 355 ,  {220. }} ,
				{ 356 ,  {225. }} ,
				{ 357 ,  {192. }} ,
				{ 361 ,  {242. }} ,
				{ 362 ,  {248. }} ,
				{ 363 ,  {230. }} ,
				{ 365 ,  {268. }} ,
				{ 366 ,  {258. }} ,
				{ 370 ,  {191. }} ,
				{ 371 ,  {202. }} ,
				{ 374 ,  {281. }} ,
				{ 375 ,  {270. }} ,
				{ 376 ,  {243. }} ,
				{ 379 ,  {142. }} ,
				{ 380 ,  {150. }} ,
				{ 381 ,  {186. }} ,
				{ 384 ,  {140. }} ,
				{ 385 ,  {131. }} ,
				{ 390 ,  {321. }} ,
				{ 392 ,  {288. }} ,
				{ 393 ,  {274. }} ,
				{ 395 ,  {332. }} ,
				{ 396 ,  {336. }} ,
				{ 400 ,  {258. }} ,
				{ 401 ,  {263. }} ,
				{ 404 ,  {277. }} ,
				{ 405 ,  {275. }} ,
				{ 406 ,  {270. }} ,
				{ 408 ,  {308. }} ,
				{ 409 ,  {310. }} ,
				{ 411 ,  {180. }} ,
				{ 415 ,  {264. }} ,
				{ 416 ,  {279. }} ,
				{ 418 ,  {252. }} ,
				{ 419 ,  {242. }} ,
				{ 422 ,  {233. }} ,
				{ 423 ,  {237. }} ,
				{ 424 ,  {220. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_2 <= 0.06870198622345924) ? ( (Feature_8 <= -0.008461708202958107) ? ( (Feature_2 <= 0.0061888848431408405) ? ( (Feature_3 <= 0.11827273294329643) ? ( (Feature_5 <= 0.09858047962188721) ? ( (Feature_2 <= -0.009978296235203743) ? ( (Feature_2 <= -0.05901874601840973) ? ( (Feature_2 <= -0.07895826920866966) ? ( (Feature_4 <= -0.03940766304731369) ? ( (Feature_4 <= -0.07311850786209106) ? ( 10 ) : ( 11 ) ) : ( 12 ) ) : ( (Feature_8 <= -0.049115097150206566) ? ( (Feature_6 <= 0.0007788082584738731) ? ( 15 ) : ( (Feature_4 <= -0.08206219971179962) ? ( 17 ) : ( (Feature_5 <= -0.059872640296816826) ? ( 19 ) : ( 20 ) ) ) ) : ( (Feature_2 <= -0.06548561528325081) ? ( (Feature_2 <= -0.0676412396132946) ? ( 23 ) : ( (Feature_9 <= -0.01764612551778555) ? ( 25 ) : ( 26 ) ) ) : ( 27 ) ) ) ) : ( (Feature_6 <= -0.012106924317777157) ? ( (Feature_0 <= -0.009147093398496509) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_2 <= -0.034767973236739635) ? ( 32 ) : ( 33 ) ) : ( (Feature_2 <= -0.016984074376523495) ? ( 35 ) : ( 36 ) ) ) : ( (Feature_7 <= -0.006835891050286591) ? ( 38 ) : ( (Feature_8 <= -0.011402560397982597) ? ( (Feature_3 <= -0.01657303422689438) ? ( (Feature_6 <= -0.04892330151051283) ? ( (Feature_7 <= 0.05755656585097313) ? ( 43 ) : ( 44 ) ) : ( (Feature_9 <= 0.02377494447864592) ? ( 46 ) : ( 47 ) ) ) : ( (Feature_5 <= -0.01931991335004568) ? ( 49 ) : ( (Feature_5 <= -0.00021785777062177658) ? ( 51 ) : ( 52 ) ) ) ) : ( 53 ) ) ) ) : ( (Feature_6 <= 0.021027815993875265) ? ( (Feature_2 <= -0.03261234890669584) ? ( (Feature_9 <= -0.040427712723612785) ? ( (Feature_3 <= 0.0029365664813667536) ? ( 58 ) : ( (Feature_8 <= -0.02947093965485692) ? ( 60 ) : ( 61 ) ) ) : ( (Feature_8 <= -0.06562134623527527) ? ( (Feature_5 <= -0.02589603327214718) ? ( 64 ) : ( 65 ) ) : ( (Feature_5 <= -0.02558288350701332) ? ( 67 ) : ( 68 ) ) ) ) : ( (Feature_9 <= 0.005135462852194905) ? ( (Feature_3 <= -0.0005063044372946024) ? ( (Feature_9 <= -0.015575071272905916) ? ( (Feature_5 <= -0.03716937731951475) ? ( 73 ) : ( 74 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 76 ) : ( 77 ) ) ) : ( (Feature_4 <= -0.044911473989486694) ? ( 79 ) : ( 80 ) ) ) : ( (Feature_2 <= -0.025067665614187717) ? ( 82 ) : ( (Feature_4 <= 0.023198191076517105) ? ( 84 ) : ( 85 ) ) ) ) ) : ( (Feature_8 <= -0.024856961332261562) ? ( (Feature_8 <= -0.03590052016079426) ? ( (Feature_5 <= -0.03513391129672527) ? ( (Feature_5 <= -0.08179303258657455) ? ( 90 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 92 ) : ( 93 ) ) ) : ( (Feature_4 <= -0.007760747568681836) ? ( (Feature_4 <= -0.027024087496101856) ? ( 96 ) : ( (Feature_0 <= -0.052737556339707226) ? ( 98 ) : ( 99 ) ) ) : ( (Feature_5 <= -0.018067320343106985) ? ( 101 ) : ( (Feature_8 <= -0.06080492213368416) ? ( 103 ) : ( (Feature_2 <= -0.03584578540176153) ? ( 105 ) : ( (Feature_4 <= 0.01012663932488067) ? ( 107 ) : ( 108 ) ) ) ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_3 <= -0.01083491649478674) ? ( 111 ) : ( (Feature_4 <= 0.02388616744428873) ? ( 113 ) : ( 114 ) ) ) : ( (Feature_3 <= 0.035643836949020624) ? ( 116 ) : ( 117 ) ) ) ) : ( (Feature_4 <= 0.031453908421099186) ? ( (Feature_8 <= -0.01293045561760664) ? ( (Feature_9 <= -0.003148751042317599) ? ( 121 ) : ( (Feature_0 <= 0.034443367330823094) ? ( 123 ) : ( 124 ) ) ) : ( 125 ) ) : ( (Feature_4 <= 0.039021650329232216) ? ( 127 ) : ( (Feature_7 <= -0.03949338395614177) ? ( 129 ) : ( 130 ) ) ) ) ) ) ) ) : ( (Feature_8 <= -0.013531143311411142) ? ( (Feature_8 <= -0.0580417774617672) ? ( (Feature_6 <= 0.07809320418164134) ? ( 134 ) : ( 135 ) ) : ( (Feature_0 <= -0.018228439847007394) ? ( (Feature_4 <= 0.029389980249106884) ? ( (Feature_8 <= -0.04629045911133289) ? ( 139 ) : ( 140 ) ) : ( 141 ) ) : ( (Feature_8 <= -0.0317270765081048) ? ( (Feature_3 <= 0.014986613299697638) ? ( (Feature_0 <= 0.005383060080930591) ? ( 145 ) : ( 146 ) ) : ( 147 ) ) : ( 148 ) ) ) ) : ( 149 ) ) ) : ( 150 ) ) : ( 151 ) ) : ( (Feature_5 <= 0.0007215875521069393) ? ( (Feature_3 <= 0.06433442793786526) ? ( (Feature_8 <= -0.020315219648182392) ? ( (Feature_5 <= -0.008986014465335757) ? ( (Feature_9 <= -0.03214349877089262) ? ( (Feature_9 <= -0.050782980397343636) ? ( 158 ) : ( 159 ) ) : ( (Feature_9 <= -0.02385928574949503) ? ( 161 ) : ( 162 ) ) ) : ( (Feature_7 <= -0.02104282204527408) ? ( 164 ) : ( 165 ) ) ) : ( (Feature_3 <= -0.03436120040714741) ? ( 167 ) : ( (Feature_8 <= -0.015009476337581873) ? ( 169 ) : ( 170 ) ) ) ) : ( (Feature_7 <= -0.04373701103031635) ? ( 172 ) : ( 173 ) ) ) : ( (Feature_8 <= -0.029019986279308796) ? ( (Feature_5 <= 0.013247526250779629) ? ( 176 ) : ( (Feature_3 <= 0.011543742846697569) ? ( 178 ) : ( 179 ) ) ) : ( 180 ) ) ) ) : ( (Feature_9 <= 0.029988105408847332) ? ( (Feature_5 <= 0.04988589696586132) ? ( (Feature_8 <= 0.03485630080103874) ? ( (Feature_3 <= 0.039086708799004555) ? ( (Feature_9 <= 0.009277569595724344) ? ( (Feature_4 <= -0.009136700769886374) ? ( (Feature_3 <= -0.02977070491760969) ? ( (Feature_3 <= -0.05042792856693268) ? ( (Feature_8 <= 0.002427767787594348) ? ( (Feature_2 <= -0.04608500003814697) ? ( 191 ) : ( (Feature_4 <= -0.05179123766720295) ? ( 193 ) : ( 194 ) ) ) : ( (Feature_6 <= -0.0010620111133903265) ? ( 196 ) : ( 197 ) ) ) : ( (Feature_4 <= -0.08825398981571198) ? ( 199 ) : ( (Feature_0 <= -0.06181890144944191) ? ( 201 ) : ( (Feature_4 <= -0.06348683685064316) ? ( 203 ) : ( 204 ) ) ) ) ) : ( (Feature_8 <= 0.024980883114039898) ? ( (Feature_8 <= 0.008724375220481306) ? ( (Feature_2 <= -0.021834228420630097) ? ( 208 ) : ( 209 ) ) : ( 210 ) ) : ( 211 ) ) ) : ( (Feature_3 <= -0.014277786947786808) ? ( (Feature_3 <= -0.033213576301932335) ? ( (Feature_5 <= 0.019667069893330336) ? ( 215 ) : ( 216 ) ) : ( (Feature_0 <= -0.07634905353188515) ? ( 218 ) : ( 219 ) ) ) : ( (Feature_3 <= 0.009822307503782213) ? ( (Feature_6 <= 0.05968501232564449) ? ( (Feature_6 <= -0.0010620113462209702) ? ( 223 ) : ( 224 ) ) : ( 225 ) ) : ( (Feature_0 <= 0.0326270991936326) ? ( 227 ) : ( 228 ) ) ) ) ) : ( (Feature_4 <= -0.03596778120845556) ? ( (Feature_5 <= -0.03889169171452522) ? ( 231 ) : ( 232 ) ) : ( (Feature_4 <= 0.01975830877199769) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= 0.003494354896247387) ? ( 236 ) : ( 237 ) ) : ( (Feature_6 <= -0.0434008464217186) ? ( 239 ) : ( 240 ) ) ) : ( (Feature_7 <= -0.04650459624826908) ? ( 242 ) : ( (Feature_9 <= 0.023774944245815277) ? ( 244 ) : ( 245 ) ) ) ) ) ) : ( (Feature_2 <= -0.006205954006873071) ? ( (Feature_4 <= -0.044911475852131844) ? ( 248 ) : ( 249 ) ) : ( (Feature_8 <= 0.029604747891426086) ? ( (Feature_5 <= -0.012430647388100624) ? ( 252 ) : ( 253 ) ) : ( 254 ) ) ) ) : ( (Feature_6 <= 0.02655027247965336) ? ( (Feature_3 <= -0.04009931720793247) ? ( 257 ) : ( (Feature_9 <= -0.0632093008607626) ? ( (Feature_5 <= -0.018067320808768272) ? ( 260 ) : ( 261 ) ) : ( (Feature_8 <= 0.046056777238845825) ? ( (Feature_6 <= -0.00842528638895601) ? ( (Feature_2 <= 0.019661536207422614) ? ( 265 ) : ( 266 ) ) : ( 267 ) ) : ( (Feature_7 <= 0.015858298051171005) ? ( (Feature_4 <= 0.02044628467410803) ? ( 270 ) : ( 271 ) ) : ( (Feature_8 <= 0.09477764740586281) ? ( (Feature_3 <= 0.014986613299697638) ? ( 274 ) : ( (Feature_0 <= 0.01264813682064414) ? ( 276 ) : ( 277 ) ) ) : ( 278 ) ) ) ) ) ) : ( (Feature_5 <= 0.03234958276152611) ? ( (Feature_2 <= -0.025606570998206735) ? ( 281 ) : ( 282 ) ) : ( (Feature_9 <= 0.0009933561086654663) ? ( 284 ) : ( 285 ) ) ) ) ) : ( (Feature_4 <= 0.12226679548621178) ? ( (Feature_0 <= -0.07816532254219055) ? ( (Feature_5 <= 0.061002666130661964) ? ( 289 ) : ( 290 ) ) : ( (Feature_0 <= 0.043524714186787605) ? ( (Feature_5 <= 0.08949917927384377) ? ( (Feature_3 <= 0.04252957925200462) ? ( (Feature_4 <= 0.0775483287870884) ? ( (Feature_8 <= 0.052340541034936905) ? ( (Feature_0 <= 0.018096945248544216) ? ( 297 ) : ( 298 ) ) : ( 299 ) ) : ( (Feature_2 <= -0.030995632521808147) ? ( 301 ) : ( (Feature_7 <= 0.015858298051171005) ? ( 303 ) : ( 304 ) ) ) ) : ( 305 ) ) : ( (Feature_8 <= 0.03958970122039318) ? ( 307 ) : ( 308 ) ) ) : ( (Feature_2 <= 0.002416542498394847) ? ( 310 ) : ( (Feature_9 <= 0.0009933558758348227) ? ( (Feature_7 <= 0.034308859962038696) ? ( 313 ) : ( 314 ) ) : ( 315 ) ) ) ) ) : ( (Feature_3 <= 0.009822308085858822) ? ( 317 ) : ( 318 ) ) ) ) : ( (Feature_2 <= -0.007822672137990594) ? ( (Feature_8 <= 0.01405999856069684) ? ( (Feature_5 <= -0.007420271635055542) ? ( 322 ) : ( (Feature_2 <= -0.022373134270310402) ? ( 324 ) : ( 325 ) ) ) : ( (Feature_9 <= 0.04034337215125561) ? ( 327 ) : ( (Feature_8 <= 0.030093631707131863) ? ( (Feature_7 <= 0.03357083536684513) ? ( 330 ) : ( (Feature_0 <= 0.00538305938243866) ? ( 332 ) : ( (Feature_8 <= 0.01947084255516529) ? ( 334 ) : ( 335 ) ) ) ) : ( 336 ) ) ) ) : ( (Feature_6 <= -0.021311018615961075) ? ( (Feature_5 <= -0.03763909824192524) ? ( (Feature_8 <= 0.06325955130159855) ? ( 340 ) : ( 341 ) ) : ( (Feature_8 <= 0.026676498353481293) ? ( (Feature_6 <= -0.032355932518839836) ? ( (Feature_8 <= 0.008415275835432112) ? ( 345 ) : ( (Feature_3 <= -0.015425410587340593) ? ( 347 ) : ( 348 ) ) ) : ( 349 ) ) : ( (Feature_7 <= 0.09648724645376205) ? ( (Feature_4 <= -0.0077607480343431234) ? ( 352 ) : ( (Feature_5 <= 0.037516530603170395) ? ( (Feature_7 <= 0.057187553495168686) ? ( 355 ) : ( 356 ) ) : ( 357 ) ) ) : ( (Feature_4 <= 0.06103689596056938) ? ( (Feature_0 <= 0.08348263800144196) ? ( (Feature_6 <= -0.08021722361445427) ? ( 361 ) : ( 362 ) ) : ( 363 ) ) : ( (Feature_5 <= 0.09560557454824448) ? ( 365 ) : ( 366 ) ) ) ) ) ) : ( (Feature_5 <= 0.04143088683485985) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_8 <= 0.03739652503281832) ? ( 370 ) : ( 371 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_4 <= 0.00531080411747098) ? ( 374 ) : ( 375 ) ) : ( 376 ) ) ) : ( (Feature_4 <= 0.08236416429281235) ? ( (Feature_2 <= 0.017505911528132856) ? ( 379 ) : ( 380 ) ) : ( 381 ) ) ) ) ) ) ) : ( (Feature_8 <= -0.021420801989734173) ? ( (Feature_9 <= 0.04034337121993303) ? ( 384 ) : ( 385 ) ) : ( (Feature_5 <= 0.02326827682554722) ? ( (Feature_8 <= 0.0317962309345603) ? ( (Feature_0 <= 0.02899456024169922) ? ( (Feature_4 <= -0.03527980484068394) ? ( 390 ) : ( (Feature_9 <= 0.03205915726721287) ? ( 392 ) : ( 393 ) ) ) : ( (Feature_6 <= -0.03787838853895664) ? ( 395 ) : ( 396 ) ) ) : ( (Feature_5 <= 0.007610853295773268) ? ( (Feature_5 <= -0.027931496500968933) ? ( (Feature_1 <= 0.003019241616129875) ? ( 400 ) : ( 401 ) ) : ( (Feature_2 <= 0.10103634744882584) ? ( (Feature_6 <= -0.045241665095090866) ? ( 404 ) : ( 405 ) ) : ( 406 ) ) ) : ( (Feature_0 <= 0.01628067623823881) ? ( 408 ) : ( 409 ) ) ) ) : ( (Feature_6 <= -0.05260493978857994) ? ( 411 ) : ( (Feature_6 <= -0.010266105295158923) ? ( (Feature_6 <= -0.02683347463607788) ? ( (Feature_9 <= 0.07555127888917923) ? ( 415 ) : ( 416 ) ) : ( (Feature_2 <= 0.12097586691379547) ? ( 418 ) : ( 419 ) ) ) : ( (Feature_4 <= 0.11607500538229942) ? ( (Feature_2 <= 0.09618619456887245) ? ( 422 ) : ( 423 ) ) : ( 424 ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_2
	

	namespace EXT_SubModel_3 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 8 ,  {55. }} ,
				{ 10 ,  {74. }} ,
				{ 11 ,  {77. }} ,
				{ 13 ,  {40. }} ,
				{ 18 ,  {158. }} ,
				{ 19 ,  {178. }} ,
				{ 22 ,  {150. }} ,
				{ 23 ,  {160. }} ,
				{ 25 ,  {137. }} ,
				{ 27 ,  {142. }} ,
				{ 29 ,  {144. }} ,
				{ 30 ,  {146. }} ,
				{ 32 ,  {128. }} ,
				{ 33 ,  {113. }} ,
				{ 35 ,  {135. }} ,
				{ 36 ,  {79. }} ,
				{ 41 ,  {70. }} ,
				{ 42 ,  {78. }} ,
				{ 44 ,  {55. }} ,
				{ 45 ,  {54. }} ,
				{ 46 ,  {101. }} ,
				{ 51 ,  {129. }} ,
				{ 53 ,  {116. }} ,
				{ 54 ,  {118. }} ,
				{ 55 ,  {160. }} ,
				{ 57 ,  {132. }} ,
				{ 60 ,  {83. }} ,
				{ 62 ,  {88. }} ,
				{ 63 ,  {89. }} ,
				{ 65 ,  {97. }} ,
				{ 66 ,  {107. }} ,
				{ 67 ,  {53. }} ,
				{ 72 ,  {85. }} ,
				{ 73 ,  {77. }} ,
				{ 76 ,  {37. }} ,
				{ 78 ,  {51. }} ,
				{ 80 ,  {48. }} ,
				{ 81 ,  {45. }} ,
				{ 85 ,  {65. }} ,
				{ 86 ,  {72. }} ,
				{ 88 ,  {53. }} ,
				{ 89 ,  {52. }} ,
				{ 90 ,  {90. }} ,
				{ 91 ,  {94. }} ,
				{ 94 ,  {96. }} ,
				{ 95 ,  {179. }} ,
				{ 100 ,  {98. }} ,
				{ 101 ,  {97. }} ,
				{ 102 ,  {104. }} ,
				{ 104 ,  {87. }} ,
				{ 105 ,  {92. }} ,
				{ 106 ,  {66. }} ,
				{ 111 ,  {25. }} ,
				{ 112 ,  {31. }} ,
				{ 113 ,  {44. }} ,
				{ 116 ,  {68. }} ,
				{ 117 ,  {81. }} ,
				{ 119 ,  {51. }} ,
				{ 122 ,  {60. }} ,
				{ 123 ,  {61. }} ,
				{ 124 ,  {59. }} ,
				{ 127 ,  {168. }} ,
				{ 128 ,  {113. }} ,
				{ 130 ,  {67. }} ,
				{ 131 ,  {60. }} ,
				{ 134 ,  {182. }} ,
				{ 136 ,  {210. }} ,
				{ 137 ,  {201. }} ,
				{ 141 ,  {96. }} ,
				{ 142 ,  {121. }} ,
				{ 146 ,  {184. }} ,
				{ 147 ,  {182. }} ,
				{ 150 ,  {145. }} ,
				{ 151 ,  {147. }} ,
				{ 152 ,  {140. }} ,
				{ 153 ,  {103. }} ,
				{ 155 ,  {110. }} ,
				{ 157 ,  {70. }} ,
				{ 158 ,  {90. }} ,
				{ 165 ,  {178. }} ,
				{ 167 ,  {140. }} ,
				{ 168 ,  {151. }} ,
				{ 171 ,  {185. }} ,
				{ 172 ,  {190. }} ,
				{ 174 ,  {198. }} ,
				{ 175 ,  {200. }} ,
				{ 182 ,  {168. }} ,
				{ 183 ,  {162. }} ,
				{ 184 ,  {131. }} ,
				{ 189 ,  {92. }} ,
				{ 190 ,  {93. }} ,
				{ 191 ,  {88. }} ,
				{ 192 ,  {109. }} ,
				{ 193 ,  {153. }} ,
				{ 197 ,  {58. }} ,
				{ 198 ,  {52. }} ,
				{ 200 ,  {94. }} ,
				{ 204 ,  {85. }} ,
				{ 205 ,  {84. }} ,
				{ 206 ,  {78. }} ,
				{ 208 ,  {74. }} ,
				{ 209 ,  {69. }} ,
				{ 211 ,  {102. }} ,
				{ 212 ,  {134. }} ,
				{ 214 ,  {173. }} ,
				{ 215 ,  {142. }} ,
				{ 217 ,  {214. }} ,
				{ 218 ,  {154. }} ,
				{ 222 ,  {111. }} ,
				{ 225 ,  {245. }} ,
				{ 226 ,  {259. }} ,
				{ 229 ,  {200. }} ,
				{ 230 ,  {206. }} ,
				{ 232 ,  {214. }} ,
				{ 233 ,  {219. }} ,
				{ 239 ,  {168. }} ,
				{ 240 ,  {150. }} ,
				{ 244 ,  {102. }} ,
				{ 245 ,  {111. }} ,
				{ 246 ,  {122. }} ,
				{ 247 ,  {173. }} ,
				{ 250 ,  {196. }} ,
				{ 252 ,  {174. }} ,
				{ 254 ,  {180. }} ,
				{ 255 ,  {178. }} ,
				{ 256 ,  {164. }} ,
				{ 259 ,  {122. }} ,
				{ 260 ,  {115. }} ,
				{ 261 ,  {84. }} ,
				{ 262 ,  {262. }} ,
				{ 264 ,  {209. }} ,
				{ 267 ,  {121. }} ,
				{ 269 ,  {137. }} ,
				{ 270 ,  {131. }} ,
				{ 273 ,  {126. }} ,
				{ 274 ,  {101. }} ,
				{ 275 ,  {68. }} ,
				{ 277 ,  {161. }} ,
				{ 281 ,  {229. }} ,
				{ 282 ,  {225. }} ,
				{ 283 ,  {202. }} ,
				{ 284 ,  {268. }} ,
				{ 287 ,  {346. }} ,
				{ 289 ,  {275. }} ,
				{ 290 ,  {279. }} ,
				{ 294 ,  {242. }} ,
				{ 295 ,  {233. }} ,
				{ 296 ,  {220. }} ,
				{ 297 ,  {180. }} ,
				{ 302 ,  {219. }} ,
				{ 305 ,  {53. }} ,
				{ 307 ,  {71. }} ,
				{ 308 ,  {65. }} ,
				{ 310 ,  {73. }} ,
				{ 314 ,  {113. }} ,
				{ 315 ,  {118. }} ,
				{ 316 ,  {104. }} ,
				{ 317 ,  {141. }} ,
				{ 319 ,  {244. }} ,
				{ 322 ,  {170. }} ,
				{ 323 ,  {175. }} ,
				{ 324 ,  {155. }} ,
				{ 329 ,  {252. }} ,
				{ 330 ,  {292. }} ,
				{ 331 ,  {202. }} ,
				{ 335 ,  {107. }} ,
				{ 337 ,  {129. }} ,
				{ 338 ,  {138. }} ,
				{ 339 ,  {66. }} ,
				{ 344 ,  {171. }} ,
				{ 346 ,  {164. }} ,
				{ 347 ,  {163. }} ,
				{ 349 ,  {150. }} ,
				{ 350 ,  {144. }} ,
				{ 352 ,  {143. }} ,
				{ 355 ,  {235. }} ,
				{ 356 ,  {217. }} ,
				{ 357 ,  {196. }} ,
				{ 360 ,  {273. }} ,
				{ 361 ,  {248. }} ,
				{ 364 ,  {195. }} ,
				{ 366 ,  {178. }} ,
				{ 367 ,  {166. }} ,
				{ 370 ,  {232. }} ,
				{ 371 ,  {222. }} ,
				{ 372 ,  {198. }} ,
				{ 376 ,  {311. }} ,
				{ 379 ,  {281. }} ,
				{ 380 ,  {270. }} ,
				{ 382 ,  {283. }} ,
				{ 383 ,  {297. }} ,
				{ 385 ,  {232. }} ,
				{ 386 ,  {246. }} ,
				{ 387 ,  {120. }} ,
				{ 392 ,  {321. }} ,
				{ 396 ,  {293. }} ,
				{ 397 ,  {308. }} ,
				{ 399 ,  {263. }} ,
				{ 401 ,  {288. }} ,
				{ 404 ,  {281. }} ,
				{ 405 ,  {280. }} ,
				{ 406 ,  {275. }} ,
				{ 408 ,  {270. }} ,
				{ 410 ,  {258. }} ,
				{ 411 ,  {257. }} ,
				{ 413 ,  {131. }} ,
				{ 417 ,  {277. }} ,
				{ 418 ,  {274. }} ,
				{ 419 ,  {263. }} ,
				{ 421 ,  {220. }} ,
				{ 422 ,  {242. }} ,
				{ 423 ,  {310. }} ,
				{ 427 ,  {233. }} ,
				{ 428 ,  {230. }} ,
				{ 429 ,  {252. }} ,
				{ 431 ,  {217. }} ,
				{ 432 ,  {186. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_3 <= 0.023593789897859097) ? ( (Feature_8 <= -0.009431487880647182) ? ( (Feature_2 <= 0.0061888848431408405) ? ( (Feature_2 <= -0.011595014482736588) ? ( (Feature_6 <= 0.028391091153025627) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_3 <= -0.0831352025270462) ? ( (Feature_0 <= -0.06363517232239246) ? ( 8 ) : ( (Feature_8 <= -0.04360863193869591) ? ( 10 ) : ( 11 ) ) ) : ( (Feature_5 <= -0.10590546205639839) ? ( 13 ) : ( (Feature_3 <= 0.0006413190349121578) ? ( (Feature_4 <= 0.001870922278612852) ? ( (Feature_8 <= -0.04472579248249531) ? ( (Feature_3 <= -0.03665644838474691) ? ( 18 ) : ( 19 ) ) : ( (Feature_3 <= -0.059035105630755424) ? ( (Feature_4 <= -0.029088016432069708) ? ( 22 ) : ( 23 ) ) : ( (Feature_7 <= -0.05794394388794899) ? ( 25 ) : ( (Feature_2 <= -0.054707495495676994) ? ( 27 ) : ( (Feature_8 <= -0.035853948444128036) ? ( 29 ) : ( 30 ) ) ) ) ) ) : ( (Feature_3 <= -0.043542188592255116) ? ( 32 ) : ( 33 ) ) ) : ( (Feature_8 <= -0.026140096597373486) ? ( 35 ) : ( 36 ) ) ) ) ) : ( (Feature_9 <= -0.02593033853918314) ? ( (Feature_8 <= -0.023219254799187183) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_4 <= -0.06830267421901226) ? ( 41 ) : ( 42 ) ) : ( (Feature_0 <= -0.038207400823011994) ? ( 44 ) : ( 45 ) ) ) : ( 46 ) ) : ( (Feature_8 <= -0.011402560397982597) ? ( (Feature_2 <= -0.02937891334295273) ? ( (Feature_8 <= -0.021829575765877962) ? ( (Feature_5 <= -0.054079391062259674) ? ( 51 ) : ( (Feature_9 <= 0.02377494517713785) ? ( 53 ) : ( 54 ) ) ) : ( 55 ) ) : ( (Feature_4 <= -0.03665575757622719) ? ( 57 ) : ( (Feature_8 <= -0.015513104852288961) ? ( (Feature_4 <= -0.033903852105140686) ? ( 60 ) : ( (Feature_5 <= 0.011994932778179646) ? ( 62 ) : ( 63 ) ) ) : ( (Feature_5 <= 0.028122077230364084) ? ( 65 ) : ( 66 ) ) ) ) ) : ( 67 ) ) ) ) : ( (Feature_0 <= 0.003566791128832847) ? ( (Feature_5 <= 0.03892569988965988) ? ( (Feature_0 <= -0.08724666759371758) ? ( (Feature_5 <= -0.046407257206737995) ? ( 72 ) : ( 73 ) ) : ( (Feature_2 <= -0.054168591275811195) ? ( (Feature_5 <= -0.0756866354495287) ? ( 76 ) : ( (Feature_0 <= -0.06908397749066353) ? ( 78 ) : ( (Feature_2 <= -0.06602452509105206) ? ( 80 ) : ( 81 ) ) ) ) : ( (Feature_3 <= -0.019442093558609486) ? ( (Feature_2 <= -0.0374625027179718) ? ( (Feature_3 <= -0.06706847064197063) ? ( 85 ) : ( 86 ) ) : ( (Feature_5 <= 0.008237150526838377) ? ( 88 ) : ( 89 ) ) ) : ( 90 ) ) ) ) : ( 91 ) ) : ( (Feature_9 <= -0.040427712723612785) ? ( (Feature_8 <= -0.041075872257351875) ? ( 94 ) : ( 95 ) ) : ( (Feature_0 <= 0.05623859725892544) ? ( (Feature_6 <= 0.09834221005439758) ? ( (Feature_9 <= 0.013419676572084427) ? ( (Feature_7 <= -0.05794394388794899) ? ( 100 ) : ( 101 ) ) : ( 102 ) ) : ( (Feature_9 <= 0.03827231773175299) ? ( 104 ) : ( 105 ) ) ) : ( 106 ) ) ) ) ) : ( (Feature_9 <= -0.007290857785847038) ? ( (Feature_5 <= -0.024017141200602055) ? ( (Feature_9 <= -0.023859285283833742) ? ( (Feature_2 <= -0.009439390152692795) ? ( 111 ) : ( 112 ) ) : ( 113 ) ) : ( (Feature_8 <= -0.04477105475962162) ? ( (Feature_4 <= 0.010814615525305271) ? ( 116 ) : ( 117 ) ) : ( (Feature_3 <= -0.05559223610907793) ? ( 119 ) : ( (Feature_5 <= 0.008550299098715186) ? ( (Feature_7 <= -0.011817541904747486) ? ( 122 ) : ( 123 ) ) : ( 124 ) ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= 0.009277569653932005) ? ( 127 ) : ( 128 ) ) : ( (Feature_5 <= -0.04217975027859211) ? ( 130 ) : ( 131 ) ) ) ) ) : ( (Feature_4 <= -0.047663379460573196) ? ( (Feature_5 <= -0.05971606448292732) ? ( 134 ) : ( (Feature_2 <= 0.012655757367610931) ? ( 136 ) : ( 137 ) ) ) : ( (Feature_0 <= 0.03807590529322624) ? ( (Feature_2 <= 0.024511689320206642) ? ( (Feature_6 <= 0.021027816459536552) ? ( 141 ) : ( 142 ) ) : ( (Feature_6 <= 0.057844193652272224) ? ( (Feature_0 <= -0.03639113064855337) ? ( (Feature_4 <= -0.00500884186476469) ? ( 146 ) : ( 147 ) ) : ( (Feature_9 <= -0.0010776976123452187) ? ( (Feature_5 <= -0.005384807242080569) ? ( 150 ) : ( 151 ) ) : ( 152 ) ) ) : ( 153 ) ) ) : ( (Feature_0 <= 0.05442232824862003) ? ( 155 ) : ( (Feature_4 <= -0.024272182025015354) ? ( 157 ) : ( 158 ) ) ) ) ) ) : ( (Feature_2 <= 0.06977979838848114) ? ( (Feature_8 <= 0.06814971566200256) ? ( (Feature_7 <= 0.03135676868259907) ? ( (Feature_5 <= -0.04030086100101471) ? ( (Feature_3 <= -0.03837788105010986) ? ( (Feature_2 <= -0.03800140880048275) ? ( 165 ) : ( (Feature_9 <= -0.03628560807555914) ? ( 167 ) : ( 168 ) ) ) : ( (Feature_0 <= -0.02004470955580473) ? ( (Feature_0 <= -0.07271651551127434) ? ( 171 ) : ( 172 ) ) : ( (Feature_4 <= -0.03321587573736906) ? ( 174 ) : ( 175 ) ) ) ) : ( (Feature_3 <= 0.01670804899185896) ? ( (Feature_9 <= 0.07555127888917923) ? ( (Feature_8 <= 0.007388766389340162) ? ( (Feature_3 <= -0.03321357723325491) ? ( (Feature_0 <= 0.012648137286305428) ? ( (Feature_9 <= -0.030072446214035153) ? ( 182 ) : ( 183 ) ) : ( 184 ) ) : ( (Feature_9 <= -0.0031487508676946163) ? ( (Feature_2 <= -0.0029725178028456867) ? ( (Feature_3 <= -0.009113481035456061) ? ( (Feature_9 <= -0.052854033187031746) ? ( 189 ) : ( 190 ) ) : ( 191 ) ) : ( 192 ) ) : ( 193 ) ) ) : ( (Feature_0 <= 0.043524714186787605) ? ( (Feature_4 <= -0.028400040231645107) ? ( (Feature_2 <= 0.00834450963884592) ? ( 197 ) : ( 198 ) ) : ( (Feature_4 <= -0.013952535577118397) ? ( 200 ) : ( (Feature_3 <= -0.01772065833210945) ? ( (Feature_0 <= 0.019913213385734707) ? ( (Feature_9 <= 0.015490730525925756) ? ( 204 ) : ( 205 ) ) : ( 206 ) ) : ( (Feature_8 <= 0.019437646958976984) ? ( 208 ) : ( 209 ) ) ) ) ) : ( (Feature_8 <= 0.032103268429636955) ? ( 211 ) : ( 212 ) ) ) ) : ( (Feature_3 <= -0.003949175123125315) ? ( 214 ) : ( 215 ) ) ) : ( (Feature_5 <= -0.002409897278994322) ? ( 217 ) : ( 218 ) ) ) ) : ( (Feature_8 <= 0.04168217070400715) ? ( (Feature_9 <= -0.0010776976123452187) ? ( (Feature_8 <= 0.0009407771285623312) ? ( 222 ) : ( (Feature_6 <= -0.047082483768463135) ? ( (Feature_0 <= 0.030810830183327198) ? ( 225 ) : ( 226 ) ) : ( (Feature_0 <= -0.06545143760740757) ? ( (Feature_9 <= -0.01971717830747366) ? ( 229 ) : ( 230 ) ) : ( (Feature_0 <= 0.0017505232244729996) ? ( 232 ) : ( 233 ) ) ) ) ) : ( (Feature_9 <= 0.08590654656291008) ? ( (Feature_5 <= 0.07211943715810776) ? ( (Feature_2 <= 0.02558950148522854) ? ( (Feature_6 <= -0.05812739580869675) ? ( (Feature_2 <= -0.02560657262802124) ? ( 239 ) : ( 240 ) ) : ( (Feature_6 <= -0.03787839040160179) ? ( (Feature_6 <= -0.0434008464217186) ? ( (Feature_3 <= -0.05214936472475529) ? ( 244 ) : ( 245 ) ) : ( 246 ) ) : ( 247 ) ) ) : ( (Feature_5 <= 0.06272498145699501) ? ( (Feature_2 <= 0.03313418664038181) ? ( 250 ) : ( (Feature_8 <= 0.009381234180182219) ? ( 252 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 254 ) : ( 255 ) ) ) ) : ( 256 ) ) ) : ( (Feature_9 <= 0.05069863889366388) ? ( (Feature_6 <= -0.0065844678319990635) ? ( 259 ) : ( 260 ) ) : ( 261 ) ) ) : ( 262 ) ) ) : ( (Feature_2 <= -0.022912041284143925) ? ( 264 ) : ( (Feature_8 <= 0.05798095650970936) ? ( (Feature_7 <= 0.0892915278673172) ? ( 267 ) : ( (Feature_9 <= -0.01557507086545229) ? ( 269 ) : ( 270 ) ) ) : ( (Feature_5 <= 0.01637901086360216) ? ( (Feature_9 <= -0.02800139132887125) ? ( 273 ) : ( 274 ) ) : ( 275 ) ) ) ) ) ) : ( (Feature_5 <= -0.022607974708080292) ? ( 277 ) : ( (Feature_3 <= -0.003949175123125315) ? ( (Feature_6 <= 0.004460446536540985) ? ( (Feature_9 <= 0.01756178424693644) ? ( 281 ) : ( 282 ) ) : ( 283 ) ) : ( 284 ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= 0.0258459965698421) ? ( 287 ) : ( (Feature_9 <= 0.0589828509837389) ? ( 289 ) : ( 290 ) ) ) : ( (Feature_3 <= 0.018429484218358994) ? ( (Feature_4 <= 0.09749964252114296) ? ( (Feature_7 <= 0.05275942012667656) ? ( 294 ) : ( 295 ) ) : ( 296 ) ) : ( 297 ) ) ) ) ) : ( (Feature_2 <= 0.047684650868177414) ? ( (Feature_8 <= 0.00026727162185125053) ? ( (Feature_2 <= 0.02343387808650732) ? ( (Feature_4 <= -0.04697540309280157) ? ( 302 ) : ( (Feature_2 <= -0.020217510871589184) ? ( (Feature_5 <= 0.00886344735044986) ? ( 305 ) : ( (Feature_4 <= 0.011502591893076897) ? ( 307 ) : ( 308 ) ) ) : ( (Feature_3 <= 0.039086708799004555) ? ( 310 ) : ( (Feature_4 <= 0.04314950667321682) ? ( (Feature_4 <= 0.008062710287049413) ? ( (Feature_0 <= 0.010831867344677448) ? ( 314 ) : ( 315 ) ) : ( 316 ) ) : ( 317 ) ) ) ) ) : ( (Feature_3 <= 0.05630106292665005) ? ( 319 ) : ( (Feature_9 <= 0.06726706633344293) ? ( (Feature_4 <= -0.07243053428828716) ? ( 322 ) : ( 323 ) ) : ( 324 ) ) ) ) : ( (Feature_9 <= 0.03827231749892235) ? ( (Feature_4 <= -0.0173924183472991) ? ( (Feature_6 <= -0.0029028295539319515) ? ( (Feature_7 <= -0.002592261880636215) ? ( 329 ) : ( 330 ) ) : ( 331 ) ) : ( (Feature_8 <= 0.020849044434726238) ? ( (Feature_6 <= -0.026833476033061743) ? ( (Feature_0 <= 0.0035667922347784042) ? ( 335 ) : ( (Feature_2 <= 0.004572166595607996) ? ( 337 ) : ( 338 ) ) ) : ( 339 ) ) : ( (Feature_2 <= 0.015350287780165672) ? ( (Feature_6 <= -0.017629381734877825) ? ( (Feature_2 <= 0.0018776364158838987) ? ( (Feature_9 <= -0.013504018541425467) ? ( 344 ) : ( (Feature_5 <= 0.006671408307738602) ? ( 346 ) : ( 347 ) ) ) : ( (Feature_6 <= -0.04156002774834633) ? ( 349 ) : ( 350 ) ) ) : ( (Feature_8 <= 0.026704820804297924) ? ( 352 ) : ( (Feature_7 <= 0.015858298051171005) ? ( (Feature_3 <= 0.07351541519165039) ? ( 355 ) : ( 356 ) ) : ( 357 ) ) ) ) : ( (Feature_2 <= 0.01912263035774231) ? ( (Feature_0 <= 0.05442232824862003) ? ( 360 ) : ( 361 ) ) : ( (Feature_5 <= 0.009489744435995817) ? ( (Feature_9 <= -0.005219804123044014) ? ( 364 ) : ( (Feature_8 <= 0.041736495681107044) ? ( 366 ) : ( 367 ) ) ) : ( (Feature_2 <= 0.03205637447535992) ? ( (Feature_3 <= 0.05113675631582737) ? ( 370 ) : ( 371 ) ) : ( 372 ) ) ) ) ) ) ) : ( (Feature_4 <= 0.051405224949121475) ? ( (Feature_2 <= 0.0363676231354475) ? ( (Feature_8 <= 0.020768484566360712) ? ( 376 ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= 0.006188884377479553) ? ( 379 ) : ( 380 ) ) : ( (Feature_4 <= -0.013952534645795822) ? ( 382 ) : ( 383 ) ) ) ) : ( (Feature_3 <= 0.03793908562511206) ? ( 385 ) : ( 386 ) ) ) : ( 387 ) ) ) ) : ( (Feature_4 <= 0.04521343670785427) ? ( (Feature_4 <= 0.030077955685555935) ? ( (Feature_9 <= 0.05069863796234131) ? ( (Feature_4 <= -0.03527980484068394) ? ( 392 ) : ( (Feature_9 <= 0.021703890524804592) ? ( (Feature_0 <= -0.005514555145055056) ? ( (Feature_5 <= -0.005228233523666859) ? ( 396 ) : ( 397 ) ) : ( (Feature_8 <= -0.021994116716086864) ? ( 399 ) : ( (Feature_8 <= -0.0010799570009112358) ? ( 401 ) : ( (Feature_0 <= 0.03625963814556599) ? ( (Feature_3 <= 0.075236851349473) ? ( 404 ) : ( 405 ) ) : ( 406 ) ) ) ) ) : ( (Feature_4 <= -0.007072771433740854) ? ( 408 ) : ( (Feature_9 <= 0.029988104477524757) ? ( 410 ) : ( 411 ) ) ) ) ) : ( (Feature_9 <= 0.06726706586778164) ? ( 413 ) : ( (Feature_7 <= 0.03670743107795715) ? ( (Feature_0 <= 0.018096945248544216) ? ( (Feature_2 <= 0.0827135406434536) ? ( 417 ) : ( 418 ) ) : ( 419 ) ) : ( (Feature_3 <= 0.049989134073257446) ? ( 421 ) : ( 422 ) ) ) ) ) : ( 423 ) ) : ( (Feature_5 <= 0.08088759332895279) ? ( (Feature_4 <= 0.0830521397292614) ? ( (Feature_8 <= 0.06965931877493858) ? ( 427 ) : ( 428 ) ) : ( 429 ) ) : ( (Feature_0 <= -0.036391131579875946) ? ( 431 ) : ( 432 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_3
	

	namespace EXT_SubModel_4 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {101. }} ,
				{ 8 ,  {137. }} ,
				{ 9 ,  {158. }} ,
				{ 13 ,  {51. }} ,
				{ 15 ,  {48. }} ,
				{ 16 ,  {49. }} ,
				{ 18 ,  {37. }} ,
				{ 22 ,  {65. }} ,
				{ 23 ,  {53. }} ,
				{ 25 ,  {72. }} ,
				{ 26 ,  {77. }} ,
				{ 28 ,  {96. }} ,
				{ 30 ,  {68. }} ,
				{ 32 ,  {86. }} ,
				{ 33 ,  {79. }} ,
				{ 37 ,  {94. }} ,
				{ 38 ,  {101. }} ,
				{ 39 ,  {116. }} ,
				{ 40 ,  {70. }} ,
				{ 45 ,  {143. }} ,
				{ 46 ,  {140. }} ,
				{ 48 ,  {71. }} ,
				{ 49 ,  {90. }} ,
				{ 51 ,  {200. }} ,
				{ 55 ,  {185. }} ,
				{ 56 ,  {168. }} ,
				{ 59 ,  {144. }} ,
				{ 61 ,  {152. }} ,
				{ 62 ,  {150. }} ,
				{ 63 ,  {160. }} ,
				{ 64 ,  {113. }} ,
				{ 71 ,  {74. }} ,
				{ 72 ,  {65. }} ,
				{ 74 ,  {92. }} ,
				{ 75 ,  {88. }} ,
				{ 80 ,  {75. }} ,
				{ 81 ,  {83. }} ,
				{ 82 ,  {104. }} ,
				{ 86 ,  {114. }} ,
				{ 87 ,  {102. }} ,
				{ 88 ,  {87. }} ,
				{ 96 ,  {129. }} ,
				{ 97 ,  {128. }} ,
				{ 99 ,  {125. }} ,
				{ 100 ,  {127. }} ,
				{ 101 ,  {138. }} ,
				{ 103 ,  {178. }} ,
				{ 104 ,  {135. }} ,
				{ 105 ,  {160. }} ,
				{ 106 ,  {88. }} ,
				{ 108 ,  {168. }} ,
				{ 109 ,  {179. }} ,
				{ 112 ,  {47. }} ,
				{ 113 ,  {58. }} ,
				{ 114 ,  {94. }} ,
				{ 117 ,  {67. }} ,
				{ 118 ,  {92. }} ,
				{ 120 ,  {25. }} ,
				{ 122 ,  {39. }} ,
				{ 123 ,  {51. }} ,
				{ 126 ,  {156. }} ,
				{ 129 ,  {216. }} ,
				{ 130 ,  {214. }} ,
				{ 131 ,  {219. }} ,
				{ 133 ,  {66. }} ,
				{ 136 ,  {132. }} ,
				{ 138 ,  {127. }} ,
				{ 139 ,  {124. }} ,
				{ 140 ,  {103. }} ,
				{ 147 ,  {64. }} ,
				{ 148 ,  {60. }} ,
				{ 149 ,  {53. }} ,
				{ 150 ,  {74. }} ,
				{ 154 ,  {128. }} ,
				{ 155 ,  {154. }} ,
				{ 157 ,  {107. }} ,
				{ 158 ,  {104. }} ,
				{ 162 ,  {71. }} ,
				{ 163 ,  {72. }} ,
				{ 164 ,  {65. }} ,
				{ 166 ,  {94. }} ,
				{ 167 ,  {84. }} ,
				{ 170 ,  {59. }} ,
				{ 172 ,  {55. }} ,
				{ 173 ,  {53. }} ,
				{ 176 ,  {80. }} ,
				{ 177 ,  {97. }} ,
				{ 180 ,  {64. }} ,
				{ 181 ,  {63. }} ,
				{ 182 ,  {69. }} ,
				{ 183 ,  {177. }} ,
				{ 187 ,  {102. }} ,
				{ 188 ,  {104. }} ,
				{ 190 ,  {88. }} ,
				{ 191 ,  {89. }} ,
				{ 196 ,  {214. }} ,
				{ 197 ,  {202. }} ,
				{ 200 ,  {245. }} ,
				{ 201 ,  {262. }} ,
				{ 202 ,  {230. }} ,
				{ 203 ,  {150. }} ,
				{ 208 ,  {107. }} ,
				{ 209 ,  {111. }} ,
				{ 211 ,  {100. }} ,
				{ 212 ,  {91. }} ,
				{ 213 ,  {129. }} ,
				{ 214 ,  {253. }} ,
				{ 217 ,  {252. }} ,
				{ 218 ,  {283. }} ,
				{ 223 ,  {144. }} ,
				{ 225 ,  {126. }} ,
				{ 226 ,  {131. }} ,
				{ 228 ,  {198. }} ,
				{ 231 ,  {164. }} ,
				{ 232 ,  {163. }} ,
				{ 233 ,  {150. }} ,
				{ 236 ,  {281. }} ,
				{ 237 ,  {249. }} ,
				{ 242 ,  {206. }} ,
				{ 243 ,  {209. }} ,
				{ 244 ,  {217. }} ,
				{ 245 ,  {197. }} ,
				{ 248 ,  {190. }} ,
				{ 251 ,  {170. }} ,
				{ 252 ,  {171. }} ,
				{ 253 ,  {196. }} ,
				{ 254 ,  {131. }} ,
				{ 257 ,  {191. }} ,
				{ 258 ,  {200. }} ,
				{ 261 ,  {95. }} ,
				{ 262 ,  {90. }} ,
				{ 264 ,  {142. }} ,
				{ 265 ,  {134. }} ,
				{ 270 ,  {276. }} ,
				{ 272 ,  {90. }} ,
				{ 274 ,  {201. }} ,
				{ 277 ,  {172. }} ,
				{ 278 ,  {180. }} ,
				{ 279 ,  {164. }} ,
				{ 282 ,  {90. }} ,
				{ 283 ,  {52. }} ,
				{ 290 ,  {196. }} ,
				{ 291 ,  {184. }} ,
				{ 293 ,  {167. }} ,
				{ 295 ,  {178. }} ,
				{ 296 ,  {174. }} ,
				{ 297 ,  {147. }} ,
				{ 299 ,  {140. }} ,
				{ 300 ,  {110. }} ,
				{ 303 ,  {128. }} ,
				{ 304 ,  {122. }} ,
				{ 305 ,  {111. }} ,
				{ 307 ,  {141. }} ,
				{ 309 ,  {85. }} ,
				{ 311 ,  {103. }} ,
				{ 312 ,  {96. }} ,
				{ 317 ,  {170. }} ,
				{ 319 ,  {118. }} ,
				{ 320 ,  {113. }} ,
				{ 323 ,  {182. }} ,
				{ 324 ,  {175. }} ,
				{ 325 ,  {191. }} ,
				{ 329 ,  {202. }} ,
				{ 330 ,  {151. }} ,
				{ 335 ,  {288. }} ,
				{ 336 ,  {293. }} ,
				{ 337 ,  {281. }} ,
				{ 339 ,  {263. }} ,
				{ 340 ,  {259. }} ,
				{ 343 ,  {178. }} ,
				{ 344 ,  {173. }} ,
				{ 348 ,  {257. }} ,
				{ 349 ,  {244. }} ,
				{ 350 ,  {275. }} ,
				{ 352 ,  {195. }} ,
				{ 354 ,  {233. }} ,
				{ 355 ,  {222. }} ,
				{ 359 ,  {180. }} ,
				{ 360 ,  {186. }} ,
				{ 362 ,  {131. }} ,
				{ 363 ,  {155. }} ,
				{ 364 ,  {270. }} ,
				{ 367 ,  {261. }} ,
				{ 368 ,  {242. }} ,
				{ 371 ,  {321. }} ,
				{ 372 ,  {308. }} ,
				{ 373 ,  {274. }} ,
				{ 376 ,  {68. }} ,
				{ 377 ,  {137. }} ,
				{ 384 ,  {220. }} ,
				{ 385 ,  {225. }} ,
				{ 387 ,  {208. }} ,
				{ 388 ,  {212. }} ,
				{ 391 ,  {297. }} ,
				{ 392 ,  {273. }} ,
				{ 394 ,  {258. }} ,
				{ 395 ,  {230. }} ,
				{ 398 ,  {233. }} ,
				{ 399 ,  {217. }} ,
				{ 405 ,  {272. }} ,
				{ 407 ,  {270. }} ,
				{ 408 ,  {268. }} ,
				{ 409 ,  {281. }} ,
				{ 412 ,  {306. }} ,
				{ 413 ,  {303. }} ,
				{ 414 ,  {277. }} ,
				{ 416 ,  {275. }} ,
				{ 418 ,  {258. }} ,
				{ 419 ,  {252. }} ,
				{ 420 ,  {220. }} ,
				{ 425 ,  {221. }} ,
				{ 426 ,  {220. }} ,
				{ 427 ,  {215. }} ,
				{ 429 ,  {166. }} ,
				{ 430 ,  {173. }} ,
				{ 432 ,  {248. }} ,
				{ 434 ,  {246. }} ,
				{ 436 ,  {235. }} ,
				{ 437 ,  {236. }} ,
				{ 439 ,  {317. }} ,
				{ 440 ,  {310. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_2 <= 0.010500133037567139) ? ( (Feature_8 <= 0.024388953112065792) ? ( (Feature_7 <= 0.03135676868259907) ? ( (Feature_2 <= -0.05632421560585499) ? ( (Feature_0 <= -0.0945117436349392) ? ( (Feature_8 <= -0.054896214976906776) ? ( 6 ) : ( (Feature_2 <= -0.07356920838356018) ? ( 8 ) : ( 9 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= -0.0692579597234726) ? ( (Feature_3 <= -0.031492142006754875) ? ( 13 ) : ( (Feature_0 <= -6.574729923158884e-05) ? ( 15 ) : ( 16 ) ) ) : ( (Feature_4 <= -0.07380648329854012) ? ( 18 ) : ( (Feature_8 <= -0.034532757475972176) ? ( (Feature_9 <= -0.028001392260193825) ? ( (Feature_8 <= -0.04764471389353275) ? ( 22 ) : ( 23 ) ) : ( (Feature_8 <= -0.042089227586984634) ? ( 25 ) : ( 26 ) ) ) : ( (Feature_7 <= -0.04336800053715706) ? ( 28 ) : ( (Feature_3 <= -0.021163528435863554) ? ( 30 ) : ( (Feature_0 <= -0.03457486251136288) ? ( 32 ) : ( 33 ) ) ) ) ) ) ) : ( (Feature_0 <= -0.060002632439136505) ? ( (Feature_6 <= -0.0010620111133903265) ? ( (Feature_0 <= -0.07816532254219055) ? ( 37 ) : ( 38 ) ) : ( 39 ) ) : ( 40 ) ) ) ) : ( (Feature_0 <= -0.05092128552496433) ? ( (Feature_9 <= -0.061138248071074486) ? ( (Feature_5 <= -0.06911052018404007) ? ( (Feature_7 <= -0.05794394388794899) ? ( 45 ) : ( 46 ) ) : ( (Feature_0 <= -0.09087920933961868) ? ( 48 ) : ( 49 ) ) ) : ( (Feature_8 <= -0.058330487459897995) ? ( 51 ) : ( (Feature_4 <= 0.005310804284818005) ? ( (Feature_6 <= 0.009982902556657791) ? ( (Feature_5 <= -0.06566588580608368) ? ( 55 ) : ( 56 ) ) : ( (Feature_0 <= -0.06363517045974731) ? ( (Feature_8 <= -0.02937392983585596) ? ( 59 ) : ( (Feature_4 <= -0.07931029424071312) ? ( 61 ) : ( 62 ) ) ) : ( 63 ) ) ) : ( 64 ) ) ) ) : ( (Feature_5 <= -0.003349342499859631) ? ( (Feature_3 <= 0.014412801712751389) ? ( (Feature_2 <= -0.01105610840022564) ? ( (Feature_3 <= -0.0601827297359705) ? ( (Feature_3 <= -0.08657807111740112) ? ( (Feature_2 <= -0.042851563543081284) ? ( 71 ) : ( 72 ) ) : ( (Feature_0 <= 0.028994559310376644) ? ( 74 ) : ( 75 ) ) ) : ( (Feature_3 <= -0.0010801163080031984) ? ( (Feature_8 <= -0.06740894541144371) ? ( (Feature_9 <= -0.007290857378393412) ? ( (Feature_9 <= -0.06113824713975191) ? ( 80 ) : ( 81 ) ) : ( 82 ) ) : ( (Feature_7 <= -0.04650459624826908) ? ( (Feature_6 <= 0.14620350301265717) ? ( (Feature_2 <= -0.03854031581431627) ? ( 86 ) : ( 87 ) ) : ( 88 ) ) : ( (Feature_4 <= -0.00569681846536696) ? ( (Feature_2 <= -0.02937891334295273) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_9 <= 0.013419676572084427) ? ( (Feature_3 <= -0.02116352878510952) ? ( (Feature_3 <= -0.033213576301932335) ? ( (Feature_4 <= -0.049039335222914815) ? ( 96 ) : ( 97 ) ) : ( (Feature_8 <= -0.038498557172715664) ? ( 99 ) : ( 100 ) ) ) : ( 101 ) ) : ( (Feature_8 <= -0.03422631975263357) ? ( 103 ) : ( 104 ) ) ) : ( 105 ) ) : ( 106 ) ) : ( (Feature_0 <= -0.005514555610716343) ? ( 108 ) : ( 109 ) ) ) ) ) : ( (Feature_2 <= -0.01806188654154539) ? ( (Feature_2 <= -0.035306879319250584) ? ( 112 ) : ( 113 ) ) : ( 114 ) ) ) ) : ( (Feature_6 <= 0.009982902556657791) ? ( (Feature_5 <= -0.038265394512563944) ? ( 117 ) : ( 118 ) ) : ( (Feature_0 <= -0.0109633628744632) ? ( 120 ) : ( (Feature_5 <= -0.024017141200602055) ? ( 122 ) : ( 123 ) ) ) ) ) : ( (Feature_9 <= -0.007290857785847038) ? ( (Feature_6 <= -0.028674293775111437) ? ( 126 ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= -0.021788231562823057) ? ( 129 ) : ( 130 ) ) : ( 131 ) ) ) : ( (Feature_5 <= -0.04077058285474777) ? ( 133 ) : ( (Feature_4 <= -0.0008809827268123627) ? ( (Feature_2 <= -0.015367357060313225) ? ( 136 ) : ( (Feature_9 <= 0.027917050756514072) ? ( 138 ) : ( 139 ) ) ) : ( 140 ) ) ) ) ) : ( (Feature_9 <= 0.05276969261467457) ? ( (Feature_0 <= 0.01809694431722164) ? ( (Feature_5 <= 0.007767427945509553) ? ( (Feature_9 <= 0.0258459965698421) ? ( (Feature_8 <= -0.031051834113895893) ? ( (Feature_2 <= -0.008900483837351203) ? ( 147 ) : ( 148 ) ) : ( 149 ) ) : ( 150 ) ) : ( (Feature_6 <= 0.021027815993875265) ? ( (Feature_9 <= 0.01756178354844451) ? ( (Feature_3 <= -0.019442093558609486) ? ( 154 ) : ( 155 ) ) : ( (Feature_6 <= 0.0081420837668702) ? ( 157 ) : ( 158 ) ) ) : ( (Feature_4 <= 0.03970962576568127) ? ( (Feature_9 <= 0.02377494378015399) ? ( (Feature_0 <= -0.025493516586720943) ? ( 162 ) : ( 163 ) ) : ( 164 ) ) : ( (Feature_9 <= -0.01557507086545229) ? ( 166 ) : ( 167 ) ) ) ) ) : ( (Feature_0 <= 0.030810829252004623) ? ( (Feature_7 <= -0.02104282204527408) ? ( 170 ) : ( (Feature_8 <= -0.04452267335727811) ? ( 172 ) : ( 173 ) ) ) : ( (Feature_4 <= 0.04452546127140522) ? ( (Feature_9 <= -0.007290857611224055) ? ( 176 ) : ( 177 ) ) : ( (Feature_4 <= 0.09199583530426025) ? ( (Feature_4 <= 0.06791666150093079) ? ( 180 ) : ( 181 ) ) : ( 182 ) ) ) ) ) : ( 183 ) ) ) ) ) : ( (Feature_3 <= -0.041246941313147545) ? ( (Feature_3 <= -0.055592237040400505) ? ( (Feature_5 <= 0.04941617511212826) ? ( 187 ) : ( 188 ) ) : ( (Feature_5 <= 0.0029136277735233307) ? ( 190 ) : ( 191 ) ) ) : ( (Feature_3 <= -0.003949175123125315) ? ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_3 <= -0.029770705848932266) ? ( (Feature_2 <= -0.039079222828149796) ? ( 196 ) : ( 197 ) ) : ( (Feature_4 <= 0.04108557850122452) ? ( (Feature_9 <= 0.029988104477524757) ? ( 200 ) : ( 201 ) ) : ( 202 ) ) ) : ( 203 ) ) : ( (Feature_4 <= 0.06585272960364819) ? ( (Feature_0 <= 0.030810830183327198) ? ( (Feature_5 <= 0.06319470517337322) ? ( (Feature_4 <= 0.01356652146205306) ? ( 208 ) : ( 209 ) ) : ( (Feature_0 <= 0.007199329789727926) ? ( 211 ) : ( 212 ) ) ) : ( 213 ) ) : ( 214 ) ) ) ) ) : ( (Feature_5 <= -0.06331727467477322) ? ( (Feature_4 <= -0.05523112043738365) ? ( 217 ) : ( 218 ) ) : ( (Feature_6 <= 0.03207272943109274) ? ( (Feature_4 <= 0.0073747336864471436) ? ( (Feature_3 <= -0.03206595126539469) ? ( (Feature_4 <= -0.032527899369597435) ? ( 223 ) : ( (Feature_5 <= -0.009612311783712357) ? ( 225 ) : ( 226 ) ) ) : ( (Feature_7 <= 0.004234445281326771) ? ( 228 ) : ( (Feature_6 <= -0.0489233024418354) ? ( (Feature_8 <= 0.03582265414297581) ? ( 231 ) : ( 232 ) ) : ( 233 ) ) ) ) : ( (Feature_6 <= -0.04156002774834633) ? ( (Feature_5 <= 0.05473969504237175) ? ( 236 ) : ( 237 ) ) : ( (Feature_4 <= 0.05759701505303383) ? ( (Feature_8 <= 0.09269610047340393) ? ( (Feature_6 <= 0.009982902323827147) ? ( (Feature_7 <= 0.015858298051171005) ? ( 242 ) : ( 243 ) ) : ( 244 ) ) : ( 245 ) ) : ( (Feature_2 <= 0.00403326062951237) ? ( (Feature_8 <= 0.03039055597037077) ? ( 248 ) : ( (Feature_0 <= 0.07258502021431923) ? ( (Feature_4 <= 0.07686035335063934) ? ( 251 ) : ( 252 ) ) : ( 253 ) ) ) : ( 254 ) ) ) ) ) : ( (Feature_4 <= 0.012878544628620148) ? ( (Feature_5 <= -0.04875586926937103) ? ( 257 ) : ( 258 ) ) : ( (Feature_2 <= -0.006744860205799341) ? ( (Feature_3 <= -0.007965857163071632) ? ( 261 ) : ( 262 ) ) : ( (Feature_3 <= 0.004658001707866788) ? ( 264 ) : ( 265 ) ) ) ) ) ) ) : ( (Feature_8 <= 0.0437055304646492) ? ( (Feature_3 <= 0.004658001358620822) ? ( (Feature_3 <= -0.05329698882997036) ? ( (Feature_7 <= -0.02104282204527408) ? ( 270 ) : ( (Feature_2 <= 0.014811381697654724) ? ( 272 ) : ( (Feature_2 <= 0.022894972003996372) ? ( 274 ) : ( (Feature_5 <= 0.06272498145699501) ? ( (Feature_4 <= 0.010814616456627846) ? ( 277 ) : ( 278 ) ) : ( 279 ) ) ) ) ) : ( (Feature_5 <= -0.02464343700557947) ? ( (Feature_7 <= -0.018275237875059247) ? ( 282 ) : ( 283 ) ) : ( (Feature_6 <= 0.004460445721633732) ? ( (Feature_8 <= 0.019437646958976984) ? ( (Feature_2 <= 0.06061839312314987) ? ( (Feature_6 <= -0.004743648809380829) ? ( (Feature_9 <= 0.005135462852194905) ? ( (Feature_6 <= -0.01394774322398007) ? ( 290 ) : ( 291 ) ) : ( (Feature_8 <= 0.0005320038180798292) ? ( 293 ) : ( (Feature_4 <= 0.01631842739880085) ? ( 295 ) : ( 296 ) ) ) ) : ( 297 ) ) : ( (Feature_8 <= -0.03165910067036748) ? ( 299 ) : ( 300 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_7 <= 0.04833128582686186) ? ( 303 ) : ( 304 ) ) : ( 305 ) ) ) : ( (Feature_8 <= -0.03596579656004906) ? ( 307 ) : ( (Feature_6 <= 0.015505359508097172) ? ( 309 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 311 ) : ( 312 ) ) ) ) ) ) ) : ( (Feature_2 <= 0.0832524448633194) ? ( (Feature_8 <= -0.030139416456222534) ? ( (Feature_6 <= 0.044958461076021194) ? ( (Feature_5 <= -0.05407939344877377) ? ( 317 ) : ( (Feature_6 <= -0.002902830019593239) ? ( 319 ) : ( 320 ) ) ) : ( (Feature_0 <= -0.007330823689699173) ? ( (Feature_0 <= -0.03639113064855337) ? ( 323 ) : ( 324 ) ) : ( 325 ) ) ) : ( (Feature_9 <= 0.04448547773063183) ? ( (Feature_4 <= -0.03596778027713299) ? ( (Feature_5 <= -0.04108373075723648) ? ( 329 ) : ( 330 ) ) : ( (Feature_4 <= -0.009824676904827356) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_5 <= -0.013839815743267536) ? ( (Feature_3 <= 0.0476938858628273) ? ( 335 ) : ( 336 ) ) : ( 337 ) ) : ( (Feature_7 <= 0.034308859962038696) ? ( 339 ) : ( 340 ) ) ) : ( (Feature_2 <= 0.025050596334040165) ? ( (Feature_7 <= 0.015858298051171005) ? ( 343 ) : ( 344 ) ) : ( (Feature_8 <= 0.023698593489825726) ? ( (Feature_4 <= 0.005310804583132267) ? ( (Feature_8 <= -0.026586090214550495) ? ( 348 ) : ( 349 ) ) : ( 350 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 352 ) : ( (Feature_9 <= 0.009277570061385632) ? ( 354 ) : ( 355 ) ) ) ) ) ) ) : ( (Feature_3 <= 0.10105837881565094) ? ( (Feature_9 <= 0.05484074540436268) ? ( (Feature_8 <= 0.035123853012919426) ? ( 359 ) : ( 360 ) ) : ( (Feature_4 <= 0.0046228282153606415) ? ( 362 ) : ( 363 ) ) ) : ( 364 ) ) ) ) : ( (Feature_3 <= 0.06662967428565025) ? ( (Feature_1 <= 0.003019241616129875) ? ( 367 ) : ( 368 ) ) : ( (Feature_6 <= -0.01394774322398007) ? ( (Feature_8 <= 0.01928796642459929) ? ( 371 ) : ( 372 ) ) : ( 373 ) ) ) ) ) : ( (Feature_0 <= -0.06726770848035812) ? ( (Feature_3 <= -0.029770705848932266) ? ( 376 ) : ( 377 ) ) : ( (Feature_9 <= 0.1293986737728119) ? ( (Feature_6 <= -0.019470199942588806) ? ( (Feature_2 <= 0.05415152199566364) ? ( (Feature_3 <= 0.05285819061100483) ? ( (Feature_3 <= 0.011543742730282247) ? ( (Feature_5 <= -0.0014704521745443344) ? ( 384 ) : ( 385 ) ) : ( (Feature_0 <= 0.03444336727261543) ? ( 387 ) : ( 388 ) ) ) : ( (Feature_7 <= 0.08966054022312164) ? ( (Feature_8 <= 0.08837069198489189) ? ( 391 ) : ( 392 ) ) : ( (Feature_0 <= 0.027178293094038963) ? ( 394 ) : ( 395 ) ) ) ) : ( (Feature_0 <= -0.03275859262794256) ? ( (Feature_4 <= 0.0871799997985363) ? ( 398 ) : ( 399 ) ) : ( (Feature_0 <= 0.06895248219370842) ? ( (Feature_6 <= -0.026833475567400455) ? ( (Feature_8 <= 0.07235990092158318) ? ( (Feature_6 <= -0.04340084549039602) ? ( (Feature_6 <= -0.06549067050218582) ? ( 405 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 407 ) : ( 408 ) ) ) : ( 409 ) ) : ( (Feature_9 <= 0.06312495842576027) ? ( (Feature_0 <= 0.02354575227946043) ? ( 412 ) : ( 413 ) ) : ( 414 ) ) ) : ( (Feature_4 <= 0.003934851847589016) ? ( 416 ) : ( (Feature_7 <= 0.04593271296471357) ? ( 418 ) : ( 419 ) ) ) ) : ( 420 ) ) ) ) : ( (Feature_0 <= 0.025362021289765835) ? ( (Feature_0 <= -0.009147093398496509) ? ( (Feature_3 <= 0.035643838346004486) ? ( (Feature_9 <= 0.005135463550686836) ? ( 425 ) : ( 426 ) ) : ( 427 ) ) : ( (Feature_2 <= 0.04876246117055416) ? ( 429 ) : ( 430 ) ) ) : ( (Feature_9 <= -0.040427712723612785) ? ( 432 ) : ( (Feature_4 <= 0.030765931587666273) ? ( 434 ) : ( (Feature_3 <= 0.06662967428565025) ? ( 436 ) : ( 437 ) ) ) ) ) ) : ( (Feature_8 <= 0.05555718578398228) ? ( 439 ) : ( 440 ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_4
	

	namespace EXT_SubModel_5 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {55. }} ,
				{ 7 ,  {77. }} ,
				{ 13 ,  {142. }} ,
				{ 14 ,  {146. }} ,
				{ 15 ,  {200. }} ,
				{ 17 ,  {101. }} ,
				{ 18 ,  {96. }} ,
				{ 24 ,  {70. }} ,
				{ 25 ,  {71. }} ,
				{ 26 ,  {67. }} ,
				{ 27 ,  {88. }} ,
				{ 30 ,  {61. }} ,
				{ 31 ,  {60. }} ,
				{ 33 ,  {47. }} ,
				{ 35 ,  {55. }} ,
				{ 36 ,  {53. }} ,
				{ 38 ,  {160. }} ,
				{ 41 ,  {83. }} ,
				{ 42 ,  {89. }} ,
				{ 43 ,  {97. }} ,
				{ 47 ,  {200. }} ,
				{ 50 ,  {116. }} ,
				{ 51 ,  {113. }} ,
				{ 53 ,  {158. }} ,
				{ 55 ,  {150. }} ,
				{ 56 ,  {144. }} ,
				{ 61 ,  {65. }} ,
				{ 62 ,  {68. }} ,
				{ 63 ,  {78. }} ,
				{ 64 ,  {25. }} ,
				{ 67 ,  {127. }} ,
				{ 69 ,  {135. }} ,
				{ 70 ,  {138. }} ,
				{ 72 ,  {54. }} ,
				{ 74 ,  {88. }} ,
				{ 75 ,  {118. }} ,
				{ 77 ,  {135. }} ,
				{ 80 ,  {219. }} ,
				{ 81 ,  {200. }} ,
				{ 82 ,  {177. }} ,
				{ 87 ,  {152. }} ,
				{ 88 ,  {137. }} ,
				{ 91 ,  {90. }} ,
				{ 92 ,  {99. }} ,
				{ 94 ,  {77. }} ,
				{ 95 ,  {51. }} ,
				{ 99 ,  {65. }} ,
				{ 100 ,  {51. }} ,
				{ 101 ,  {114. }} ,
				{ 103 ,  {90. }} ,
				{ 106 ,  {60. }} ,
				{ 109 ,  {48. }} ,
				{ 110 ,  {49. }} ,
				{ 113 ,  {37. }} ,
				{ 114 ,  {39. }} ,
				{ 116 ,  {40. }} ,
				{ 117 ,  {42. }} ,
				{ 120 ,  {59. }} ,
				{ 121 ,  {60. }} ,
				{ 122 ,  {72. }} ,
				{ 125 ,  {179. }} ,
				{ 129 ,  {92. }} ,
				{ 130 ,  {87. }} ,
				{ 131 ,  {72. }} ,
				{ 134 ,  {96. }} ,
				{ 136 ,  {102. }} ,
				{ 137 ,  {103. }} ,
				{ 139 ,  {118. }} ,
				{ 140 ,  {108. }} ,
				{ 143 ,  {81. }} ,
				{ 144 ,  {91. }} ,
				{ 147 ,  {63. }} ,
				{ 148 ,  {64. }} ,
				{ 149 ,  {84. }} ,
				{ 155 ,  {190. }} ,
				{ 156 ,  {168. }} ,
				{ 157 ,  {230. }} ,
				{ 162 ,  {156. }} ,
				{ 163 ,  {185. }} ,
				{ 164 ,  {124. }} ,
				{ 165 ,  {252. }} ,
				{ 167 ,  {162. }} ,
				{ 170 ,  {92. }} ,
				{ 173 ,  {153. }} ,
				{ 174 ,  {150. }} ,
				{ 176 ,  {131. }} ,
				{ 177 ,  {141. }} ,
				{ 180 ,  {86. }} ,
				{ 181 ,  {93. }} ,
				{ 183 ,  {109. }} ,
				{ 184 ,  {102. }} ,
				{ 185 ,  {214. }} ,
				{ 188 ,  {48. }} ,
				{ 190 ,  {84. }} ,
				{ 192 ,  {100. }} ,
				{ 193 ,  {94. }} ,
				{ 195 ,  {129. }} ,
				{ 196 ,  {151. }} ,
				{ 203 ,  {201. }} ,
				{ 204 ,  {191. }} ,
				{ 207 ,  {172. }} ,
				{ 208 ,  {170. }} ,
				{ 209 ,  {182. }} ,
				{ 211 ,  {113. }} ,
				{ 212 ,  {175. }} ,
				{ 214 ,  {244. }} ,
				{ 215 ,  {257. }} ,
				{ 219 ,  {52. }} ,
				{ 220 ,  {70. }} ,
				{ 221 ,  {90. }} ,
				{ 224 ,  {144. }} ,
				{ 225 ,  {145. }} ,
				{ 226 ,  {131. }} ,
				{ 230 ,  {210. }} ,
				{ 232 ,  {182. }} ,
				{ 233 ,  {167. }} ,
				{ 235 ,  {110. }} ,
				{ 237 ,  {91. }} ,
				{ 238 ,  {78. }} ,
				{ 241 ,  {127. }} ,
				{ 242 ,  {202. }} ,
				{ 245 ,  {288. }} ,
				{ 246 ,  {321. }} ,
				{ 249 ,  {196. }} ,
				{ 252 ,  {237. }} ,
				{ 253 ,  {235. }} ,
				{ 254 ,  {261. }} ,
				{ 255 ,  {302. }} ,
				{ 264 ,  {198. }} ,
				{ 265 ,  {191. }} ,
				{ 266 ,  {258. }} ,
				{ 269 ,  {144. }} ,
				{ 271 ,  {101. }} ,
				{ 272 ,  {99. }} ,
				{ 274 ,  {197. }} ,
				{ 276 ,  {161. }} ,
				{ 277 ,  {166. }} ,
				{ 279 ,  {273. }} ,
				{ 280 ,  {283. }} ,
				{ 283 ,  {185. }} ,
				{ 286 ,  {90. }} ,
				{ 288 ,  {66. }} ,
				{ 289 ,  {74. }} ,
				{ 291 ,  {111. }} ,
				{ 293 ,  {131. }} ,
				{ 294 ,  {123. }} ,
				{ 296 ,  {178. }} ,
				{ 297 ,  {185. }} ,
				{ 300 ,  {262. }} ,
				{ 301 ,  {311. }} ,
				{ 307 ,  {202. }} ,
				{ 309 ,  {206. }} ,
				{ 310 ,  {209. }} ,
				{ 311 ,  {195. }} ,
				{ 312 ,  {163. }} ,
				{ 318 ,  {242. }} ,
				{ 319 ,  {245. }} ,
				{ 321 ,  {233. }} ,
				{ 322 ,  {235. }} ,
				{ 325 ,  {206. }} ,
				{ 328 ,  {212. }} ,
				{ 329 ,  {217. }} ,
				{ 331 ,  {225. }} ,
				{ 332 ,  {222. }} ,
				{ 333 ,  {198. }} ,
				{ 334 ,  {281. }} ,
				{ 335 ,  {270. }} ,
				{ 338 ,  {168. }} ,
				{ 340 ,  {173. }} ,
				{ 341 ,  {172. }} ,
				{ 342 ,  {144. }} ,
				{ 347 ,  {69. }} ,
				{ 348 ,  {84. }} ,
				{ 350 ,  {95. }} ,
				{ 352 ,  {122. }} ,
				{ 353 ,  {131. }} ,
				{ 356 ,  {134. }} ,
				{ 357 ,  {120. }} ,
				{ 359 ,  {190. }} ,
				{ 360 ,  {170. }} ,
				{ 363 ,  {283. }} ,
				{ 364 ,  {249. }} ,
				{ 366 ,  {202. }} ,
				{ 367 ,  {196. }} ,
				{ 372 ,  {259. }} ,
				{ 373 ,  {221. }} ,
				{ 374 ,  {151. }} ,
				{ 380 ,  {258. }} ,
				{ 381 ,  {263. }} ,
				{ 383 ,  {270. }} ,
				{ 385 ,  {280. }} ,
				{ 387 ,  {275. }} ,
				{ 388 ,  {277. }} ,
				{ 389 ,  {243. }} ,
				{ 390 ,  {308. }} ,
				{ 393 ,  {336. }} ,
				{ 394 ,  {332. }} ,
				{ 396 ,  {275. }} ,
				{ 398 ,  {303. }} ,
				{ 399 ,  {310. }} ,
				{ 403 ,  {317. }} ,
				{ 404 ,  {306. }} ,
				{ 406 ,  {264. }} ,
				{ 407 ,  {230. }} ,
				{ 412 ,  {128. }} ,
				{ 413 ,  {121. }} ,
				{ 414 ,  {178. }} ,
				{ 416 ,  {233. }} ,
				{ 418 ,  {173. }} ,
				{ 420 ,  {192. }} ,
				{ 421 ,  {186. }} ,
				{ 423 ,  {258. }} ,
				{ 426 ,  {217. }} ,
				{ 427 ,  {215. }} ,
				{ 429 ,  {233. }} ,
				{ 430 ,  {252. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_8 <= 0.014447581954300404) ? ( (Feature_2 <= 0.0061888848431408405) ? ( (Feature_8 <= -0.009431487880647182) ? ( (Feature_6 <= 0.021027816459536552) ? ( (Feature_3 <= -0.0917423777282238) ? ( (Feature_5 <= -0.05705430544912815) ? ( 6 ) : ( 7 ) ) : ( (Feature_6 <= -0.0010620108805596828) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_6 <= -0.01578856213018298) ? ( (Feature_3 <= 0.00580562529648887) ? ( (Feature_3 <= -0.028623081096156966) ? ( 13 ) : ( 14 ) ) : ( 15 ) ) : ( (Feature_0 <= -0.05455382214859128) ? ( 17 ) : ( 18 ) ) ) : ( (Feature_0 <= 0.03262709826231003) ? ( (Feature_4 <= -0.062110885977745056) ? ( (Feature_5 <= -0.054862262681126595) ? ( (Feature_4 <= -0.07999827340245247) ? ( (Feature_5 <= -0.06926709413528442) ? ( 24 ) : ( 25 ) ) : ( 26 ) ) : ( 27 ) ) : ( (Feature_5 <= -0.018850191496312618) ? ( (Feature_2 <= -0.009978296235203743) ? ( 30 ) : ( 31 ) ) : ( (Feature_5 <= -0.015562132932245731) ? ( 33 ) : ( (Feature_0 <= -0.02186097763478756) ? ( 35 ) : ( 36 ) ) ) ) ) : ( (Feature_2 <= -0.027223289012908936) ? ( 38 ) : ( (Feature_8 <= -0.018926554825156927) ? ( (Feature_4 <= -0.01464051241055131) ? ( 41 ) : ( 42 ) ) : ( 43 ) ) ) ) ) : ( (Feature_3 <= 0.002936566132120788) ? ( (Feature_0 <= -0.06181889958679676) ? ( (Feature_3 <= -0.07108515501022339) ? ( 47 ) : ( (Feature_8 <= -0.05760461278259754) ? ( (Feature_8 <= -0.07022909820079803) ? ( 50 ) : ( 51 ) ) : ( (Feature_2 <= -0.046623907051980495) ? ( 53 ) : ( (Feature_3 <= -0.03493501036427915) ? ( 55 ) : ( 56 ) ) ) ) ) : ( (Feature_5 <= -0.031219555996358395) ? ( (Feature_3 <= -0.0022277397802099586) ? ( (Feature_2 <= -0.048240624368190765) ? ( (Feature_5 <= -0.04609410651028156) ? ( 61 ) : ( 62 ) ) : ( 63 ) ) : ( 64 ) ) : ( (Feature_2 <= -0.035845786333084106) ? ( (Feature_3 <= -0.02116352878510952) ? ( 67 ) : ( (Feature_2 <= -0.051474060863256454) ? ( 69 ) : ( 70 ) ) ) : ( (Feature_9 <= -0.03421455156058073) ? ( 72 ) : ( (Feature_7 <= -0.02104282204527408) ? ( 74 ) : ( 75 ) ) ) ) ) ) : ( (Feature_0 <= 0.01446440676227212) ? ( 77 ) : ( (Feature_9 <= 0.02170389099046588) ? ( (Feature_8 <= -0.02097534667700529) ? ( 80 ) : ( 81 ) ) : ( 82 ) ) ) ) ) ) : ( (Feature_0 <= 0.003566791128832847) ? ( (Feature_0 <= -0.06726770848035812) ? ( (Feature_4 <= -0.07243053056299686) ? ( (Feature_5 <= -0.1044962927699089) ? ( 87 ) : ( 88 ) ) : ( (Feature_8 <= -0.04049498960375786) ? ( (Feature_9 <= -0.07356456853449345) ? ( 91 ) : ( 92 ) ) : ( (Feature_8 <= -0.025357015896588564) ? ( 94 ) : ( 95 ) ) ) ) : ( (Feature_9 <= -0.0735645703971386) ? ( (Feature_9 <= -0.08391983807086945) ? ( (Feature_9 <= -0.10877247899770737) ? ( 99 ) : ( 100 ) ) : ( 101 ) ) : ( (Feature_8 <= -0.07264721766114235) ? ( 103 ) : ( (Feature_5 <= 0.002913626842200756) ? ( (Feature_3 <= -0.07280658930540085) ? ( 106 ) : ( (Feature_2 <= -0.066563431173563) ? ( (Feature_0 <= -6.574729923158884e-05) ? ( 109 ) : ( 110 ) ) : ( (Feature_8 <= -0.049919137731194496) ? ( (Feature_9 <= -0.01971717830747366) ? ( 113 ) : ( 114 ) ) : ( (Feature_9 <= 0.04655653238296509) ? ( 116 ) : ( 117 ) ) ) ) ) : ( (Feature_9 <= -0.0010776976123452187) ? ( (Feature_6 <= 0.050480918027460575) ? ( 120 ) : ( 121 ) ) : ( 122 ) ) ) ) ) ) : ( (Feature_5 <= 0.008080576200882206) ? ( (Feature_6 <= 0.04864009842276573) ? ( 125 ) : ( (Feature_3 <= -0.014277786947786808) ? ( (Feature_3 <= -0.02116352878510952) ? ( (Feature_4 <= 0.03145390935242176) ? ( 129 ) : ( 130 ) ) : ( 131 ) ) : ( (Feature_2 <= -0.03584578540176153) ? ( (Feature_4 <= 0.005998780718073249) ? ( 134 ) : ( (Feature_3 <= 0.08384402841329575) ? ( 136 ) : ( 137 ) ) ) : ( (Feature_0 <= 0.05623859912157059) ? ( 139 ) : ( 140 ) ) ) ) ) : ( (Feature_5 <= 0.03563764039427042) ? ( (Feature_8 <= -0.0389446746557951) ? ( 143 ) : ( 144 ) ) : ( (Feature_9 <= 0.005135462852194905) ? ( (Feature_8 <= -0.030884576961398125) ? ( 147 ) : ( 148 ) ) : ( 149 ) ) ) ) ) ) : ( (Feature_8 <= 0.00862625241279602) ? ( (Feature_8 <= 0.005789376329630613) ? ( (Feature_8 <= -0.007029823027551174) ? ( (Feature_0 <= 0.02172948233783245) ? ( (Feature_9 <= -0.07149351574480534) ? ( 155 ) : ( 156 ) ) : ( 157 ) ) : ( (Feature_4 <= -0.0524792168289423) ? ( (Feature_4 <= -0.05660707503557205) ? ( (Feature_5 <= -0.0398311372846365) ? ( (Feature_6 <= -0.02683347463607788) ? ( 162 ) : ( 163 ) ) : ( 164 ) ) : ( 165 ) ) : ( (Feature_0 <= -0.06908397749066353) ? ( 167 ) : ( (Feature_8 <= 0.0007076415786286816) ? ( (Feature_8 <= -0.0046919804299250245) ? ( 170 ) : ( (Feature_0 <= 0.003566791128832847) ? ( (Feature_2 <= -0.041773753240704536) ? ( 173 ) : ( 174 ) ) : ( (Feature_9 <= -0.032143499702215195) ? ( 176 ) : ( 177 ) ) ) ) : ( (Feature_2 <= -0.0374625027179718) ? ( (Feature_7 <= -0.02104282204527408) ? ( 180 ) : ( 181 ) ) : ( (Feature_5 <= 0.016692159697413445) ? ( 183 ) : ( 184 ) ) ) ) ) ) ) : ( 185 ) ) : ( (Feature_8 <= 0.012934560421854258) ? ( (Feature_0 <= -0.012779631884768605) ? ( 188 ) : ( (Feature_9 <= 0.04862758610397577) ? ( 190 ) : ( (Feature_6 <= -0.023151837289333344) ? ( 192 ) : ( 193 ) ) ) ) : ( (Feature_6 <= -0.0489233024418354) ? ( 195 ) : ( 196 ) ) ) ) ) : ( (Feature_8 <= -0.020854609087109566) ? ( (Feature_0 <= 0.012648137286305428) ? ( (Feature_7 <= 0.0003598276525735855) ? ( (Feature_3 <= 0.08040115609765053) ? ( (Feature_9 <= -0.03007244545733556) ? ( (Feature_8 <= -0.06880680285394192) ? ( 203 ) : ( 204 ) ) : ( (Feature_6 <= 0.024709452991373837) ? ( (Feature_0 <= -0.04183994047343731) ? ( 207 ) : ( 208 ) ) : ( 209 ) ) ) : ( (Feature_6 <= 0.05416255630552769) ? ( 211 ) : ( 212 ) ) ) : ( (Feature_9 <= 0.025845997501164675) ? ( 214 ) : ( 215 ) ) ) : ( (Feature_7 <= -0.0182752386899665) ? ( (Feature_4 <= -0.024272182025015354) ? ( (Feature_8 <= -0.03695635311305523) ? ( 219 ) : ( 220 ) ) : ( 221 ) ) : ( (Feature_9 <= 0.02791705052368343) ? ( (Feature_3 <= -0.04411599971354008) ? ( 224 ) : ( 225 ) ) : ( 226 ) ) ) ) : ( (Feature_3 <= -0.028049270622432232) ? ( (Feature_2 <= 0.04876246117055416) ? ( (Feature_7 <= -0.03857085481286049) ? ( 230 ) : ( (Feature_5 <= -0.0351339103654027) ? ( 232 ) : ( 233 ) ) ) : ( (Feature_8 <= -0.009588167537003756) ? ( 235 ) : ( (Feature_6 <= -0.026833476033061743) ? ( 237 ) : ( 238 ) ) ) ) : ( (Feature_4 <= -0.03665575757622719) ? ( (Feature_3 <= 0.06318680383265018) ? ( 241 ) : ( 242 ) ) : ( (Feature_4 <= -0.009824676439166069) ? ( (Feature_3 <= 0.0476938858628273) ? ( 245 ) : ( 246 ) ) : ( (Feature_6 <= 0.037595187313854694) ? ( (Feature_0 <= 0.010831867635715753) ? ( 249 ) : ( (Feature_3 <= 0.04597244877368212) ? ( (Feature_8 <= 0.004413577407831326) ? ( 252 ) : ( 253 ) ) : ( 254 ) ) ) : ( 255 ) ) ) ) ) ) ) : ( (Feature_2 <= 0.047145744785666466) ? ( (Feature_4 <= 0.05622105859220028) ? ( (Feature_5 <= 0.002913626900408417) ? ( (Feature_5 <= -0.017441023141145706) ? ( (Feature_3 <= 0.05285819061100483) ? ( (Feature_8 <= 0.03635079227387905) ? ( (Feature_7 <= -0.014216114883311093) ? ( (Feature_5 <= -0.056428007781505585) ? ( 264 ) : ( 265 ) ) : ( 266 ) ) : ( (Feature_0 <= -0.018228439847007394) ? ( (Feature_6 <= -0.0728539489209652) ? ( 269 ) : ( (Feature_2 <= 0.014272475615143776) ? ( 271 ) : ( 272 ) ) ) : ( (Feature_9 <= -0.005219804123044014) ? ( 274 ) : ( (Feature_5 <= -0.0437454953789711) ? ( 276 ) : ( 277 ) ) ) ) ) : ( (Feature_6 <= -0.008425286039710045) ? ( 279 ) : ( 280 ) ) ) : ( (Feature_3 <= 0.0476938858628273) ? ( (Feature_9 <= -0.0031487508676946163) ? ( 283 ) : ( (Feature_7 <= 0.015858298051171005) ? ( (Feature_9 <= 0.01134862331673503) ? ( 286 ) : ( (Feature_4 <= -0.002944912761449814) ? ( 288 ) : ( 289 ) ) ) : ( (Feature_4 <= -0.011888606706634164) ? ( 291 ) : ( (Feature_9 <= 0.054840744473040104) ? ( 293 ) : ( 294 ) ) ) ) ) : ( (Feature_4 <= -0.00500884186476469) ? ( 296 ) : ( 297 ) ) ) ) : ( (Feature_8 <= 0.015194777864962816) ? ( (Feature_5 <= 0.011212060693651438) ? ( 300 ) : ( 301 ) ) : ( (Feature_0 <= 0.0616874061524868) ? ( (Feature_0 <= -0.0036982858437113464) ? ( (Feature_9 <= 0.003064409364014864) ? ( (Feature_2 <= 0.01588919386267662) ? ( (Feature_3 <= -0.03837788291275501) ? ( 307 ) : ( (Feature_3 <= -0.014277787413448095) ? ( 309 ) : ( 310 ) ) ) : ( 311 ) ) : ( 312 ) ) : ( (Feature_3 <= 0.11655129864811897) ? ( (Feature_0 <= 0.05442233011126518) ? ( (Feature_9 <= 0.0072065163985826075) ? ( (Feature_8 <= 0.045333487913012505) ? ( (Feature_1 <= 0.003019241616129875) ? ( 318 ) : ( 319 ) ) : ( (Feature_2 <= -0.004050330258905888) ? ( 321 ) : ( 322 ) ) ) : ( (Feature_2 <= 0.03205637447535992) ? ( (Feature_2 <= -0.020756416372023523) ? ( 325 ) : ( (Feature_2 <= 0.021817159838974476) ? ( (Feature_9 <= 0.01756178354844451) ? ( 328 ) : ( 329 ) ) : ( (Feature_6 <= -0.05076412111520767) ? ( 331 ) : ( 332 ) ) ) ) : ( 333 ) ) ) : ( 334 ) ) : ( 335 ) ) ) : ( (Feature_8 <= 0.02537127397954464) ? ( (Feature_3 <= -0.009113481733947992) ? ( 338 ) : ( (Feature_5 <= 0.028591799549758434) ? ( 340 ) : ( 341 ) ) ) : ( 342 ) ) ) ) ) : ( (Feature_8 <= 0.056148430332541466) ? ( (Feature_3 <= 0.0081008723936975) ? ( (Feature_8 <= 0.02854982763528824) ? ( (Feature_5 <= 0.14289098978042603) ? ( 347 ) : ( 348 ) ) : ( (Feature_2 <= -0.00027798768132925034) ? ( 350 ) : ( (Feature_4 <= 0.09612369164824486) ? ( 352 ) : ( 353 ) ) ) ) : ( (Feature_4 <= 0.06378880143165588) ? ( (Feature_7 <= 0.009031591936945915) ? ( 356 ) : ( 357 ) ) : ( (Feature_6 <= 0.011823720997199416) ? ( 359 ) : ( 360 ) ) ) ) : ( (Feature_8 <= 0.07527174428105354) ? ( (Feature_7 <= 0.05275941814761609) ? ( 363 ) : ( 364 ) ) : ( (Feature_4 <= 0.11469905823469162) ? ( 366 ) : ( 367 ) ) ) ) ) : ( (Feature_5 <= 0.022485405206680298) ? ( (Feature_9 <= -0.015575071331113577) ? ( (Feature_3 <= 0.020150919444859028) ? ( (Feature_3 <= 0.013265178073197603) ? ( 372 ) : ( 373 ) ) : ( 374 ) ) : ( (Feature_0 <= 0.03262709826231003) ? ( (Feature_2 <= 0.11882025003433228) ? ( (Feature_6 <= -0.004743648809380829) ? ( (Feature_5 <= -0.027931496500968933) ? ( (Feature_1 <= 0.003019241616129875) ? ( 380 ) : ( 381 ) ) : ( (Feature_6 <= -0.05260493978857994) ? ( 383 ) : ( (Feature_9 <= 0.01341967610642314) ? ( 385 ) : ( (Feature_3 <= 0.027036661515012383) ? ( 387 ) : ( 388 ) ) ) ) ) : ( 389 ) ) : ( 390 ) ) : ( (Feature_8 <= 0.0317962309345603) ? ( (Feature_4 <= -0.015328488079831004) ? ( 393 ) : ( 394 ) ) : ( (Feature_9 <= 0.027917050756514072) ? ( 396 ) : ( (Feature_5 <= -0.008829439990222454) ? ( 398 ) : ( 399 ) ) ) ) ) ) : ( (Feature_6 <= -0.047082483768463135) ? ( (Feature_0 <= 0.021729483269155025) ? ( (Feature_5 <= 0.07337203063070774) ? ( 403 ) : ( 404 ) ) : ( (Feature_7 <= 0.10626604408025742) ? ( 406 ) : ( 407 ) ) ) : ( (Feature_3 <= 0.05113675631582737) ? ( (Feature_9 <= 0.04448547773063183) ? ( (Feature_3 <= -0.0022277397802099586) ? ( (Feature_0 <= -0.029126055480446666) ? ( 412 ) : ( 413 ) ) : ( 414 ) ) : ( (Feature_5 <= 0.038299404084682465) ? ( 416 ) : ( (Feature_7 <= 0.028773690573871136) ? ( 418 ) : ( (Feature_5 <= 0.07149313762784004) ? ( 420 ) : ( 421 ) ) ) ) ) : ( (Feature_2 <= 0.05415152199566364) ? ( 423 ) : ( (Feature_2 <= 0.06762417405843735) ? ( (Feature_6 <= -0.0286742951720953) ? ( 426 ) : ( 427 ) ) : ( (Feature_3 <= 0.075236851349473) ? ( 429 ) : ( 430 ) ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_5
	

	namespace EXT_SubModel_6 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {55. }} ,
				{ 10 ,  {200. }} ,
				{ 13 ,  {152. }} ,
				{ 14 ,  {150. }} ,
				{ 15 ,  {158. }} ,
				{ 16 ,  {104. }} ,
				{ 19 ,  {137. }} ,
				{ 21 ,  {143. }} ,
				{ 22 ,  {142. }} ,
				{ 27 ,  {85. }} ,
				{ 28 ,  {61. }} ,
				{ 31 ,  {99. }} ,
				{ 32 ,  {101. }} ,
				{ 33 ,  {116. }} ,
				{ 34 ,  {168. }} ,
				{ 38 ,  {77. }} ,
				{ 39 ,  {68. }} ,
				{ 40 ,  {90. }} ,
				{ 42 ,  {60. }} ,
				{ 43 ,  {51. }} ,
				{ 52 ,  {77. }} ,
				{ 54 ,  {68. }} ,
				{ 55 ,  {70. }} ,
				{ 57 ,  {63. }} ,
				{ 58 ,  {53. }} ,
				{ 60 ,  {79. }} ,
				{ 61 ,  {88. }} ,
				{ 64 ,  {90. }} ,
				{ 65 ,  {75. }} ,
				{ 68 ,  {48. }} ,
				{ 69 ,  {49. }} ,
				{ 71 ,  {37. }} ,
				{ 72 ,  {39. }} ,
				{ 76 ,  {128. }} ,
				{ 77 ,  {138. }} ,
				{ 78 ,  {114. }} ,
				{ 79 ,  {74. }} ,
				{ 83 ,  {40. }} ,
				{ 84 ,  {42. }} ,
				{ 86 ,  {25. }} ,
				{ 87 ,  {31. }} ,
				{ 89 ,  {64. }} ,
				{ 90 ,  {53. }} ,
				{ 92 ,  {160. }} ,
				{ 97 ,  {113. }} ,
				{ 99 ,  {96. }} ,
				{ 100 ,  {94. }} ,
				{ 101 ,  {52. }} ,
				{ 104 ,  {54. }} ,
				{ 105 ,  {59. }} ,
				{ 107 ,  {72. }} ,
				{ 108 ,  {65. }} ,
				{ 110 ,  {104. }} ,
				{ 111 ,  {118. }} ,
				{ 114 ,  {129. }} ,
				{ 115 ,  {219. }} ,
				{ 120 ,  {65. }} ,
				{ 121 ,  {66. }} ,
				{ 123 ,  {88. }} ,
				{ 124 ,  {98. }} ,
				{ 128 ,  {127. }} ,
				{ 129 ,  {132. }} ,
				{ 131 ,  {179. }} ,
				{ 132 ,  {200. }} ,
				{ 136 ,  {96. }} ,
				{ 137 ,  {102. }} ,
				{ 139 ,  {108. }} ,
				{ 140 ,  {118. }} ,
				{ 143 ,  {87. }} ,
				{ 145 ,  {91. }} ,
				{ 146 ,  {92. }} ,
				{ 147 ,  {97. }} ,
				{ 151 ,  {135. }} ,
				{ 152 ,  {146. }} ,
				{ 154 ,  {64. }} ,
				{ 155 ,  {84. }} ,
				{ 158 ,  {47. }} ,
				{ 160 ,  {53. }} ,
				{ 161 ,  {55. }} ,
				{ 164 ,  {80. }} ,
				{ 165 ,  {89. }} ,
				{ 168 ,  {71. }} ,
				{ 169 ,  {77. }} ,
				{ 170 ,  {63. }} ,
				{ 171 ,  {216. }} ,
				{ 172 ,  {253. }} ,
				{ 178 ,  {162. }} ,
				{ 179 ,  {214. }} ,
				{ 182 ,  {252. }} ,
				{ 183 ,  {233. }} ,
				{ 184 ,  {292. }} ,
				{ 186 ,  {202. }} ,
				{ 189 ,  {126. }} ,
				{ 191 ,  {150. }} ,
				{ 192 ,  {163. }} ,
				{ 194 ,  {102. }} ,
				{ 195 ,  {91. }} ,
				{ 199 ,  {140. }} ,
				{ 201 ,  {178. }} ,
				{ 203 ,  {190. }} ,
				{ 204 ,  {198. }} ,
				{ 211 ,  {92. }} ,
				{ 212 ,  {88. }} ,
				{ 214 ,  {153. }} ,
				{ 215 ,  {141. }} ,
				{ 219 ,  {93. }} ,
				{ 221 ,  {88. }} ,
				{ 222 ,  {84. }} ,
				{ 226 ,  {74. }} ,
				{ 227 ,  {78. }} ,
				{ 229 ,  {66. }} ,
				{ 230 ,  {69. }} ,
				{ 231 ,  {90. }} ,
				{ 234 ,  {94. }} ,
				{ 235 ,  {95. }} ,
				{ 236 ,  {109. }} ,
				{ 239 ,  {209. }} ,
				{ 240 ,  {200. }} ,
				{ 242 ,  {100. }} ,
				{ 243 ,  {120. }} ,
				{ 244 ,  {206. }} ,
				{ 249 ,  {131. }} ,
				{ 250 ,  {134. }} ,
				{ 251 ,  {115. }} ,
				{ 253 ,  {170. }} ,
				{ 254 ,  {172. }} ,
				{ 256 ,  {214. }} ,
				{ 257 ,  {197. }} ,
				{ 258 ,  {230. }} ,
				{ 261 ,  {185. }} ,
				{ 262 ,  {171. }} ,
				{ 264 ,  {283. }} ,
				{ 265 ,  {281. }} ,
				{ 270 ,  {51. }} ,
				{ 272 ,  {67. }} ,
				{ 273 ,  {60. }} ,
				{ 276 ,  {103. }} ,
				{ 280 ,  {201. }} ,
				{ 281 ,  {191. }} ,
				{ 284 ,  {187. }} ,
				{ 286 ,  {182. }} ,
				{ 287 ,  {184. }} ,
				{ 289 ,  {170. }} ,
				{ 290 ,  {175. }} ,
				{ 291 ,  {96. }} ,
				{ 294 ,  {52. }} ,
				{ 295 ,  {90. }} ,
				{ 298 ,  {144. }} ,
				{ 299 ,  {145. }} ,
				{ 301 ,  {141. }} ,
				{ 302 ,  {140. }} ,
				{ 306 ,  {259. }} ,
				{ 307 ,  {273. }} ,
				{ 309 ,  {245. }} ,
				{ 310 ,  {244. }} ,
				{ 315 ,  {68. }} ,
				{ 316 ,  {91. }} ,
				{ 318 ,  {151. }} ,
				{ 319 ,  {144. }} ,
				{ 328 ,  {221. }} ,
				{ 329 ,  {210. }} ,
				{ 330 ,  {195. }} ,
				{ 331 ,  {258. }} ,
				{ 335 ,  {288. }} ,
				{ 337 ,  {280. }} ,
				{ 338 ,  {281. }} ,
				{ 340 ,  {265. }} ,
				{ 341 ,  {263. }} ,
				{ 344 ,  {237. }} ,
				{ 345 ,  {242. }} ,
				{ 346 ,  {248. }} ,
				{ 348 ,  {276. }} ,
				{ 350 ,  {121. }} ,
				{ 351 ,  {143. }} ,
				{ 353 ,  {302. }} ,
				{ 354 ,  {283. }} ,
				{ 355 ,  {59. }} ,
				{ 357 ,  {99. }} ,
				{ 359 ,  {236. }} ,
				{ 360 ,  {196. }} ,
				{ 364 ,  {48. }} ,
				{ 366 ,  {90. }} ,
				{ 367 ,  {78. }} ,
				{ 371 ,  {127. }} ,
				{ 373 ,  {151. }} ,
				{ 374 ,  {150. }} ,
				{ 376 ,  {111. }} ,
				{ 377 ,  {110. }} ,
				{ 379 ,  {178. }} ,
				{ 380 ,  {202. }} ,
				{ 384 ,  {249. }} ,
				{ 385 ,  {259. }} ,
				{ 390 ,  {166. }} ,
				{ 391 ,  {173. }} ,
				{ 393 ,  {198. }} ,
				{ 394 ,  {180. }} ,
				{ 395 ,  {215. }} ,
				{ 398 ,  {212. }} ,
				{ 400 ,  {232. }} ,
				{ 401 ,  {222. }} ,
				{ 402 ,  {275. }} ,
				{ 404 ,  {67. }} ,
				{ 405 ,  {131. }} ,
				{ 412 ,  {272. }} ,
				{ 413 ,  {275. }} ,
				{ 414 ,  {281. }} ,
				{ 418 ,  {220. }} ,
				{ 419 ,  {232. }} ,
				{ 421 ,  {246. }} ,
				{ 422 ,  {242. }} ,
				{ 424 ,  {270. }} ,
				{ 425 ,  {261. }} ,
				{ 426 ,  {336. }} ,
				{ 430 ,  {332. }} ,
				{ 432 ,  {311. }} ,
				{ 433 ,  {317. }} ,
				{ 434 ,  {297. }} ,
				{ 437 ,  {279. }} ,
				{ 439 ,  {257. }} ,
				{ 440 ,  {264. }} ,
				{ 441 ,  {310. }} ,
				{ 445 ,  {142. }} ,
				{ 446 ,  {84. }} ,
				{ 449 ,  {173. }} ,
				{ 450 ,  {186. }} ,
				{ 451 ,  {220. }} ,
				{ 453 ,  {306. }} ,
				{ 455 ,  {258. }} ,
				{ 458 ,  {233. }} ,
				{ 459 ,  {230. }} ,
				{ 460 ,  {217. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_2 <= -0.000277987724984996) ? ( (Feature_8 <= -0.009924227371811867) ? ( (Feature_5 <= 0.11267216503620148) ? ( (Feature_3 <= 0.10105837881565094) ? ( (Feature_0 <= -0.060002632439136505) ? ( (Feature_3 <= -0.09518525004386902) ? ( 6 ) : ( (Feature_3 <= -0.060756539925932884) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_8 <= -0.06048417650163174) ? ( 10 ) : ( (Feature_5 <= -0.035447060596197844) ? ( (Feature_4 <= -0.07931029424071312) ? ( 13 ) : ( 14 ) ) : ( 15 ) ) ) : ( 16 ) ) : ( (Feature_4 <= -0.07380648702383041) ? ( (Feature_2 <= -0.07518592476844788) ? ( 19 ) : ( (Feature_7 <= -0.05794394388794899) ? ( 21 ) : ( 22 ) ) ) : ( (Feature_4 <= -0.04215956851840019) ? ( (Feature_9 <= -0.009361911041196436) ? ( (Feature_5 <= -0.06723162904381752) ? ( (Feature_6 <= 0.050480917096138) ? ( 27 ) : ( 28 ) ) : ( (Feature_5 <= -0.043588919565081596) ? ( (Feature_1 <= 0.003019241616129875) ? ( 31 ) : ( 32 ) ) : ( 33 ) ) ) : ( 34 ) ) : ( (Feature_8 <= -0.036529190838336945) ? ( (Feature_0 <= -0.08179786056280136) ? ( (Feature_2 <= -0.025067664915695786) ? ( 38 ) : ( 39 ) ) : ( 40 ) ) : ( (Feature_8 <= -0.022076610941439867) ? ( 42 ) : ( 43 ) ) ) ) ) ) ) : ( (Feature_0 <= 0.003566791128832847) ? ( (Feature_5 <= 0.005888537270948291) ? ( (Feature_2 <= -0.04339046962559223) ? ( (Feature_2 <= -0.05039624869823456) ? ( (Feature_6 <= 0.02286863513290882) ? ( (Feature_0 <= -0.005514555086847395) ? ( (Feature_0 <= -0.025493516586720943) ? ( (Feature_2 <= -0.06332999281585217) ? ( 52 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 54 ) : ( 55 ) ) ) : ( (Feature_5 <= -0.031845852732658386) ? ( 57 ) : ( 58 ) ) ) : ( (Feature_2 <= -0.06225218065083027) ? ( 60 ) : ( 61 ) ) ) : ( (Feature_8 <= -0.06562134623527527) ? ( (Feature_0 <= -0.010963362583424896) ? ( 64 ) : ( 65 ) ) : ( (Feature_2 <= -0.066563431173563) ? ( (Feature_0 <= -6.574729923158884e-05) ? ( 68 ) : ( 69 ) ) : ( (Feature_3 <= -0.03321357537060976) ? ( 71 ) : ( 72 ) ) ) ) ) : ( (Feature_8 <= -0.05628856457769871) ? ( (Feature_2 <= -0.04662390612065792) ? ( (Feature_1 <= 0.003019241616129875) ? ( 76 ) : ( 77 ) ) : ( 78 ) ) : ( 79 ) ) ) : ( (Feature_4 <= -0.024272182025015354) ? ( (Feature_5 <= -0.036386504769325256) ? ( (Feature_4 <= -0.07036660239100456) ? ( 83 ) : ( 84 ) ) : ( (Feature_2 <= -0.009439390152692795) ? ( 86 ) : ( 87 ) ) ) : ( (Feature_6 <= 0.01182372123003006) ? ( 89 ) : ( 90 ) ) ) ) : ( (Feature_4 <= 0.0004949694775859825) ? ( 92 ) : ( (Feature_9 <= 0.04034337215125561) ? ( (Feature_7 <= -0.004806329379789531) ? ( (Feature_6 <= 0.07809320092201233) ? ( (Feature_5 <= 0.011994932312518358) ? ( 97 ) : ( (Feature_2 <= -0.04931843839585781) ? ( 99 ) : ( 100 ) ) ) : ( 101 ) ) : ( (Feature_9 <= -0.0010776976123452187) ? ( (Feature_4 <= 0.023886168841272593) ? ( 104 ) : ( 105 ) ) : ( (Feature_3 <= 0.009822309017181396) ? ( 107 ) : ( 108 ) ) ) ) : ( (Feature_9 <= 0.05691180005669594) ? ( 110 ) : ( 111 ) ) ) ) ) : ( (Feature_5 <= -0.0550188384950161) ? ( (Feature_4 <= -0.07724636793136597) ? ( 114 ) : ( 115 ) ) : ( (Feature_7 <= -0.006835891050286591) ? ( (Feature_5 <= -0.027618348598480225) ? ( (Feature_5 <= -0.04609410651028156) ? ( (Feature_0 <= 0.04352471325546503) ? ( 120 ) : ( 121 ) ) : ( (Feature_2 <= -0.027223289012908936) ? ( 123 ) : ( 124 ) ) ) : ( (Feature_4 <= -0.002256936226331163) ? ( (Feature_4 <= -0.029088016599416733) ? ( (Feature_9 <= 0.009277569828554988) ? ( 128 ) : ( 129 ) ) : ( (Feature_8 <= -0.023374739103019238) ? ( 131 ) : ( 132 ) ) ) : ( (Feature_4 <= 0.018382356502115726) ? ( (Feature_2 <= -0.037462503649294376) ? ( (Feature_8 <= -0.041075872257351875) ? ( 136 ) : ( 137 ) ) : ( (Feature_6 <= 0.07809320092201233) ? ( 139 ) : ( 140 ) ) ) : ( (Feature_2 <= -0.02183422911912203) ? ( (Feature_5 <= -0.010238608811050653) ? ( 143 ) : ( (Feature_2 <= -0.027223289012908936) ? ( 145 ) : ( 146 ) ) ) : ( 147 ) ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_4 <= 0.024574144976213574) ? ( (Feature_0 <= 0.01446440676227212) ? ( 151 ) : ( 152 ) ) : ( (Feature_4 <= 0.07204451784491539) ? ( 154 ) : ( 155 ) ) ) : ( (Feature_0 <= 0.030810829252004623) ? ( (Feature_4 <= -0.032527899369597435) ? ( 158 ) : ( (Feature_2 <= -0.031534538604319096) ? ( 160 ) : ( 161 ) ) ) : ( (Feature_3 <= 0.04252957832068205) ? ( (Feature_9 <= 0.019632837735116482) ? ( 164 ) : ( 165 ) ) : ( (Feature_4 <= 0.043149509467184544) ? ( (Feature_8 <= -0.023212199565023184) ? ( 168 ) : ( 169 ) ) : ( 170 ) ) ) ) ) ) ) ) ) : ( 171 ) ) : ( 172 ) ) : ( (Feature_3 <= 0.061465367674827576) ? ( (Feature_6 <= -0.04156002774834633) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_8 <= 0.015200851485133171) ? ( (Feature_3 <= -0.06075654365122318) ? ( 178 ) : ( 179 ) ) : ( (Feature_6 <= -0.05076412111520767) ? ( (Feature_9 <= -0.052854035049676895) ? ( 182 ) : ( 183 ) ) : ( 184 ) ) ) : ( (Feature_0 <= -0.05818636156618595) ? ( 186 ) : ( (Feature_5 <= 0.017318456433713436) ? ( (Feature_0 <= -0.047288745641708374) ? ( 189 ) : ( (Feature_8 <= 0.02130819000012707) ? ( 191 ) : ( 192 ) ) ) : ( (Feature_3 <= -0.028049270622432232) ? ( 194 ) : ( 195 ) ) ) ) ) : ( (Feature_0 <= 0.06895248219370842) ? ( (Feature_5 <= -0.04264947585761547) ? ( (Feature_3 <= -0.055592237040400505) ? ( 199 ) : ( (Feature_2 <= -0.026684382930397987) ? ( 201 ) : ( (Feature_2 <= -0.007822672137990594) ? ( 203 ) : ( 204 ) ) ) ) : ( (Feature_0 <= 0.043524714186787605) ? ( (Feature_9 <= 0.09626181423664093) ? ( (Feature_7 <= 0.027113139629364014) ? ( (Feature_8 <= -0.0001773947151377797) ? ( (Feature_8 <= -0.0046919804299250245) ? ( (Feature_4 <= -0.011888606008142233) ? ( 211 ) : ( 212 ) ) : ( (Feature_8 <= -0.002401149657089263) ? ( 214 ) : ( 215 ) ) ) : ( (Feature_2 <= -0.01806188654154539) ? ( (Feature_8 <= 0.012524176854640245) ? ( (Feature_6 <= -0.023151836823672056) ? ( 219 ) : ( (Feature_5 <= 0.015126416925340891) ? ( 221 ) : ( 222 ) ) ) : ( (Feature_8 <= 0.06748242862522602) ? ( (Feature_3 <= -0.006244422402232885) ? ( (Feature_6 <= 0.032072730362415314) ? ( 226 ) : ( 227 ) ) : ( (Feature_5 <= 0.041900612064637244) ? ( 229 ) : ( 230 ) ) ) : ( 231 ) ) ) : ( (Feature_2 <= -0.004589236050378531) ? ( (Feature_8 <= 0.02722563687711954) ? ( 234 ) : ( 235 ) ) : ( 236 ) ) ) ) : ( (Feature_5 <= 0.06663933768868446) ? ( (Feature_6 <= -0.021311019081622362) ? ( 239 ) : ( 240 ) ) : ( (Feature_8 <= 0.02400754624977708) ? ( 242 ) : ( 243 ) ) ) ) : ( 244 ) ) : ( (Feature_3 <= 0.01670804899185896) ? ( (Feature_0 <= 0.0616874061524868) ? ( (Feature_5 <= 0.04785043187439442) ? ( (Feature_3 <= -0.010834915563464165) ? ( 249 ) : ( 250 ) ) : ( 251 ) ) : ( (Feature_9 <= 0.050698637031018734) ? ( 253 ) : ( 254 ) ) ) : ( (Feature_7 <= -0.002592261880636215) ? ( 256 ) : ( 257 ) ) ) ) ) : ( 258 ) ) ) : ( (Feature_8 <= 0.047739794477820396) ? ( (Feature_5 <= 0.05301737890113145) ? ( 261 ) : ( 262 ) ) : ( (Feature_3 <= 0.07523684948682785) ? ( 264 ) : ( 265 ) ) ) ) ) : ( (Feature_9 <= 0.03413021191954613) ? ( (Feature_8 <= -0.025371805764734745) ? ( (Feature_2 <= 0.009961227187886834) ? ( (Feature_3 <= -0.046985059045255184) ? ( 270 ) : ( (Feature_0 <= -0.03275859355926514) ? ( 272 ) : ( 273 ) ) ) : ( (Feature_0 <= 0.012648137286305428) ? ( (Feature_0 <= -0.06908397749066353) ? ( 276 ) : ( (Feature_5 <= 0.04769385606050491) ? ( (Feature_2 <= 0.02020044159144163) ? ( (Feature_8 <= -0.06880680285394192) ? ( 280 ) : ( 281 ) ) : ( (Feature_0 <= -0.040023669600486755) ? ( (Feature_8 <= -0.04258289374411106) ? ( 284 ) : ( (Feature_7 <= -0.02104282204527408) ? ( 286 ) : ( 287 ) ) ) : ( (Feature_6 <= 0.008142083883285522) ? ( 289 ) : ( 290 ) ) ) ) : ( 291 ) ) ) : ( (Feature_5 <= -0.022138249594718218) ? ( (Feature_6 <= 0.017346177715808153) ? ( 294 ) : ( 295 ) ) : ( (Feature_2 <= 0.06061839498579502) ? ( (Feature_1 <= 0.003019241616129875) ? ( 298 ) : ( 299 ) ) : ( (Feature_2 <= 0.0821746364235878) ? ( 301 ) : ( 302 ) ) ) ) ) ) : ( (Feature_6 <= -0.0489233024418354) ? ( (Feature_6 <= -0.06733148917555809) ? ( (Feature_9 <= -0.005219804123044014) ? ( 306 ) : ( 307 ) ) : ( (Feature_4 <= -0.004320865496993065) ? ( 309 ) : ( 310 ) ) ) : ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_6 <= -0.036037569865584373) ? ( (Feature_3 <= -0.00911348219960928) ? ( (Feature_9 <= -0.03214349877089262) ? ( 315 ) : ( 316 ) ) : ( (Feature_9 <= -0.009361911041196436) ? ( 318 ) : ( 319 ) ) ) : ( (Feature_8 <= 0.060747526586055756) ? ( (Feature_6 <= 0.06520747020840645) ? ( (Feature_6 <= 0.05416255630552769) ? ( (Feature_6 <= 0.021027816459536552) ? ( (Feature_0 <= -6.574741564691067e-05) ? ( (Feature_6 <= 0.0007788077928125858) ? ( (Feature_5 <= -0.011491202283650637) ? ( (Feature_9 <= -0.050782980397343636) ? ( 328 ) : ( 329 ) ) : ( 330 ) ) : ( 331 ) ) : ( (Feature_4 <= 0.02113426197320223) ? ( (Feature_5 <= -0.006637401122134179) ? ( (Feature_8 <= -0.0010799570009112358) ? ( 335 ) : ( (Feature_8 <= 0.03588056843727827) ? ( 337 ) : ( 338 ) ) ) : ( (Feature_3 <= 0.04769388400018215) ? ( 340 ) : ( 341 ) ) ) : ( (Feature_8 <= 0.05155264772474766) ? ( (Feature_4 <= 0.03282986115664244) ? ( 344 ) : ( 345 ) ) : ( 346 ) ) ) ) : ( (Feature_3 <= -0.0246063987724483) ? ( 348 ) : ( (Feature_9 <= -0.00936191133223474) ? ( 350 ) : ( 351 ) ) ) ) : ( (Feature_6 <= 0.05968501418828964) ? ( 353 ) : ( 354 ) ) ) : ( 355 ) ) : ( (Feature_3 <= 0.025315226055681705) ? ( 357 ) : ( (Feature_5 <= 0.05567914433777332) ? ( 359 ) : ( 360 ) ) ) ) ) : ( (Feature_4 <= 0.006686757318675518) ? ( (Feature_0 <= -6.574729923158884e-05) ? ( (Feature_7 <= -0.02104282204527408) ? ( 364 ) : ( (Feature_6 <= -0.012106924317777157) ? ( 366 ) : ( 367 ) ) ) : ( (Feature_3 <= 0.05457962676882744) ? ( (Feature_5 <= -0.008046569302678108) ? ( (Feature_8 <= -0.0005405675619840622) ? ( 371 ) : ( (Feature_4 <= -0.05041528772562742) ? ( 373 ) : ( 374 ) ) ) : ( (Feature_0 <= 0.021729482628870755) ? ( 376 ) : ( 377 ) ) ) : ( (Feature_2 <= 0.025050596334040165) ? ( 379 ) : ( 380 ) ) ) ) : ( (Feature_4 <= 0.0789242796599865) ? ( (Feature_2 <= 0.01103903935290873) ? ( (Feature_9 <= 0.025845997966825962) ? ( 384 ) : ( 385 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_8 <= 0.06124565005302429) ? ( (Feature_4 <= 0.027326050214469433) ? ( (Feature_5 <= -0.0011573033407330513) ? ( 390 ) : ( 391 ) ) : ( (Feature_4 <= 0.037645697593688965) ? ( 393 ) : ( 394 ) ) ) : ( 395 ) ) : ( (Feature_2 <= 0.044451212510466576) ? ( (Feature_2 <= 0.019661535508930683) ? ( 398 ) : ( (Feature_5 <= 0.03422847203910351) ? ( 400 ) : ( 401 ) ) ) : ( 402 ) ) ) ) : ( (Feature_5 <= 0.09388325735926628) ? ( 404 ) : ( 405 ) ) ) ) ) ) ) : ( (Feature_4 <= 0.038333673030138016) ? ( (Feature_5 <= 0.01496984250843525) ? ( (Feature_2 <= 0.10804212465882301) ? ( (Feature_0 <= 0.01809694431722164) ? ( (Feature_5 <= -0.013370093423873186) ? ( (Feature_5 <= -0.02824464486911893) ? ( 412 ) : ( 413 ) ) : ( 414 ) ) : ( (Feature_2 <= 0.07732447981834412) ? ( (Feature_3 <= 0.041955769062042236) ? ( (Feature_1 <= 0.003019241616129875) ? ( 418 ) : ( 419 ) ) : ( (Feature_8 <= 0.09886198118329048) ? ( 421 ) : ( 422 ) ) ) : ( (Feature_6 <= -0.021311018150299788) ? ( 424 ) : ( 425 ) ) ) ) : ( 426 ) ) : ( (Feature_2 <= 0.07840229198336601) ? ( (Feature_8 <= 0.04586347006261349) ? ( (Feature_9 <= 0.05276969261467457) ? ( 430 ) : ( (Feature_7 <= 0.08228031918406487) ? ( 432 ) : ( 433 ) ) ) : ( 434 ) ) : ( (Feature_4 <= 0.028702002950012684) ? ( (Feature_3 <= 0.022446167655289173) ? ( 437 ) : ( (Feature_7 <= 0.03726094972807914) ? ( 439 ) : ( 440 ) ) ) : ( 441 ) ) ) ) : ( (Feature_8 <= 0.059788333252072334) ? ( (Feature_2 <= 0.044990118592977524) ? ( (Feature_7 <= 0.09132109011989087) ? ( 445 ) : ( 446 ) ) : ( (Feature_6 <= -0.0010620108805596828) ? ( (Feature_5 <= 0.06554331816732883) ? ( 449 ) : ( 450 ) ) : ( 451 ) ) ) : ( (Feature_3 <= -0.026327834464609623) ? ( 453 ) : ( (Feature_2 <= 0.04984027519822121) ? ( 455 ) : ( (Feature_9 <= 0.07348022796213627) ? ( (Feature_4 <= 0.04796534217894077) ? ( 458 ) : ( 459 ) ) : ( 460 ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_6
	

	namespace EXT_SubModel_7 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 9 ,  {137. }} ,
				{ 10 ,  {143. }} ,
				{ 14 ,  {116. }} ,
				{ 17 ,  {85. }} ,
				{ 18 ,  {77. }} ,
				{ 19 ,  {55. }} ,
				{ 21 ,  {51. }} ,
				{ 22 ,  {55. }} ,
				{ 23 ,  {113. }} ,
				{ 24 ,  {200. }} ,
				{ 28 ,  {70. }} ,
				{ 32 ,  {48. }} ,
				{ 33 ,  {45. }} ,
				{ 34 ,  {42. }} ,
				{ 36 ,  {39. }} ,
				{ 37 ,  {37. }} ,
				{ 40 ,  {90. }} ,
				{ 41 ,  {114. }} ,
				{ 45 ,  {74. }} ,
				{ 47 ,  {63. }} ,
				{ 48 ,  {65. }} ,
				{ 50 ,  {47. }} ,
				{ 52 ,  {53. }} ,
				{ 53 ,  {55. }} ,
				{ 57 ,  {75. }} ,
				{ 58 ,  {71. }} ,
				{ 59 ,  {96. }} ,
				{ 60 ,  {52. }} ,
				{ 64 ,  {128. }} ,
				{ 65 ,  {129. }} ,
				{ 67 ,  {72. }} ,
				{ 70 ,  {96. }} ,
				{ 71 ,  {91. }} ,
				{ 72 ,  {102. }} ,
				{ 79 ,  {60. }} ,
				{ 80 ,  {54. }} ,
				{ 81 ,  {79. }} ,
				{ 83 ,  {49. }} ,
				{ 84 ,  {53. }} ,
				{ 86 ,  {87. }} ,
				{ 87 ,  {94. }} ,
				{ 90 ,  {66. }} ,
				{ 91 ,  {64. }} ,
				{ 93 ,  {127. }} ,
				{ 94 ,  {103. }} ,
				{ 95 ,  {135. }} ,
				{ 96 ,  {158. }} ,
				{ 100 ,  {98. }} ,
				{ 101 ,  {150. }} ,
				{ 103 ,  {200. }} ,
				{ 104 ,  {219. }} ,
				{ 108 ,  {118. }} ,
				{ 111 ,  {53. }} ,
				{ 112 ,  {64. }} ,
				{ 114 ,  {90. }} ,
				{ 116 ,  {83. }} ,
				{ 118 ,  {77. }} ,
				{ 119 ,  {80. }} ,
				{ 122 ,  {132. }} ,
				{ 123 ,  {118. }} ,
				{ 125 ,  {89. }} ,
				{ 126 ,  {104. }} ,
				{ 127 ,  {216. }} ,
				{ 130 ,  {168. }} ,
				{ 131 ,  {60. }} ,
				{ 133 ,  {25. }} ,
				{ 136 ,  {39. }} ,
				{ 137 ,  {31. }} ,
				{ 141 ,  {67. }} ,
				{ 143 ,  {61. }} ,
				{ 145 ,  {60. }} ,
				{ 146 ,  {59. }} ,
				{ 149 ,  {44. }} ,
				{ 150 ,  {51. }} ,
				{ 151 ,  {59. }} ,
				{ 153 ,  {81. }} ,
				{ 154 ,  {63. }} ,
				{ 159 ,  {288. }} ,
				{ 161 ,  {263. }} ,
				{ 162 ,  {244. }} ,
				{ 165 ,  {182. }} ,
				{ 167 ,  {210. }} ,
				{ 168 ,  {201. }} ,
				{ 169 ,  {140. }} ,
				{ 171 ,  {145. }} ,
				{ 172 ,  {127. }} ,
				{ 174 ,  {187. }} ,
				{ 177 ,  {172. }} ,
				{ 180 ,  {141. }} ,
				{ 181 ,  {147. }} ,
				{ 182 ,  {131. }} ,
				{ 186 ,  {95. }} ,
				{ 187 ,  {96. }} ,
				{ 188 ,  {103. }} ,
				{ 190 ,  {113. }} ,
				{ 191 ,  {121. }} ,
				{ 199 ,  {178. }} ,
				{ 200 ,  {185. }} ,
				{ 202 ,  {162. }} ,
				{ 203 ,  {153. }} ,
				{ 205 ,  {111. }} ,
				{ 207 ,  {93. }} ,
				{ 208 ,  {91. }} ,
				{ 212 ,  {190. }} ,
				{ 213 ,  {168. }} ,
				{ 214 ,  {141. }} ,
				{ 216 ,  {257. }} ,
				{ 218 ,  {214. }} ,
				{ 219 ,  {200. }} ,
				{ 222 ,  {252. }} ,
				{ 225 ,  {58. }} ,
				{ 227 ,  {94. }} ,
				{ 228 ,  {124. }} ,
				{ 230 ,  {150. }} ,
				{ 232 ,  {168. }} ,
				{ 233 ,  {179. }} ,
				{ 236 ,  {154. }} ,
				{ 238 ,  {102. }} ,
				{ 240 ,  {84. }} ,
				{ 241 ,  {86. }} ,
				{ 244 ,  {66. }} ,
				{ 246 ,  {74. }} ,
				{ 247 ,  {73. }} ,
				{ 248 ,  {48. }} ,
				{ 251 ,  {144. }} ,
				{ 253 ,  {115. }} ,
				{ 255 ,  {94. }} ,
				{ 256 ,  {95. }} ,
				{ 260 ,  {206. }} ,
				{ 261 ,  {101. }} ,
				{ 265 ,  {252. }} ,
				{ 266 ,  {233. }} ,
				{ 268 ,  {292. }} ,
				{ 269 ,  {281. }} ,
				{ 272 ,  {245. }} ,
				{ 273 ,  {241. }} ,
				{ 274 ,  {229. }} ,
				{ 278 ,  {191. }} ,
				{ 280 ,  {200. }} ,
				{ 281 ,  {206. }} ,
				{ 284 ,  {283. }} ,
				{ 285 ,  {258. }} ,
				{ 286 ,  {185. }} ,
				{ 291 ,  {217. }} ,
				{ 292 ,  {209. }} ,
				{ 294 ,  {170. }} ,
				{ 296 ,  {190. }} ,
				{ 298 ,  {196. }} ,
				{ 299 ,  {197. }} ,
				{ 301 ,  {172. }} ,
				{ 303 ,  {123. }} ,
				{ 304 ,  {120. }} ,
				{ 307 ,  {69. }} ,
				{ 308 ,  {90. }} ,
				{ 310 ,  {142. }} ,
				{ 311 ,  {134. }} ,
				{ 316 ,  {68. }} ,
				{ 321 ,  {151. }} ,
				{ 322 ,  {99. }} ,
				{ 325 ,  {167. }} ,
				{ 326 ,  {178. }} ,
				{ 330 ,  {222. }} ,
				{ 331 ,  {221. }} ,
				{ 332 ,  {215. }} ,
				{ 334 ,  {195. }} ,
				{ 335 ,  {198. }} ,
				{ 338 ,  {281. }} ,
				{ 339 ,  {249. }} ,
				{ 341 ,  {235. }} ,
				{ 342 ,  {208. }} ,
				{ 347 ,  {151. }} ,
				{ 348 ,  {144. }} ,
				{ 350 ,  {138. }} ,
				{ 351 ,  {131. }} ,
				{ 352 ,  {178. }} ,
				{ 356 ,  {173. }} ,
				{ 357 ,  {180. }} ,
				{ 359 ,  {164. }} ,
				{ 360 ,  {150. }} ,
				{ 362 ,  {225. }} ,
				{ 363 ,  {212. }} ,
				{ 366 ,  {302. }} ,
				{ 368 ,  {276. }} ,
				{ 369 ,  {265. }} ,
				{ 372 ,  {283. }} ,
				{ 373 ,  {236. }} ,
				{ 376 ,  {235. }} ,
				{ 377 ,  {202. }} ,
				{ 379 ,  {166. }} ,
				{ 380 ,  {143. }} ,
				{ 382 ,  {155. }} ,
				{ 386 ,  {150. }} ,
				{ 388 ,  {173. }} ,
				{ 389 ,  {192. }} ,
				{ 391 ,  {268. }} ,
				{ 392 ,  {220. }} ,
				{ 395 ,  {270. }} ,
				{ 397 ,  {311. }} ,
				{ 398 ,  {297. }} ,
				{ 400 ,  {186. }} ,
				{ 405 ,  {232. }} ,
				{ 406 ,  {230. }} ,
				{ 407 ,  {217. }} ,
				{ 409 ,  {248. }} ,
				{ 410 ,  {242. }} ,
				{ 412 ,  {243. }} ,
				{ 413 ,  {258. }} ,
				{ 416 ,  {128. }} ,
				{ 418 ,  {274. }} ,
				{ 419 ,  {233. }} ,
				{ 427 ,  {279. }} ,
				{ 429 ,  {275. }} ,
				{ 430 ,  {277. }} ,
				{ 431 ,  {270. }} ,
				{ 432 ,  {332. }} ,
				{ 434 ,  {259. }} ,
				{ 435 ,  {264. }} ,
				{ 438 ,  {258. }} ,
				{ 439 ,  {261. }} ,
				{ 440 ,  {242. }} ,
				{ 441 ,  {220. }} ,
				{ 443 ,  {310. }} ,
				{ 444 ,  {306. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_8 <= -0.009924227371811867) ? ( (Feature_2 <= 0.0061888848431408405) ? ( (Feature_2 <= -0.012133920565247536) ? ( (Feature_2 <= -0.030456725507974625) ? ( (Feature_4 <= 0.049341294914484024) ? ( (Feature_0 <= -0.06181890144944191) ? ( (Feature_9 <= -0.003148751042317599) ? ( (Feature_5 <= -0.07740895450115204) ? ( (Feature_2 <= -0.0660245232284069) ? ( 9 ) : ( 10 ) ) : ( (Feature_2 <= -0.04177375137805939) ? ( (Feature_5 <= -0.021668527275323868) ? ( (Feature_6 <= 0.009982902556657791) ? ( 14 ) : ( (Feature_9 <= -0.015575071796774864) ? ( (Feature_4 <= -0.04284754488617182) ? ( 17 ) : ( 18 ) ) : ( 19 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 21 ) : ( 22 ) ) ) : ( 23 ) ) ) : ( 24 ) ) : ( (Feature_8 <= -0.033886250108480453) ? ( (Feature_0 <= -0.025493516586720943) ? ( (Feature_6 <= 0.011823721695691347) ? ( 28 ) : ( (Feature_0 <= -0.043656209483742714) ? ( (Feature_8 <= -0.04785015434026718) ? ( (Feature_1 <= 0.003019241616129875) ? ( 32 ) : ( 33 ) ) : ( 34 ) ) : ( (Feature_6 <= 0.044958461076021194) ? ( 36 ) : ( 37 ) ) ) ) : ( (Feature_7 <= -0.05093272961676121) ? ( (Feature_6 <= 0.043117642402648926) ? ( 40 ) : ( 41 ) ) : ( (Feature_4 <= -0.012576582841575146) ? ( (Feature_5 <= -0.02307769563049078) ? ( (Feature_5 <= -0.05517541244626045) ? ( 45 ) : ( (Feature_4 <= -0.058671003207564354) ? ( 47 ) : ( 48 ) ) ) : ( (Feature_5 <= -0.014622687362134457) ? ( 50 ) : ( (Feature_3 <= -0.04009931697510183) ? ( 52 ) : ( 53 ) ) ) ) : ( (Feature_5 <= 0.01669215876609087) ? ( (Feature_4 <= -0.0015689597930759192) ? ( (Feature_2 <= -0.04770171828567982) ? ( 57 ) : ( 58 ) ) : ( 59 ) ) : ( 60 ) ) ) ) ) : ( (Feature_8 <= -0.02892393246293068) ? ( (Feature_6 <= -0.00842528638895601) ? ( (Feature_0 <= -0.005514554679393768) ? ( 64 ) : ( 65 ) ) : ( (Feature_5 <= -0.01650157757103443) ? ( 67 ) : ( (Feature_3 <= 0.035643836949020624) ? ( (Feature_0 <= 0.021729483734816313) ? ( 70 ) : ( 71 ) ) : ( 72 ) ) ) ) : ( (Feature_9 <= 0.03205915819853544) ? ( (Feature_0 <= 0.03807590715587139) ? ( (Feature_4 <= 0.025262121576815844) ? ( (Feature_0 <= -6.574729923158884e-05) ? ( (Feature_3 <= -0.007392045692540705) ? ( (Feature_7 <= -0.03949338395614177) ? ( 79 ) : ( 80 ) ) : ( 81 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 83 ) : ( 84 ) ) ) : ( (Feature_3 <= -0.024606400169432163) ? ( 86 ) : ( 87 ) ) ) : ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_5 <= 0.001504458487033844) ? ( 90 ) : ( 91 ) ) : ( (Feature_3 <= 0.03908670973032713) ? ( 93 ) : ( 94 ) ) ) ) : ( 95 ) ) ) ) ) : ( 96 ) ) : ( (Feature_5 <= -0.02417371515184641) ? ( (Feature_3 <= -0.01772065879777074) ? ( (Feature_2 <= -0.024528758600354195) ? ( 100 ) : ( 101 ) ) : ( (Feature_9 <= -0.019717178773134947) ? ( 103 ) : ( 104 ) ) ) : ( (Feature_3 <= 0.10105837881565094) ? ( (Feature_9 <= 0.013419676572084427) ? ( (Feature_2 <= -0.024528758600354195) ? ( 108 ) : ( (Feature_3 <= -0.022884964011609554) ? ( (Feature_0 <= -0.020044709090143442) ? ( 111 ) : ( 112 ) ) : ( (Feature_9 <= -0.05492508690804243) ? ( 114 ) : ( (Feature_3 <= 0.00293656624853611) ? ( 116 ) : ( (Feature_6 <= -0.019470198079943657) ? ( 118 ) : ( 119 ) ) ) ) ) ) : ( (Feature_8 <= -0.03915436379611492) ? ( (Feature_9 <= 0.040343372616916895) ? ( 122 ) : ( 123 ) ) : ( (Feature_2 <= -0.020217510871589184) ? ( 125 ) : ( 126 ) ) ) ) : ( 127 ) ) ) ) : ( (Feature_0 <= -0.07271651551127434) ? ( (Feature_9 <= 0.0051354626775719225) ? ( 130 ) : ( 131 ) ) : ( (Feature_2 <= -0.009978296235203743) ? ( 133 ) : ( (Feature_8 <= -0.0580417774617672) ? ( (Feature_8 <= -0.07245977967977524) ? ( 136 ) : ( 137 ) ) : ( (Feature_0 <= 0.03081082832068205) ? ( (Feature_0 <= -0.018228439847007394) ? ( (Feature_4 <= -0.06967862695455551) ? ( 141 ) : ( (Feature_7 <= -0.05794394388794899) ? ( 143 ) : ( (Feature_8 <= -0.029649325646460056) ? ( 145 ) : ( 146 ) ) ) ) : ( (Feature_6 <= 0.057844193652272224) ? ( (Feature_5 <= -0.020729081705212593) ? ( 149 ) : ( 150 ) ) : ( 151 ) ) ) : ( (Feature_2 <= -0.005128141900058836) ? ( 153 ) : ( 154 ) ) ) ) ) ) ) : ( (Feature_6 <= -0.008425286738201976) ? ( (Feature_0 <= 0.03262709826231003) ? ( (Feature_6 <= -0.030515112914144993) ? ( (Feature_1 <= 0.003019241616129875) ? ( 159 ) : ( (Feature_9 <= -0.0010776971466839314) ? ( 161 ) : ( 162 ) ) ) : ( (Feature_9 <= -0.011432965286076069) ? ( (Feature_2 <= 0.00834450894035399) ? ( 165 ) : ( (Feature_5 <= -0.03513391129672527) ? ( 167 ) : ( 168 ) ) ) : ( 169 ) ) ) : ( (Feature_4 <= -0.044223496690392494) ? ( 171 ) : ( 172 ) ) ) : ( (Feature_4 <= -0.04215956851840019) ? ( 174 ) : ( (Feature_6 <= 0.017346178647130728) ? ( (Feature_5 <= -0.006167678395286202) ? ( 177 ) : ( (Feature_4 <= -0.00913670053705573) ? ( (Feature_8 <= -0.02654053410515189) ? ( 180 ) : ( 181 ) ) : ( 182 ) ) ) : ( (Feature_0 <= -0.02367724757641554) ? ( (Feature_8 <= -0.0289399279281497) ? ( (Feature_1 <= 0.003019241616129875) ? ( 186 ) : ( 187 ) ) : ( 188 ) ) : ( (Feature_2 <= 0.021278253756463528) ? ( 190 ) : ( 191 ) ) ) ) ) ) ) : ( (Feature_2 <= 0.005111072678118944) ? ( (Feature_8 <= 0.022001435048878193) ? ( (Feature_9 <= 0.009277569595724344) ? ( (Feature_2 <= -0.01967860572040081) ? ( (Feature_2 <= -0.04069593921303749) ? ( (Feature_5 <= -0.05157420504838228) ? ( (Feature_5 <= -0.07521691545844078) ? ( 199 ) : ( 200 ) ) : ( (Feature_0 <= -0.03457486227853224) ? ( 202 ) : ( 203 ) ) ) : ( (Feature_8 <= -0.002000755339395255) ? ( 205 ) : ( (Feature_4 <= 0.011502592358738184) ? ( 207 ) : ( 208 ) ) ) ) : ( (Feature_8 <= 0.0027641377528198063) ? ( (Feature_3 <= 0.008100872859358788) ? ( (Feature_9 <= -0.07149351574480534) ? ( 212 ) : ( 213 ) ) : ( 214 ) ) : ( (Feature_6 <= -0.04524166276678443) ? ( 216 ) : ( (Feature_5 <= 0.02546031540259719) ? ( 218 ) : ( 219 ) ) ) ) ) : ( (Feature_6 <= -0.01762938080355525) ? ( (Feature_7 <= -0.02104282204527408) ? ( 222 ) : ( (Feature_4 <= -0.021520276553928852) ? ( (Feature_0 <= -0.027309784898534417) ? ( 225 ) : ( (Feature_0 <= 0.03081082901917398) ? ( 227 ) : ( 228 ) ) ) : ( (Feature_9 <= 0.03205915819853544) ? ( 230 ) : ( (Feature_9 <= 0.05069863982498646) ? ( 232 ) : ( 233 ) ) ) ) ) : ( (Feature_2 <= -0.028301101177930832) ? ( (Feature_9 <= 0.015490729827433825) ? ( 236 ) : ( (Feature_3 <= -0.0337873874232173) ? ( 238 ) : ( (Feature_6 <= -0.012106924317777157) ? ( 240 ) : ( 241 ) ) ) ) : ( (Feature_3 <= 0.06662967428565025) ? ( (Feature_9 <= 0.01756178354844451) ? ( 244 ) : ( (Feature_4 <= 0.025262120412662625) ? ( 246 ) : ( 247 ) ) ) : ( 248 ) ) ) ) ) : ( (Feature_3 <= -0.04354218766093254) ? ( (Feature_4 <= -0.03459182847291231) ? ( 251 ) : ( (Feature_3 <= -0.07108515314757824) ? ( 253 ) : ( (Feature_2 <= -0.04877953068353236) ? ( 255 ) : ( 256 ) ) ) ) : ( (Feature_6 <= -0.034196751192212105) ? ( (Feature_0 <= -0.05273755453526974) ? ( (Feature_1 <= 0.003019241616129875) ? ( 260 ) : ( 261 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= -0.013504018308594823) ? ( (Feature_9 <= -0.052854035049676895) ? ( 265 ) : ( 266 ) ) : ( (Feature_7 <= 0.05275942012667656) ? ( 268 ) : ( 269 ) ) ) : ( (Feature_5 <= 0.04111773893237114) ? ( (Feature_7 <= 0.05275942012667656) ? ( 272 ) : ( 273 ) ) : ( 274 ) ) ) ) : ( (Feature_4 <= 0.015630450565367937) ? ( (Feature_8 <= 0.03150410298258066) ? ( (Feature_5 <= -0.04875586926937103) ? ( 278 ) : ( (Feature_0 <= 0.025362021289765835) ? ( 280 ) : ( 281 ) ) ) : ( (Feature_4 <= -0.00569681846536696) ? ( (Feature_5 <= -0.05877661891281605) ? ( 284 ) : ( 285 ) ) : ( 286 ) ) ) : ( (Feature_6 <= 0.03207272943109274) ? ( (Feature_9 <= 0.07555127888917923) ? ( (Feature_4 <= 0.04934129677712917) ? ( (Feature_4 <= 0.04177355580031872) ? ( 291 ) : ( 292 ) ) : ( (Feature_3 <= 0.02359379082918167) ? ( 294 ) : ( (Feature_0 <= 0.03625963721424341) ? ( 296 ) : ( (Feature_8 <= 0.10191963985562325) ? ( 298 ) : ( 299 ) ) ) ) ) : ( (Feature_3 <= 0.009822307620197535) ? ( 301 ) : ( (Feature_0 <= 0.007199329324066639) ? ( 303 ) : ( 304 ) ) ) ) : ( (Feature_2 <= -0.018061886774376035) ? ( (Feature_9 <= -0.01557507086545229) ? ( 307 ) : ( 308 ) ) : ( (Feature_6 <= 0.0652074683457613) ? ( 310 ) : ( 311 ) ) ) ) ) ) ) ) : ( (Feature_2 <= 0.06600745767354965) ? ( (Feature_9 <= 0.03827231749892235) ? ( (Feature_6 <= 0.00261962681543082) ? ( (Feature_0 <= -0.06726770848035812) ? ( 316 ) : ( (Feature_0 <= 0.03444336727261543) ? ( (Feature_0 <= 0.01809694431722164) ? ( (Feature_5 <= -0.038578543812036514) ? ( (Feature_3 <= -0.014277786947786808) ? ( 321 ) : ( 322 ) ) : ( (Feature_6 <= -0.04156002774834633) ? ( (Feature_4 <= -0.0063847946003079414) ? ( 325 ) : ( 326 ) ) : ( (Feature_6 <= -0.01578856213018298) ? ( (Feature_4 <= 0.04383748583495617) ? ( (Feature_8 <= 0.03758089803159237) ? ( 330 ) : ( 331 ) ) : ( 332 ) ) : ( (Feature_4 <= 0.02182223927229643) ? ( 334 ) : ( 335 ) ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_5 <= 0.014500118792057037) ? ( 338 ) : ( 339 ) ) : ( (Feature_0 <= 0.025362021289765835) ? ( 341 ) : ( 342 ) ) ) ) : ( (Feature_9 <= 0.009277569595724344) ? ( (Feature_6 <= -0.030515112914144993) ? ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_7 <= 0.015858298051171005) ? ( 347 ) : ( 348 ) ) : ( (Feature_7 <= 0.08154229447245598) ? ( 350 ) : ( 351 ) ) ) : ( 352 ) ) : ( (Feature_7 <= 0.05368194915354252) ? ( (Feature_8 <= 0.02857021614909172) ? ( (Feature_9 <= 0.01756178354844451) ? ( 356 ) : ( 357 ) ) : ( (Feature_3 <= -0.0022277403622865677) ? ( 359 ) : ( 360 ) ) ) : ( (Feature_4 <= 0.03145390935242176) ? ( 362 ) : ( 363 ) ) ) ) ) ) : ( (Feature_8 <= 0.021215134300291538) ? ( (Feature_0 <= -0.05092128412798047) ? ( 366 ) : ( (Feature_5 <= -0.01618842873722315) ? ( 368 ) : ( 369 ) ) ) : ( (Feature_9 <= -0.013504018308594823) ? ( (Feature_8 <= 0.06568749994039536) ? ( 372 ) : ( 373 ) ) : ( (Feature_6 <= 0.039436004124581814) ? ( (Feature_9 <= 0.01756178360665217) ? ( 376 ) : ( 377 ) ) : ( (Feature_4 <= 0.04796534311026335) ? ( 379 ) : ( 380 ) ) ) ) ) ) : ( (Feature_8 <= 0.006662062194664031) ? ( 382 ) : ( (Feature_3 <= 0.019003295805305243) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= 0.04391230829060078) ? ( 386 ) : ( (Feature_4 <= 0.06516475230455399) ? ( 388 ) : ( 389 ) ) ) : ( (Feature_8 <= 0.07197527587413788) ? ( 391 ) : ( 392 ) ) ) : ( (Feature_2 <= 0.03475090488791466) ? ( (Feature_7 <= 0.015858298051171005) ? ( 395 ) : ( (Feature_5 <= 0.018884197808802128) ? ( 397 ) : ( 398 ) ) ) : ( (Feature_8 <= 0.04170764423906803) ? ( 400 ) : ( (Feature_6 <= -0.032355932518839836) ? ( (Feature_7 <= 0.1431671604514122) ? ( (Feature_2 <= 0.05792386643588543) ? ( (Feature_8 <= 0.07212359085679054) ? ( 405 ) : ( 406 ) ) : ( 407 ) ) : ( (Feature_9 <= 0.06519601121544838) ? ( 409 ) : ( 410 ) ) ) : ( (Feature_4 <= 0.06998058594763279) ? ( 412 ) : ( 413 ) ) ) ) ) ) ) ) : ( (Feature_0 <= -0.04183994047343731) ? ( (Feature_3 <= 0.016708049923181534) ? ( 416 ) : ( (Feature_8 <= 0.0316821439191699) ? ( 418 ) : ( 419 ) ) ) : ( (Feature_4 <= 0.03282986208796501) ? ( (Feature_9 <= 0.09626181796193123) ? ( (Feature_6 <= -0.02867429330945015) ? ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_0 <= 0.05442233011126518) ? ( (Feature_3 <= 0.07179397717118263) ? ( (Feature_1 <= 0.003019241616129875) ? ( 427 ) : ( (Feature_4 <= 0.003934851381927729) ? ( 429 ) : ( 430 ) ) ) : ( 431 ) ) : ( 432 ) ) : ( (Feature_2 <= 0.07840229570865631) ? ( 434 ) : ( 435 ) ) ) : ( (Feature_2 <= 0.1403764858841896) ? ( (Feature_4 <= 0.014254498295485973) ? ( 438 ) : ( 439 ) ) : ( 440 ) ) ) : ( 441 ) ) : ( (Feature_5 <= 0.055522567592561245) ? ( 443 ) : ( 444 ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_7
	

	namespace EXT_SubModel_8 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 7 ,  {31. }} ,
				{ 8 ,  {113. }} ,
				{ 11 ,  {178. }} ,
				{ 15 ,  {144. }} ,
				{ 16 ,  {150. }} ,
				{ 17 ,  {158. }} ,
				{ 20 ,  {74. }} ,
				{ 21 ,  {79. }} ,
				{ 24 ,  {146. }} ,
				{ 27 ,  {127. }} ,
				{ 28 ,  {128. }} ,
				{ 29 ,  {135. }} ,
				{ 30 ,  {104. }} ,
				{ 33 ,  {168. }} ,
				{ 34 ,  {160. }} ,
				{ 36 ,  {200. }} ,
				{ 37 ,  {216. }} ,
				{ 43 ,  {104. }} ,
				{ 45 ,  {88. }} ,
				{ 46 ,  {83. }} ,
				{ 48 ,  {53. }} ,
				{ 49 ,  {55. }} ,
				{ 51 ,  {160. }} ,
				{ 52 ,  {89. }} ,
				{ 56 ,  {61. }} ,
				{ 57 ,  {70. }} ,
				{ 60 ,  {77. }} ,
				{ 61 ,  {83. }} ,
				{ 62 ,  {71. }} ,
				{ 64 ,  {67. }} ,
				{ 66 ,  {44. }} ,
				{ 67 ,  {53. }} ,
				{ 71 ,  {78. }} ,
				{ 72 ,  {54. }} ,
				{ 75 ,  {116. }} ,
				{ 77 ,  {138. }} ,
				{ 78 ,  {135. }} ,
				{ 80 ,  {88. }} ,
				{ 81 ,  {107. }} ,
				{ 84 ,  {219. }} ,
				{ 85 ,  {200. }} ,
				{ 86 ,  {177. }} ,
				{ 93 ,  {48. }} ,
				{ 94 ,  {37. }} ,
				{ 95 ,  {61. }} ,
				{ 97 ,  {85. }} ,
				{ 98 ,  {98. }} ,
				{ 100 ,  {51. }} ,
				{ 102 ,  {39. }} ,
				{ 103 ,  {42. }} ,
				{ 106 ,  {96. }} ,
				{ 107 ,  {92. }} ,
				{ 109 ,  {72. }} ,
				{ 110 ,  {64. }} ,
				{ 113 ,  {90. }} ,
				{ 115 ,  {137. }} ,
				{ 116 ,  {158. }} ,
				{ 120 ,  {125. }} ,
				{ 122 ,  {40. }} ,
				{ 124 ,  {87. }} ,
				{ 126 ,  {66. }} ,
				{ 129 ,  {77. }} ,
				{ 130 ,  {75. }} ,
				{ 131 ,  {72. }} ,
				{ 134 ,  {96. }} ,
				{ 136 ,  {102. }} ,
				{ 137 ,  {103. }} ,
				{ 140 ,  {118. }} ,
				{ 141 ,  {113. }} ,
				{ 142 ,  {108. }} ,
				{ 145 ,  {52. }} ,
				{ 149 ,  {81. }} ,
				{ 150 ,  {84. }} ,
				{ 151 ,  {71. }} ,
				{ 152 ,  {91. }} ,
				{ 154 ,  {49. }} ,
				{ 156 ,  {59. }} ,
				{ 157 ,  {63. }} ,
				{ 158 ,  {253. }} ,
				{ 162 ,  {94. }} ,
				{ 164 ,  {252. }} ,
				{ 166 ,  {200. }} ,
				{ 167 ,  {214. }} ,
				{ 171 ,  {140. }} ,
				{ 174 ,  {88. }} ,
				{ 175 ,  {93. }} ,
				{ 176 ,  {102. }} ,
				{ 178 ,  {84. }} ,
				{ 180 ,  {58. }} ,
				{ 182 ,  {74. }} ,
				{ 183 ,  {69. }} ,
				{ 186 ,  {91. }} ,
				{ 187 ,  {90. }} ,
				{ 191 ,  {185. }} ,
				{ 192 ,  {209. }} ,
				{ 193 ,  {154. }} ,
				{ 194 ,  {120. }} ,
				{ 197 ,  {283. }} ,
				{ 204 ,  {190. }} ,
				{ 205 ,  {191. }} ,
				{ 206 ,  {198. }} ,
				{ 211 ,  {131. }} ,
				{ 212 ,  {168. }} ,
				{ 215 ,  {101. }} ,
				{ 217 ,  {92. }} ,
				{ 218 ,  {94. }} ,
				{ 220 ,  {124. }} ,
				{ 221 ,  {123. }} ,
				{ 222 ,  {48. }} ,
				{ 223 ,  {197. }} ,
				{ 226 ,  {262. }} ,
				{ 227 ,  {245. }} ,
				{ 231 ,  {200. }} ,
				{ 232 ,  {206. }} ,
				{ 233 ,  {179. }} ,
				{ 236 ,  {151. }} ,
				{ 237 ,  {109. }} ,
				{ 238 ,  {217. }} ,
				{ 241 ,  {100. }} ,
				{ 242 ,  {95. }} ,
				{ 244 ,  {115. }} ,
				{ 247 ,  {142. }} ,
				{ 248 ,  {141. }} ,
				{ 249 ,  {134. }} ,
				{ 251 ,  {202. }} ,
				{ 253 ,  {219. }} ,
				{ 254 ,  {230. }} ,
				{ 257 ,  {126. }} ,
				{ 258 ,  {171. }} ,
				{ 262 ,  {259. }} ,
				{ 263 ,  {257. }} ,
				{ 264 ,  {281. }} ,
				{ 266 ,  {233. }} ,
				{ 267 ,  {229. }} ,
				{ 273 ,  {201. }} ,
				{ 276 ,  {182. }} ,
				{ 277 ,  {184. }} ,
				{ 278 ,  {187. }} ,
				{ 279 ,  {145. }} ,
				{ 283 ,  {90. }} ,
				{ 284 ,  {95. }} ,
				{ 285 ,  {70. }} ,
				{ 288 ,  {103. }} ,
				{ 289 ,  {96. }} ,
				{ 292 ,  {172. }} ,
				{ 293 ,  {191. }} ,
				{ 296 ,  {147. }} ,
				{ 297 ,  {144. }} ,
				{ 299 ,  {141. }} ,
				{ 300 ,  {140. }} ,
				{ 307 ,  {167. }} ,
				{ 308 ,  {174. }} ,
				{ 309 ,  {196. }} ,
				{ 312 ,  {111. }} ,
				{ 313 ,  {84. }} ,
				{ 315 ,  {128. }} ,
				{ 316 ,  {151. }} ,
				{ 318 ,  {90. }} ,
				{ 319 ,  {78. }} ,
				{ 323 ,  {52. }} ,
				{ 325 ,  {137. }} ,
				{ 326 ,  {122. }} ,
				{ 327 ,  {259. }} ,
				{ 331 ,  {275. }} ,
				{ 334 ,  {212. }} ,
				{ 336 ,  {220. }} ,
				{ 337 ,  {225. }} ,
				{ 339 ,  {242. }} ,
				{ 340 ,  {233. }} ,
				{ 342 ,  {192. }} ,
				{ 343 ,  {180. }} ,
				{ 345 ,  {317. }} ,
				{ 346 ,  {268. }} ,
				{ 349 ,  {302. }} ,
				{ 351 ,  {276. }} ,
				{ 352 ,  {281. }} ,
				{ 354 ,  {242. }} ,
				{ 355 ,  {220. }} ,
				{ 360 ,  {52. }} ,
				{ 361 ,  {113. }} ,
				{ 367 ,  {232. }} ,
				{ 370 ,  {198. }} ,
				{ 371 ,  {202. }} ,
				{ 372 ,  {208. }} ,
				{ 375 ,  {170. }} ,
				{ 376 ,  {178. }} ,
				{ 377 ,  {195. }} ,
				{ 379 ,  {248. }} ,
				{ 381 ,  {236. }} ,
				{ 382 ,  {235. }} ,
				{ 384 ,  {244. }} ,
				{ 385 ,  {273. }} ,
				{ 387 ,  {67. }} ,
				{ 389 ,  {144. }} ,
				{ 390 ,  {143. }} ,
				{ 394 ,  {232. }} ,
				{ 396 ,  {246. }} ,
				{ 397 ,  {248. }} ,
				{ 400 ,  {277. }} ,
				{ 401 ,  {270. }} ,
				{ 402 ,  {297. }} ,
				{ 403 ,  {155. }} ,
				{ 409 ,  {293. }} ,
				{ 412 ,  {281. }} ,
				{ 413 ,  {280. }} ,
				{ 414 ,  {277. }} ,
				{ 416 ,  {263. }} ,
				{ 417 ,  {275. }} ,
				{ 419 ,  {332. }} ,
				{ 420 ,  {303. }} ,
				{ 423 ,  {321. }} ,
				{ 424 ,  {308. }} ,
				{ 425 ,  {336. }} ,
				{ 429 ,  {237. }} ,
				{ 431 ,  {215. }} ,
				{ 432 ,  {220. }} ,
				{ 433 ,  {186. }} ,
				{ 435 ,  {310. }} ,
				{ 437 ,  {258. }} ,
				{ 438 ,  {264. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_2 <= 0.0061888848431408405) ? ( (Feature_8 <= -0.009431487880647182) ? ( (Feature_5 <= 0.11267216503620148) ? ( (Feature_6 <= 0.021027816459536552) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_8 <= -0.0580417774617672) ? ( (Feature_9 <= -0.04042771365493536) ? ( 7 ) : ( 8 ) ) : ( (Feature_2 <= -0.014828450977802277) ? ( (Feature_5 <= -0.0608120858669281) ? ( 11 ) : ( (Feature_0 <= -0.05455382354557514) ? ( (Feature_4 <= -0.0201443238183856) ? ( (Feature_8 <= -0.02828868944197893) ? ( 15 ) : ( 16 ) ) : ( 17 ) ) : ( (Feature_2 <= -0.042312657460570335) ? ( (Feature_8 <= -0.035844641737639904) ? ( 20 ) : ( 21 ) ) : ( (Feature_3 <= 0.04597245063632727) ? ( (Feature_8 <= -0.03262011520564556) ? ( 24 ) : ( (Feature_3 <= -0.0022277403622865677) ? ( (Feature_7 <= -0.02104282204527408) ? ( 27 ) : ( 28 ) ) : ( 29 ) ) ) : ( 30 ) ) ) ) ) : ( (Feature_3 <= 0.0029365664813667536) ? ( (Feature_8 <= -0.034850374795496464) ? ( 33 ) : ( 34 ) ) : ( (Feature_5 <= -0.011178053915500641) ? ( 36 ) : ( 37 ) ) ) ) ) : ( (Feature_6 <= -0.0010620108805596828) ? ( (Feature_3 <= -0.03837788291275501) ? ( (Feature_0 <= 0.030810829252004623) ? ( (Feature_5 <= -0.02370399236679077) ? ( (Feature_2 <= -0.07356921024620533) ? ( 43 ) : ( (Feature_6 <= -0.050764121930114925) ? ( 45 ) : ( 46 ) ) ) : ( (Feature_5 <= -0.01838046871125698) ? ( 48 ) : ( 49 ) ) ) : ( (Feature_5 <= 0.014343546703457832) ? ( 51 ) : ( 52 ) ) ) : ( (Feature_6 <= -0.012106924317777157) ? ( (Feature_5 <= -0.022764546796679497) ? ( (Feature_6 <= -0.036037569399923086) ? ( 56 ) : ( 57 ) ) : ( (Feature_4 <= -0.0201443238183856) ? ( (Feature_2 <= -0.015906263142824173) ? ( 60 ) : ( 61 ) ) : ( 62 ) ) ) : ( (Feature_3 <= 0.008100872160866857) ? ( 64 ) : ( (Feature_7 <= -0.02104282204527408) ? ( 66 ) : ( 67 ) ) ) ) ) : ( (Feature_3 <= 0.001215130789205432) ? ( (Feature_9 <= -0.052854033187031746) ? ( (Feature_8 <= -0.06498189456760883) ? ( 71 ) : ( 72 ) ) : ( (Feature_0 <= -0.0036982856690883636) ? ( (Feature_4 <= -0.04353552125394344) ? ( 75 ) : ( (Feature_4 <= -0.03390385117381811) ? ( 77 ) : ( 78 ) ) ) : ( (Feature_2 <= -0.025067665614187717) ? ( 80 ) : ( 81 ) ) ) ) : ( (Feature_5 <= 0.0005650129169225693) ? ( (Feature_4 <= -0.044911473989486694) ? ( 84 ) : ( 85 ) ) : ( 86 ) ) ) ) ) : ( (Feature_3 <= -0.031492140144109726) ? ( (Feature_5 <= -0.01697130035609007) ? ( (Feature_5 <= -0.04108373075723648) ? ( (Feature_9 <= -0.028001392260193825) ? ( (Feature_9 <= -0.040427712723612785) ? ( (Feature_8 <= -0.05866708420217037) ? ( 93 ) : ( 94 ) ) : ( 95 ) ) : ( (Feature_4 <= -0.04559945035725832) ? ( 97 ) : ( 98 ) ) ) : ( (Feature_0 <= -0.06726770848035812) ? ( 100 ) : ( (Feature_7 <= -0.05794394388794899) ? ( 102 ) : ( 103 ) ) ) ) : ( (Feature_7 <= -0.04244547337293625) ? ( (Feature_4 <= 0.008750686421990395) ? ( 106 ) : ( 107 ) ) : ( (Feature_8 <= -0.029600605368614197) ? ( 109 ) : ( 110 ) ) ) ) : ( (Feature_2 <= -0.054707497358322144) ? ( (Feature_9 <= -0.025930338772013783) ? ( 113 ) : ( (Feature_8 <= -0.03544617258012295) ? ( 115 ) : ( 116 ) ) ) : ( (Feature_5 <= 0.008706873282790184) ? ( (Feature_4 <= -0.00432086532964604) ? ( (Feature_3 <= -0.028049270622432232) ? ( 120 ) : ( (Feature_4 <= -0.07655839063227177) ? ( 122 ) : ( (Feature_7 <= -0.05794394388794899) ? ( 124 ) : ( (Feature_5 <= -0.03591678198426962) ? ( 126 ) : ( (Feature_2 <= -0.04339046962559223) ? ( (Feature_6 <= 0.052321736700832844) ? ( 129 ) : ( 130 ) ) : ( 131 ) ) ) ) ) ) : ( (Feature_2 <= -0.03584578540176153) ? ( (Feature_9 <= -0.021788231562823057) ? ( 134 ) : ( (Feature_2 <= -0.04339046962559223) ? ( 136 ) : ( 137 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= -0.02800139132887125) ? ( 140 ) : ( 141 ) ) : ( 142 ) ) ) ) : ( (Feature_2 <= -0.005128141900058836) ? ( (Feature_8 <= -0.059285517781972885) ? ( 145 ) : ( (Feature_0 <= 0.04897352121770382) ? ( (Feature_3 <= -0.02116352878510952) ? ( (Feature_4 <= 0.06172487046569586) ? ( 149 ) : ( 150 ) ) : ( 151 ) ) : ( 152 ) ) ) : ( (Feature_0 <= 0.01809694431722164) ? ( 154 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 156 ) : ( 157 ) ) ) ) ) ) ) ) : ( 158 ) ) : ( (Feature_2 <= -0.022912041284143925) ? ( (Feature_2 <= -0.04608500003814697) ? ( (Feature_2 <= -0.07788045704364777) ? ( 162 ) : ( (Feature_9 <= -0.04871192807331681) ? ( 164 ) : ( (Feature_4 <= -0.012576582841575146) ? ( 166 ) : ( 167 ) ) ) ) : ( (Feature_3 <= 0.006379436701536179) ? ( (Feature_3 <= -0.022311152890324593) ? ( (Feature_9 <= -0.059067195281386375) ? ( 171 ) : ( (Feature_9 <= -0.005219804123044014) ? ( (Feature_3 <= -0.05042792949825525) ? ( 174 ) : ( 175 ) ) : ( 176 ) ) ) : ( (Feature_3 <= -0.01772065833210945) ? ( 178 ) : ( (Feature_5 <= -0.015562132117338479) ? ( 180 ) : ( (Feature_5 <= 0.04205718624871224) ? ( 182 ) : ( 183 ) ) ) ) ) : ( (Feature_2 <= -0.0374625027179718) ? ( (Feature_8 <= 0.052732767537236214) ? ( 186 ) : ( 187 ) ) : ( (Feature_9 <= 0.07140917517244816) ? ( (Feature_6 <= -0.002902830019593239) ? ( (Feature_7 <= 0.015858298051171005) ? ( 191 ) : ( 192 ) ) : ( 193 ) ) : ( 194 ) ) ) ) ) : ( (Feature_7 <= 0.04519468918442726) ? ( (Feature_5 <= -0.07709580473601818) ? ( 197 ) : ( (Feature_4 <= 0.08374011516571045) ? ( (Feature_4 <= 0.052781177684664726) ? ( (Feature_5 <= 0.003070201084483415) ? ( (Feature_5 <= -0.04264947585761547) ? ( (Feature_7 <= -0.03266667481511831) ? ( (Feature_8 <= 0.010340661276131868) ? ( 204 ) : ( 205 ) ) : ( 206 ) ) : ( (Feature_8 <= 0.1024385578930378) ? ( (Feature_2 <= 0.0034943545470014215) ? ( (Feature_3 <= -0.02288496308028698) ? ( (Feature_6 <= 0.015505359275266528) ? ( 211 ) : ( 212 ) ) : ( (Feature_3 <= 0.01326517853885889) ? ( (Feature_5 <= -0.0201027849689126) ? ( 215 ) : ( (Feature_9 <= 0.0009933561086654663) ? ( 217 ) : ( 218 ) ) ) : ( (Feature_9 <= 0.06519601121544838) ? ( 220 ) : ( 221 ) ) ) ) : ( 222 ) ) : ( 223 ) ) ) : ( (Feature_4 <= 0.0032468754798173904) ? ( (Feature_5 <= 0.00792400212958455) ? ( 226 ) : ( 227 ) ) : ( (Feature_0 <= -0.04002367053180933) ? ( (Feature_2 <= -0.01105610840022564) ? ( (Feature_3 <= -0.03837788291275501) ? ( 231 ) : ( 232 ) ) : ( 233 ) ) : ( (Feature_3 <= 0.0476938858628273) ? ( (Feature_0 <= 0.005383060313761234) ? ( 236 ) : ( 237 ) ) : ( 238 ) ) ) ) ) : ( (Feature_2 <= -0.006744860205799341) ? ( (Feature_0 <= 0.016280675772577524) ? ( 241 ) : ( 242 ) ) : ( (Feature_3 <= -0.04354218835942447) ? ( 244 ) : ( (Feature_6 <= 0.0707299243658781) ? ( (Feature_6 <= 0.03943600505590439) ? ( 247 ) : ( 248 ) ) : ( 249 ) ) ) ) ) : ( (Feature_5 <= 0.07587721757590771) ? ( 251 ) : ( (Feature_2 <= -0.005667048040777445) ? ( 253 ) : ( 254 ) ) ) ) ) : ( (Feature_9 <= -0.030072445049881935) ? ( (Feature_5 <= 0.04362292494624853) ? ( 257 ) : ( 258 ) ) : ( (Feature_7 <= 0.08966054022312164) ? ( (Feature_4 <= 0.04246153309941292) ? ( (Feature_0 <= 0.02354575227946043) ? ( 262 ) : ( 263 ) ) : ( 264 ) ) : ( (Feature_3 <= -0.010834916261956096) ? ( 266 ) : ( 267 ) ) ) ) ) ) ) : ( (Feature_3 <= 0.023593789897859097) ? ( (Feature_8 <= -0.008522996446117759) ? ( (Feature_4 <= -0.027712063863873482) ? ( (Feature_0 <= 0.02354575227946043) ? ( (Feature_6 <= -0.024992656894028187) ? ( 273 ) : ( (Feature_2 <= 0.04499012045562267) ? ( (Feature_5 <= -0.04264947306364775) ? ( 276 ) : ( 277 ) ) : ( 278 ) ) ) : ( 279 ) ) : ( (Feature_5 <= -0.01399638969451189) ? ( (Feature_8 <= -0.024232298135757446) ? ( (Feature_5 <= -0.02589603140950203) ? ( 283 ) : ( 284 ) ) : ( 285 ) ) : ( (Feature_0 <= -0.056370094418525696) ? ( (Feature_3 <= -0.02632783353328705) ? ( 288 ) : ( 289 ) ) : ( (Feature_2 <= 0.035289810970425606) ? ( (Feature_3 <= -0.02977070491760969) ? ( 292 ) : ( 293 ) ) : ( (Feature_2 <= 0.06061839498579502) ? ( (Feature_0 <= 0.001750522293150425) ? ( 296 ) : ( 297 ) ) : ( (Feature_9 <= -0.02593033853918314) ? ( 299 ) : ( 300 ) ) ) ) ) ) ) : ( (Feature_6 <= -0.008425286738201976) ? ( (Feature_8 <= 0.029244658537209034) ? ( (Feature_6 <= -0.01762938080355525) ? ( (Feature_8 <= 0.01250162674114108) ? ( (Feature_3 <= -0.012556351721286774) ? ( (Feature_5 <= 0.023424851708114147) ? ( 307 ) : ( 308 ) ) : ( 309 ) ) : ( (Feature_6 <= -0.045241665095090866) ? ( (Feature_4 <= 0.06791666056960821) ? ( 312 ) : ( 313 ) ) : ( (Feature_0 <= -0.02004470955580473) ? ( 315 ) : ( 316 ) ) ) ) : ( (Feature_3 <= -0.06764228269457817) ? ( 318 ) : ( 319 ) ) ) : ( (Feature_9 <= 0.009277569828554988) ? ( (Feature_2 <= 0.05522933602333069) ? ( (Feature_3 <= -0.022884964011609554) ? ( 323 ) : ( (Feature_3 <= -0.01255635148845613) ? ( 325 ) : ( 326 ) ) ) : ( 327 ) ) : ( (Feature_7 <= 0.09648724645376205) ? ( (Feature_5 <= 0.050825340673327446) ? ( (Feature_4 <= -0.0015689597930759192) ? ( 331 ) : ( (Feature_2 <= 0.0821746326982975) ? ( (Feature_9 <= 0.023774944711476564) ? ( 334 ) : ( (Feature_5 <= -0.0014704521745443344) ? ( 336 ) : ( 337 ) ) ) : ( (Feature_8 <= 0.05233919620513916) ? ( 339 ) : ( 340 ) ) ) ) : ( (Feature_3 <= -0.022311151959002018) ? ( 342 ) : ( 343 ) ) ) : ( (Feature_2 <= 0.053612615913152695) ? ( 345 ) : ( 346 ) ) ) ) ) : ( (Feature_5 <= 0.028591801412403584) ? ( (Feature_8 <= 0.004085330059751868) ? ( 349 ) : ( (Feature_5 <= -0.028088070452213287) ? ( 351 ) : ( 352 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 354 ) : ( 355 ) ) ) ) ) : ( (Feature_2 <= 0.04660683870315552) ? ( (Feature_9 <= 0.03827231749892235) ? ( (Feature_8 <= -0.041075872257351875) ? ( (Feature_9 <= -0.009361911565065384) ? ( 360 ) : ( 361 ) ) : ( (Feature_5 <= 0.04691098630428314) ? ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_4 <= 0.04246153123676777) ? ( (Feature_3 <= 0.05457962676882744) ? ( (Feature_2 <= 0.02774512581527233) ? ( 367 ) : ( (Feature_3 <= 0.04138195514678955) ? ( (Feature_2 <= 0.03960105963051319) ? ( 370 ) : ( 371 ) ) : ( 372 ) ) ) : ( (Feature_5 <= 0.002287329873070121) ? ( (Feature_6 <= -0.041560026817023754) ? ( 375 ) : ( 376 ) ) : ( 377 ) ) ) : ( (Feature_9 <= -0.040427712723612785) ? ( 379 ) : ( (Feature_9 <= -0.01143296476220712) ? ( 381 ) : ( 382 ) ) ) ) : ( (Feature_8 <= 0.053218026645481586) ? ( 384 ) : ( 385 ) ) ) : ( (Feature_2 <= 0.009422321105375886) ? ( 387 ) : ( (Feature_6 <= 0.0063012633472681046) ? ( 389 ) : ( 390 ) ) ) ) ) : ( (Feature_9 <= 0.10454602912068367) ? ( (Feature_9 <= 0.05898285284638405) ? ( (Feature_4 <= -0.02771206432953477) ? ( 394 ) : ( (Feature_5 <= 0.024990592151880264) ? ( 396 ) : ( 397 ) ) ) : ( (Feature_8 <= 0.036687515676021576) ? ( (Feature_8 <= 0.014361049165017903) ? ( 400 ) : ( 401 ) ) : ( 402 ) ) ) : ( 403 ) ) ) : ( (Feature_4 <= 0.019070332869887352) ? ( (Feature_2 <= 0.09941962733864784) ? ( (Feature_0 <= 0.05442233011126518) ? ( (Feature_0 <= 0.02536202222108841) ? ( (Feature_7 <= -0.02104282204527408) ? ( 409 ) : ( (Feature_9 <= 0.03413021075539291) ? ( (Feature_4 <= -0.024960157927125692) ? ( 412 ) : ( 413 ) ) : ( 414 ) ) ) : ( (Feature_4 <= -0.004320865496993065) ? ( 416 ) : ( 417 ) ) ) : ( (Feature_8 <= 0.05283661838620901) ? ( 419 ) : ( 420 ) ) ) : ( (Feature_0 <= 0.02717829030007124) ? ( (Feature_6 <= -0.023151837289333344) ? ( 423 ) : ( 424 ) ) : ( 425 ) ) ) : ( (Feature_3 <= 0.05630106292665005) ? ( (Feature_5 <= 0.05787118058651686) ? ( (Feature_8 <= 0.03480102229514159) ? ( 429 ) : ( (Feature_0 <= 0.02899455977603793) ? ( 431 ) : ( 432 ) ) ) : ( 433 ) ) : ( (Feature_7 <= 0.05275942012667656) ? ( 435 ) : ( (Feature_2 <= 0.0681630801409483) ? ( 437 ) : ( 438 ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_8
	

	namespace EXT_SubModel_9 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {71. }} ,
				{ 7 ,  {78. }} ,
				{ 9 ,  {104. }} ,
				{ 10 ,  {99. }} ,
				{ 16 ,  {104. }} ,
				{ 17 ,  {101. }} ,
				{ 19 ,  {142. }} ,
				{ 20 ,  {137. }} ,
				{ 22 ,  {55. }} ,
				{ 24 ,  {77. }} ,
				{ 26 ,  {83. }} ,
				{ 28 ,  {88. }} ,
				{ 29 ,  {87. }} ,
				{ 33 ,  {200. }} ,
				{ 36 ,  {150. }} ,
				{ 37 ,  {138. }} ,
				{ 39 ,  {114. }} ,
				{ 41 ,  {129. }} ,
				{ 42 ,  {125. }} ,
				{ 45 ,  {178. }} ,
				{ 46 ,  {168. }} ,
				{ 47 ,  {219. }} ,
				{ 49 ,  {77. }} ,
				{ 50 ,  {61. }} ,
				{ 52 ,  {61. }} ,
				{ 53 ,  {44. }} ,
				{ 60 ,  {48. }} ,
				{ 61 ,  {45. }} ,
				{ 62 ,  {60. }} ,
				{ 65 ,  {98. }} ,
				{ 66 ,  {90. }} ,
				{ 67 ,  {65. }} ,
				{ 69 ,  {39. }} ,
				{ 70 ,  {25. }} ,
				{ 74 ,  {77. }} ,
				{ 75 ,  {103. }} ,
				{ 77 ,  {160. }} ,
				{ 78 ,  {200. }} ,
				{ 82 ,  {75. }} ,
				{ 84 ,  {158. }} ,
				{ 85 ,  {179. }} ,
				{ 88 ,  {96. }} ,
				{ 90 ,  {128. }} ,
				{ 91 ,  {135. }} ,
				{ 94 ,  {51. }} ,
				{ 96 ,  {48. }} ,
				{ 97 ,  {49. }} ,
				{ 101 ,  {79. }} ,
				{ 104 ,  {68. }} ,
				{ 105 ,  {72. }} ,
				{ 106 ,  {64. }} ,
				{ 108 ,  {52. }} ,
				{ 112 ,  {96. }} ,
				{ 113 ,  {97. }} ,
				{ 114 ,  {113. }} ,
				{ 117 ,  {87. }} ,
				{ 118 ,  {90. }} ,
				{ 120 ,  {81. }} ,
				{ 121 ,  {84. }} ,
				{ 123 ,  {49. }} ,
				{ 124 ,  {59. }} ,
				{ 128 ,  {47. }} ,
				{ 131 ,  {54. }} ,
				{ 132 ,  {55. }} ,
				{ 133 ,  {53. }} ,
				{ 134 ,  {71. }} ,
				{ 138 ,  {91. }} ,
				{ 139 ,  {83. }} ,
				{ 141 ,  {97. }} ,
				{ 142 ,  {108. }} ,
				{ 144 ,  {63. }} ,
				{ 145 ,  {71. }} ,
				{ 148 ,  {89. }} ,
				{ 149 ,  {104. }} ,
				{ 152 ,  {177. }} ,
				{ 153 ,  {158. }} ,
				{ 154 ,  {135. }} ,
				{ 161 ,  {190. }} ,
				{ 162 ,  {168. }} ,
				{ 164 ,  {131. }} ,
				{ 166 ,  {109. }} ,
				{ 168 ,  {92. }} ,
				{ 169 ,  {78. }} ,
				{ 171 ,  {156. }} ,
				{ 173 ,  {258. }} ,
				{ 174 ,  {252. }} ,
				{ 177 ,  {162. }} ,
				{ 180 ,  {94. }} ,
				{ 181 ,  {153. }} ,
				{ 185 ,  {94. }} ,
				{ 187 ,  {86. }} ,
				{ 189 ,  {88. }} ,
				{ 190 ,  {90. }} ,
				{ 193 ,  {93. }} ,
				{ 194 ,  {84. }} ,
				{ 197 ,  {74. }} ,
				{ 198 ,  {73. }} ,
				{ 199 ,  {69. }} ,
				{ 200 ,  {58. }} ,
				{ 201 ,  {206. }} ,
				{ 205 ,  {101. }} ,
				{ 206 ,  {91. }} ,
				{ 207 ,  {126. }} ,
				{ 210 ,  {292. }} ,
				{ 213 ,  {214. }} ,
				{ 215 ,  {206. }} ,
				{ 216 ,  {209. }} ,
				{ 217 ,  {245. }} ,
				{ 220 ,  {107. }} ,
				{ 222 ,  {131. }} ,
				{ 223 ,  {123. }} ,
				{ 225 ,  {115. }} ,
				{ 227 ,  {230. }} ,
				{ 228 ,  {229. }} ,
				{ 232 ,  {252. }} ,
				{ 233 ,  {257. }} ,
				{ 234 ,  {283. }} ,
				{ 238 ,  {217. }} ,
				{ 240 ,  {185. }} ,
				{ 242 ,  {191. }} ,
				{ 243 ,  {190. }} ,
				{ 246 ,  {120. }} ,
				{ 247 ,  {129. }} ,
				{ 248 ,  {171. }} ,
				{ 250 ,  {281. }} ,
				{ 251 ,  {241. }} ,
				{ 258 ,  {67. }} ,
				{ 260 ,  {210. }} ,
				{ 261 ,  {187. }} ,
				{ 265 ,  {103. }} ,
				{ 266 ,  {95. }} ,
				{ 267 ,  {137. }} ,
				{ 269 ,  {52. }} ,
				{ 271 ,  {78. }} ,
				{ 272 ,  {68. }} ,
				{ 275 ,  {276. }} ,
				{ 277 ,  {192. }} ,
				{ 278 ,  {180. }} ,
				{ 283 ,  {167. }} ,
				{ 284 ,  {182. }} ,
				{ 286 ,  {151. }} ,
				{ 287 ,  {145. }} ,
				{ 291 ,  {111. }} ,
				{ 292 ,  {110. }} ,
				{ 293 ,  {90. }} ,
				{ 297 ,  {147. }} ,
				{ 299 ,  {144. }} ,
				{ 300 ,  {141. }} ,
				{ 301 ,  {173. }} ,
				{ 304 ,  {121. }} ,
				{ 305 ,  {122. }} ,
				{ 306 ,  {131. }} ,
				{ 308 ,  {220. }} ,
				{ 309 ,  {225. }} ,
				{ 311 ,  {268. }} ,
				{ 312 ,  {317. }} ,
				{ 316 ,  {118. }} ,
				{ 320 ,  {232. }} ,
				{ 321 ,  {202. }} ,
				{ 322 ,  {151. }} ,
				{ 328 ,  {293. }} ,
				{ 329 ,  {288. }} ,
				{ 331 ,  {277. }} ,
				{ 332 ,  {281. }} ,
				{ 337 ,  {281. }} ,
				{ 338 ,  {280. }} ,
				{ 340 ,  {277. }} ,
				{ 341 ,  {273. }} ,
				{ 342 ,  {263. }} ,
				{ 344 ,  {243. }} ,
				{ 345 ,  {246. }} ,
				{ 349 ,  {235. }} ,
				{ 350 ,  {244. }} ,
				{ 352 ,  {311. }} ,
				{ 355 ,  {259. }} ,
				{ 356 ,  {265. }} ,
				{ 357 ,  {275. }} ,
				{ 359 ,  {195. }} ,
				{ 362 ,  {235. }} ,
				{ 364 ,  {232. }} ,
				{ 365 ,  {230. }} ,
				{ 366 ,  {220. }} ,
				{ 367 ,  {131. }} ,
				{ 372 ,  {122. }} ,
				{ 373 ,  {138. }} ,
				{ 374 ,  {67. }} ,
				{ 375 ,  {186. }} ,
				{ 377 ,  {212. }} ,
				{ 380 ,  {248. }} ,
				{ 381 ,  {249. }} ,
				{ 382 ,  {258. }} ,
				{ 386 ,  {191. }} ,
				{ 389 ,  {121. }} ,
				{ 390 ,  {113. }} ,
				{ 391 ,  {143. }} ,
				{ 393 ,  {202. }} ,
				{ 396 ,  {182. }} ,
				{ 397 ,  {175. }} ,
				{ 398 ,  {166. }} ,
				{ 399 ,  {283. }} ,
				{ 401 ,  {346. }} ,
				{ 405 ,  {321. }} ,
				{ 408 ,  {263. }} ,
				{ 411 ,  {275. }} ,
				{ 412 ,  {274. }} ,
				{ 413 ,  {270. }} ,
				{ 414 ,  {257. }} ,
				{ 416 ,  {310. }} ,
				{ 417 ,  {308. }} ,
				{ 419 ,  {128. }} ,
				{ 422 ,  {180. }} ,
				{ 424 ,  {233. }} ,
				{ 425 ,  {242. }} ,
				{ 427 ,  {306. }} ,
				{ 428 ,  {264. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_2 <= 0.005111072678118944) ? ( (Feature_8 <= -0.009431487880647182) ? ( (Feature_4 <= -0.03803171031177044) ? ( (Feature_8 <= -0.07611488923430443) ? ( (Feature_9 <= -0.061138248071074486) ? ( (Feature_6 <= -0.002902830019593239) ? ( 6 ) : ( 7 ) ) : ( (Feature_8 <= -0.11001651361584663) ? ( 9 ) : ( 10 ) ) ) : ( (Feature_2 <= -0.007283766055479646) ? ( (Feature_2 <= -0.048779530450701714) ? ( (Feature_2 <= -0.07033577188849449) ? ( (Feature_2 <= -0.07841936126351357) ? ( (Feature_2 <= -0.08650295436382294) ? ( 16 ) : ( 17 ) ) : ( (Feature_3 <= -0.04182075243443251) ? ( 19 ) : ( 20 ) ) ) : ( (Feature_2 <= -0.0671023353934288) ? ( 22 ) : ( (Feature_2 <= -0.06225218065083027) ? ( 24 ) : ( (Feature_0 <= -0.02004470833344385) ? ( 26 ) : ( (Feature_3 <= -0.02288496377877891) ? ( 28 ) : ( 29 ) ) ) ) ) ) : ( (Feature_7 <= -0.011817541904747486) ? ( (Feature_3 <= -0.010834916261956096) ? ( (Feature_8 <= -0.06850090995430946) ? ( 33 ) : ( (Feature_0 <= -0.036391131579875946) ? ( (Feature_1 <= 0.003019241616129875) ? ( 36 ) : ( 37 ) ) : ( (Feature_5 <= -0.07850497215986252) ? ( 39 ) : ( (Feature_6 <= -0.0010620104148983955) ? ( 41 ) : ( 42 ) ) ) ) ) : ( (Feature_6 <= 0.0007788079092279077) ? ( (Feature_4 <= -0.07105458155274391) ? ( 45 ) : ( 46 ) ) : ( 47 ) ) ) : ( (Feature_6 <= -0.06733148917555809) ? ( 49 ) : ( 50 ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 52 ) : ( 53 ) ) ) ) : ( (Feature_9 <= 0.04241442494094372) ? ( (Feature_5 <= -0.028244645334780216) ? ( (Feature_2 <= -0.01806188654154539) ? ( (Feature_0 <= -0.029126054607331753) ? ( (Feature_8 <= -0.040186820551753044) ? ( (Feature_9 <= -0.0217882317956537) ? ( 60 ) : ( 61 ) ) : ( 62 ) ) : ( (Feature_5 <= -0.032159000635147095) ? ( (Feature_5 <= -0.03967456333339214) ? ( 65 ) : ( 66 ) ) : ( 67 ) ) ) : ( (Feature_3 <= -0.028049269341863692) ? ( 69 ) : ( 70 ) ) ) : ( (Feature_5 <= -0.023077694699168205) ? ( (Feature_2 <= -0.03584578540176153) ? ( (Feature_4 <= 0.005310804583132267) ? ( 74 ) : ( 75 ) ) : ( (Feature_2 <= -0.027223289012908936) ? ( 77 ) : ( 78 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_4 <= -0.0036328891292214394) ? ( (Feature_8 <= -0.05760461278259754) ? ( 82 ) : ( (Feature_3 <= -0.03837788384407759) ? ( 84 ) : ( 85 ) ) ) : ( (Feature_6 <= 0.009982902556657791) ? ( (Feature_3 <= -0.06534703448414803) ? ( 88 ) : ( (Feature_6 <= -0.0029028295539319515) ? ( 90 ) : ( 91 ) ) ) : ( (Feature_2 <= -0.0692579597234726) ? ( (Feature_9 <= -0.04249876644462347) ? ( 94 ) : ( (Feature_0 <= -6.574729923158884e-05) ? ( 96 ) : ( 97 ) ) ) : ( (Feature_2 <= 0.000260918284766376) ? ( (Feature_6 <= 0.04679927974939346) ? ( (Feature_6 <= 0.01734617818146944) ? ( 101 ) : ( (Feature_4 <= 0.02251021580741508) ? ( (Feature_4 <= -0.0015689598585595377) ? ( 104 ) : ( 105 ) ) : ( 106 ) ) ) : ( (Feature_8 <= -0.059285517781972885) ? ( 108 ) : ( (Feature_6 <= 0.06704828888177872) ? ( (Feature_2 <= -0.010517202783375978) ? ( (Feature_3 <= -0.07797089405357838) ? ( 112 ) : ( 113 ) ) : ( 114 ) ) : ( (Feature_9 <= -0.03421455156058073) ? ( (Feature_2 <= -0.024528760462999344) ? ( 117 ) : ( 118 ) ) : ( (Feature_5 <= 0.05520941875874996) ? ( 120 ) : ( 121 ) ) ) ) ) ) : ( (Feature_6 <= 0.048640099354088306) ? ( 123 ) : ( 124 ) ) ) ) ) ) : ( (Feature_0 <= 0.030810829252004623) ? ( (Feature_4 <= 0.010814615990966558) ? ( (Feature_4 <= -0.032527899369597435) ? ( 128 ) : ( (Feature_9 <= -0.011432964820414782) ? ( (Feature_2 <= -0.032073444686830044) ? ( 131 ) : ( 132 ) ) : ( 133 ) ) ) : ( 134 ) ) : ( (Feature_3 <= 0.0603177435696125) ? ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_9 <= -0.03007244545733556) ? ( 138 ) : ( 139 ) ) : ( (Feature_3 <= 0.020150919444859028) ? ( 141 ) : ( 142 ) ) ) : ( (Feature_9 <= 0.007206516107544303) ? ( 144 ) : ( 145 ) ) ) ) ) ) ) : ( (Feature_8 <= -0.03138820454478264) ? ( (Feature_6 <= -0.026833474170416594) ? ( 148 ) : ( 149 ) ) : ( (Feature_8 <= -0.02268617320805788) ? ( (Feature_5 <= 0.03829940315335989) ? ( 152 ) : ( 153 ) ) : ( 154 ) ) ) ) ) : ( (Feature_3 <= 0.039086708799004555) ? ( (Feature_7 <= 0.03135676868259907) ? ( (Feature_9 <= -0.046640872955322266) ? ( (Feature_7 <= -0.006282373913563788) ? ( (Feature_0 <= -0.012779632292222232) ? ( (Feature_9 <= -0.07149351574480534) ? ( 161 ) : ( 162 ) ) : ( (Feature_3 <= -0.06821609474718571) ? ( 164 ) : ( (Feature_9 <= -0.08184878155589104) ? ( 166 ) : ( (Feature_0 <= 0.021729482628870755) ? ( 168 ) : ( 169 ) ) ) ) ) : ( (Feature_6 <= -0.05812739580869675) ? ( 171 ) : ( (Feature_0 <= -0.027309786062687635) ? ( 173 ) : ( 174 ) ) ) ) : ( (Feature_9 <= 0.08383549377322197) ? ( (Feature_3 <= -0.07797089591622353) ? ( 177 ) : ( (Feature_2 <= -0.06225218251347542) ? ( (Feature_9 <= 0.005135462852194905) ? ( 180 ) : ( 181 ) ) : ( (Feature_7 <= 0.024161050096154213) ? ( (Feature_5 <= -0.007733421050943434) ? ( (Feature_6 <= -0.01578856213018298) ? ( 185 ) : ( (Feature_2 <= -0.0520129669457674) ? ( 187 ) : ( (Feature_8 <= 0.04680521436966956) ? ( 189 ) : ( 190 ) ) ) ) : ( (Feature_3 <= -0.01772065833210945) ? ( (Feature_9 <= -0.005219803191721439) ? ( 193 ) : ( 194 ) ) : ( (Feature_7 <= -0.009049958200193942) ? ( (Feature_5 <= 0.014186970773153007) ? ( 197 ) : ( 198 ) ) : ( 199 ) ) ) ) : ( 200 ) ) ) ) : ( 201 ) ) ) : ( (Feature_6 <= -0.05812739580869675) ? ( (Feature_2 <= -0.011595014715567231) ? ( (Feature_4 <= 0.00943866278976202) ? ( 205 ) : ( 206 ) ) : ( 207 ) ) : ( (Feature_9 <= -0.003148751042317599) ? ( (Feature_4 <= -0.01188860647380352) ? ( 210 ) : ( (Feature_0 <= 0.0035667908377945423) ? ( (Feature_3 <= -0.03837788291275501) ? ( 213 ) : ( (Feature_5 <= 0.03109698835760355) ? ( 215 ) : ( 216 ) ) ) : ( 217 ) ) ) : ( (Feature_5 <= 0.027652355143800378) ? ( (Feature_9 <= 0.013419677095953375) ? ( 220 ) : ( (Feature_9 <= 0.054840744473040104) ? ( 222 ) : ( 223 ) ) ) : ( (Feature_3 <= -0.045263623585924506) ? ( 225 ) : ( (Feature_2 <= -0.001894705812446773) ? ( 227 ) : ( 228 ) ) ) ) ) ) ) : ( (Feature_4 <= -0.02702408842742443) ? ( (Feature_0 <= 0.050789790228009224) ? ( (Feature_3 <= 0.05113675631582737) ? ( 232 ) : ( 233 ) ) : ( 234 ) ) : ( (Feature_0 <= 0.05442233011126518) ? ( (Feature_7 <= 0.03357083536684513) ? ( (Feature_9 <= 0.03827231843024492) ? ( 238 ) : ( (Feature_8 <= 0.020146084018051624) ? ( 240 ) : ( (Feature_5 <= 0.009802890941500664) ? ( 242 ) : ( 243 ) ) ) ) : ( (Feature_4 <= 0.07342046871781349) ? ( (Feature_3 <= 0.056874874979257584) ? ( 246 ) : ( 247 ) ) : ( 248 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 250 ) : ( 251 ) ) ) ) ) ) : ( (Feature_2 <= 0.07301323488354683) ? ( (Feature_3 <= 0.004658001358620822) ? ( (Feature_9 <= 0.11697235330939293) ? ( (Feature_0 <= -0.025493516586720943) ? ( (Feature_5 <= -0.03967456333339214) ? ( (Feature_8 <= -0.04470318183302879) ? ( 258 ) : ( (Feature_9 <= -0.023859285982325673) ? ( 260 ) : ( 261 ) ) ) : ( (Feature_9 <= -0.036285605281591415) ? ( (Feature_4 <= 0.025950098410248756) ? ( (Feature_0 <= -0.05092128552496433) ? ( 265 ) : ( 266 ) ) : ( 267 ) ) : ( (Feature_5 <= -0.026835476979613304) ? ( 269 ) : ( (Feature_8 <= 0.029869661026168615) ? ( 271 ) : ( 272 ) ) ) ) ) : ( (Feature_3 <= -0.05673985928297043) ? ( (Feature_7 <= -0.001669732853770256) ? ( 275 ) : ( (Feature_0 <= 0.047157254128251225) ? ( 277 ) : ( 278 ) ) ) : ( (Feature_8 <= 0.06395359896123409) ? ( (Feature_4 <= -0.024272182025015354) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_6 <= -0.032355932518839836) ? ( 283 ) : ( 284 ) ) : ( (Feature_2 <= 0.019122629426419735) ? ( 286 ) : ( 287 ) ) ) : ( (Feature_4 <= -0.01188860647380352) ? ( (Feature_0 <= 0.05442232824862003) ? ( (Feature_6 <= -0.03787838947027922) ? ( 291 ) : ( 292 ) ) : ( 293 ) ) : ( (Feature_5 <= 0.06836165674030781) ? ( (Feature_4 <= 0.027326049283146858) ? ( (Feature_0 <= 0.001750522293150425) ? ( 297 ) : ( (Feature_8 <= -0.04706958867609501) ? ( 299 ) : ( 300 ) ) ) : ( 301 ) ) : ( (Feature_3 <= -0.0050967987626791) ? ( (Feature_6 <= -0.021311018615961075) ? ( 304 ) : ( 305 ) ) : ( 306 ) ) ) ) ) : ( (Feature_2 <= 0.02073934767395258) ? ( 308 ) : ( 309 ) ) ) ) ) : ( (Feature_7 <= 0.11918143928050995) ? ( 311 ) : ( 312 ) ) ) : ( (Feature_6 <= 0.021027816459536552) ? ( (Feature_5 <= 0.04487552121281624) ? ( (Feature_8 <= -0.030188716016709805) ? ( 316 ) : ( (Feature_4 <= -0.03596778027713299) ? ( (Feature_2 <= 0.053612615913152695) ? ( (Feature_6 <= -0.028674292843788862) ? ( 320 ) : ( 321 ) ) : ( 322 ) ) : ( (Feature_2 <= 0.07139651849865913) ? ( (Feature_5 <= 0.0013478844775818288) ? ( (Feature_4 <= -0.02496015839278698) ? ( (Feature_8 <= -0.008594603161327541) ? ( (Feature_0 <= 0.0035667913034558296) ? ( 328 ) : ( 329 ) ) : ( (Feature_2 <= 0.03421199810691178) ? ( 331 ) : ( 332 ) ) ) : ( (Feature_6 <= -0.004743648809380829) ? ( (Feature_5 <= -0.006011104385834187) ? ( (Feature_7 <= 0.015858298051171005) ? ( (Feature_8 <= 0.01517655048519373) ? ( 337 ) : ( 338 ) ) : ( (Feature_7 <= 0.05275942012667656) ? ( 340 ) : ( 341 ) ) ) : ( 342 ) ) : ( (Feature_6 <= 0.0026196270482614636) ? ( 344 ) : ( 345 ) ) ) ) : ( (Feature_8 <= 0.03598655201494694) ? ( (Feature_8 <= 0.012129560112953186) ? ( (Feature_9 <= -0.023859286215156317) ? ( 349 ) : ( 350 ) ) : ( (Feature_2 <= 0.012116851517930627) ? ( 352 ) : ( (Feature_5 <= 0.015596139244735241) ? ( (Feature_5 <= 0.007610853994265199) ? ( 355 ) : ( 356 ) ) : ( 357 ) ) ) ) : ( (Feature_9 <= -0.009361911041196436) ? ( 359 ) : ( (Feature_9 <= 0.08383549563586712) ? ( (Feature_9 <= 0.009277569653932005) ? ( 362 ) : ( (Feature_9 <= 0.04034337121993303) ? ( 364 ) : ( 365 ) ) ) : ( 366 ) ) ) ) ) : ( 367 ) ) ) ) : ( (Feature_8 <= 0.043136537075042725) ? ( (Feature_2 <= 0.04283449426293373) ? ( (Feature_4 <= 0.07204451784491539) ? ( (Feature_3 <= 0.03564383741468191) ? ( 372 ) : ( 373 ) ) : ( 374 ) ) : ( 375 ) ) : ( (Feature_4 <= 0.04658939130604267) ? ( 377 ) : ( (Feature_2 <= 0.041756683960556984) ? ( (Feature_4 <= 0.06585272960364819) ? ( 380 ) : ( 381 ) ) : ( 382 ) ) ) ) ) : ( (Feature_4 <= 0.09818762168288231) ? ( (Feature_2 <= 0.024511689320206642) ? ( (Feature_9 <= -0.0362856057472527) ? ( 386 ) : ( (Feature_8 <= 0.004697433672845364) ? ( (Feature_4 <= -0.015328488079831004) ? ( 389 ) : ( 390 ) ) : ( 391 ) ) ) : ( (Feature_6 <= 0.039436004124581814) ? ( 393 ) : ( (Feature_0 <= -0.01459590089507401) ? ( (Feature_6 <= 0.06152583099901676) ? ( 396 ) : ( 397 ) ) : ( 398 ) ) ) ) : ( 399 ) ) ) ) : ( (Feature_3 <= -0.04411599971354008) ? ( 401 ) : ( (Feature_5 <= 0.022485405206680298) ? ( (Feature_4 <= 0.006686757318675518) ? ( (Feature_4 <= -0.03527980484068394) ? ( 405 ) : ( (Feature_5 <= 0.00792400212958455) ? ( (Feature_5 <= -0.027931496500968933) ? ( 408 ) : ( (Feature_2 <= 0.10103634744882584) ? ( (Feature_6 <= -0.010266105411574244) ? ( 411 ) : ( 412 ) ) : ( 413 ) ) ) : ( 414 ) ) ) : ( (Feature_3 <= 0.09245120361447334) ? ( 416 ) : ( 417 ) ) ) : ( (Feature_5 <= 0.02765235584229231) ? ( 419 ) : ( (Feature_9 <= 0.05069863796234131) ? ( (Feature_8 <= 0.03304501995444298) ? ( 422 ) : ( (Feature_0 <= -0.02730978513136506) ? ( 424 ) : ( 425 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 427 ) : ( 428 ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_9
	

	namespace EXT_SubModel_10 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 9 ,  {88. }} ,
				{ 10 ,  {40. }} ,
				{ 13 ,  {137. }} ,
				{ 15 ,  {142. }} ,
				{ 16 ,  {143. }} ,
				{ 17 ,  {178. }} ,
				{ 22 ,  {85. }} ,
				{ 24 ,  {63. }} ,
				{ 25 ,  {65. }} ,
				{ 28 ,  {55. }} ,
				{ 30 ,  {65. }} ,
				{ 31 ,  {60. }} ,
				{ 34 ,  {53. }} ,
				{ 35 ,  {48. }} ,
				{ 36 ,  {42. }} ,
				{ 39 ,  {96. }} ,
				{ 40 ,  {72. }} ,
				{ 41 ,  {158. }} ,
				{ 46 ,  {114. }} ,
				{ 47 ,  {101. }} ,
				{ 50 ,  {78. }} ,
				{ 52 ,  {87. }} ,
				{ 53 ,  {90. }} ,
				{ 54 ,  {68. }} ,
				{ 56 ,  {116. }} ,
				{ 58 ,  {127. }} ,
				{ 59 ,  {135. }} ,
				{ 63 ,  {75. }} ,
				{ 64 ,  {77. }} ,
				{ 68 ,  {51. }} ,
				{ 69 ,  {55. }} ,
				{ 71 ,  {48. }} ,
				{ 72 ,  {47. }} ,
				{ 73 ,  {39. }} ,
				{ 76 ,  {79. }} ,
				{ 78 ,  {72. }} ,
				{ 79 ,  {71. }} ,
				{ 81 ,  {96. }} ,
				{ 82 ,  {102. }} ,
				{ 84 ,  {200. }} ,
				{ 90 ,  {71. }} ,
				{ 92 ,  {61. }} ,
				{ 93 ,  {64. }} ,
				{ 94 ,  {53. }} ,
				{ 96 ,  {77. }} ,
				{ 97 ,  {83. }} ,
				{ 100 ,  {104. }} ,
				{ 102 ,  {97. }} ,
				{ 103 ,  {89. }} ,
				{ 104 ,  {146. }} ,
				{ 107 ,  {219. }} ,
				{ 108 ,  {168. }} ,
				{ 115 ,  {90. }} ,
				{ 118 ,  {125. }} ,
				{ 119 ,  {118. }} ,
				{ 121 ,  {98. }} ,
				{ 122 ,  {104. }} ,
				{ 125 ,  {135. }} ,
				{ 126 ,  {144. }} ,
				{ 127 ,  {118. }} ,
				{ 129 ,  {160. }} ,
				{ 130 ,  {179. }} ,
				{ 133 ,  {94. }} ,
				{ 135 ,  {88. }} ,
				{ 136 ,  {84. }} ,
				{ 137 ,  {25. }} ,
				{ 139 ,  {160. }} ,
				{ 140 ,  {200. }} ,
				{ 142 ,  {108. }} ,
				{ 144 ,  {65. }} ,
				{ 145 ,  {53. }} ,
				{ 149 ,  {68. }} ,
				{ 152 ,  {61. }} ,
				{ 153 ,  {60. }} ,
				{ 154 ,  {59. }} ,
				{ 156 ,  {31. }} ,
				{ 158 ,  {39. }} ,
				{ 159 ,  {44. }} ,
				{ 160 ,  {177. }} ,
				{ 161 ,  {216. }} ,
				{ 162 ,  {253. }} ,
				{ 167 ,  {210. }} ,
				{ 168 ,  {200. }} ,
				{ 171 ,  {170. }} ,
				{ 172 ,  {182. }} ,
				{ 173 ,  {145. }} ,
				{ 175 ,  {288. }} ,
				{ 177 ,  {244. }} ,
				{ 178 ,  {257. }} ,
				{ 183 ,  {184. }} ,
				{ 184 ,  {187. }} ,
				{ 185 ,  {172. }} ,
				{ 189 ,  {90. }} ,
				{ 190 ,  {95. }} ,
				{ 191 ,  {121. }} ,
				{ 193 ,  {175. }} ,
				{ 195 ,  {131. }} ,
				{ 197 ,  {147. }} ,
				{ 198 ,  {141. }} ,
				{ 201 ,  {113. }} ,
				{ 202 ,  {103. }} ,
				{ 204 ,  {60. }} ,
				{ 205 ,  {59. }} ,
				{ 216 ,  {178. }} ,
				{ 218 ,  {167. }} ,
				{ 219 ,  {162. }} ,
				{ 220 ,  {144. }} ,
				{ 222 ,  {192. }} ,
				{ 224 ,  {202. }} ,
				{ 225 ,  {214. }} ,
				{ 228 ,  {52. }} ,
				{ 232 ,  {101. }} ,
				{ 233 ,  {107. }} ,
				{ 234 ,  {93. }} ,
				{ 235 ,  {123. }} ,
				{ 239 ,  {150. }} ,
				{ 240 ,  {161. }} ,
				{ 242 ,  {209. }} ,
				{ 243 ,  {196. }} ,
				{ 245 ,  {111. }} ,
				{ 246 ,  {100. }} ,
				{ 251 ,  {190. }} ,
				{ 252 ,  {185. }} ,
				{ 254 ,  {168. }} ,
				{ 255 ,  {92. }} ,
				{ 256 ,  {99. }} ,
				{ 261 ,  {90. }} ,
				{ 262 ,  {94. }} ,
				{ 264 ,  {86. }} ,
				{ 266 ,  {85. }} ,
				{ 267 ,  {84. }} ,
				{ 268 ,  {74. }} ,
				{ 269 ,  {153. }} ,
				{ 270 ,  {302. }} ,
				{ 276 ,  {131. }} ,
				{ 277 ,  {102. }} ,
				{ 280 ,  {156. }} ,
				{ 281 ,  {154. }} ,
				{ 282 ,  {168. }} ,
				{ 285 ,  {206. }} ,
				{ 286 ,  {214. }} ,
				{ 287 ,  {172. }} ,
				{ 290 ,  {91. }} ,
				{ 291 ,  {90. }} ,
				{ 294 ,  {134. }} ,
				{ 295 ,  {120. }} ,
				{ 296 ,  {170. }} ,
				{ 300 ,  {151. }} ,
				{ 301 ,  {198. }} ,
				{ 307 ,  {242. }} ,
				{ 308 ,  {245. }} ,
				{ 309 ,  {235. }} ,
				{ 310 ,  {259. }} ,
				{ 312 ,  {220. }} ,
				{ 313 ,  {212. }} ,
				{ 316 ,  {265. }} ,
				{ 317 ,  {277. }} ,
				{ 318 ,  {311. }} ,
				{ 322 ,  {232. }} ,
				{ 323 ,  {225. }} ,
				{ 325 ,  {198. }} ,
				{ 326 ,  {202. }} ,
				{ 330 ,  {180. }} ,
				{ 332 ,  {174. }} ,
				{ 333 ,  {173. }} ,
				{ 334 ,  {164. }} ,
				{ 336 ,  {122. }} ,
				{ 337 ,  {150. }} ,
				{ 339 ,  {142. }} ,
				{ 342 ,  {95. }} ,
				{ 345 ,  {84. }} ,
				{ 346 ,  {78. }} ,
				{ 347 ,  {67. }} ,
				{ 348 ,  {131. }} ,
				{ 353 ,  {257. }} ,
				{ 354 ,  {248. }} ,
				{ 358 ,  {124. }} ,
				{ 359 ,  {129. }} ,
				{ 360 ,  {163. }} ,
				{ 364 ,  {202. }} ,
				{ 366 ,  {178. }} ,
				{ 368 ,  {191. }} ,
				{ 369 ,  {185. }} ,
				{ 370 ,  {232. }} ,
				{ 373 ,  {166. }} ,
				{ 375 ,  {155. }} ,
				{ 376 ,  {144. }} ,
				{ 378 ,  {222. }} ,
				{ 380 ,  {171. }} ,
				{ 381 ,  {190. }} ,
				{ 384 ,  {270. }} ,
				{ 385 ,  {280. }} ,
				{ 386 ,  {217. }} ,
				{ 391 ,  {248. }} ,
				{ 392 ,  {236. }} ,
				{ 394 ,  {208. }} ,
				{ 395 ,  {197. }} ,
				{ 397 ,  {273. }} ,
				{ 399 ,  {230. }} ,
				{ 402 ,  {246. }} ,
				{ 403 ,  {248. }} ,
				{ 404 ,  {241. }} ,
				{ 405 ,  {283. }} ,
				{ 408 ,  {151. }} ,
				{ 409 ,  {121. }} ,
				{ 413 ,  {346. }} ,
				{ 415 ,  {321. }} ,
				{ 417 ,  {332. }} ,
				{ 418 ,  {336. }} ,
				{ 421 ,  {275. }} ,
				{ 423 ,  {272. }} ,
				{ 424 ,  {270. }} ,
				{ 425 ,  {303. }} ,
				{ 429 ,  {180. }} ,
				{ 432 ,  {215. }} ,
				{ 433 ,  {220. }} ,
				{ 434 ,  {242. }} ,
				{ 435 ,  {268. }} ,
				{ 438 ,  {308. }} ,
				{ 441 ,  {242. }} ,
				{ 442 ,  {243. }} ,
				{ 444 ,  {277. }} ,
				{ 446 ,  {261. }} ,
				{ 447 ,  {264. }} ,
				{ 448 ,  {310. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_8 <= -0.009431487880647182) ? ( (Feature_2 <= 0.0013387303915806115) ? ( (Feature_5 <= 0.10531317442655563) ? ( (Feature_3 <= 0.09933694079518318) ? ( (Feature_2 <= -0.009978296235203743) ? ( (Feature_2 <= -0.0374625027179718) ? ( (Feature_4 <= -0.07518243789672852) ? ( (Feature_4 <= -0.09306982532143593) ? ( (Feature_6 <= -0.03787838947027922) ? ( 9 ) : ( 10 ) ) : ( (Feature_3 <= -0.015999222872778773) ? ( (Feature_0 <= -0.09269547834992409) ? ( 13 ) : ( (Feature_3 <= -0.04182075243443251) ? ( 15 ) : ( 16 ) ) ) : ( 17 ) ) ) : ( (Feature_3 <= -0.04870649427175522) ? ( (Feature_4 <= -0.021520276553928852) ? ( (Feature_8 <= -0.06383237056434155) ? ( (Feature_4 <= -0.060046955943107605) ? ( 22 ) : ( (Feature_8 <= -0.07873330265283585) ? ( 24 ) : ( 25 ) ) ) : ( (Feature_5 <= -0.04797299765050411) ? ( (Feature_2 <= -0.06548561900854111) ? ( 28 ) : ( (Feature_9 <= -0.036285606445744634) ? ( 30 ) : ( 31 ) ) ) : ( (Feature_9 <= 0.011348623782396317) ? ( (Feature_3 <= -0.06247797608375549) ? ( 34 ) : ( 35 ) ) : ( 36 ) ) ) ) : ( (Feature_3 <= -0.06821609660983086) ? ( (Feature_4 <= -0.0015689598585595377) ? ( 39 ) : ( 40 ) ) : ( 41 ) ) ) : ( (Feature_5 <= -0.02558288350701332) ? ( (Feature_5 <= -0.032941872254014015) ? ( (Feature_4 <= -0.060046957805752754) ? ( (Feature_3 <= -0.019442092394456267) ? ( 46 ) : ( 47 ) ) : ( (Feature_8 <= -0.015009476337581873) ? ( (Feature_4 <= -0.046287428587675095) ? ( 50 ) : ( (Feature_5 <= -0.062064679339528084) ? ( 52 ) : ( 53 ) ) ) : ( 54 ) ) ) : ( (Feature_5 <= -0.030906406231224537) ? ( 56 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 58 ) : ( 59 ) ) ) ) : ( (Feature_5 <= -0.007263698382303119) ? ( (Feature_5 <= -0.018850191496312618) ? ( (Feature_8 <= -0.05406966991722584) ? ( 63 ) : ( 64 ) ) : ( (Feature_5 <= -0.008516292087733746) ? ( (Feature_2 <= -0.07249139621853828) ? ( (Feature_5 <= -0.016814726404845715) ? ( 68 ) : ( 69 ) ) : ( (Feature_2 <= -0.05794093385338783) ? ( 71 ) : ( 72 ) ) ) : ( 73 ) ) ) : ( (Feature_6 <= 0.05048091895878315) ? ( (Feature_5 <= 0.009646318503655493) ? ( 76 ) : ( (Feature_0 <= 0.009015598334372044) ? ( 78 ) : ( 79 ) ) ) : ( (Feature_9 <= -0.011432964354753494) ? ( 81 ) : ( 82 ) ) ) ) ) ) ) : ( (Feature_3 <= -0.07108515501022339) ? ( 84 ) : ( (Feature_6 <= -0.012106924317777157) ? ( (Feature_4 <= -0.011200630106031895) ? ( (Feature_0 <= 0.030810829252004623) ? ( (Feature_0 <= 0.005383060779422522) ? ( (Feature_9 <= -0.054925085976719856) ? ( 90 ) : ( (Feature_6 <= -0.03787838853895664) ? ( 92 ) : ( 93 ) ) ) : ( 94 ) ) : ( (Feature_2 <= -0.015906263142824173) ? ( 96 ) : ( 97 ) ) ) : ( (Feature_3 <= -0.008539669499441516) ? ( (Feature_0 <= 0.018096944084390998) ? ( 100 ) : ( (Feature_7 <= 0.03947501693619415) ? ( 102 ) : ( 103 ) ) ) : ( 104 ) ) ) : ( (Feature_4 <= -0.060046955943107605) ? ( (Feature_2 <= -0.014828450977802277) ? ( 107 ) : ( 108 ) ) : ( (Feature_3 <= 0.027036660350859165) ? ( (Feature_8 <= -0.017058268189430237) ? ( (Feature_8 <= -0.026540535502135754) ? ( (Feature_8 <= -0.03137132711708546) ? ( (Feature_3 <= -0.009113481035456061) ? ( (Feature_0 <= -0.05273755453526974) ? ( 115 ) : ( (Feature_9 <= -0.03214349830523133) ? ( (Feature_0 <= 0.009015599265694618) ? ( 118 ) : ( 119 ) ) : ( (Feature_3 <= -0.031492142006754875) ? ( 121 ) : ( 122 ) ) ) ) : ( (Feature_5 <= 0.026086613070219755) ? ( (Feature_2 <= -0.029917818494141102) ? ( 125 ) : ( 126 ) ) : ( 127 ) ) ) : ( (Feature_6 <= 0.028391091153025627) ? ( 129 ) : ( 130 ) ) ) : ( (Feature_3 <= -0.0039491752395406365) ? ( (Feature_2 <= -0.030995632521808147) ? ( 133 ) : ( (Feature_0 <= 0.007199329789727926) ? ( 135 ) : ( 136 ) ) ) : ( 137 ) ) ) : ( (Feature_2 <= -0.027223289012908936) ? ( 139 ) : ( 140 ) ) ) : ( (Feature_5 <= -0.007107123616151512) ? ( 142 ) : ( (Feature_0 <= 0.012648137344513088) ? ( 144 ) : ( 145 ) ) ) ) ) ) ) ) : ( (Feature_9 <= 0.03413021145388484) ? ( (Feature_0 <= -0.025493517227005213) ? ( (Feature_8 <= -0.05628856457769871) ? ( 149 ) : ( (Feature_5 <= 0.011525209993124008) ? ( (Feature_4 <= -0.0517912395298481) ? ( 152 ) : ( 153 ) ) : ( 154 ) ) ) : ( (Feature_3 <= -0.060756539925932884) ? ( 156 ) : ( (Feature_9 <= -0.015575071331113577) ? ( 158 ) : ( 159 ) ) ) ) : ( 160 ) ) ) : ( 161 ) ) : ( 162 ) ) : ( (Feature_6 <= -0.008425286738201976) ? ( (Feature_2 <= 0.029361844062805176) ? ( (Feature_0 <= -0.03457486256957054) ? ( (Feature_9 <= -0.032143499702215195) ? ( 167 ) : ( 168 ) ) : ( (Feature_0 <= 0.02354575227946043) ? ( (Feature_4 <= -0.10132554545998573) ? ( 171 ) : ( 172 ) ) : ( 173 ) ) ) : ( (Feature_7 <= 0.0003598276525735855) ? ( 175 ) : ( (Feature_2 <= 0.05522933416068554) ? ( 177 ) : ( 178 ) ) ) ) : ( (Feature_4 <= -0.0022569361608475447) ? ( (Feature_0 <= -0.040023671463131905) ? ( (Feature_5 <= -0.01509240921586752) ? ( (Feature_0 <= -0.06181890144944191) ? ( 183 ) : ( 184 ) ) : ( 185 ) ) : ( (Feature_4 <= -0.020832300186157227) ? ( (Feature_3 <= 0.0029365660157054663) ? ( (Feature_2 <= 0.050918085500597954) ? ( 189 ) : ( 190 ) ) : ( 191 ) ) : ( (Feature_4 <= -0.013952536042779684) ? ( 193 ) : ( (Feature_6 <= -0.004743648809380829) ? ( 195 ) : ( (Feature_3 <= -0.005670610466040671) ? ( 197 ) : ( 198 ) ) ) ) ) ) : ( (Feature_4 <= 0.015630451031029224) ? ( (Feature_2 <= 0.030978563241660595) ? ( 201 ) : ( 202 ) ) : ( (Feature_8 <= -0.03241247031837702) ? ( 204 ) : ( 205 ) ) ) ) ) ) : ( (Feature_2 <= 0.05576823838055134) ? ( (Feature_3 <= 0.04482482746243477) ? ( (Feature_4 <= 0.07410844787955284) ? ( (Feature_0 <= 0.007199329789727926) ? ( (Feature_6 <= 0.04864010028541088) ? ( (Feature_6 <= -0.01762938080355525) ? ( (Feature_3 <= -0.036656446754932404) ? ( (Feature_5 <= 0.0004084391985088587) ? ( (Feature_8 <= 0.023435719311237335) ? ( (Feature_9 <= -0.007290858076885343) ? ( 216 ) : ( (Feature_8 <= -0.002000755339395255) ? ( 218 ) : ( 219 ) ) ) : ( 220 ) ) : ( (Feature_3 <= -0.05329698882997036) ? ( 222 ) : ( (Feature_9 <= -0.023859285283833742) ? ( 224 ) : ( 225 ) ) ) ) : ( (Feature_0 <= -0.012779632117599249) ? ( (Feature_4 <= -0.025648134760558605) ? ( 228 ) : ( (Feature_4 <= 0.00531080411747098) ? ( (Feature_6 <= -0.03971920721232891) ? ( (Feature_0 <= -0.05637009255588055) ? ( 232 ) : ( 233 ) ) : ( 234 ) ) : ( 235 ) ) ) : ( (Feature_9 <= 0.021703890524804592) ? ( (Feature_4 <= 0.0018709218129515648) ? ( (Feature_8 <= 0.0404284752876265) ? ( 239 ) : ( 240 ) ) : ( (Feature_6 <= -0.024992656894028187) ? ( 242 ) : ( 243 ) ) ) : ( (Feature_0 <= 0.003566791128832847) ? ( 245 ) : ( 246 ) ) ) ) ) : ( (Feature_9 <= -0.005219804355874658) ? ( (Feature_2 <= 0.022356066445354372) ? ( (Feature_5 <= -0.014779260847717524) ? ( (Feature_3 <= -0.02632783353328705) ? ( 251 ) : ( 252 ) ) : ( (Feature_8 <= -0.007512133568525314) ? ( 254 ) : ( 255 ) ) ) : ( 256 ) ) : ( (Feature_0 <= -6.574729923158884e-05) ? ( (Feature_9 <= 0.03413021098822355) ? ( (Feature_3 <= -0.04870649427175522) ? ( (Feature_3 <= -0.06592084653675556) ? ( 261 ) : ( 262 ) ) : ( (Feature_5 <= -0.031219554599374533) ? ( 264 ) : ( (Feature_4 <= 0.012878544628620148) ? ( 266 ) : ( 267 ) ) ) ) : ( 268 ) ) : ( 269 ) ) ) ) : ( 270 ) ) : ( (Feature_2 <= -0.005128141958266497) ? ( (Feature_4 <= 0.03282986115664244) ? ( (Feature_4 <= 0.008750686421990395) ? ( (Feature_8 <= 0.0020037840004079044) ? ( (Feature_8 <= 0.00026727162185125053) ? ( 276 ) : ( 277 ) ) : ( (Feature_9 <= 0.02791705122217536) ? ( (Feature_8 <= 0.00615008978638798) ? ( 280 ) : ( 281 ) ) : ( 282 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_0 <= 0.039892176166176796) ? ( 285 ) : ( 286 ) ) : ( 287 ) ) ) : ( (Feature_2 <= -0.036923596635460854) ? ( (Feature_8 <= 0.052732767537236214) ? ( 290 ) : ( 291 ) ) : ( (Feature_4 <= 0.06378880143165588) ? ( (Feature_3 <= 0.027610473334789276) ? ( 294 ) : ( 295 ) ) : ( 296 ) ) ) ) : ( (Feature_2 <= 0.021817159838974476) ? ( (Feature_7 <= -0.014216114883311093) ? ( (Feature_7 <= -0.03266667481511831) ? ( 300 ) : ( 301 ) ) : ( (Feature_3 <= 0.02531522512435913) ? ( (Feature_8 <= 0.04741741344332695) ? ( (Feature_9 <= -0.0031487494707107544) ? ( (Feature_5 <= 0.03845597803592682) ? ( (Feature_9 <= -0.052854033187031746) ? ( 307 ) : ( 308 ) ) : ( 309 ) ) : ( 310 ) ) : ( (Feature_0 <= 0.02717829030007124) ? ( 312 ) : ( 313 ) ) ) : ( (Feature_5 <= 0.014030396938323975) ? ( (Feature_7 <= 0.015858298051171005) ? ( 316 ) : ( 317 ) ) : ( 318 ) ) ) ) : ( (Feature_5 <= 0.03595079015940428) ? ( (Feature_6 <= -0.03235593147110194) ? ( (Feature_8 <= 0.05891222879290581) ? ( 322 ) : ( 323 ) ) : ( (Feature_2 <= 0.03960105963051319) ? ( 325 ) : ( 326 ) ) ) : ( (Feature_3 <= 0.001215130789205432) ? ( (Feature_5 <= 0.06272498145699501) ? ( (Feature_2 <= 0.04337340220808983) ? ( 330 ) : ( (Feature_3 <= -0.010834916261956096) ? ( 332 ) : ( 333 ) ) ) : ( 334 ) ) : ( (Feature_0 <= 0.05442232824862003) ? ( 336 ) : ( 337 ) ) ) ) ) ) ) : ( (Feature_0 <= -0.001882016658782959) ? ( 339 ) : ( (Feature_0 <= 0.06168740428984165) ? ( (Feature_4 <= 0.0775483287870884) ? ( 342 ) : ( (Feature_3 <= 0.017281861044466496) ? ( (Feature_0 <= 0.023545751813799143) ? ( 345 ) : ( 346 ) ) : ( 347 ) ) ) : ( 348 ) ) ) ) : ( (Feature_8 <= 0.05492642894387245) ? ( (Feature_3 <= 0.09072976931929588) ? ( (Feature_6 <= -0.06549067050218582) ? ( (Feature_7 <= 0.10811109840869904) ? ( 353 ) : ( 354 ) ) : ( (Feature_6 <= -0.047082483768463135) ? ( (Feature_4 <= -0.0015689595602452755) ? ( (Feature_8 <= 0.004085330059751868) ? ( 358 ) : ( 359 ) ) : ( 360 ) ) : ( (Feature_4 <= 0.017006403766572475) ? ( (Feature_8 <= 0.035366433672606945) ? ( (Feature_8 <= 0.012103563640266657) ? ( 364 ) : ( (Feature_6 <= -0.019470200408250093) ? ( 366 ) : ( (Feature_4 <= -0.011200630106031895) ? ( 368 ) : ( 369 ) ) ) ) : ( 370 ) ) : ( (Feature_5 <= 0.053017379716038704) ? ( (Feature_0 <= 0.012648137053474784) ? ( 373 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 375 ) : ( 376 ) ) ) : ( (Feature_4 <= 0.053469154983758926) ? ( 378 ) : ( (Feature_9 <= 0.013419676572084427) ? ( 380 ) : ( 381 ) ) ) ) ) ) ) : ( (Feature_8 <= 0.027365381829440594) ? ( (Feature_0 <= 0.0017505218856967986) ? ( 384 ) : ( 385 ) ) : ( 386 ) ) ) : ( (Feature_6 <= 0.037595185451209545) ? ( (Feature_9 <= 0.005135462852194905) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_8 <= 0.0659206360578537) ? ( 391 ) : ( 392 ) ) : ( (Feature_6 <= -0.04156002542003989) ? ( 394 ) : ( 395 ) ) ) : ( (Feature_5 <= -0.039361415430903435) ? ( 397 ) : ( (Feature_6 <= -0.06549067050218582) ? ( 399 ) : ( (Feature_5 <= 0.014186971355229616) ? ( (Feature_0 <= 0.05805486813187599) ? ( 402 ) : ( 403 ) ) : ( 404 ) ) ) ) ) : ( 405 ) ) ) ) : ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_5 <= 0.04769385792315006) ? ( 408 ) : ( 409 ) ) : ( (Feature_4 <= 0.006686757551506162) ? ( (Feature_8 <= 0.04035858158022165) ? ( (Feature_9 <= 0.0258459965698421) ? ( 413 ) : ( (Feature_4 <= -0.033903852105140686) ? ( 415 ) : ( (Feature_3 <= 0.05113675445318222) ? ( 417 ) : ( 418 ) ) ) ) : ( (Feature_0 <= 0.04897352121770382) ? ( (Feature_7 <= 0.015858298051171005) ? ( 421 ) : ( (Feature_6 <= -0.06549067050218582) ? ( 423 ) : ( 424 ) ) ) : ( 425 ) ) ) : ( (Feature_3 <= 0.05630106292665005) ? ( (Feature_7 <= 0.09002954885363579) ? ( (Feature_8 <= 0.03304501995444298) ? ( 429 ) : ( (Feature_2 <= 0.12097586691379547) ? ( (Feature_2 <= 0.06492964178323746) ? ( 432 ) : ( 433 ) ) : ( 434 ) ) ) : ( 435 ) ) : ( (Feature_4 <= 0.030077955685555935) ? ( (Feature_9 <= 0.03827231773175299) ? ( 438 ) : ( (Feature_2 <= 0.0654685478657484) ? ( (Feature_5 <= -0.026835476979613304) ? ( 441 ) : ( 442 ) ) : ( (Feature_5 <= -0.005071659572422504) ? ( 444 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 446 ) : ( 447 ) ) ) ) ) : ( 448 ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_10
	

	namespace EXT_SubModel_11 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 10 ,  {137. }} ,
				{ 11 ,  {101. }} ,
				{ 13 ,  {55. }} ,
				{ 14 ,  {71. }} ,
				{ 16 ,  {200. }} ,
				{ 19 ,  {150. }} ,
				{ 20 ,  {158. }} ,
				{ 21 ,  {113. }} ,
				{ 27 ,  {152. }} ,
				{ 28 ,  {143. }} ,
				{ 29 ,  {178. }} ,
				{ 31 ,  {70. }} ,
				{ 33 ,  {83. }} ,
				{ 34 ,  {88. }} ,
				{ 39 ,  {42. }} ,
				{ 41 ,  {51. }} ,
				{ 42 ,  {55. }} ,
				{ 45 ,  {68. }} ,
				{ 47 ,  {96. }} ,
				{ 48 ,  {128. }} ,
				{ 53 ,  {65. }} ,
				{ 55 ,  {65. }} ,
				{ 57 ,  {75. }} ,
				{ 59 ,  {77. }} ,
				{ 60 ,  {78. }} ,
				{ 62 ,  {60. }} ,
				{ 63 ,  {53. }} ,
				{ 66 ,  {79. }} ,
				{ 69 ,  {53. }} ,
				{ 70 ,  {52. }} ,
				{ 72 ,  {55. }} ,
				{ 73 ,  {54. }} ,
				{ 75 ,  {39. }} ,
				{ 77 ,  {49. }} ,
				{ 78 ,  {48. }} ,
				{ 79 ,  {102. }} ,
				{ 84 ,  {72. }} ,
				{ 85 ,  {71. }} ,
				{ 88 ,  {87. }} ,
				{ 89 ,  {91. }} ,
				{ 90 ,  {103. }} ,
				{ 91 ,  {127. }} ,
				{ 92 ,  {66. }} ,
				{ 94 ,  {146. }} ,
				{ 95 ,  {128. }} ,
				{ 100 ,  {200. }} ,
				{ 101 ,  {219. }} ,
				{ 102 ,  {160. }} ,
				{ 103 ,  {88. }} ,
				{ 107 ,  {108. }} ,
				{ 108 ,  {118. }} ,
				{ 109 ,  {179. }} ,
				{ 111 ,  {132. }} ,
				{ 114 ,  {144. }} ,
				{ 115 ,  {90. }} ,
				{ 119 ,  {53. }} ,
				{ 121 ,  {64. }} ,
				{ 122 ,  {65. }} ,
				{ 125 ,  {77. }} ,
				{ 126 ,  {83. }} ,
				{ 127 ,  {97. }} ,
				{ 130 ,  {92. }} ,
				{ 131 ,  {89. }} ,
				{ 132 ,  {104. }} ,
				{ 133 ,  {216. }} ,
				{ 137 ,  {31. }} ,
				{ 138 ,  {25. }} ,
				{ 140 ,  {39. }} ,
				{ 141 ,  {44. }} ,
				{ 146 ,  {60. }} ,
				{ 147 ,  {61. }} ,
				{ 148 ,  {59. }} ,
				{ 150 ,  {68. }} ,
				{ 151 ,  {63. }} ,
				{ 153 ,  {51. }} ,
				{ 154 ,  {49. }} ,
				{ 157 ,  {190. }} ,
				{ 158 ,  {230. }} ,
				{ 162 ,  {162. }} ,
				{ 163 ,  {150. }} ,
				{ 164 ,  {131. }} ,
				{ 167 ,  {153. }} ,
				{ 169 ,  {111. }} ,
				{ 170 ,  {124. }} ,
				{ 173 ,  {93. }} ,
				{ 174 ,  {86. }} ,
				{ 175 ,  {73. }} ,
				{ 176 ,  {253. }} ,
				{ 180 ,  {210. }} ,
				{ 181 ,  {201. }} ,
				{ 186 ,  {145. }} ,
				{ 187 ,  {144. }} ,
				{ 188 ,  {172. }} ,
				{ 190 ,  {110. }} ,
				{ 191 ,  {91. }} ,
				{ 195 ,  {90. }} ,
				{ 196 ,  {96. }} ,
				{ 197 ,  {103. }} ,
				{ 198 ,  {59. }} ,
				{ 203 ,  {121. }} ,
				{ 205 ,  {200. }} ,
				{ 207 ,  {175. }} ,
				{ 208 ,  {170. }} ,
				{ 209 ,  {293. }} ,
				{ 214 ,  {70. }} ,
				{ 215 ,  {60. }} ,
				{ 217 ,  {113. }} ,
				{ 218 ,  {118. }} ,
				{ 221 ,  {147. }} ,
				{ 222 ,  {141. }} ,
				{ 223 ,  {131. }} ,
				{ 224 ,  {182. }} ,
				{ 227 ,  {302. }} ,
				{ 229 ,  {237. }} ,
				{ 230 ,  {244. }} ,
				{ 232 ,  {191. }} ,
				{ 233 ,  {155. }} ,
				{ 238 ,  {78. }} ,
				{ 241 ,  {88. }} ,
				{ 242 ,  {90. }} ,
				{ 245 ,  {94. }} ,
				{ 246 ,  {95. }} ,
				{ 247 ,  {102. }} ,
				{ 250 ,  {180. }} ,
				{ 251 ,  {164. }} ,
				{ 252 ,  {144. }} ,
				{ 258 ,  {252. }} ,
				{ 259 ,  {292. }} ,
				{ 261 ,  {214. }} ,
				{ 263 ,  {200. }} ,
				{ 264 ,  {198. }} ,
				{ 267 ,  {206. }} ,
				{ 268 ,  {219. }} ,
				{ 270 ,  {151. }} ,
				{ 271 ,  {134. }} ,
				{ 275 ,  {168. }} ,
				{ 277 ,  {74. }} ,
				{ 281 ,  {94. }} ,
				{ 282 ,  {91. }} ,
				{ 283 ,  {100. }} ,
				{ 285 ,  {109. }} ,
				{ 286 ,  {107. }} ,
				{ 290 ,  {120. }} ,
				{ 291 ,  {172. }} ,
				{ 292 ,  {69. }} ,
				{ 296 ,  {161. }} ,
				{ 297 ,  {185. }} ,
				{ 299 ,  {101. }} ,
				{ 301 ,  {131. }} ,
				{ 302 ,  {123. }} ,
				{ 305 ,  {202. }} ,
				{ 307 ,  {229. }} ,
				{ 309 ,  {245. }} ,
				{ 310 ,  {259. }} ,
				{ 313 ,  {209. }} ,
				{ 314 ,  {196. }} ,
				{ 317 ,  {170. }} ,
				{ 318 ,  {179. }} ,
				{ 319 ,  {142. }} ,
				{ 320 ,  {262. }} ,
				{ 325 ,  {68. }} ,
				{ 326 ,  {85. }} ,
				{ 328 ,  {52. }} ,
				{ 331 ,  {111. }} ,
				{ 334 ,  {221. }} ,
				{ 336 ,  {259. }} ,
				{ 338 ,  {242. }} ,
				{ 339 ,  {235. }} ,
				{ 342 ,  {178. }} ,
				{ 344 ,  {196. }} ,
				{ 345 ,  {198. }} ,
				{ 346 ,  {212. }} ,
				{ 348 ,  {143. }} ,
				{ 350 ,  {122. }} ,
				{ 351 ,  {121. }} ,
				{ 352 ,  {346. }} ,
				{ 357 ,  {225. }} ,
				{ 358 ,  {220. }} ,
				{ 361 ,  {232. }} ,
				{ 362 ,  {233. }} ,
				{ 363 ,  {242. }} ,
				{ 367 ,  {311. }} ,
				{ 368 ,  {317. }} ,
				{ 370 ,  {268. }} ,
				{ 371 ,  {306. }} ,
				{ 372 ,  {220. }} ,
				{ 373 ,  {84. }} ,
				{ 379 ,  {163. }} ,
				{ 382 ,  {190. }} ,
				{ 383 ,  {185. }} ,
				{ 384 ,  {178. }} ,
				{ 386 ,  {144. }} ,
				{ 387 ,  {129. }} ,
				{ 390 ,  {195. }} ,
				{ 391 ,  {202. }} ,
				{ 393 ,  {232. }} ,
				{ 394 ,  {270. }} ,
				{ 398 ,  {236. }} ,
				{ 400 ,  {208. }} ,
				{ 401 ,  {197. }} ,
				{ 403 ,  {246. }} ,
				{ 404 ,  {248. }} ,
				{ 407 ,  {248. }} ,
				{ 409 ,  {283. }} ,
				{ 410 ,  {281. }} ,
				{ 412 ,  {248. }} ,
				{ 413 ,  {241. }} ,
				{ 416 ,  {303. }} ,
				{ 418 ,  {321. }} ,
				{ 419 ,  {336. }} ,
				{ 422 ,  {308. }} ,
				{ 428 ,  {261. }} ,
				{ 429 ,  {258. }} ,
				{ 430 ,  {270. }} ,
				{ 433 ,  {277. }} ,
				{ 435 ,  {275. }} ,
				{ 436 ,  {274. }} ,
				{ 437 ,  {264. }} ,
				{ 438 ,  {243. }} ,
				{ 439 ,  {310. }} ,
				{ 441 ,  {258. }} ,
				{ 444 ,  {215. }} ,
				{ 445 ,  {217. }} ,
				{ 447 ,  {233. }} ,
				{ 448 ,  {252. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_8 <= 0.00285978929605335) ? ( (Feature_2 <= 0.004033260513097048) ? ( (Feature_5 <= 0.11267216503620148) ? ( (Feature_8 <= -0.009431487880647182) ? ( (Feature_2 <= -0.012133920565247536) ? ( (Feature_3 <= 0.11827273294329643) ? ( (Feature_0 <= -0.08906293660402298) ? ( (Feature_4 <= -0.06623874232172966) ? ( (Feature_4 <= -0.08825398981571198) ? ( (Feature_5 <= -0.09337952360510826) ? ( 10 ) : ( 11 ) ) : ( (Feature_3 <= -0.06592084839940071) ? ( 13 ) : ( 14 ) ) ) : ( (Feature_3 <= -0.07108515501022339) ? ( 16 ) : ( (Feature_3 <= -0.045263622887432575) ? ( (Feature_4 <= -0.038719686679542065) ? ( 19 ) : ( 20 ) ) : ( 21 ) ) ) ) : ( (Feature_2 <= -0.030456725507974625) ? ( (Feature_4 <= -0.06692672148346901) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_3 <= -0.015999222872778773) ? ( (Feature_6 <= 0.035754366777837276) ? ( 27 ) : ( 28 ) ) : ( 29 ) ) : ( (Feature_2 <= -0.05901874601840973) ? ( 31 ) : ( (Feature_5 <= -0.05940291844308376) ? ( 33 ) : ( 34 ) ) ) ) : ( (Feature_5 <= 0.027965503744781017) ? ( (Feature_0 <= 0.02899456024169922) ? ( (Feature_0 <= -0.05092128552496433) ? ( (Feature_5 <= -0.027774921618402004) ? ( 39 ) : ( (Feature_2 <= -0.07841936126351357) ? ( 41 ) : ( 42 ) ) ) : ( (Feature_0 <= -0.040023669600486755) ? ( (Feature_4 <= -0.0263361104298383) ? ( 45 ) : ( (Feature_3 <= -0.06936371698975563) ? ( 47 ) : ( 48 ) ) ) : ( (Feature_3 <= 0.04769388400018215) ? ( (Feature_5 <= -0.016188429668545723) ? ( (Feature_9 <= -0.007290858076885343) ? ( (Feature_9 <= -0.11084353178739548) ? ( 53 ) : ( (Feature_4 <= -0.0538551677018404) ? ( 55 ) : ( (Feature_9 <= -0.07977772876620293) ? ( 57 ) : ( (Feature_5 <= -0.03732595220208168) ? ( 59 ) : ( 60 ) ) ) ) ) : ( (Feature_4 <= -0.032527899369597435) ? ( 62 ) : ( 63 ) ) ) : ( (Feature_9 <= -0.009361911565065384) ? ( (Feature_2 <= -0.06440780498087406) ? ( 66 ) : ( (Feature_2 <= -0.03422906808555126) ? ( (Feature_4 <= 0.010814615990966558) ? ( 69 ) : ( 70 ) ) : ( (Feature_4 <= -0.004320865962654352) ? ( 72 ) : ( 73 ) ) ) ) : ( (Feature_0 <= -0.01822843955596909) ? ( 75 ) : ( (Feature_3 <= -0.01772065833210945) ? ( 77 ) : ( 78 ) ) ) ) ) : ( 79 ) ) ) ) : ( (Feature_0 <= 0.06895248219370842) ? ( (Feature_0 <= 0.0616874061524868) ? ( (Feature_8 <= -0.032025668770074844) ? ( (Feature_2 <= -0.05632421374320984) ? ( 84 ) : ( 85 ) ) : ( (Feature_6 <= 0.14804431796073914) ? ( (Feature_3 <= 0.0029365660157054663) ? ( 88 ) : ( 89 ) ) : ( 90 ) ) ) : ( 91 ) ) : ( 92 ) ) ) : ( (Feature_6 <= -0.02867429470643401) ? ( 94 ) : ( 95 ) ) ) ) : ( (Feature_5 <= -0.023077694699168205) ? ( (Feature_9 <= 0.005135462852194905) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_9 <= -0.019717178773134947) ? ( 100 ) : ( 101 ) ) : ( 102 ) ) : ( 103 ) ) : ( (Feature_2 <= -0.025067664682865143) ? ( (Feature_8 <= -0.03137132711708546) ? ( (Feature_7 <= -0.045028550550341606) ? ( 107 ) : ( 108 ) ) : ( 109 ) ) : ( (Feature_8 <= -0.04472579248249531) ? ( 111 ) : ( (Feature_0 <= -0.05092128552496433) ? ( (Feature_6 <= 0.04311764286831021) ? ( 114 ) : ( 115 ) ) : ( (Feature_9 <= 0.04034337215125561) ? ( (Feature_0 <= 0.018096944375429302) ? ( (Feature_7 <= -0.02104282204527408) ? ( 119 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 121 ) : ( 122 ) ) ) : ( (Feature_0 <= 0.03989217430353165) ? ( (Feature_9 <= -0.007290857785847038) ? ( 125 ) : ( 126 ) ) : ( 127 ) ) ) : ( (Feature_8 <= -0.03518856503069401) ? ( (Feature_3 <= -0.05673985928297043) ? ( 130 ) : ( 131 ) ) : ( 132 ) ) ) ) ) ) ) ) ) : ( 133 ) ) : ( (Feature_5 <= -0.024017141200602055) ? ( (Feature_9 <= -0.02593033853918314) ? ( (Feature_3 <= -0.03149213979486376) ? ( 137 ) : ( 138 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 140 ) : ( 141 ) ) ) : ( (Feature_2 <= -0.00027798773953691125) ? ( (Feature_2 <= -0.0067448599729686975) ? ( (Feature_4 <= 0.0011829473078250885) ? ( (Feature_0 <= -0.06726770848035812) ? ( 146 ) : ( 147 ) ) : ( 148 ) ) : ( (Feature_2 <= -0.0029725178028456867) ? ( 150 ) : ( 151 ) ) ) : ( (Feature_3 <= -0.038377882447093725) ? ( 153 ) : ( 154 ) ) ) ) ) : ( (Feature_8 <= -0.006562352878972888) ? ( (Feature_5 <= 0.027652353048324585) ? ( 157 ) : ( 158 ) ) : ( (Feature_3 <= -0.02977070491760969) ? ( (Feature_6 <= -0.02499265712685883) ? ( (Feature_9 <= 0.007206516107544303) ? ( 162 ) : ( 163 ) ) : ( 164 ) ) : ( (Feature_8 <= -0.001956483320100233) ? ( (Feature_3 <= -0.003949175123125315) ? ( 167 ) : ( (Feature_9 <= 0.019632836803793907) ? ( 169 ) : ( 170 ) ) ) : ( (Feature_6 <= 0.030231910292059183) ? ( (Feature_3 <= 0.0029365653172135353) ? ( 173 ) : ( 174 ) ) : ( 175 ) ) ) ) ) ) : ( 176 ) ) : ( (Feature_3 <= -0.017720657400786877) ? ( (Feature_4 <= -0.047663379460573196) ? ( (Feature_4 <= -0.0545431450009346) ? ( 180 ) : ( 181 ) ) : ( (Feature_6 <= 0.008142083999700844) ? ( (Feature_8 <= -0.022853842470794916) ? ( (Feature_9 <= -0.003148751042317599) ? ( (Feature_4 <= -0.02427218109369278) ? ( 186 ) : ( 187 ) ) : ( 188 ) ) : ( (Feature_7 <= 0.02416104997973889) ? ( 190 ) : ( 191 ) ) ) : ( (Feature_6 <= 0.06520747020840645) ? ( (Feature_2 <= 0.04013996571302414) ? ( (Feature_3 <= -0.034935010597109795) ? ( 195 ) : ( 196 ) ) : ( 197 ) ) : ( 198 ) ) ) ) : ( (Feature_5 <= 0.021389386616647243) ? ( (Feature_5 <= -0.01759759709239006) ? ( (Feature_2 <= 0.04984027519822121) ? ( (Feature_3 <= 0.009822307620197535) ? ( 203 ) : ( (Feature_9 <= -0.015575071796774864) ? ( 205 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 207 ) : ( 208 ) ) ) ) : ( 209 ) ) : ( (Feature_5 <= 0.013247526250779629) ? ( (Feature_2 <= 0.038523247465491295) ? ( (Feature_9 <= -0.007290857844054699) ? ( (Feature_5 <= -0.004915084457024932) ? ( 214 ) : ( 215 ) ) : ( (Feature_7 <= -0.02104282204527408) ? ( 217 ) : ( 218 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= 0.05576824024319649) ? ( 221 ) : ( 222 ) ) : ( 223 ) ) ) : ( 224 ) ) ) : ( (Feature_5 <= 0.03735995665192604) ? ( (Feature_0 <= -0.041839937679469585) ? ( 227 ) : ( (Feature_9 <= 0.005135462852194905) ? ( 229 ) : ( 230 ) ) ) : ( (Feature_8 <= -0.017373686365317553) ? ( 232 ) : ( 233 ) ) ) ) ) ) : ( (Feature_3 <= 0.04482482746243477) ? ( (Feature_3 <= -0.04813268221914768) ? ( (Feature_7 <= 0.015858298051171005) ? ( (Feature_9 <= -0.04456981923431158) ? ( 238 ) : ( (Feature_8 <= 0.020254939794540405) ? ( (Feature_9 <= -0.013504017842933536) ? ( 241 ) : ( 242 ) ) : ( (Feature_6 <= 0.08361565880477428) ? ( (Feature_5 <= 0.0130909513682127) ? ( 245 ) : ( 246 ) ) : ( 247 ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_6 <= -0.01578856213018298) ? ( 250 ) : ( 251 ) ) : ( 252 ) ) ) : ( (Feature_2 <= 0.005111072678118944) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_5 <= 0.015282990876585245) ? ( (Feature_6 <= -0.045241665095090866) ? ( (Feature_9 <= -0.044569821329787374) ? ( 258 ) : ( 259 ) ) : ( (Feature_9 <= 0.005135463085025549) ? ( 261 ) : ( (Feature_7 <= -0.03266667481511831) ? ( 263 ) : ( 264 ) ) ) ) : ( (Feature_3 <= -0.014277786947786808) ? ( (Feature_9 <= -0.007290858076885343) ? ( 267 ) : ( 268 ) ) : ( (Feature_0 <= 0.010831869207322598) ? ( 270 ) : ( 271 ) ) ) ) : ( (Feature_9 <= 0.09626181423664093) ? ( (Feature_8 <= 0.01775199268013239) ? ( (Feature_3 <= -0.020015905611217022) ? ( 275 ) : ( (Feature_3 <= -0.014851599000394344) ? ( 277 ) : ( (Feature_2 <= -0.005128141900058836) ? ( (Feature_2 <= -0.009978296235203743) ? ( (Feature_3 <= 0.020150919444859028) ? ( 281 ) : ( 282 ) ) : ( 283 ) ) : ( (Feature_9 <= -0.048711926152464) ? ( 285 ) : ( 286 ) ) ) ) ) : ( (Feature_2 <= -0.02884000726044178) ? ( (Feature_6 <= 0.002619626931846142) ? ( (Feature_2 <= -0.03261234890669584) ? ( 290 ) : ( 291 ) ) : ( 292 ) ) : ( (Feature_5 <= 0.002913626900408417) ? ( (Feature_7 <= 0.015858298051171005) ? ( (Feature_6 <= -0.01947020075749606) ? ( 296 ) : ( 297 ) ) : ( (Feature_6 <= -0.05260493978857994) ? ( 299 ) : ( (Feature_2 <= -0.0029725177446380258) ? ( 301 ) : ( 302 ) ) ) ) : ( (Feature_3 <= -0.003949175123125315) ? ( (Feature_3 <= -0.011982540134340525) ? ( 305 ) : ( (Feature_0 <= -0.009147093631327152) ? ( 307 ) : ( (Feature_7 <= 0.04519468918442726) ? ( 309 ) : ( 310 ) ) ) ) : ( (Feature_9 <= -0.005219804123044014) ? ( (Feature_2 <= -0.013211732381023467) ? ( 313 ) : ( 314 ) ) : ( (Feature_5 <= 0.05928034894168377) ? ( (Feature_9 <= 0.03827231843024492) ? ( 317 ) : ( 318 ) ) : ( 319 ) ) ) ) ) ) ) : ( 320 ) ) ) : ( (Feature_9 <= 0.029988105408847332) ? ( (Feature_2 <= 0.11450900137424469) ? ( (Feature_3 <= -0.036656446754932404) ? ( (Feature_9 <= -0.01557507156394422) ? ( 325 ) : ( 326 ) ) : ( (Feature_5 <= -0.030280109494924545) ? ( 328 ) : ( (Feature_5 <= 0.04675441235303879) ? ( (Feature_2 <= 0.011577945202589035) ? ( 331 ) : ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_5 <= -0.012743795989081264) ? ( 334 ) : ( (Feature_5 <= 0.01841447618789971) ? ( 336 ) : ( (Feature_5 <= 0.038299404084682465) ? ( 338 ) : ( 339 ) ) ) ) : ( (Feature_4 <= 0.03489379212260246) ? ( (Feature_4 <= 0.018382356502115726) ? ( 342 ) : ( (Feature_2 <= 0.029900750145316124) ? ( 344 ) : ( 345 ) ) ) : ( 346 ) ) ) ) : ( (Feature_7 <= 0.015858298051171005) ? ( 348 ) : ( (Feature_6 <= -0.032355932518839836) ? ( 350 ) : ( 351 ) ) ) ) ) ) : ( 352 ) ) : ( (Feature_7 <= 0.1651233285665512) ? ( (Feature_9 <= 0.05069863796234131) ? ( (Feature_2 <= 0.0363676231354475) ? ( (Feature_1 <= 0.003019241616129875) ? ( 357 ) : ( 358 ) ) : ( (Feature_2 <= 0.15384913235902786) ? ( (Feature_9 <= 0.04448547773063183) ? ( 361 ) : ( 362 ) ) : ( 363 ) ) ) : ( (Feature_0 <= 0.05442232824862003) ? ( (Feature_4 <= 0.04796534217894077) ? ( (Feature_5 <= 0.037359957583248615) ? ( 367 ) : ( 368 ) ) : ( (Feature_4 <= 0.07686035335063934) ? ( 370 ) : ( 371 ) ) ) : ( 372 ) ) ) : ( 373 ) ) ) ) ) : ( (Feature_2 <= 0.04552902653813362) ? ( (Feature_8 <= 0.04397285170853138) ? ( (Feature_2 <= 0.021278253756463528) ? ( (Feature_0 <= 0.047157254070043564) ? ( (Feature_0 <= -0.012779631651937962) ? ( 379 ) : ( (Feature_2 <= -0.0072837648913264275) ? ( (Feature_1 <= 0.003019241616129875) ? ( 382 ) : ( 383 ) ) : ( 384 ) ) ) : ( (Feature_3 <= 0.06318680383265018) ? ( 386 ) : ( 387 ) ) ) : ( (Feature_5 <= 0.009489744435995817) ? ( (Feature_1 <= 0.003019241616129875) ? ( 390 ) : ( 391 ) ) : ( (Feature_3 <= 0.08728689700365067) ? ( 393 ) : ( 394 ) ) ) ) : ( (Feature_5 <= 0.02593003772199154) ? ( (Feature_9 <= 0.0299881047103554) ? ( (Feature_7 <= 0.015858298051171005) ? ( 398 ) : ( (Feature_6 <= -0.04156002542003989) ? ( 400 ) : ( 401 ) ) ) : ( (Feature_7 <= 0.047777766827493906) ? ( 403 ) : ( 404 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= -0.040427712723612785) ? ( 407 ) : ( (Feature_3 <= 0.07523684948682785) ? ( 409 ) : ( 410 ) ) ) : ( (Feature_6 <= -0.05260493978857994) ? ( 412 ) : ( 413 ) ) ) ) ) : ( (Feature_4 <= -0.012576582841575146) ? ( (Feature_9 <= 0.03827231749892235) ? ( 416 ) : ( (Feature_8 <= 0.01586412196047604) ? ( 418 ) : ( 419 ) ) ) : ( (Feature_4 <= 0.04177355580031872) ? ( (Feature_9 <= 0.011348623083904386) ? ( 422 ) : ( (Feature_4 <= 0.02801402658224106) ? ( (Feature_3 <= 0.10622268915176392) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_3 <= 0.07007254287600517) ? ( (Feature_2 <= 0.09780291095376015) ? ( 428 ) : ( 429 ) ) : ( 430 ) ) : ( (Feature_5 <= 0.02906152233481407) ? ( (Feature_3 <= 0.06318680197000504) ? ( 433 ) : ( (Feature_3 <= 0.08728690072894096) ? ( 435 ) : ( 436 ) ) ) : ( 437 ) ) ) : ( 438 ) ) : ( 439 ) ) ) : ( (Feature_2 <= 0.05415152199566364) ? ( 441 ) : ( (Feature_2 <= 0.06762417405843735) ? ( (Feature_4 <= 0.090619882568717) ? ( 444 ) : ( 445 ) ) : ( (Feature_7 <= 0.034308859962038696) ? ( 447 ) : ( 448 ) ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_11
	

	namespace EXT_SubModel_12 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 6 ,  {140. }} ,
				{ 9 ,  {152. }} ,
				{ 10 ,  {150. }} ,
				{ 12 ,  {162. }} ,
				{ 13 ,  {158. }} ,
				{ 14 ,  {200. }} ,
				{ 21 ,  {101. }} ,
				{ 22 ,  {99. }} ,
				{ 23 ,  {113. }} ,
				{ 25 ,  {85. }} ,
				{ 26 ,  {90. }} ,
				{ 28 ,  {71. }} ,
				{ 29 ,  {77. }} ,
				{ 33 ,  {144. }} ,
				{ 34 ,  {168. }} ,
				{ 35 ,  {116. }} ,
				{ 36 ,  {60. }} ,
				{ 37 ,  {185. }} ,
				{ 42 ,  {70. }} ,
				{ 45 ,  {39. }} ,
				{ 46 ,  {37. }} ,
				{ 47 ,  {45. }} ,
				{ 49 ,  {88. }} ,
				{ 51 ,  {72. }} ,
				{ 52 ,  {65. }} ,
				{ 58 ,  {78. }} ,
				{ 60 ,  {65. }} ,
				{ 61 ,  {55. }} ,
				{ 63 ,  {83. }} ,
				{ 64 ,  {80. }} ,
				{ 66 ,  {98. }} ,
				{ 67 ,  {104. }} ,
				{ 69 ,  {40. }} ,
				{ 73 ,  {125. }} ,
				{ 74 ,  {128. }} ,
				{ 76 ,  {132. }} ,
				{ 77 ,  {138. }} ,
				{ 78 ,  {96. }} ,
				{ 81 ,  {31. }} ,
				{ 84 ,  {67. }} ,
				{ 85 ,  {60. }} ,
				{ 87 ,  {52. }} ,
				{ 88 ,  {51. }} ,
				{ 90 ,  {113. }} ,
				{ 91 ,  {81. }} ,
				{ 94 ,  {219. }} ,
				{ 102 ,  {86. }} ,
				{ 103 ,  {87. }} ,
				{ 105 ,  {77. }} ,
				{ 106 ,  {68. }} ,
				{ 108 ,  {60. }} ,
				{ 109 ,  {66. }} ,
				{ 110 ,  {25. }} ,
				{ 114 ,  {44. }} ,
				{ 117 ,  {64. }} ,
				{ 118 ,  {63. }} ,
				{ 119 ,  {72. }} ,
				{ 120 ,  {108. }} ,
				{ 125 ,  {96. }} ,
				{ 127 ,  {128. }} ,
				{ 128 ,  {127. }} ,
				{ 130 ,  {93. }} ,
				{ 131 ,  {64. }} ,
				{ 133 ,  {160. }} ,
				{ 134 ,  {168. }} ,
				{ 139 ,  {94. }} ,
				{ 140 ,  {97. }} ,
				{ 143 ,  {61. }} ,
				{ 145 ,  {71. }} ,
				{ 146 ,  {72. }} ,
				{ 147 ,  {83. }} ,
				{ 148 ,  {49. }} ,
				{ 153 ,  {179. }} ,
				{ 155 ,  {153. }} ,
				{ 156 ,  {158. }} ,
				{ 157 ,  {118. }} ,
				{ 160 ,  {135. }} ,
				{ 162 ,  {103. }} ,
				{ 164 ,  {73. }} ,
				{ 165 ,  {79. }} ,
				{ 166 ,  {141. }} ,
				{ 170 ,  {102. }} ,
				{ 172 ,  {88. }} ,
				{ 173 ,  {91. }} ,
				{ 174 ,  {53. }} ,
				{ 176 ,  {92. }} ,
				{ 179 ,  {109. }} ,
				{ 180 ,  {107. }} ,
				{ 181 ,  {124. }} ,
				{ 182 ,  {216. }} ,
				{ 185 ,  {102. }} ,
				{ 187 ,  {146. }} ,
				{ 188 ,  {150. }} ,
				{ 189 ,  {230. }} ,
				{ 192 ,  {210. }} ,
				{ 194 ,  {200. }} ,
				{ 195 ,  {191. }} ,
				{ 196 ,  {118. }} ,
				{ 201 ,  {94. }} ,
				{ 203 ,  {214. }} ,
				{ 206 ,  {178. }} ,
				{ 207 ,  {185. }} ,
				{ 209 ,  {168. }} ,
				{ 210 ,  {172. }} ,
				{ 214 ,  {102. }} ,
				{ 216 ,  {84. }} ,
				{ 218 ,  {91. }} ,
				{ 219 ,  {90. }} ,
				{ 220 ,  {120. }} ,
				{ 221 ,  {190. }} ,
				{ 223 ,  {58. }} ,
				{ 225 ,  {69. }} ,
				{ 226 ,  {74. }} ,
				{ 229 ,  {126. }} ,
				{ 233 ,  {258. }} ,
				{ 236 ,  {245. }} ,
				{ 237 ,  {242. }} ,
				{ 238 ,  {235. }} ,
				{ 241 ,  {200. }} ,
				{ 242 ,  {202. }} ,
				{ 243 ,  {196. }} ,
				{ 246 ,  {265. }} ,
				{ 247 ,  {257. }} ,
				{ 248 ,  {283. }} ,
				{ 251 ,  {196. }} ,
				{ 253 ,  {48. }} ,
				{ 255 ,  {122. }} ,
				{ 256 ,  {100. }} ,
				{ 261 ,  {179. }} ,
				{ 262 ,  {206. }} ,
				{ 265 ,  {161. }} ,
				{ 267 ,  {144. }} ,
				{ 268 ,  {150. }} ,
				{ 271 ,  {107. }} ,
				{ 272 ,  {111. }} ,
				{ 276 ,  {138. }} ,
				{ 277 ,  {144. }} ,
				{ 279 ,  {129. }} ,
				{ 280 ,  {131. }} ,
				{ 281 ,  {173. }} ,
				{ 283 ,  {229. }} ,
				{ 284 ,  {241. }} ,
				{ 288 ,  {281. }} ,
				{ 289 ,  {276. }} ,
				{ 290 ,  {311. }} ,
				{ 293 ,  {142. }} ,
				{ 294 ,  {123. }} ,
				{ 298 ,  {198. }} ,
				{ 299 ,  {191. }} ,
				{ 300 ,  {217. }} ,
				{ 302 ,  {143. }} ,
				{ 303 ,  {178. }} ,
				{ 306 ,  {95. }} ,
				{ 310 ,  {170. }} ,
				{ 311 ,  {172. }} ,
				{ 312 ,  {175. }} ,
				{ 315 ,  {140. }} ,
				{ 316 ,  {141. }} ,
				{ 317 ,  {144. }} ,
				{ 320 ,  {302. }} ,
				{ 324 ,  {52. }} ,
				{ 325 ,  {85. }} ,
				{ 327 ,  {103. }} ,
				{ 329 ,  {137. }} ,
				{ 330 ,  {122. }} ,
				{ 337 ,  {167. }} ,
				{ 338 ,  {180. }} ,
				{ 342 ,  {202. }} ,
				{ 343 ,  {208. }} ,
				{ 345 ,  {198. }} ,
				{ 346 ,  {195. }} ,
				{ 347 ,  {166. }} ,
				{ 348 ,  {236. }} ,
				{ 350 ,  {244. }} ,
				{ 351 ,  {225. }} ,
				{ 353 ,  {232. }} ,
				{ 354 ,  {270. }} ,
				{ 357 ,  {155. }} ,
				{ 358 ,  {150. }} ,
				{ 359 ,  {84. }} ,
				{ 363 ,  {178. }} ,
				{ 364 ,  {221. }} ,
				{ 372 ,  {293. }} ,
				{ 373 ,  {281. }} ,
				{ 375 ,  {303. }} ,
				{ 376 ,  {321. }} ,
				{ 378 ,  {288. }} ,
				{ 381 ,  {275. }} ,
				{ 382 ,  {280. }} ,
				{ 383 ,  {263. }} ,
				{ 386 ,  {259. }} ,
				{ 387 ,  {258. }} ,
				{ 390 ,  {272. }} ,
				{ 391 ,  {270. }} ,
				{ 393 ,  {277. }} ,
				{ 394 ,  {275. }} ,
				{ 396 ,  {308. }} ,
				{ 397 ,  {336. }} ,
				{ 401 ,  {237. }} ,
				{ 402 ,  {242. }} ,
				{ 403 ,  {220. }} ,
				{ 405 ,  {279. }} ,
				{ 406 ,  {264. }} ,
				{ 408 ,  {317. }} ,
				{ 409 ,  {310. }} ,
				{ 413 ,  {173. }} ,
				{ 415 ,  {180. }} ,
				{ 416 ,  {186. }} ,
				{ 418 ,  {220. }} ,
				{ 419 ,  {233. }} ,
				{ 422 ,  {233. }} ,
				{ 424 ,  {268. }} ,
				{ 426 ,  {252. }} ,
				{ 427 ,  {258. }} ,
				{ 429 ,  {192. }} ,
				{ 431 ,  {230. }} ,
				{ 432 ,  {217. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_2 <= 0.026667313650250435) ? ( (Feature_8 <= 0.005789376329630613) ? ( (Feature_0 <= -0.06908397749066353) ? ( (Feature_3 <= -0.060756539925932884) ? ( (Feature_9 <= -0.003148751042317599) ? ( (Feature_0 <= -0.10359309613704681) ? ( 6 ) : ( (Feature_5 <= -0.044528366066515446) ? ( (Feature_5 <= -0.08649025857448578) ? ( 9 ) : ( 10 ) ) : ( (Feature_4 <= -0.03252789843827486) ? ( 12 ) : ( 13 ) ) ) ) : ( 14 ) ) : ( (Feature_8 <= -0.016052494233008474) ? ( (Feature_0 <= -0.07634905353188515) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_6 <= 0.044958461076021194) ? ( (Feature_2 <= -0.04931843653321266) ? ( (Feature_6 <= 0.013664540369063616) ? ( 21 ) : ( 22 ) ) : ( 23 ) ) : ( (Feature_3 <= -0.034935010597109795) ? ( 25 ) : ( 26 ) ) ) : ( (Feature_4 <= -0.055919098667800426) ? ( 28 ) : ( 29 ) ) ) : ( (Feature_2 <= -0.009978296235203743) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= -0.015575071272905916) ? ( 33 ) : ( 34 ) ) : ( 35 ) ) : ( 36 ) ) ) : ( 37 ) ) ) : ( (Feature_8 <= -0.04049498960375786) ? ( (Feature_2 <= -0.054707497358322144) ? ( (Feature_0 <= -0.012779632292222232) ? ( (Feature_0 <= -0.05455382540822029) ? ( 42 ) : ( (Feature_3 <= -0.002227739430963993) ? ( (Feature_0 <= -0.030942324548959732) ? ( 45 ) : ( 46 ) ) : ( 47 ) ) ) : ( (Feature_9 <= -0.06942246109247208) ? ( 49 ) : ( (Feature_3 <= -0.06305178813636303) ? ( 51 ) : ( 52 ) ) ) ) : ( (Feature_2 <= -0.012133920565247536) ? ( (Feature_8 <= -0.06740894541144371) ? ( (Feature_9 <= -0.0031487508676946163) ? ( (Feature_9 <= -0.03214349877089262) ? ( (Feature_5 <= -0.03168927878141403) ? ( 58 ) : ( (Feature_7 <= -0.026393484440632164) ? ( 60 ) : ( 61 ) ) ) : ( (Feature_5 <= -0.007733423262834549) ? ( 63 ) : ( 64 ) ) ) : ( (Feature_0 <= 0.02717829030007124) ? ( 66 ) : ( 67 ) ) ) : ( (Feature_7 <= -0.05794394388794899) ? ( 69 ) : ( (Feature_5 <= -0.01023860857822001) ? ( (Feature_3 <= -0.022884964011609554) ? ( (Feature_6 <= 0.05784419272094965) ? ( 73 ) : ( 74 ) ) : ( (Feature_6 <= -0.012106923968531191) ? ( 76 ) : ( 77 ) ) ) : ( 78 ) ) ) ) : ( (Feature_5 <= 0.007767427945509553) ? ( (Feature_8 <= -0.0580417774617672) ? ( 81 ) : ( (Feature_0 <= -0.018228439847007394) ? ( (Feature_6 <= 0.033913547871634364) ? ( 84 ) : ( 85 ) ) : ( (Feature_6 <= 0.017346177715808153) ? ( 87 ) : ( 88 ) ) ) ) : ( (Feature_6 <= 0.05416255630552769) ? ( 90 ) : ( 91 ) ) ) ) ) : ( (Feature_2 <= 0.004033260513097048) ? ( (Feature_4 <= -0.061422908678650856) ? ( 94 ) : ( (Feature_7 <= 0.026006106287240982) ? ( (Feature_3 <= 0.11827273294329643) ? ( (Feature_5 <= -0.03513391129672527) ? ( (Feature_5 <= -0.038578545674681664) ? ( (Feature_4 <= -0.04078361578285694) ? ( (Feature_5 <= -0.04640725441277027) ? ( (Feature_2 <= -0.054707497358322144) ? ( 102 ) : ( 103 ) ) : ( (Feature_3 <= -0.07797089405357838) ? ( 105 ) : ( 106 ) ) ) : ( (Feature_0 <= 0.016280675306916237) ? ( 108 ) : ( 109 ) ) ) : ( 110 ) ) : ( (Feature_8 <= -0.03262011520564556) ? ( (Feature_0 <= 0.06531994417309761) ? ( (Feature_5 <= -0.010082034161314368) ? ( 114 ) : ( (Feature_8 <= -0.034532757475972176) ? ( (Feature_7 <= 0.007555546122603118) ? ( 117 ) : ( 118 ) ) : ( 119 ) ) ) : ( 120 ) ) : ( (Feature_3 <= -0.024606400169432163) ? ( (Feature_2 <= -0.03369016107171774) ? ( (Feature_8 <= -0.026540535502135754) ? ( (Feature_2 <= -0.0520129669457674) ? ( 125 ) : ( (Feature_9 <= -0.03421455225907266) ? ( 127 ) : ( 128 ) ) ) : ( (Feature_6 <= 0.0007788091897964478) ? ( 130 ) : ( 131 ) ) ) : ( (Feature_4 <= -0.018080394715070724) ? ( 133 ) : ( 134 ) ) ) : ( (Feature_3 <= -0.013703975360840559) ? ( (Feature_9 <= 0.005135462852194905) ? ( (Feature_3 <= -0.01657303422689438) ? ( (Feature_3 <= -0.020015905611217022) ? ( 139 ) : ( 140 ) ) : ( (Feature_0 <= 0.028994559310376644) ? ( (Feature_0 <= -0.043656209483742714) ? ( 143 ) : ( (Feature_0 <= -0.0036982866004109383) ? ( 145 ) : ( 146 ) ) ) : ( 147 ) ) ) : ( 148 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_3 <= -0.0022277397802099586) ? ( (Feature_2 <= -0.027223289012908936) ? ( (Feature_3 <= -0.008539669681340456) ? ( 153 ) : ( (Feature_5 <= 0.014813268557190895) ? ( 155 ) : ( 156 ) ) ) : ( 157 ) ) : ( (Feature_4 <= 0.06172486953437328) ? ( (Feature_6 <= 0.009982902556657791) ? ( 160 ) : ( (Feature_5 <= -0.01133462821599096) ? ( 162 ) : ( (Feature_7 <= -0.02104282204527408) ? ( 164 ) : ( 165 ) ) ) ) : ( 166 ) ) ) : ( (Feature_2 <= -0.025067665614187717) ? ( (Feature_8 <= -0.016537371557205915) ? ( (Feature_8 <= -0.030139416456222534) ? ( 170 ) : ( (Feature_6 <= 0.021027816459536552) ? ( 172 ) : ( 173 ) ) ) : ( 174 ) ) : ( (Feature_0 <= 0.009015598625410348) ? ( 176 ) : ( (Feature_9 <= 0.03620126470923424) ? ( (Feature_9 <= -0.036285605281591415) ? ( 179 ) : ( 180 ) ) : ( 181 ) ) ) ) ) ) ) ) ) : ( 182 ) ) : ( (Feature_2 <= -0.011595014715567231) ? ( (Feature_3 <= -0.059035105630755424) ? ( 185 ) : ( (Feature_7 <= 0.05275942012667656) ? ( 187 ) : ( 188 ) ) ) : ( 189 ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_4 <= -0.0483513567596674) ? ( 192 ) : ( (Feature_3 <= 0.01326517853885889) ? ( 194 ) : ( 195 ) ) ) : ( 196 ) ) ) ) ) : ( (Feature_2 <= -0.022373135201632977) ? ( (Feature_2 <= -0.030456725507974625) ? ( (Feature_4 <= 0.028014025650918484) ? ( (Feature_0 <= -0.06726770661771297) ? ( 201 ) : ( (Feature_0 <= -0.023677246877923608) ? ( 203 ) : ( (Feature_2 <= -0.03422906808555126) ? ( (Feature_9 <= 0.023774944245815277) ? ( 206 ) : ( 207 ) ) : ( (Feature_4 <= 0.010126639157533646) ? ( 209 ) : ( 210 ) ) ) ) ) : ( (Feature_5 <= 0.07384175062179565) ? ( (Feature_9 <= 0.05691180098801851) ? ( (Feature_7 <= -0.03395821573212743) ? ( 214 ) : ( (Feature_4 <= 0.034893790259957314) ? ( 216 ) : ( (Feature_6 <= -0.017629379406571388) ? ( 218 ) : ( 219 ) ) ) ) : ( 220 ) ) : ( 221 ) ) ) : ( (Feature_0 <= -0.04183993861079216) ? ( 223 ) : ( (Feature_2 <= -0.027762195095419884) ? ( 225 ) : ( 226 ) ) ) ) : ( (Feature_9 <= -0.01350401807576418) ? ( (Feature_3 <= -0.04354218952357769) ? ( 229 ) : ( (Feature_3 <= 0.037365272641181946) ? ( (Feature_9 <= -0.036285605281591415) ? ( (Feature_5 <= -0.005384807474911213) ? ( 233 ) : ( (Feature_3 <= 0.006379436934366822) ? ( (Feature_4 <= 0.0176943801343441) ? ( 236 ) : ( 237 ) ) : ( 238 ) ) ) : ( (Feature_4 <= 0.11469905823469162) ? ( (Feature_8 <= 0.013112947344779968) ? ( 241 ) : ( 242 ) ) : ( 243 ) ) ) : ( (Feature_2 <= 0.022356065921485424) ? ( (Feature_3 <= 0.04941532015800476) ? ( 246 ) : ( 247 ) ) : ( 248 ) ) ) ) : ( (Feature_8 <= 0.012934560421854258) ? ( (Feature_9 <= 0.007206516107544303) ? ( 251 ) : ( (Feature_4 <= 0.015630450565367937) ? ( 253 ) : ( (Feature_4 <= 0.04039760120213032) ? ( 255 ) : ( 256 ) ) ) ) : ( (Feature_6 <= -0.030515112914144993) ? ( (Feature_8 <= 0.0821911171078682) ? ( (Feature_0 <= -0.04910501651465893) ? ( (Feature_8 <= 0.02165217697620392) ? ( 261 ) : ( 262 ) ) : ( (Feature_5 <= -0.008046569302678108) ? ( (Feature_5 <= -0.04546781163662672) ? ( 265 ) : ( (Feature_3 <= -0.0022277403622865677) ? ( 267 ) : ( 268 ) ) ) : ( (Feature_0 <= 0.02354575350182131) ? ( (Feature_2 <= 0.007805602857843041) ? ( 271 ) : ( 272 ) ) : ( (Feature_2 <= 0.014811381697654724) ? ( (Feature_9 <= 0.003064409422222525) ? ( (Feature_9 <= -0.00521980453049764) ? ( 276 ) : ( 277 ) ) : ( (Feature_6 <= -0.047082483768463135) ? ( 279 ) : ( 280 ) ) ) : ( 281 ) ) ) ) ) : ( (Feature_8 <= 0.09507552161812782) ? ( 283 ) : ( 284 ) ) ) : ( (Feature_8 <= 0.021215134300291538) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_8 <= 0.01517655048519373) ? ( 288 ) : ( 289 ) ) : ( 290 ) ) : ( (Feature_0 <= 0.005383059848099947) ? ( (Feature_2 <= 0.0018776364158838987) ? ( 293 ) : ( 294 ) ) : ( (Feature_2 <= 0.00834450894035399) ? ( (Feature_7 <= -0.014216114883311093) ? ( (Feature_4 <= -0.032527899369597435) ? ( 298 ) : ( 299 ) ) : ( 300 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 302 ) : ( 303 ) ) ) ) ) ) ) ) ) ) : ( (Feature_8 <= -0.0289399279281497) ? ( (Feature_8 <= -0.05706769414246082) ? ( 306 ) : ( (Feature_0 <= 0.001750522293150425) ? ( (Feature_2 <= 0.03798434138298035) ? ( (Feature_6 <= -0.028674294124357402) ? ( 310 ) : ( 311 ) ) : ( 312 ) ) : ( (Feature_5 <= 0.040178293362259865) ? ( (Feature_3 <= -0.025754022994078696) ? ( 315 ) : ( 316 ) ) : ( 317 ) ) ) ) : ( (Feature_2 <= 0.04660683870315552) ? ( (Feature_0 <= -0.08724666759371758) ? ( 320 ) : ( (Feature_0 <= -0.016412170138210058) ? ( (Feature_5 <= -0.0063242526521207765) ? ( (Feature_1 <= 0.003019241616129875) ? ( 324 ) : ( 325 ) ) : ( (Feature_4 <= 0.025950098410248756) ? ( 327 ) : ( (Feature_6 <= -0.04340084455907345) ? ( 329 ) : ( 330 ) ) ) ) : ( (Feature_9 <= 0.06519601307809353) ? ( (Feature_9 <= 0.03827231749892235) ? ( (Feature_7 <= 0.05368194915354252) ? ( (Feature_8 <= 0.06840937957167625) ? ( (Feature_3 <= -0.005670611746609211) ? ( (Feature_2 <= 0.03906215354800224) ? ( 337 ) : ( 338 ) ) : ( (Feature_6 <= 0.050480918027460575) ? ( (Feature_5 <= -0.0033493423834443092) ? ( (Feature_7 <= -0.002592261880636215) ? ( 342 ) : ( 343 ) ) : ( (Feature_8 <= 0.03676894214004278) ? ( 345 ) : ( 346 ) ) ) : ( 347 ) ) ) : ( 348 ) ) : ( (Feature_7 <= 0.07563811540603638) ? ( 350 ) : ( 351 ) ) ) : ( (Feature_6 <= -0.04156002542003989) ? ( 353 ) : ( 354 ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_6 <= -0.023151838220655918) ? ( 357 ) : ( 358 ) ) : ( 359 ) ) ) ) ) : ( (Feature_4 <= 0.038333673030138016) ? ( (Feature_0 <= -0.029126055538654327) ? ( (Feature_6 <= -0.030515113845467567) ? ( 363 ) : ( 364 ) ) : ( (Feature_9 <= 0.11904340609908104) ? ( (Feature_4 <= 0.019070332869887352) ? ( (Feature_2 <= 0.1107366569340229) ? ( (Feature_7 <= -0.0018542396137490869) ? ( (Feature_5 <= -0.025269734673202038) ? ( (Feature_9 <= 0.015490730060264468) ? ( (Feature_9 <= -0.007290858076885343) ? ( 372 ) : ( 373 ) ) : ( (Feature_5 <= -0.03294187132269144) ? ( 375 ) : ( 376 ) ) ) : ( (Feature_4 <= -0.028400040231645107) ? ( 378 ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_6 <= -0.01394774322398007) ? ( 381 ) : ( 382 ) ) : ( 383 ) ) ) ) : ( (Feature_9 <= 0.025845997966825962) ? ( (Feature_6 <= -0.05076411925256252) ? ( 386 ) : ( 387 ) ) : ( (Feature_6 <= -0.05260493978857994) ? ( (Feature_4 <= -0.02977599436417222) ? ( 390 ) : ( 391 ) ) : ( (Feature_6 <= -0.034196751192212105) ? ( 393 ) : ( 394 ) ) ) ) ) : ( (Feature_0 <= 0.009015598334372044) ? ( 396 ) : ( 397 ) ) ) : ( (Feature_5 <= 0.035637641325592995) ? ( (Feature_9 <= 0.09419076144695282) ? ( (Feature_9 <= 0.013419677270576358) ? ( 401 ) : ( 402 ) ) : ( 403 ) ) : ( (Feature_3 <= 0.022446167655289173) ? ( 405 ) : ( 406 ) ) ) ) : ( (Feature_2 <= 0.0681630801409483) ? ( 408 ) : ( 409 ) ) ) ) : ( (Feature_8 <= 0.059788333252072334) ? ( (Feature_6 <= -0.0010620108805596828) ? ( (Feature_7 <= 0.028773690573871136) ? ( 413 ) : ( (Feature_3 <= 0.03564383741468191) ? ( 415 ) : ( 416 ) ) ) : ( (Feature_6 <= 0.013664540252648294) ? ( 418 ) : ( 419 ) ) ) : ( (Feature_8 <= 0.07358080893754959) ? ( (Feature_4 <= 0.051405224949121475) ? ( 422 ) : ( (Feature_4 <= 0.07479642331600189) ? ( 424 ) : ( (Feature_9 <= 0.03205915726721287) ? ( 426 ) : ( 427 ) ) ) ) : ( (Feature_7 <= 0.09648724645376205) ? ( 429 ) : ( (Feature_4 <= 0.09405976347625256) ? ( 431 ) : ( 432 ) ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_12
	

	namespace EXT_SubModel_13 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 7 ,  {142. }} ,
				{ 8 ,  {129. }} ,
				{ 10 ,  {101. }} ,
				{ 12 ,  {55. }} ,
				{ 16 ,  {70. }} ,
				{ 17 ,  {71. }} ,
				{ 18 ,  {67. }} ,
				{ 19 ,  {83. }} ,
				{ 22 ,  {124. }} ,
				{ 23 ,  {74. }} ,
				{ 25 ,  {135. }} ,
				{ 28 ,  {178. }} ,
				{ 29 ,  {168. }} ,
				{ 31 ,  {219. }} ,
				{ 33 ,  {190. }} ,
				{ 34 ,  {200. }} ,
				{ 42 ,  {104. }} ,
				{ 43 ,  {138. }} ,
				{ 45 ,  {53. }} ,
				{ 46 ,  {79. }} ,
				{ 52 ,  {60. }} ,
				{ 53 ,  {61. }} ,
				{ 55 ,  {55. }} ,
				{ 56 ,  {53. }} ,
				{ 58 ,  {31. }} ,
				{ 61 ,  {44. }} ,
				{ 62 ,  {47. }} ,
				{ 63 ,  {53. }} ,
				{ 64 ,  {92. }} ,
				{ 66 ,  {132. }} ,
				{ 68 ,  {97. }} ,
				{ 70 ,  {83. }} ,
				{ 72 ,  {77. }} ,
				{ 73 ,  {71. }} ,
				{ 76 ,  {54. }} ,
				{ 78 ,  {135. }} ,
				{ 81 ,  {96. }} ,
				{ 82 ,  {89. }} ,
				{ 85 ,  {107. }} ,
				{ 86 ,  {104. }} ,
				{ 87 ,  {111. }} ,
				{ 89 ,  {146. }} ,
				{ 90 ,  {118. }} ,
				{ 91 ,  {200. }} ,
				{ 92 ,  {216. }} ,
				{ 93 ,  {230. }} ,
				{ 96 ,  {85. }} ,
				{ 98 ,  {51. }} ,
				{ 100 ,  {49. }} ,
				{ 101 ,  {48. }} ,
				{ 109 ,  {152. }} ,
				{ 110 ,  {143. }} ,
				{ 112 ,  {125. }} ,
				{ 113 ,  {114. }} ,
				{ 116 ,  {99. }} ,
				{ 117 ,  {104. }} ,
				{ 120 ,  {65. }} ,
				{ 121 ,  {66. }} ,
				{ 122 ,  {77. }} ,
				{ 125 ,  {61. }} ,
				{ 126 ,  {37. }} ,
				{ 128 ,  {75. }} ,
				{ 130 ,  {98. }} ,
				{ 132 ,  {87. }} ,
				{ 133 ,  {88. }} ,
				{ 135 ,  {40. }} ,
				{ 136 ,  {42. }} ,
				{ 139 ,  {153. }} ,
				{ 141 ,  {168. }} ,
				{ 142 ,  {179. }} ,
				{ 144 ,  {87. }} ,
				{ 145 ,  {128. }} ,
				{ 151 ,  {113. }} ,
				{ 152 ,  {94. }} ,
				{ 153 ,  {59. }} ,
				{ 156 ,  {39. }} ,
				{ 159 ,  {53. }} ,
				{ 160 ,  {52. }} ,
				{ 161 ,  {60. }} ,
				{ 163 ,  {65. }} ,
				{ 164 ,  {71. }} ,
				{ 171 ,  {97. }} ,
				{ 172 ,  {96. }} ,
				{ 173 ,  {91. }} ,
				{ 174 ,  {102. }} ,
				{ 175 ,  {118. }} ,
				{ 177 ,  {72. }} ,
				{ 179 ,  {84. }} ,
				{ 180 ,  {80. }} ,
				{ 182 ,  {49. }} ,
				{ 183 ,  {59. }} ,
				{ 184 ,  {158. }} ,
				{ 186 ,  {302. }} ,
				{ 189 ,  {210. }} ,
				{ 192 ,  {121. }} ,
				{ 195 ,  {182. }} ,
				{ 196 ,  {167. }} ,
				{ 197 ,  {147. }} ,
				{ 200 ,  {144. }} ,
				{ 201 ,  {141. }} ,
				{ 203 ,  {91. }} ,
				{ 205 ,  {103. }} ,
				{ 206 ,  {110. }} ,
				{ 210 ,  {113. }} ,
				{ 211 ,  {52. }} ,
				{ 215 ,  {191. }} ,
				{ 217 ,  {170. }} ,
				{ 218 ,  {155. }} ,
				{ 219 ,  {118. }} ,
				{ 220 ,  {244. }} ,
				{ 223 ,  {293. }} ,
				{ 224 ,  {288. }} ,
				{ 226 ,  {263. }} ,
				{ 227 ,  {257. }} ,
				{ 236 ,  {131. }} ,
				{ 237 ,  {140. }} ,
				{ 238 ,  {115. }} ,
				{ 239 ,  {78. }} ,
				{ 244 ,  {185. }} ,
				{ 245 ,  {200. }} ,
				{ 247 ,  {93. }} ,
				{ 249 ,  {154. }} ,
				{ 250 ,  {151. }} ,
				{ 253 ,  {252. }} ,
				{ 254 ,  {233. }} ,
				{ 257 ,  {200. }} ,
				{ 258 ,  {198. }} ,
				{ 260 ,  {214. }} ,
				{ 261 ,  {206. }} ,
				{ 265 ,  {281. }} ,
				{ 266 ,  {276. }} ,
				{ 268 ,  {258. }} ,
				{ 269 ,  {249. }} ,
				{ 270 ,  {173. }} ,
				{ 272 ,  {122. }} ,
				{ 273 ,  {99. }} ,
				{ 278 ,  {58. }} ,
				{ 280 ,  {126. }} ,
				{ 281 ,  {111. }} ,
				{ 283 ,  {178. }} ,
				{ 284 ,  {151. }} ,
				{ 288 ,  {262. }} ,
				{ 289 ,  {259. }} ,
				{ 292 ,  {220. }} ,
				{ 293 ,  {209. }} ,
				{ 295 ,  {235. }} ,
				{ 296 ,  {229. }} ,
				{ 298 ,  {122. }} ,
				{ 302 ,  {168. }} ,
				{ 304 ,  {172. }} ,
				{ 305 ,  {174. }} ,
				{ 306 ,  {131. }} ,
				{ 307 ,  {212. }} ,
				{ 312 ,  {94. }} ,
				{ 316 ,  {85. }} ,
				{ 317 ,  {84. }} ,
				{ 318 ,  {90. }} ,
				{ 319 ,  {74. }} ,
				{ 321 ,  {109. }} ,
				{ 323 ,  {102. }} ,
				{ 324 ,  {100. }} ,
				{ 325 ,  {69. }} ,
				{ 327 ,  {142. }} ,
				{ 328 ,  {202. }} ,
				{ 332 ,  {156. }} ,
				{ 334 ,  {66. }} ,
				{ 336 ,  {91. }} ,
				{ 337 ,  {90. }} ,
				{ 340 ,  {190. }} ,
				{ 341 ,  {120. }} ,
				{ 342 ,  {252. }} ,
				{ 345 ,  {171. }} ,
				{ 346 ,  {48. }} ,
				{ 349 ,  {292. }} ,
				{ 352 ,  {281. }} ,
				{ 353 ,  {277. }} ,
				{ 354 ,  {273. }} ,
				{ 358 ,  {178. }} ,
				{ 361 ,  {202. }} ,
				{ 363 ,  {195. }} ,
				{ 364 ,  {197. }} ,
				{ 365 ,  {191. }} ,
				{ 366 ,  {166. }} ,
				{ 368 ,  {138. }} ,
				{ 372 ,  {270. }} ,
				{ 373 ,  {283. }} ,
				{ 375 ,  {248. }} ,
				{ 376 ,  {236. }} ,
				{ 378 ,  {265. }} ,
				{ 381 ,  {217. }} ,
				{ 382 ,  {222. }} ,
				{ 384 ,  {235. }} ,
				{ 385 ,  {241. }} ,
				{ 389 ,  {151. }} ,
				{ 391 ,  {221. }} ,
				{ 392 ,  {259. }} ,
				{ 396 ,  {281. }} ,
				{ 398 ,  {272. }} ,
				{ 399 ,  {275. }} ,
				{ 401 ,  {242. }} ,
				{ 402 ,  {258. }} ,
				{ 405 ,  {346. }} ,
				{ 406 ,  {332. }} ,
				{ 409 ,  {280. }} ,
				{ 411 ,  {275. }} ,
				{ 412 ,  {274. }} ,
				{ 414 ,  {310. }} ,
				{ 415 ,  {308. }} ,
				{ 418 ,  {233. }} ,
				{ 420 ,  {68. }} ,
				{ 421 ,  {128. }} ,
				{ 425 ,  {178. }} ,
				{ 426 ,  {164. }} ,
				{ 428 ,  {180. }} ,
				{ 432 ,  {215. }} ,
				{ 433 ,  {220. }} ,
				{ 434 ,  {233. }} ,
				{ 436 ,  {252. }} ,
				{ 437 ,  {237. }} ,
				{ 440 ,  {306. }} ,
				{ 441 ,  {317. }} ,
				{ 443 ,  {230. }} ,
				{ 445 ,  {268. }} ,
				{ 446 ,  {258. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_8 <= -0.0010539205104578286) ? ( (Feature_2 <= 0.007805602857843041) ? ( (Feature_6 <= 0.021027816459536552) ? ( (Feature_5 <= -0.02605260629206896) ? ( (Feature_5 <= -0.062064677476882935) ? ( (Feature_6 <= -0.021311018615961075) ? ( (Feature_2 <= -0.05524640157818794) ? ( 7 ) : ( 8 ) ) : ( (Feature_2 <= -0.07356920838356018) ? ( 10 ) : ( (Feature_2 <= -0.06386890076100826) ? ( 12 ) : ( (Feature_6 <= -0.004743648809380829) ? ( (Feature_8 <= -0.061780933290719986) ? ( (Feature_3 <= -0.029770705848932266) ? ( 16 ) : ( 17 ) ) : ( 18 ) ) : ( 19 ) ) ) ) ) : ( (Feature_6 <= -0.01578856213018298) ? ( (Feature_6 <= -0.03971920721232891) ? ( 22 ) : ( 23 ) ) : ( (Feature_2 <= -0.050935154780745506) ? ( 25 ) : ( (Feature_6 <= 0.0007788079092279077) ? ( (Feature_8 <= -0.04698631912469864) ? ( 28 ) : ( 29 ) ) : ( (Feature_4 <= -0.05523112043738365) ? ( 31 ) : ( (Feature_4 <= -0.04284754581749439) ? ( 33 ) : ( 34 ) ) ) ) ) ) ) : ( (Feature_4 <= 0.06860463507473469) ? ( (Feature_3 <= 0.10105837881565094) ? ( (Feature_2 <= 0.0013387303915806115) ? ( (Feature_4 <= -0.0008809834253042936) ? ( (Feature_2 <= -0.04662390612065792) ? ( (Feature_4 <= -0.031839922070503235) ? ( (Feature_6 <= -0.01578856131527573) ? ( 42 ) : ( 43 ) ) : ( (Feature_0 <= -0.005514555086847395) ? ( 45 ) : ( 46 ) ) ) : ( (Feature_0 <= 0.03262709826231003) ? ( (Feature_6 <= 0.0063012647442519665) ? ( (Feature_6 <= -0.012106924317777157) ? ( (Feature_4 <= -0.03459182754158974) ? ( (Feature_8 <= -0.021583871450275183) ? ( 52 ) : ( 53 ) ) : ( (Feature_9 <= -0.007290857844054699) ? ( 55 ) : ( 56 ) ) ) : ( (Feature_0 <= 0.005383060604799539) ? ( 58 ) : ( (Feature_8 <= -0.027383035514503717) ? ( (Feature_7 <= -0.02104282204527408) ? ( 61 ) : ( 62 ) ) : ( 63 ) ) ) ) : ( 64 ) ) : ( (Feature_8 <= -0.040701597929000854) ? ( 66 ) : ( (Feature_3 <= -0.01657303422689438) ? ( 68 ) : ( (Feature_3 <= 0.023593789897859097) ? ( 70 ) : ( (Feature_6 <= -0.04524166276678443) ? ( 72 ) : ( 73 ) ) ) ) ) ) ) : ( (Feature_9 <= 0.05898285284638405) ? ( (Feature_9 <= -0.0632093008607626) ? ( 76 ) : ( (Feature_5 <= 0.01622243644669652) ? ( 78 ) : ( (Feature_2 <= -0.022912041284143925) ? ( (Feature_2 <= -0.04500718880444765) ? ( 81 ) : ( 82 ) ) : ( (Feature_8 <= -0.009026624960824847) ? ( (Feature_2 <= -0.018600793555378914) ? ( 85 ) : ( 86 ) ) : ( 87 ) ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 89 ) : ( 90 ) ) ) ) : ( 91 ) ) : ( 92 ) ) : ( 93 ) ) ) : ( (Feature_2 <= -0.0692579597234726) ? ( (Feature_8 <= -0.06470054760575294) ? ( 96 ) : ( (Feature_2 <= -0.07788045704364777) ? ( 98 ) : ( (Feature_6 <= 0.048640099354088306) ? ( 100 ) : ( 101 ) ) ) ) : ( (Feature_5 <= -0.008829440455883741) ? ( (Feature_4 <= -0.007760747568681836) ? ( (Feature_9 <= 0.019632837269455194) ? ( (Feature_6 <= 0.050480917096138) ? ( (Feature_5 <= -0.05658458173274994) ? ( (Feature_5 <= -0.08179303258657455) ? ( (Feature_5 <= -0.09745045378804207) ? ( 109 ) : ( 110 ) ) : ( (Feature_9 <= -0.10463037341833115) ? ( 112 ) : ( 113 ) ) ) : ( (Feature_8 <= -0.08113269507884979) ? ( (Feature_9 <= -0.019717178773134947) ? ( 116 ) : ( 117 ) ) : ( (Feature_5 <= -0.027461773715913296) ? ( (Feature_2 <= -0.035306879319250584) ? ( 120 ) : ( 121 ) ) : ( 122 ) ) ) ) : ( (Feature_0 <= -0.01459590153535828) ? ( (Feature_0 <= -0.04910501651465893) ? ( 125 ) : ( 126 ) ) : ( (Feature_2 <= -0.050935154780745506) ? ( 128 ) : ( (Feature_8 <= -0.045123360119760036) ? ( 130 ) : ( (Feature_5 <= -0.05689772963523865) ? ( 132 ) : ( 133 ) ) ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 135 ) : ( 136 ) ) ) : ( (Feature_6 <= 0.0652074683457613) ? ( (Feature_4 <= -0.00569681846536696) ? ( 139 ) : ( (Feature_9 <= -0.048711927607655525) ? ( 141 ) : ( 142 ) ) ) : ( (Feature_9 <= -0.01557507086545229) ? ( 144 ) : ( 145 ) ) ) ) : ( (Feature_9 <= 0.04034337215125561) ? ( (Feature_0 <= 0.0017505218856967986) ? ( (Feature_0 <= -0.03820740059018135) ? ( (Feature_5 <= 0.04315320402383804) ? ( (Feature_7 <= -0.0321131581440568) ? ( 151 ) : ( 152 ) ) : ( 153 ) ) : ( (Feature_8 <= -0.022519119083881378) ? ( (Feature_6 <= 0.03943600505590439) ? ( 156 ) : ( (Feature_3 <= -0.01772065833210945) ? ( (Feature_6 <= 0.0707299243658781) ? ( 159 ) : ( 160 ) ) : ( 161 ) ) ) : ( (Feature_2 <= -0.023989852517843246) ? ( 163 ) : ( 164 ) ) ) ) : ( (Feature_2 <= -0.00782267248723656) ? ( (Feature_7 <= -0.03857085481286049) ? ( (Feature_6 <= 0.07257074490189552) ? ( (Feature_9 <= 0.01756178360665217) ? ( (Feature_3 <= -0.0022277398966252804) ? ( (Feature_6 <= 0.05968501418828964) ? ( 171 ) : ( 172 ) ) : ( 173 ) ) : ( 174 ) ) : ( 175 ) ) : ( (Feature_4 <= 0.02182223850832088) ? ( 177 ) : ( (Feature_3 <= -0.0022277403622865677) ? ( 179 ) : ( 180 ) ) ) ) : ( (Feature_6 <= 0.048640099354088306) ? ( 182 ) : ( 183 ) ) ) ) : ( 184 ) ) ) ) ) : ( (Feature_0 <= -0.08361412957310677) ? ( 186 ) : ( (Feature_3 <= 0.011543742846697569) ? ( (Feature_4 <= -0.046975404024124146) ? ( 189 ) : ( (Feature_2 <= 0.041756683960556984) ? ( (Feature_2 <= 0.024511689320206642) ? ( 192 ) : ( (Feature_2 <= 0.03906215354800224) ? ( (Feature_8 <= -0.023162845754995942) ? ( 195 ) : ( 196 ) ) : ( 197 ) ) ) : ( (Feature_8 <= -0.03415451478213072) ? ( (Feature_6 <= -0.021311018150299788) ? ( 200 ) : ( 201 ) ) : ( (Feature_6 <= -0.03603757079690695) ? ( 203 ) : ( (Feature_5 <= 0.0032267753704218194) ? ( 205 ) : ( 206 ) ) ) ) ) ) : ( (Feature_2 <= 0.047145744785666466) ? ( (Feature_8 <= -0.04232466034591198) ? ( (Feature_0 <= -0.001882016658782959) ? ( 210 ) : ( 211 ) ) : ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_0 <= 0.03625963628292084) ? ( (Feature_3 <= 0.0425295801833272) ? ( 215 ) : ( (Feature_6 <= -0.041560026817023754) ? ( 217 ) : ( 218 ) ) ) : ( 219 ) ) : ( 220 ) ) ) : ( (Feature_5 <= -0.006637401122134179) ? ( (Feature_2 <= 0.062235115095973015) ? ( 223 ) : ( 224 ) ) : ( (Feature_5 <= 0.009646318678278476) ? ( 226 ) : ( 227 ) ) ) ) ) ) ) : ( (Feature_2 <= 0.047145744785666466) ? ( (Feature_3 <= 0.02531522512435913) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= 0.025589502416551113) ? ( (Feature_3 <= -0.05960891768336296) ? ( (Feature_3 <= -0.06477322615683079) ? ( (Feature_4 <= 0.01769438199698925) ? ( (Feature_6 <= 0.0007788080256432295) ? ( 236 ) : ( 237 ) ) : ( 238 ) ) : ( 239 ) ) : ( (Feature_2 <= -0.0013557997299358249) ? ( (Feature_8 <= 0.015917965676635504) ? ( (Feature_0 <= -0.06726770661771297) ? ( (Feature_2 <= -0.026684382930397987) ? ( 244 ) : ( 245 ) ) : ( (Feature_9 <= -0.023859284818172455) ? ( 247 ) : ( (Feature_4 <= 0.014254497829824686) ? ( 249 ) : ( 250 ) ) ) ) : ( (Feature_0 <= 0.014464406296610832) ? ( (Feature_7 <= 0.05275941814761609) ? ( 253 ) : ( 254 ) ) : ( (Feature_5 <= -0.02824464486911893) ? ( (Feature_8 <= 0.031711747869849205) ? ( 257 ) : ( 258 ) ) : ( (Feature_5 <= -0.004132213769480586) ? ( 260 ) : ( 261 ) ) ) ) ) : ( (Feature_0 <= 0.047157252207398415) ? ( (Feature_4 <= -0.010512653505429626) ? ( (Feature_6 <= 0.011823720997199416) ? ( 265 ) : ( 266 ) ) : ( (Feature_9 <= -0.01764612551778555) ? ( 268 ) : ( 269 ) ) ) : ( 270 ) ) ) ) : ( (Feature_3 <= 0.004658001707866788) ? ( 272 ) : ( 273 ) ) ) : ( (Feature_6 <= -0.026833475567400455) ? ( (Feature_4 <= -0.013264559675008059) ? ( (Feature_6 <= -0.0434008464217186) ? ( (Feature_7 <= 0.03135676868259907) ? ( 278 ) : ( (Feature_3 <= -0.033213576301932335) ? ( 280 ) : ( 281 ) ) ) : ( (Feature_9 <= -0.0010776976123452187) ? ( 283 ) : ( 284 ) ) ) : ( (Feature_0 <= 0.02354575227946043) ? ( (Feature_3 <= -0.008539669448509812) ? ( (Feature_4 <= 0.014942475128918886) ? ( 288 ) : ( 289 ) ) : ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_3 <= 0.004658001358620822) ? ( 292 ) : ( 293 ) ) : ( (Feature_6 <= -0.05444575846195221) ? ( 295 ) : ( 296 ) ) ) ) : ( (Feature_0 <= 0.02899456024169922) ? ( 298 ) : ( (Feature_3 <= 0.013265178073197603) ? ( (Feature_5 <= 0.08386250585317612) ? ( (Feature_2 <= -0.032073444686830044) ? ( 302 ) : ( (Feature_2 <= 0.007805603556334972) ? ( 304 ) : ( 305 ) ) ) : ( 306 ) ) : ( 307 ) ) ) ) ) : ( (Feature_8 <= 0.025383420288562775) ? ( (Feature_4 <= 0.07410844601690769) ? ( (Feature_4 <= 0.034893790259957314) ? ( (Feature_4 <= -0.013952535577118397) ? ( 312 ) : ( (Feature_9 <= 0.03413021098822355) ? ( (Feature_8 <= 0.01775199268013239) ? ( (Feature_3 <= -0.029196894727647305) ? ( 316 ) : ( 317 ) ) : ( 318 ) ) : ( 319 ) ) ) : ( (Feature_8 <= 0.008552521467208862) ? ( 321 ) : ( (Feature_9 <= 0.056911799125373363) ? ( 323 ) : ( 324 ) ) ) ) : ( 325 ) ) : ( (Feature_0 <= 0.027178290765732527) ? ( 327 ) : ( 328 ) ) ) ) ) : ( (Feature_2 <= -0.021834230050444603) ? ( (Feature_3 <= 0.039086708799004555) ? ( (Feature_8 <= 0.00921530753839761) ? ( 332 ) : ( (Feature_4 <= 0.01563045079819858) ? ( 334 ) : ( (Feature_6 <= -0.017629379406571388) ? ( 336 ) : ( 337 ) ) ) ) : ( (Feature_2 <= -0.029917818494141102) ? ( (Feature_1 <= 0.003019241616129875) ? ( 340 ) : ( 341 ) ) : ( 342 ) ) ) : ( (Feature_0 <= -0.012779631884768605) ? ( (Feature_9 <= -0.015575072262436152) ? ( 345 ) : ( 346 ) ) : ( (Feature_6 <= -0.0434008464217186) ? ( (Feature_0 <= 0.021729483269155025) ? ( 349 ) : ( (Feature_2 <= 0.012655757600441575) ? ( (Feature_1 <= 0.003019241616129875) ? ( 352 ) : ( 353 ) ) : ( 354 ) ) ) : ( (Feature_5 <= 0.008863447699695826) ? ( (Feature_6 <= 0.06888910755515099) ? ( (Feature_6 <= -0.021311019081622362) ? ( 358 ) : ( (Feature_9 <= 0.0486275851726532) ? ( (Feature_4 <= 0.012878545559942722) ? ( 361 ) : ( (Feature_4 <= 0.032141885720193386) ? ( 363 ) : ( 364 ) ) ) : ( 365 ) ) ) : ( 366 ) ) : ( (Feature_8 <= 0.015935898758471012) ? ( 368 ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_8 <= 0.05780599266290665) ? ( (Feature_6 <= 0.026550272945314646) ? ( 372 ) : ( 373 ) ) : ( (Feature_8 <= 0.0659206360578537) ? ( 375 ) : ( 376 ) ) ) : ( (Feature_9 <= -0.009361911041196436) ? ( 378 ) : ( (Feature_4 <= 0.04727736674249172) ? ( (Feature_5 <= 0.0395519956946373) ? ( 381 ) : ( 382 ) ) : ( (Feature_7 <= 0.034308859962038696) ? ( 384 ) : ( 385 ) ) ) ) ) ) ) ) ) ) ) : ( (Feature_5 <= 0.022485405206680298) ? ( (Feature_9 <= -0.015575071331113577) ? ( (Feature_8 <= 0.026170823723077774) ? ( 389 ) : ( (Feature_2 <= 0.059001678600907326) ? ( 391 ) : ( 392 ) ) ) : ( (Feature_5 <= -0.021825101226568222) ? ( (Feature_8 <= 0.08046303875744343) ? ( (Feature_5 <= -0.04593753255903721) ? ( 396 ) : ( (Feature_6 <= -0.047082481905817986) ? ( 398 ) : ( 399 ) ) ) : ( (Feature_6 <= -0.058127397671341896) ? ( 401 ) : ( 402 ) ) ) : ( (Feature_6 <= -0.045241665095090866) ? ( (Feature_8 <= 0.0289760772138834) ? ( 405 ) : ( 406 ) ) : ( (Feature_4 <= 0.014942474663257599) ? ( (Feature_9 <= 0.003064409364014864) ? ( 409 ) : ( (Feature_6 <= -0.01394774322398007) ? ( 411 ) : ( 412 ) ) ) : ( (Feature_3 <= 0.09245120361447334) ? ( 414 ) : ( 415 ) ) ) ) ) ) : ( (Feature_0 <= -0.05092128552496433) ? ( (Feature_0 <= -0.07634905353188515) ? ( 418 ) : ( (Feature_9 <= 0.0030644088983535767) ? ( 420 ) : ( 421 ) ) ) : ( (Feature_7 <= 0.09002954885363579) ? ( (Feature_2 <= 0.060079487040638924) ? ( (Feature_8 <= 0.026027361396700144) ? ( 425 ) : ( 426 ) ) : ( (Feature_6 <= -0.0489233024418354) ? ( 428 ) : ( (Feature_0 <= -0.007330824097152799) ? ( (Feature_8 <= 0.07061643898487091) ? ( (Feature_6 <= -0.008425286621786654) ? ( 432 ) : ( 433 ) ) : ( 434 ) ) : ( (Feature_0 <= 0.0362596363411285) ? ( 436 ) : ( 437 ) ) ) ) ) : ( (Feature_3 <= -0.019442093325778842) ? ( (Feature_9 <= 0.09211970865726471) ? ( 440 ) : ( 441 ) ) : ( (Feature_4 <= 0.05828498862683773) ? ( 443 ) : ( (Feature_6 <= -0.04156002588570118) ? ( 445 ) : ( 446 ) ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_13
	

	namespace EXT_SubModel_14 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 8 ,  {74. }} ,
				{ 9 ,  {77. }} ,
				{ 10 ,  {55. }} ,
				{ 16 ,  {101. }} ,
				{ 18 ,  {96. }} ,
				{ 19 ,  {93. }} ,
				{ 21 ,  {128. }} ,
				{ 22 ,  {131. }} ,
				{ 25 ,  {158. }} ,
				{ 26 ,  {160. }} ,
				{ 27 ,  {135. }} ,
				{ 29 ,  {25. }} ,
				{ 30 ,  {31. }} ,
				{ 36 ,  {185. }} ,
				{ 37 ,  {200. }} ,
				{ 40 ,  {168. }} ,
				{ 41 ,  {162. }} ,
				{ 42 ,  {151. }} ,
				{ 43 ,  {113. }} ,
				{ 45 ,  {200. }} ,
				{ 46 ,  {216. }} ,
				{ 50 ,  {86. }} ,
				{ 51 ,  {68. }} ,
				{ 52 ,  {104. }} ,
				{ 54 ,  {178. }} ,
				{ 56 ,  {146. }} ,
				{ 57 ,  {127. }} ,
				{ 59 ,  {200. }} ,
				{ 60 ,  {230. }} ,
				{ 66 ,  {88. }} ,
				{ 67 ,  {91. }} ,
				{ 68 ,  {58. }} ,
				{ 72 ,  {61. }} ,
				{ 74 ,  {104. }} ,
				{ 75 ,  {107. }} ,
				{ 77 ,  {156. }} ,
				{ 78 ,  {129. }} ,
				{ 79 ,  {202. }} ,
				{ 84 ,  {70. }} ,
				{ 85 ,  {83. }} ,
				{ 86 ,  {101. }} ,
				{ 88 ,  {116. }} ,
				{ 89 ,  {138. }} ,
				{ 93 ,  {71. }} ,
				{ 94 ,  {60. }} ,
				{ 96 ,  {54. }} ,
				{ 97 ,  {44. }} ,
				{ 101 ,  {83. }} ,
				{ 102 ,  {88. }} ,
				{ 104 ,  {111. }} ,
				{ 105 ,  {97. }} ,
				{ 106 ,  {53. }} ,
				{ 112 ,  {118. }} ,
				{ 113 ,  {124. }} ,
				{ 114 ,  {102. }} ,
				{ 116 ,  {150. }} ,
				{ 117 ,  {168. }} ,
				{ 119 ,  {177. }} ,
				{ 120 ,  {179. }} ,
				{ 123 ,  {84. }} ,
				{ 124 ,  {89. }} ,
				{ 125 ,  {100. }} ,
				{ 129 ,  {37. }} ,
				{ 130 ,  {40. }} ,
				{ 134 ,  {137. }} ,
				{ 135 ,  {143. }} ,
				{ 138 ,  {85. }} ,
				{ 139 ,  {99. }} ,
				{ 141 ,  {125. }} ,
				{ 142 ,  {114. }} ,
				{ 148 ,  {98. }} ,
				{ 149 ,  {90. }} ,
				{ 152 ,  {48. }} ,
				{ 153 ,  {49. }} ,
				{ 157 ,  {51. }} ,
				{ 158 ,  {60. }} ,
				{ 160 ,  {87. }} ,
				{ 164 ,  {75. }} ,
				{ 165 ,  {77. }} ,
				{ 166 ,  {72. }} ,
				{ 167 ,  {66. }} ,
				{ 168 ,  {96. }} ,
				{ 170 ,  {39. }} ,
				{ 171 ,  {51. }} ,
				{ 174 ,  {42. }} ,
				{ 175 ,  {39. }} ,
				{ 177 ,  {48. }} ,
				{ 178 ,  {49. }} ,
				{ 180 ,  {158. }} ,
				{ 185 ,  {87. }} ,
				{ 186 ,  {92. }} ,
				{ 187 ,  {102. }} ,
				{ 189 ,  {113. }} ,
				{ 190 ,  {118. }} ,
				{ 193 ,  {71. }} ,
				{ 196 ,  {63. }} ,
				{ 197 ,  {65. }} ,
				{ 198 ,  {59. }} ,
				{ 200 ,  {52. }} ,
				{ 203 ,  {81. }} ,
				{ 206 ,  {97. }} ,
				{ 207 ,  {94. }} ,
				{ 208 ,  {91. }} ,
				{ 210 ,  {80. }} ,
				{ 211 ,  {84. }} ,
				{ 216 ,  {153. }} ,
				{ 217 ,  {168. }} ,
				{ 218 ,  {214. }} ,
				{ 220 ,  {88. }} ,
				{ 221 ,  {109. }} ,
				{ 223 ,  {102. }} ,
				{ 225 ,  {48. }} ,
				{ 226 ,  {73. }} ,
				{ 230 ,  {206. }} ,
				{ 232 ,  {161. }} ,
				{ 234 ,  {144. }} ,
				{ 235 ,  {126. }} ,
				{ 237 ,  {131. }} ,
				{ 239 ,  {292. }} ,
				{ 242 ,  {252. }} ,
				{ 243 ,  {259. }} ,
				{ 246 ,  {233. }} ,
				{ 247 ,  {241. }} ,
				{ 248 ,  {248. }} ,
				{ 252 ,  {94. }} ,
				{ 253 ,  {115. }} ,
				{ 254 ,  {69. }} ,
				{ 258 ,  {200. }} ,
				{ 260 ,  {197. }} ,
				{ 261 ,  {198. }} ,
				{ 262 ,  {191. }} ,
				{ 265 ,  {190. }} ,
				{ 268 ,  {134. }} ,
				{ 269 ,  {120. }} ,
				{ 271 ,  {95. }} ,
				{ 272 ,  {90. }} ,
				{ 274 ,  {123. }} ,
				{ 276 ,  {217. }} ,
				{ 278 ,  {202. }} ,
				{ 279 ,  {196. }} ,
				{ 291 ,  {201. }} ,
				{ 292 ,  {210. }} ,
				{ 294 ,  {182. }} ,
				{ 295 ,  {191. }} ,
				{ 296 ,  {145. }} ,
				{ 298 ,  {276. }} ,
				{ 299 ,  {265. }} ,
				{ 303 ,  {113. }} ,
				{ 304 ,  {127. }} ,
				{ 306 ,  {151. }} ,
				{ 307 ,  {173. }} ,
				{ 309 ,  {202. }} ,
				{ 312 ,  {172. }} ,
				{ 314 ,  {178. }} ,
				{ 315 ,  {182. }} ,
				{ 316 ,  {196. }} ,
				{ 318 ,  {244. }} ,
				{ 319 ,  {235. }} ,
				{ 322 ,  {122. }} ,
				{ 324 ,  {96. }} ,
				{ 325 ,  {67. }} ,
				{ 327 ,  {143. }} ,
				{ 328 ,  {138. }} ,
				{ 332 ,  {242. }} ,
				{ 333 ,  {249. }} ,
				{ 334 ,  {212. }} ,
				{ 336 ,  {273. }} ,
				{ 337 ,  {283. }} ,
				{ 340 ,  {221. }} ,
				{ 343 ,  {90. }} ,
				{ 345 ,  {137. }} ,
				{ 346 ,  {147. }} ,
				{ 348 ,  {99. }} ,
				{ 351 ,  {70. }} ,
				{ 352 ,  {68. }} ,
				{ 353 ,  {91. }} ,
				{ 356 ,  {151. }} ,
				{ 358 ,  {263. }} ,
				{ 359 ,  {259. }} ,
				{ 362 ,  {144. }} ,
				{ 364 ,  {187. }} ,
				{ 368 ,  {175. }} ,
				{ 369 ,  {174. }} ,
				{ 371 ,  {178. }} ,
				{ 372 ,  {180. }} ,
				{ 373 ,  {164. }} ,
				{ 375 ,  {78. }} ,
				{ 377 ,  {121. }} ,
				{ 378 ,  {110. }} ,
				{ 384 ,  {232. }} ,
				{ 385 ,  {225. }} ,
				{ 386 ,  {248. }} ,
				{ 389 ,  {317. }} ,
				{ 391 ,  {277. }} ,
				{ 392 ,  {297. }} ,
				{ 394 ,  {242. }} ,
				{ 396 ,  {272. }} ,
				{ 397 ,  {268. }} ,
				{ 400 ,  {311. }} ,
				{ 402 ,  {246. }} ,
				{ 405 ,  {222. }} ,
				{ 407 ,  {166. }} ,
				{ 410 ,  {202. }} ,
				{ 412 ,  {192. }} ,
				{ 413 ,  {186. }} ,
				{ 414 ,  {173. }} ,
				{ 415 ,  {150. }} ,
				{ 418 ,  {303. }} ,
				{ 420 ,  {258. }} ,
				{ 422 ,  {270. }} ,
				{ 423 ,  {275. }} ,
				{ 425 ,  {217. }} ,
				{ 426 ,  {243. }} ,
				{ 427 ,  {84. }} ,
				{ 430 ,  {140. }} ,
				{ 431 ,  {220. }} ,
				{ 435 ,  {321. }} ,
				{ 436 ,  {336. }} ,
				{ 437 ,  {288. }} ,
				{ 440 ,  {332. }} ,
				{ 441 ,  {306. }} ,
				{ 445 ,  {275. }} ,
				{ 447 ,  {258. }} ,
				{ 449 ,  {261. }} ,
				{ 450 ,  {264. }} ,
				{ 452 ,  {242. }} ,
				{ 453 ,  {237. }} ,
				{ 456 ,  {257. }} ,
				{ 457 ,  {274. }} ,
				{ 459 ,  {310. }} ,
				{ 460 ,  {308. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_2 <= 0.005111072678118944) ? ( (Feature_8 <= 0.022001435048878193) ? ( (Feature_6 <= 0.021027816459536552) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_2 <= -0.0067448599729686975) ? ( (Feature_3 <= -0.09002094343304634) ? ( (Feature_6 <= 0.0081420837668702) ? ( (Feature_9 <= -0.028001392260193825) ? ( 8 ) : ( 9 ) ) : ( 10 ) ) : ( (Feature_9 <= -0.03214349877089262) ? ( (Feature_2 <= -0.011595014482736588) ? ( (Feature_6 <= 0.0026196270482614636) ? ( (Feature_2 <= -0.03800140880048275) ? ( (Feature_5 <= -0.044841513474239036) ? ( 16 ) : ( (Feature_9 <= -0.044569820165634155) ? ( 18 ) : ( 19 ) ) ) : ( (Feature_2 <= -0.02937891334295273) ? ( 21 ) : ( 22 ) ) ) : ( (Feature_5 <= 0.011838357895612717) ? ( (Feature_8 <= -0.037004063837230206) ? ( 25 ) : ( 26 ) ) : ( 27 ) ) ) : ( (Feature_2 <= -0.009439390152692795) ? ( 29 ) : ( 30 ) ) ) : ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_6 <= 0.013664540369063616) ? ( (Feature_6 <= 0.009982902556657791) ? ( (Feature_9 <= -0.01971717830747366) ? ( (Feature_8 <= 0.0040853298851288855) ? ( 36 ) : ( 37 ) ) : ( (Feature_7 <= 0.015858298051171005) ? ( (Feature_8 <= -0.020714153011795133) ? ( 40 ) : ( 41 ) ) : ( 42 ) ) ) : ( 43 ) ) : ( (Feature_2 <= -0.025067664682865143) ? ( 45 ) : ( 46 ) ) ) : ( (Feature_0 <= 0.0035667908377945423) ? ( (Feature_6 <= 0.0081420837668702) ? ( (Feature_2 <= -0.05794093385338783) ? ( 50 ) : ( 51 ) ) : ( 52 ) ) : ( (Feature_0 <= 0.01991321425884962) ? ( 54 ) : ( (Feature_0 <= 0.04534098319709301) ? ( 56 ) : ( 57 ) ) ) ) ) ) ) : ( (Feature_7 <= 0.015858298051171005) ? ( 59 ) : ( 60 ) ) ) : ( (Feature_9 <= 0.015490729827433825) ? ( (Feature_6 <= -0.024992655962705612) ? ( (Feature_6 <= -0.06364985182881355) ? ( (Feature_8 <= 0.017382938414812088) ? ( (Feature_0 <= 0.005383060604799539) ? ( 66 ) : ( 67 ) ) : ( 68 ) ) : ( (Feature_8 <= 0.01775199268013239) ? ( (Feature_0 <= -0.007330823689699173) ? ( (Feature_4 <= -0.046287426725029945) ? ( 72 ) : ( (Feature_7 <= 0.015858298051171005) ? ( 74 ) : ( 75 ) ) ) : ( (Feature_9 <= -0.03421455295756459) ? ( 77 ) : ( 78 ) ) ) : ( 79 ) ) ) : ( (Feature_2 <= -0.045546093955636024) ? ( (Feature_4 <= -0.059358980506658554) ? ( (Feature_8 <= -0.045123360119760036) ? ( (Feature_6 <= -0.00842528638895601) ? ( 84 ) : ( 85 ) ) : ( 86 ) ) : ( (Feature_8 <= -0.06752070039510727) ? ( 88 ) : ( 89 ) ) ) : ( (Feature_8 <= -0.027136333286762238) ? ( (Feature_6 <= -0.010266105411574244) ? ( (Feature_8 <= -0.033886250108480453) ? ( 93 ) : ( 94 ) ) : ( (Feature_3 <= 0.00293656624853611) ? ( 96 ) : ( 97 ) ) ) : ( (Feature_3 <= 0.014986613066866994) ? ( (Feature_4 <= -0.00913670053705573) ? ( (Feature_8 <= -0.02203534636646509) ? ( 101 ) : ( 102 ) ) : ( (Feature_2 <= -0.017522981390357018) ? ( 104 ) : ( 105 ) ) ) : ( 106 ) ) ) ) ) : ( (Feature_5 <= 0.041430888697505) ? ( (Feature_2 <= -0.012672826647758484) ? ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_7 <= 0.023607533425092697) ? ( (Feature_8 <= -0.023162845754995942) ? ( 112 ) : ( 113 ) ) : ( 114 ) ) : ( (Feature_6 <= -0.06733148917555809) ? ( 116 ) : ( 117 ) ) ) : ( (Feature_7 <= 0.013090713880956173) ? ( 119 ) : ( 120 ) ) ) : ( (Feature_8 <= 0.01138939755037427) ? ( (Feature_5 <= 0.04785043187439442) ? ( 123 ) : ( 124 ) ) : ( 125 ) ) ) ) ) : ( (Feature_8 <= -0.009924227371811867) ? ( (Feature_5 <= -0.10026878863573074) ? ( (Feature_2 <= -0.050935154780745506) ? ( 129 ) : ( 130 ) ) : ( (Feature_4 <= -0.04972730949521065) ? ( (Feature_5 <= -0.08179303258657455) ? ( (Feature_4 <= -0.08275017887353897) ? ( 134 ) : ( 135 ) ) : ( (Feature_7 <= -0.07288889959454536) ? ( (Feature_3 <= -0.04182075243443251) ? ( 138 ) : ( 139 ) ) : ( (Feature_9 <= -0.10463037341833115) ? ( 141 ) : ( 142 ) ) ) ) : ( (Feature_4 <= 0.00943866278976202) ? ( (Feature_9 <= 0.019632837269455194) ? ( (Feature_4 <= 0.001870922278612852) ? ( (Feature_8 <= -0.07022909820079803) ? ( (Feature_7 <= -0.06403262913227081) ? ( 148 ) : ( 149 ) ) : ( (Feature_2 <= -0.0676412396132946) ? ( (Feature_9 <= -0.01971717830747366) ? ( 152 ) : ( 153 ) ) : ( (Feature_4 <= -0.005696818232536316) ? ( (Feature_3 <= -0.05214936379343271) ? ( (Feature_8 <= -0.03018871508538723) ? ( 157 ) : ( 158 ) ) : ( (Feature_5 <= -0.0684842225164175) ? ( 160 ) : ( (Feature_0 <= 0.045340982265770435) ? ( (Feature_0 <= 0.009015598392579705) ? ( (Feature_2 <= -0.048779530450701714) ? ( 164 ) : ( 165 ) ) : ( 166 ) ) : ( 167 ) ) ) ) : ( 168 ) ) ) ) : ( (Feature_3 <= -0.04870649427175522) ? ( 170 ) : ( 171 ) ) ) : ( (Feature_4 <= -0.005008842163078953) ? ( (Feature_0 <= -0.043656209483742714) ? ( 174 ) : ( 175 ) ) : ( (Feature_4 <= 0.0025588988137315027) ? ( 177 ) : ( 178 ) ) ) ) : ( (Feature_2 <= -0.051474060863256454) ? ( 180 ) : ( (Feature_5 <= 0.009959467221051455) ? ( (Feature_5 <= -0.00021785781063954346) ? ( (Feature_5 <= -0.005228233218076639) ? ( (Feature_9 <= 0.017561784014105797) ? ( 185 ) : ( 186 ) ) : ( 187 ) ) : ( (Feature_0 <= -0.0036982856690883636) ? ( 189 ) : ( 190 ) ) ) : ( (Feature_6 <= 0.03207272943109274) ? ( (Feature_5 <= 0.02138938568532467) ? ( 193 ) : ( (Feature_8 <= -0.019755974411964417) ? ( (Feature_8 <= -0.02860520500689745) ? ( 196 ) : ( 197 ) ) : ( 198 ) ) ) : ( (Feature_2 <= -0.03422906808555126) ? ( 200 ) : ( (Feature_7 <= -0.013662598212249577) ? ( (Feature_5 <= 0.01841447502374649) ? ( 203 ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_7 <= -0.0321131581440568) ? ( 206 ) : ( 207 ) ) : ( 208 ) ) ) : ( (Feature_8 <= -0.0458014952018857) ? ( 210 ) : ( 211 ) ) ) ) ) ) ) ) ) ) : ( (Feature_9 <= 0.009277569595724344) ? ( (Feature_2 <= -0.011056108633056283) ? ( (Feature_6 <= 0.0707299243658781) ? ( (Feature_5 <= -0.015405558049678802) ? ( 216 ) : ( 217 ) ) : ( 218 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 220 ) : ( 221 ) ) ) : ( (Feature_7 <= -0.04650459624826908) ? ( 223 ) : ( (Feature_5 <= 0.005262239836156368) ? ( 225 ) : ( 226 ) ) ) ) ) ) : ( (Feature_6 <= -0.034196751192212105) ? ( (Feature_0 <= -6.574741564691067e-05) ? ( (Feature_1 <= 0.003019241616129875) ? ( 230 ) : ( (Feature_2 <= -0.0067448599729686975) ? ( 232 ) : ( (Feature_6 <= -0.07469476759433746) ? ( 234 ) : ( 235 ) ) ) ) : ( (Feature_3 <= -0.028049269691109657) ? ( 237 ) : ( (Feature_8 <= 0.02371371164917946) ? ( 239 ) : ( (Feature_8 <= 0.05138820596039295) ? ( (Feature_1 <= 0.003019241616129875) ? ( 242 ) : ( 243 ) ) : ( (Feature_2 <= -0.013750639045611024) ? ( (Feature_8 <= 0.08311749808490276) ? ( 246 ) : ( 247 ) ) : ( 248 ) ) ) ) ) ) : ( (Feature_8 <= 0.024388953112065792) ? ( (Feature_4 <= 0.0844280943274498) ? ( (Feature_6 <= -0.0010620111133903265) ? ( 252 ) : ( 253 ) ) : ( 254 ) ) : ( (Feature_5 <= -0.017441023141145706) ? ( (Feature_6 <= 0.04864010028541088) ? ( (Feature_7 <= -0.03266667481511831) ? ( 258 ) : ( (Feature_9 <= 0.0030644098296761513) ? ( 260 ) : ( 261 ) ) ) : ( 262 ) ) : ( (Feature_2 <= -0.005128141958266497) ? ( (Feature_0 <= 0.02354575227946043) ? ( 265 ) : ( (Feature_8 <= 0.04316943138837814) ? ( (Feature_5 <= 0.04252690635621548) ? ( 268 ) : ( 269 ) ) : ( (Feature_3 <= -0.007965857163071632) ? ( 271 ) : ( 272 ) ) ) ) : ( (Feature_6 <= -0.002902829088270664) ? ( 274 ) : ( (Feature_0 <= 0.05442233011126518) ? ( 276 ) : ( (Feature_4 <= 0.11469905823469162) ? ( 278 ) : ( 279 ) ) ) ) ) ) ) ) ) : ( (Feature_2 <= 0.06924089416861534) ? ( (Feature_9 <= 0.025845997966825962) ? ( (Feature_2 <= 0.03367309272289276) ? ( (Feature_8 <= 0.042869215831160545) ? ( (Feature_5 <= 0.04769385606050491) ? ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_9 <= -0.003148751042317599) ? ( (Feature_8 <= 0.00015334226191043854) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_0 <= -0.014595900662243366) ? ( (Feature_3 <= -0.06075654178857803) ? ( 291 ) : ( 292 ) ) : ( (Feature_6 <= 0.02470945380628109) ? ( 294 ) : ( 295 ) ) ) : ( 296 ) ) : ( (Feature_4 <= -0.0036328891292214394) ? ( 298 ) : ( 299 ) ) ) : ( (Feature_2 <= 0.01912263035774231) ? ( (Feature_8 <= -0.0005405675619840622) ? ( (Feature_7 <= -0.02104282204527408) ? ( 303 ) : ( 304 ) ) : ( (Feature_5 <= -0.036543079651892185) ? ( 306 ) : ( 307 ) ) ) : ( (Feature_4 <= -0.030463969334959984) ? ( 309 ) : ( (Feature_5 <= 0.028122078627347946) ? ( (Feature_4 <= -0.014640511944890022) ? ( 312 ) : ( (Feature_2 <= 0.022356065921485424) ? ( 314 ) : ( 315 ) ) ) : ( 316 ) ) ) ) ) : ( (Feature_5 <= 0.04080459102988243) ? ( 318 ) : ( 319 ) ) ) : ( (Feature_3 <= 0.039086708799004555) ? ( (Feature_6 <= -0.0010620108805596828) ? ( 322 ) : ( (Feature_3 <= 0.008100872859358788) ? ( 324 ) : ( 325 ) ) ) : ( (Feature_5 <= 0.07133656553924084) ? ( 327 ) : ( 328 ) ) ) ) : ( (Feature_3 <= 0.03908670786768198) ? ( (Feature_2 <= 0.01588919386267662) ? ( (Feature_0 <= 0.021729483269155025) ? ( 332 ) : ( 333 ) ) : ( 334 ) ) : ( (Feature_2 <= 0.022356065921485424) ? ( 336 ) : ( 337 ) ) ) ) : ( (Feature_9 <= -0.01971717830747366) ? ( (Feature_9 <= -0.048711925745010376) ? ( 340 ) : ( (Feature_9 <= -0.036285605281591415) ? ( (Feature_4 <= -0.016704441513866186) ? ( 343 ) : ( (Feature_0 <= -0.05273755360394716) ? ( 345 ) : ( 346 ) ) ) : ( (Feature_5 <= -0.03184585180133581) ? ( 348 ) : ( (Feature_2 <= 0.05738495662808418) ? ( (Feature_2 <= 0.04606793075799942) ? ( 351 ) : ( 352 ) ) : ( 353 ) ) ) ) ) : ( (Feature_9 <= -0.01350401807576418) ? ( (Feature_5 <= -0.016814725648146123) ? ( 356 ) : ( (Feature_4 <= -0.019456347450613976) ? ( 358 ) : ( 359 ) ) ) : ( (Feature_2 <= 0.06061839312314987) ? ( (Feature_8 <= -0.048472099006175995) ? ( 362 ) : ( (Feature_8 <= -0.03925455920398235) ? ( 364 ) : ( (Feature_5 <= 0.06272498145699501) ? ( (Feature_8 <= 0.009381234180182219) ? ( (Feature_4 <= 0.0011829454451799393) ? ( 368 ) : ( 369 ) ) : ( (Feature_6 <= -0.032355932518839836) ? ( 371 ) : ( 372 ) ) ) : ( 373 ) ) ) ) : ( (Feature_5 <= -0.00851629232056439) ? ( 375 ) : ( (Feature_0 <= 0.019913213385734707) ? ( 377 ) : ( 378 ) ) ) ) ) ) ) : ( (Feature_7 <= 0.17028948664665222) ? ( (Feature_6 <= -0.045241665095090866) ? ( (Feature_9 <= 0.05276969261467457) ? ( (Feature_5 <= 0.04628468677401543) ? ( (Feature_6 <= -0.06733148917555809) ? ( 384 ) : ( 385 ) ) : ( 386 ) ) : ( (Feature_2 <= 0.05199589766561985) ? ( (Feature_6 <= -0.06364985555410385) ? ( 389 ) : ( (Feature_5 <= 0.006514834007248282) ? ( 391 ) : ( 392 ) ) ) : ( (Feature_6 <= -0.08205804228782654) ? ( 394 ) : ( (Feature_7 <= 0.07305503450334072) ? ( 396 ) : ( 397 ) ) ) ) ) : ( (Feature_3 <= 0.05630106292665005) ? ( (Feature_2 <= 0.007805602857843041) ? ( 400 ) : ( (Feature_5 <= -0.02401714026927948) ? ( 402 ) : ( (Feature_0 <= 0.0326270991936326) ? ( (Feature_2 <= 0.0363676231354475) ? ( 405 ) : ( (Feature_5 <= -0.01885019103065133) ? ( 407 ) : ( (Feature_9 <= 0.07762233540415764) ? ( (Feature_9 <= 0.04241442494094372) ? ( 410 ) : ( (Feature_4 <= 0.0789242833852768) ? ( 412 ) : ( 413 ) ) ) : ( 414 ) ) ) ) : ( 415 ) ) ) ) : ( (Feature_2 <= 0.059540580958127975) ? ( (Feature_4 <= -0.00019300682470202446) ? ( 418 ) : ( (Feature_3 <= 0.0649082399904728) ? ( 420 ) : ( (Feature_0 <= 0.023545753268990666) ? ( 422 ) : ( 423 ) ) ) ) : ( (Feature_9 <= 0.1107591912150383) ? ( 425 ) : ( 426 ) ) ) ) ) : ( 427 ) ) ) : ( (Feature_3 <= -0.04698505811393261) ? ( (Feature_5 <= 0.09779760986566544) ? ( 430 ) : ( 431 ) ) : ( (Feature_4 <= -0.02083229972049594) ? ( (Feature_5 <= -0.02057250775396824) ? ( (Feature_6 <= -0.023151837289333344) ? ( 435 ) : ( 436 ) ) : ( 437 ) ) : ( (Feature_6 <= -0.05260493978857994) ? ( (Feature_9 <= 0.0486275851726532) ? ( 440 ) : ( 441 ) ) : ( (Feature_3 <= 0.07867972180247307) ? ( (Feature_2 <= 0.1123533770442009) ? ( (Feature_4 <= 0.0046228282153606415) ? ( 445 ) : ( (Feature_9 <= 0.0486275851726532) ? ( 447 ) : ( (Feature_1 <= 0.003019241616129875) ? ( 449 ) : ( 450 ) ) ) ) : ( (Feature_6 <= -0.0010620104148983955) ? ( 452 ) : ( 453 ) ) ) : ( (Feature_4 <= 0.006686757318675518) ? ( (Feature_2 <= 0.08810260146856308) ? ( 456 ) : ( 457 ) ) : ( (Feature_2 <= 0.10804212838411331) ? ( 459 ) : ( 460 ) ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_14
	

	namespace EXT_SubModel_15 {
	
		typedef std::vector<double> tNodeData;
		std::map<int, tNodeData> Decision_Tree_Node_data = {
				{ 7 ,  {116. }} ,
				{ 8 ,  {101. }} ,
				{ 12 ,  {77. }} ,
				{ 14 ,  {70. }} ,
				{ 15 ,  {68. }} ,
				{ 18 ,  {55. }} ,
				{ 19 ,  {53. }} ,
				{ 21 ,  {63. }} ,
				{ 22 ,  {65. }} ,
				{ 24 ,  {96. }} ,
				{ 26 ,  {88. }} ,
				{ 27 ,  {79. }} ,
				{ 31 ,  {74. }} ,
				{ 35 ,  {135. }} ,
				{ 36 ,  {128. }} ,
				{ 38 ,  {140. }} ,
				{ 39 ,  {150. }} ,
				{ 41 ,  {160. }} ,
				{ 42 ,  {190. }} ,
				{ 47 ,  {178. }} ,
				{ 48 ,  {168. }} ,
				{ 49 ,  {200. }} ,
				{ 51 ,  {127. }} ,
				{ 52 ,  {144. }} ,
				{ 54 ,  {216. }} ,
				{ 55 ,  {230. }} ,
				{ 59 ,  {150. }} ,
				{ 64 ,  {78. }} ,
				{ 66 ,  {92. }} ,
				{ 67 ,  {88. }} ,
				{ 68 ,  {44. }} ,
				{ 71 ,  {61. }} ,
				{ 72 ,  {60. }} ,
				{ 75 ,  {54. }} ,
				{ 76 ,  {55. }} ,
				{ 77 ,  {53. }} ,
				{ 80 ,  {135. }} ,
				{ 82 ,  {104. }} ,
				{ 83 ,  {107. }} ,
				{ 84 ,  {67. }} ,
				{ 85 ,  {219. }} ,
				{ 89 ,  {132. }} ,
				{ 91 ,  {124. }} ,
				{ 92 ,  {127. }} ,
				{ 94 ,  {83. }} ,
				{ 95 ,  {97. }} ,
				{ 97 ,  {160. }} ,
				{ 98 ,  {177. }} ,
				{ 103 ,  {143. }} ,
				{ 106 ,  {104. }} ,
				{ 107 ,  {99. }} ,
				{ 108 ,  {90. }} ,
				{ 109 ,  {45. }} ,
				{ 113 ,  {77. }} ,
				{ 115 ,  {85. }} ,
				{ 116 ,  {90. }} ,
				{ 119 ,  {75. }} ,
				{ 120 ,  {65. }} ,
				{ 124 ,  {37. }} ,
				{ 126 ,  {40. }} ,
				{ 127 ,  {42. }} ,
				{ 128 ,  {48. }} ,
				{ 131 ,  {52. }} ,
				{ 132 ,  {51. }} ,
				{ 134 ,  {61. }} ,
				{ 135 ,  {60. }} ,
				{ 138 ,  {96. }} ,
				{ 139 ,  {92. }} ,
				{ 142 ,  {72. }} ,
				{ 144 ,  {81. }} ,
				{ 145 ,  {80. }} ,
				{ 147 ,  {63. }} ,
				{ 148 ,  {49. }} ,
				{ 153 ,  {96. }} ,
				{ 154 ,  {118. }} ,
				{ 156 ,  {152. }} ,
				{ 158 ,  {168. }} ,
				{ 159 ,  {179. }} ,
				{ 161 ,  {91. }} ,
				{ 163 ,  {64. }} ,
				{ 164 ,  {59. }} ,
				{ 169 ,  {60. }} ,
				{ 170 ,  {49. }} ,
				{ 174 ,  {72. }} ,
				{ 175 ,  {71. }} ,
				{ 177 ,  {66. }} ,
				{ 178 ,  {65. }} ,
				{ 181 ,  {84. }} ,
				{ 182 ,  {87. }} ,
				{ 183 ,  {73. }} ,
				{ 184 ,  {102. }} ,
				{ 185 ,  {158. }} ,
				{ 186 ,  {253. }} ,
				{ 191 ,  {170. }} ,
				{ 192 ,  {187. }} ,
				{ 193 ,  {210. }} ,
				{ 195 ,  {52. }} ,
				{ 198 ,  {172. }} ,
				{ 199 ,  {201. }} ,
				{ 203 ,  {95. }} ,
				{ 204 ,  {103. }} ,
				{ 205 ,  {78. }} ,
				{ 209 ,  {121. }} ,
				{ 210 ,  {90. }} ,
				{ 212 ,  {141. }} ,
				{ 214 ,  {147. }} ,
				{ 215 ,  {145. }} ,
				{ 217 ,  {167. }} ,
				{ 218 ,  {175. }} ,
				{ 221 ,  {113. }} ,
				{ 222 ,  {144. }} ,
				{ 226 ,  {182. }} ,
				{ 227 ,  {191. }} ,
				{ 228 ,  {91. }} ,
				{ 231 ,  {257. }} ,
				{ 232 ,  {263. }} ,
				{ 234 ,  {244. }} ,
				{ 235 ,  {237. }} ,
				{ 245 ,  {214. }} ,
				{ 246 ,  {225. }} ,
				{ 248 ,  {233. }} ,
				{ 250 ,  {252. }} ,
				{ 251 ,  {249. }} ,
				{ 252 ,  {292. }} ,
				{ 253 ,  {317. }} ,
				{ 258 ,  {206. }} ,
				{ 260 ,  {200. }} ,
				{ 261 ,  {198. }} ,
				{ 262 ,  {173. }} ,
				{ 264 ,  {281. }} ,
				{ 265 ,  {242. }} ,
				{ 267 ,  {52. }} ,
				{ 271 ,  {173. }} ,
				{ 272 ,  {180. }} ,
				{ 273 ,  {164. }} ,
				{ 274 ,  {150. }} ,
				{ 279 ,  {101. }} ,
				{ 280 ,  {94. }} ,
				{ 281 ,  {68. }} ,
				{ 282 ,  {137. }} ,
				{ 291 ,  {131. }} ,
				{ 292 ,  {126. }} ,
				{ 293 ,  {144. }} ,
				{ 295 ,  {156. }} ,
				{ 296 ,  {164. }} ,
				{ 297 ,  {94. }} ,
				{ 300 ,  {202. }} ,
				{ 301 ,  {245. }} ,
				{ 303 ,  {107. }} ,
				{ 305 ,  {168. }} ,
				{ 306 ,  {179. }} ,
				{ 307 ,  {262. }} ,
				{ 312 ,  {221. }} ,
				{ 313 ,  {220. }} ,
				{ 314 ,  {235. }} ,
				{ 315 ,  {196. }} ,
				{ 317 ,  {311. }} ,
				{ 318 ,  {277. }} ,
				{ 321 ,  {122. }} ,
				{ 324 ,  {84. }} ,
				{ 325 ,  {91. }} ,
				{ 326 ,  {100. }} ,
				{ 330 ,  {209. }} ,
				{ 331 ,  {212. }} ,
				{ 332 ,  {259. }} ,
				{ 334 ,  {131. }} ,
				{ 335 ,  {120. }} ,
				{ 339 ,  {185. }} ,
				{ 340 ,  {200. }} ,
				{ 345 ,  {85. }} ,
				{ 347 ,  {74. }} ,
				{ 348 ,  {69. }} ,
				{ 350 ,  {78. }} ,
				{ 352 ,  {90. }} ,
				{ 354 ,  {95. }} ,
				{ 355 ,  {99. }} ,
				{ 358 ,  {102. }} ,
				{ 359 ,  {109. }} ,
				{ 360 ,  {134. }} ,
				{ 362 ,  {170. }} ,
				{ 363 ,  {143. }} ,
				{ 366 ,  {196. }} ,
				{ 367 ,  {202. }} ,
				{ 368 ,  {219. }} ,
				{ 372 ,  {171. }} ,
				{ 374 ,  {163. }} ,
				{ 375 ,  {166. }} ,
				{ 376 ,  {195. }} ,
				{ 379 ,  {257. }} ,
				{ 381 ,  {150. }} ,
				{ 382 ,  {129. }} ,
				{ 385 ,  {273. }} ,
				{ 388 ,  {197. }} ,
				{ 390 ,  {246. }} ,
				{ 392 ,  {236. }} ,
				{ 394 ,  {230. }} ,
				{ 395 ,  {232. }} ,
				{ 397 ,  {241. }} ,
				{ 398 ,  {248. }} ,
				{ 400 ,  {297. }} ,
				{ 401 ,  {281. }} ,
				{ 405 ,  {151. }} ,
				{ 406 ,  {178. }} ,
				{ 410 ,  {259. }} ,
				{ 412 ,  {281. }} ,
				{ 414 ,  {275. }} ,
				{ 415 ,  {277. }} ,
				{ 416 ,  {332. }} ,
				{ 419 ,  {186. }} ,
				{ 420 ,  {180. }} ,
				{ 426 ,  {215. }} ,
				{ 427 ,  {217. }} ,
				{ 428 ,  {220. }} ,
				{ 429 ,  {233. }} ,
				{ 431 ,  {220. }} ,
				{ 433 ,  {242. }} ,
				{ 434 ,  {252. }} ,
				{ 435 ,  {268. }} ,
				{ 438 ,  {306. }} ,
				{ 441 ,  {279. }} ,
				{ 442 ,  {275. }} ,
				{ 444 ,  {261. }} ,
				{ 446 ,  {263. }} ,
				{ 447 ,  {264. }} ,
				{ 449 ,  {270. }} ,
				{ 451 ,  {321. }} ,
				{ 453 ,  {336. }} ,
				{ 454 ,  {346. }} 
		};
		
	
		int get_decision_tree_node_index(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = (Feature_8 <= 0.0007076415786286816) ? ( (Feature_2 <= 0.009422320872545242) ? ( (Feature_5 <= 0.11267216503620148) ? ( (Feature_6 <= 0.021027816459536552) ? ( (Feature_2 <= -0.05632421560585499) ? ( (Feature_2 <= -0.07356920838356018) ? ( (Feature_8 <= -0.06752070039510727) ? ( 7 ) : ( 8 ) ) : ( (Feature_7 <= -0.02325688931159675) ? ( (Feature_6 <= 0.00261962681543082) ? ( (Feature_3 <= -0.07797089405357838) ? ( 12 ) : ( (Feature_6 <= -0.006584467482753098) ? ( 14 ) : ( 15 ) ) ) : ( (Feature_3 <= -0.06936371698975563) ? ( (Feature_3 <= -0.0917423777282238) ? ( 18 ) : ( 19 ) ) : ( (Feature_5 <= -0.04969531483948231) ? ( 21 ) : ( 22 ) ) ) ) : ( (Feature_7 <= -0.004806329379789531) ? ( 24 ) : ( (Feature_5 <= -0.021981675527058542) ? ( 26 ) : ( 27 ) ) ) ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_9 <= -0.0383566590026021) ? ( (Feature_2 <= -0.04177375137805939) ? ( 31 ) : ( (Feature_2 <= -0.01806188654154539) ? ( (Feature_8 <= -0.024434738792479038) ? ( (Feature_4 <= 0.012190568493679166) ? ( 35 ) : ( 36 ) ) : ( (Feature_5 <= -0.06535273790359497) ? ( 38 ) : ( 39 ) ) ) : ( (Feature_8 <= -0.017554021906107664) ? ( 41 ) : ( 42 ) ) ) ) : ( (Feature_4 <= -0.015328488778322935) ? ( (Feature_4 <= -0.03459182754158974) ? ( (Feature_5 <= -0.04233632609248161) ? ( (Feature_6 <= -0.00842528638895601) ? ( 47 ) : ( 48 ) ) : ( 49 ) ) : ( (Feature_2 <= -0.030995630659162998) ? ( 51 ) : ( 52 ) ) ) : ( (Feature_4 <= 0.039021648932248354) ? ( 54 ) : ( 55 ) ) ) ) : ( (Feature_0 <= 0.02899456024169922) ? ( (Feature_3 <= 0.040808143094182014) ? ( (Feature_6 <= -0.06549067050218582) ? ( 59 ) : ( (Feature_9 <= 0.021703890524804592) ? ( (Feature_7 <= -0.02104282204527408) ? ( (Feature_2 <= -0.003511423885356635) ? ( (Feature_8 <= -0.05988090764731169) ? ( 64 ) : ( (Feature_9 <= -0.03007244598120451) ? ( 66 ) : ( 67 ) ) ) : ( 68 ) ) : ( (Feature_4 <= -0.03459182754158974) ? ( (Feature_5 <= -0.022607972845435143) ? ( 71 ) : ( 72 ) ) : ( (Feature_8 <= -0.02163835847750306) ? ( (Feature_2 <= -0.032073444686830044) ? ( 75 ) : ( 76 ) ) : ( 77 ) ) ) ) : ( (Feature_2 <= -0.00512814219109714) ? ( (Feature_4 <= 0.003246874548494816) ? ( 80 ) : ( (Feature_8 <= -0.015513104852288961) ? ( 82 ) : ( 83 ) ) ) : ( 84 ) ) ) ) : ( 85 ) ) : ( (Feature_6 <= -0.012106924317777157) ? ( (Feature_6 <= -0.01947019947692752) ? ( (Feature_8 <= -0.032498874701559544) ? ( 89 ) : ( (Feature_5 <= -0.027774921618402004) ? ( 91 ) : ( 92 ) ) ) : ( (Feature_0 <= 0.03989217430353165) ? ( 94 ) : ( 95 ) ) ) : ( (Feature_9 <= 0.0299881047103554) ? ( 97 ) : ( 98 ) ) ) ) ) ) : ( (Feature_8 <= -0.033886250108480453) ? ( (Feature_8 <= -0.0762953981757164) ? ( (Feature_6 <= 0.08545647747814655) ? ( (Feature_5 <= -0.06832764856517315) ? ( 103 ) : ( (Feature_8 <= -0.08815856650471687) ? ( (Feature_6 <= 0.035754366777837276) ? ( 106 ) : ( 107 ) ) : ( 108 ) ) ) : ( 109 ) ) : ( (Feature_0 <= 0.003566791128832847) ? ( (Feature_0 <= -0.07453278452157974) ? ( (Feature_6 <= 0.039436004124581814) ? ( 113 ) : ( (Feature_5 <= -0.04077058518305421) ? ( 115 ) : ( 116 ) ) ) : ( (Feature_9 <= -0.09013299643993378) ? ( (Feature_2 <= -0.045546093955636024) ? ( 119 ) : ( 120 ) ) : ( (Feature_2 <= -0.036923596635460854) ? ( (Feature_6 <= 0.06152583099901676) ? ( (Feature_8 <= -0.051518527790904045) ? ( 124 ) : ( (Feature_4 <= -0.07036660239100456) ? ( 126 ) : ( 127 ) ) ) : ( 128 ) ) : ( (Feature_9 <= -0.061138249933719635) ? ( (Feature_8 <= -0.05569484643638134) ? ( 131 ) : ( 132 ) ) : ( (Feature_3 <= -0.024606400169432163) ? ( 134 ) : ( 135 ) ) ) ) ) ) : ( (Feature_5 <= -0.0038190651684999466) ? ( (Feature_4 <= 0.010814615758135915) ? ( 138 ) : ( 139 ) ) : ( (Feature_9 <= 0.0009933559340424836) ? ( (Feature_4 <= 0.012190568428195547) ? ( 142 ) : ( (Feature_4 <= 0.03420581389218569) ? ( 144 ) : ( 145 ) ) ) : ( (Feature_9 <= 0.01756178424693644) ? ( 147 ) : ( 148 ) ) ) ) ) ) : ( (Feature_9 <= -0.032143499702215195) ? ( (Feature_4 <= 0.018382356502115726) ? ( (Feature_8 <= -0.03137132711708546) ? ( (Feature_6 <= 0.07257074490189552) ? ( 153 ) : ( 154 ) ) : ( (Feature_6 <= 0.03023191075772047) ? ( 156 ) : ( (Feature_3 <= -0.024606400169432163) ? ( 158 ) : ( 159 ) ) ) ) : ( (Feature_8 <= -0.027740024030208588) ? ( 161 ) : ( (Feature_2 <= -0.019139698473736644) ? ( 163 ) : ( 164 ) ) ) ) : ( (Feature_9 <= 0.04034337215125561) ? ( (Feature_3 <= 0.05802249722182751) ? ( (Feature_2 <= -0.05255187302827835) ? ( (Feature_0 <= -0.018228439323138446) ? ( 169 ) : ( 170 ) ) : ( (Feature_6 <= 0.06152583099901676) ? ( (Feature_3 <= 0.00293656624853611) ? ( (Feature_4 <= 0.002558899112045765) ? ( 174 ) : ( 175 ) ) : ( (Feature_4 <= -0.00500884186476469) ? ( 177 ) : ( 178 ) ) ) : ( (Feature_9 <= 0.013419676572084427) ? ( (Feature_0 <= 0.01991321425884962) ? ( 181 ) : ( 182 ) ) : ( 183 ) ) ) ) : ( 184 ) ) : ( 185 ) ) ) ) ) : ( 186 ) ) : ( (Feature_5 <= 0.0007215875521069393) ? ( (Feature_5 <= -0.046563830226659775) ? ( (Feature_8 <= -0.023374739103019238) ? ( (Feature_2 <= 0.041217777878046036) ? ( 191 ) : ( 192 ) ) : ( 193 ) ) : ( (Feature_5 <= -0.04155345447361469) ? ( 195 ) : ( (Feature_3 <= -0.06764228269457817) ? ( (Feature_0 <= -0.04910501651465893) ? ( 198 ) : ( 199 ) ) : ( (Feature_0 <= -0.025493516586720943) ? ( (Feature_2 <= 0.06600745394825935) ? ( (Feature_4 <= -0.0063847946003079414) ? ( 203 ) : ( 204 ) ) : ( 205 ) ) : ( (Feature_9 <= -0.011432964820414782) ? ( (Feature_5 <= -0.022138249594718218) ? ( (Feature_5 <= -0.036699652671813965) ? ( 209 ) : ( 210 ) ) : ( (Feature_7 <= -0.02104282204527408) ? ( 212 ) : ( (Feature_9 <= -0.030072445049881935) ? ( 214 ) : ( 215 ) ) ) ) : ( (Feature_2 <= 0.041756683960556984) ? ( 217 ) : ( 218 ) ) ) ) ) ) ) : ( (Feature_8 <= -0.04706958867609501) ? ( (Feature_0 <= 0.0035667913034558296) ? ( 221 ) : ( 222 ) ) : ( (Feature_3 <= 0.021872354671359062) ? ( (Feature_8 <= -0.018734322860836983) ? ( (Feature_8 <= -0.03721458464860916) ? ( 226 ) : ( 227 ) ) : ( 228 ) ) : ( (Feature_5 <= 0.021545960567891598) ? ( (Feature_8 <= -0.027159404940903187) ? ( 231 ) : ( 232 ) ) : ( (Feature_2 <= 0.07247432880103588) ? ( 234 ) : ( 235 ) ) ) ) ) ) ) : ( (Feature_2 <= 0.056846050545573235) ? ( (Feature_3 <= 0.04482482746243477) ? ( (Feature_6 <= -0.0010620108805596828) ? ( (Feature_1 <= 0.003019241616129875) ? ( (Feature_6 <= -0.03971920907497406) ? ( (Feature_7 <= 0.11918143928050995) ? ( (Feature_3 <= 0.020150919444859028) ? ( (Feature_3 <= -0.024032588116824627) ? ( (Feature_7 <= 0.057187553495168686) ? ( 245 ) : ( 246 ) ) : ( (Feature_6 <= -0.06549067050218582) ? ( 248 ) : ( (Feature_6 <= -0.0489233024418354) ? ( 250 ) : ( 251 ) ) ) ) : ( 252 ) ) : ( 253 ) ) : ( (Feature_2 <= 0.027206220664083958) ? ( (Feature_6 <= -0.010266105411574244) ? ( (Feature_0 <= 0.05805486813187599) ? ( (Feature_6 <= -0.024992657359689474) ? ( 258 ) : ( (Feature_9 <= -0.003148750402033329) ? ( 260 ) : ( 261 ) ) ) : ( 262 ) ) : ( (Feature_5 <= 0.009489744901657104) ? ( 264 ) : ( 265 ) ) ) : ( (Feature_0 <= -0.01641216967254877) ? ( 267 ) : ( (Feature_3 <= 0.001215130789205432) ? ( (Feature_4 <= 0.06034891679883003) ? ( (Feature_7 <= 0.029696219600737095) ? ( 271 ) : ( 272 ) ) : ( 273 ) ) : ( 274 ) ) ) ) ) : ( (Feature_0 <= -0.07090024650096893) ? ( (Feature_7 <= 0.08966054022312164) ? ( (Feature_7 <= 0.05275942012667656) ? ( (Feature_9 <= -0.007290857611224055) ? ( 279 ) : ( 280 ) ) : ( 281 ) ) : ( 282 ) ) : ( (Feature_4 <= 0.02526212017983198) ? ( (Feature_2 <= 0.005111072678118944) ? ( (Feature_9 <= 0.08383549377322197) ? ( (Feature_5 <= 0.002913626900408417) ? ( (Feature_9 <= 0.05069863982498646) ? ( (Feature_3 <= -0.002227739430963993) ? ( (Feature_2 <= -0.00027798768132925034) ? ( (Feature_7 <= 0.05275942012667656) ? ( 291 ) : ( 292 ) ) : ( 293 ) ) : ( (Feature_6 <= -0.059968214482069016) ? ( 295 ) : ( 296 ) ) ) : ( 297 ) ) : ( (Feature_9 <= -0.0176461249939166) ? ( (Feature_5 <= 0.007767427945509553) ? ( 300 ) : ( 301 ) ) : ( (Feature_9 <= 0.02170389104867354) ? ( 303 ) : ( (Feature_5 <= 0.03015754371881485) ? ( 305 ) : ( 306 ) ) ) ) ) : ( 307 ) ) : ( (Feature_9 <= 0.05069863796234131) ? ( (Feature_4 <= 0.019758309237658978) ? ( (Feature_5 <= 0.011681783944368362) ? ( (Feature_9 <= -0.009361911565065384) ? ( 312 ) : ( 313 ) ) : ( 314 ) ) : ( 315 ) ) : ( (Feature_9 <= 0.06933811865746975) ? ( 317 ) : ( 318 ) ) ) ) : ( (Feature_8 <= 0.01980971358716488) ? ( (Feature_4 <= 0.02870200201869011) ? ( 321 ) : ( (Feature_9 <= 0.08383549377322197) ? ( (Feature_0 <= 0.007199329789727926) ? ( 324 ) : ( 325 ) ) : ( 326 ) ) ) : ( (Feature_5 <= 0.06303813122212887) ? ( (Feature_9 <= 0.023774944711476564) ? ( (Feature_7 <= 0.05275942012667656) ? ( 330 ) : ( 331 ) ) : ( 332 ) ) : ( (Feature_3 <= 0.019577108090743423) ? ( 334 ) : ( 335 ) ) ) ) ) ) ) : ( (Feature_4 <= 0.09818762168288231) ? ( (Feature_4 <= -0.018080394715070724) ? ( (Feature_9 <= -0.001077696681022644) ? ( 339 ) : ( 340 ) ) : ( (Feature_0 <= 0.05623859912157059) ? ( (Feature_6 <= 0.06704828888177872) ? ( (Feature_8 <= 0.033747877925634384) ? ( (Feature_3 <= -0.028623082675039768) ? ( 345 ) : ( (Feature_3 <= -0.006244422402232885) ? ( 347 ) : ( 348 ) ) ) : ( (Feature_3 <= -0.05616604723036289) ? ( 350 ) : ( (Feature_2 <= -0.026145477080717683) ? ( 352 ) : ( (Feature_3 <= -0.017720657400786877) ? ( 354 ) : ( 355 ) ) ) ) ) : ( (Feature_3 <= -0.0005063042044639587) ? ( (Feature_5 <= 0.004792517749592662) ? ( 358 ) : ( 359 ) ) : ( 360 ) ) ) : ( (Feature_4 <= 0.06791666150093079) ? ( 362 ) : ( 363 ) ) ) ) : ( (Feature_9 <= -0.011432964587584138) ? ( (Feature_9 <= -0.023859284818172455) ? ( 366 ) : ( 367 ) ) : ( 368 ) ) ) ) : ( (Feature_0 <= 0.007199329091235995) ? ( (Feature_3 <= 0.08384402841329575) ? ( (Feature_0 <= -0.04910501651465893) ? ( 372 ) : ( (Feature_2 <= 0.008883415721356869) ? ( 374 ) : ( 375 ) ) ) : ( 376 ) ) : ( (Feature_4 <= 0.0011829459108412266) ? ( (Feature_0 <= 0.0417084451764822) ? ( 379 ) : ( (Feature_5 <= 0.0005650133825838566) ? ( 381 ) : ( 382 ) ) ) : ( (Feature_9 <= 0.07555128075182438) ? ( (Feature_0 <= 0.039892176166176796) ? ( 385 ) : ( (Feature_4 <= 0.05897296592593193) ? ( (Feature_2 <= 0.006727790459990501) ? ( 388 ) : ( (Feature_5 <= -0.006167678162455559) ? ( 390 ) : ( (Feature_9 <= -0.0010776976123452187) ? ( 392 ) : ( (Feature_6 <= -0.04524166276678443) ? ( 394 ) : ( 395 ) ) ) ) ) : ( (Feature_2 <= -0.013750639045611024) ? ( 397 ) : ( 398 ) ) ) ) : ( (Feature_4 <= 0.03007795661687851) ? ( 400 ) : ( 401 ) ) ) ) ) ) : ( (Feature_2 <= 0.0832524448633194) ? ( (Feature_8 <= 0.02095623593777418) ? ( (Feature_7 <= 0.015858298051171005) ? ( 405 ) : ( 406 ) ) : ( (Feature_4 <= 0.019758309237658978) ? ( (Feature_0 <= 0.05442233011126518) ? ( (Feature_6 <= -0.061809033155441284) ? ( 410 ) : ( (Feature_3 <= 0.05630106292665005) ? ( 412 ) : ( (Feature_8 <= 0.06264815758913755) ? ( 414 ) : ( 415 ) ) ) ) : ( 416 ) ) : ( (Feature_8 <= 0.03924337215721607) ? ( (Feature_2 <= 0.07085760682821274) ? ( 419 ) : ( 420 ) ) : ( (Feature_9 <= 0.11697235330939293) ? ( (Feature_0 <= -0.007330824097152799) ? ( (Feature_6 <= 0.013664540252648294) ? ( (Feature_5 <= 0.1436738595366478) ? ( (Feature_2 <= 0.062235113233327866) ? ( 426 ) : ( 427 ) ) : ( 428 ) ) : ( 429 ) ) : ( (Feature_7 <= 0.055157992988824844) ? ( 431 ) : ( (Feature_3 <= 0.07982734590768814) ? ( 433 ) : ( 434 ) ) ) ) : ( 435 ) ) ) ) ) : ( (Feature_2 <= 0.10103634744882584) ? ( (Feature_6 <= -0.05628657713532448) ? ( 438 ) : ( (Feature_3 <= 0.028758095810189843) ? ( (Feature_3 <= -0.015425410820171237) ? ( 441 ) : ( 442 ) ) : ( (Feature_1 <= 0.003019241616129875) ? ( 444 ) : ( (Feature_5 <= 0.002757051959633827) ? ( 446 ) : ( 447 ) ) ) ) ) : ( (Feature_6 <= -0.05260493978857994) ? ( 449 ) : ( (Feature_2 <= 0.10804212465882301) ? ( 451 ) : ( (Feature_2 <= 0.13606524094939232) ? ( 453 ) : ( 454 ) ) ) ) ) ) );
		
			return lNodeIndex;
		}
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
			int lNodeIndex = get_decision_tree_node_index(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);
	
			std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
	
	
			tTable lTable;
	
			std::any  lEstimator = lNodeValue [ 0 ];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace EXT_SubModel_15
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
		std::vector<tTable> lTreeScores = { 
			EXT_SubModel_0::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_1::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_2::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_3::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_4::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_5::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_6::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_7::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_8::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_9::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_10::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_11::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_12::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_13::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_14::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9),
			EXT_SubModel_15::compute_regression(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9)
		};

		tTable lAggregatedTable = aggregate_rf_scores(lTreeScores, {"Estimator"});


		tTable lTable = lAggregatedTable;


		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/diabetes.csv");
	return 0;
}
