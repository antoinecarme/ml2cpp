// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : LGBMRegressor_Pipeline
// Dataset : boston

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_LGBMRegressor_Pipeline_boston.exe ml2cpp-demo_LGBMRegressor_Pipeline_boston.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11", "imputer_output_12", "imputer_output_13", "imputer_output_14" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12) {
	
			tTable lTable;
	
			lTable["imputer_output_2"] = { ((Feature_0 == std::any()) ?  ( 3.3936090099009903 ) : ( Feature_0)) };
			lTable["imputer_output_3"] = { ((Feature_1 == std::any()) ?  ( 12.113861386138614 ) : ( Feature_1)) };
			lTable["imputer_output_4"] = { ((Feature_2 == std::any()) ?  ( 10.983613861386127 ) : ( Feature_2)) };
			lTable["imputer_output_5"] = { ((Feature_3 == std::any()) ?  ( 0.07178217821782178 ) : ( Feature_3)) };
			lTable["imputer_output_6"] = { ((Feature_4 == std::any()) ?  ( 0.5541153465346542 ) : ( Feature_4)) };
			lTable["imputer_output_7"] = { ((Feature_5 == std::any()) ?  ( 6.299148514851482 ) : ( Feature_5)) };
			lTable["imputer_output_8"] = { ((Feature_6 == std::any()) ?  ( 67.85049504950491 ) : ( Feature_6)) };
			lTable["imputer_output_9"] = { ((Feature_7 == std::any()) ?  ( 3.8198420792079233 ) : ( Feature_7)) };
			lTable["imputer_output_10"] = { ((Feature_8 == std::any()) ?  ( 9.55940594059406 ) : ( Feature_8)) };
			lTable["imputer_output_11"] = { ((Feature_9 == std::any()) ?  ( 405.8019801980198 ) : ( Feature_9)) };
			lTable["imputer_output_12"] = { ((Feature_10 == std::any()) ?  ( 18.40915841584154 ) : ( Feature_10)) };
			lTable["imputer_output_13"] = { ((Feature_11 == std::any()) ?  ( 358.3797277227715 ) : ( Feature_11)) };
			lTable["imputer_output_14"] = { ((Feature_12 == std::any()) ?  ( 12.626584158415856 ) : ( Feature_12)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11", "imputer_output_12", "imputer_output_13", "imputer_output_14" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any imputer_output_2, std::any imputer_output_3, std::any imputer_output_4, std::any imputer_output_5, std::any imputer_output_6, std::any imputer_output_7, std::any imputer_output_8, std::any imputer_output_9, std::any imputer_output_10, std::any imputer_output_11, std::any imputer_output_12, std::any imputer_output_13, std::any imputer_output_14) {
	
			tTable lTable;
	
			lTable["scaler_output_2"] = { ( ( imputer_output_2 - 3.3936090099009903 ) / 8.000616555737787 ) };
			lTable["scaler_output_3"] = { ( ( imputer_output_3 - 12.113861386138614 ) / 24.187656534977855 ) };
			lTable["scaler_output_4"] = { ( ( imputer_output_4 - 10.983613861386127 ) / 6.8177472477399235 ) };
			lTable["scaler_output_5"] = { ( ( imputer_output_5 - 0.07178217821782178 ) / 0.2581269011709685 ) };
			lTable["scaler_output_6"] = { ( ( imputer_output_6 - 0.5541153465346542 ) / 0.11800809760824685 ) };
			lTable["scaler_output_7"] = { ( ( imputer_output_7 - 6.299148514851482 ) / 0.7060417397996938 ) };
			lTable["scaler_output_8"] = { ( ( imputer_output_8 - 67.85049504950491 ) / 28.107403181658597 ) };
			lTable["scaler_output_9"] = { ( ( imputer_output_9 - 3.8198420792079233 ) / 2.0933726902675627 ) };
			lTable["scaler_output_10"] = { ( ( imputer_output_10 - 9.55940594059406 ) / 8.728803783375893 ) };
			lTable["scaler_output_11"] = { ( ( imputer_output_11 - 405.8019801980198 ) / 169.7858592930543 ) };
			lTable["scaler_output_12"] = { ( ( imputer_output_12 - 18.40915841584154 ) / 2.166792648327246 ) };
			lTable["scaler_output_13"] = { ( ( imputer_output_13 - 358.3797277227715 ) / 90.64691624336051 ) };
			lTable["scaler_output_14"] = { ( ( imputer_output_14 - 12.626584158415856 ) / 7.167938324035357 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("imputer_output_2")[0], iTable.at("imputer_output_3")[0], iTable.at("imputer_output_4")[0], iTable.at("imputer_output_5")[0], iTable.at("imputer_output_6")[0], iTable.at("imputer_output_7")[0], iTable.at("imputer_output_8")[0], iTable.at("imputer_output_9")[0], iTable.at("imputer_output_10")[0], iTable.at("imputer_output_11")[0], iTable.at("imputer_output_12")[0], iTable.at("imputer_output_13")[0], iTable.at("imputer_output_14")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		namespace LGBM_Tree_0 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {23.68019760161212 }} ,
					{ 9 ,  {22.83501241924654 }} ,
					{ 12 ,  {23.12476244902847 }} ,
					{ 13 ,  {22.8224124152684 }} ,
					{ 20 ,  {22.1865124199414 }} ,
					{ 22 ,  {22.133845756612594 }} ,
					{ 23 ,  {21.979528549173622 }} ,
					{ 33 ,  {22.760012416034588 }} ,
					{ 34 ,  {22.54477432406451 }} ,
					{ 42 ,  {22.44327328999447 }} ,
					{ 43 ,  {22.275262429478143 }} ,
					{ 64 ,  {22.485512422995207 }} ,
					{ 65 ,  {22.625938357487197 }} ,
					{ 70 ,  {22.400012429599947 }} ,
					{ 142 ,  {22.52676243251798 }} ,
					{ 143 ,  {22.444066474559584 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 0.7447880989269889 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_2 <= -0.40674852834525027 ) ? ( ( ( scaler_output_7 <= -0.1283897392202328 ) ? ( 64 ) : ( 65 ) ) ) : ( 33 ) ) ) : ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 34 ) : ( ( ( scaler_output_10 <= -0.579621912252141 ) ? ( 70 ) : ( ( ( scaler_output_8 <= 0.07647469019470782 ) ? ( 142 ) : ( 143 ) ) ) ) ) ) ) ) ) : ( 9 ) ) ) : ( ( ( scaler_output_2 <= 0.3067789804697961 ) ? ( ( ( scaler_output_9 <= -0.8888967014134915 ) ? ( 20 ) : ( ( ( scaler_output_12 <= 0.803418631451599 ) ? ( 42 ) : ( 43 ) ) ) ) ) : ( ( ( scaler_output_14 <= 1.2218877235893113 ) ? ( 22 ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( ( ( scaler_output_14 <= -1.0067865866280377 ) ? ( 12 ) : ( 13 ) ) ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_0
		
	
		namespace LGBM_Tree_1 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {1.046175335292463 }} ,
					{ 12 ,  {0.5185119009017944 }} ,
					{ 13 ,  {0.23127937006950378 }} ,
					{ 17 ,  {0.25936048831790687 }} ,
					{ 18 ,  {-0.0324768134525844 }} ,
					{ 20 ,  {-0.37282561540603637 }} ,
					{ 22 ,  {-0.42285894155502324 }} ,
					{ 23 ,  {-0.5694602920163062 }} ,
					{ 32 ,  {0.18230336777400225 }} ,
					{ 38 ,  {-0.16674019930263362 }} ,
					{ 42 ,  {-0.12890279338411664 }} ,
					{ 43 ,  {-0.2885131169855595 }} ,
					{ 66 ,  {-0.09879467114806176 }} ,
					{ 67 ,  {0.058645646909384855 }} ,
					{ 78 ,  {-0.04958811178803444 }} ,
					{ 79 ,  {-0.12482299310596366 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 0.7447880989269889 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_13 <= 0.3567718971311092 ) ? ( 32 ) : ( ( ( scaler_output_7 <= -0.20062342899396915 ) ? ( 66 ) : ( 67 ) ) ) ) ) : ( 17 ) ) ) : ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 18 ) : ( ( ( scaler_output_10 <= -0.579621912252141 ) ? ( 38 ) : ( ( ( scaler_output_8 <= 0.07647469019470782 ) ? ( 78 ) : ( 79 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_2 <= 0.3067789804697961 ) ? ( ( ( scaler_output_9 <= -0.8888967014134915 ) ? ( 20 ) : ( ( ( scaler_output_12 <= 0.803418631451599 ) ? ( 42 ) : ( 43 ) ) ) ) ) : ( ( ( scaler_output_14 <= 1.2218877235893113 ) ? ( 22 ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( ( ( scaler_output_14 <= -1.0067865866280377 ) ? ( 12 ) : ( 13 ) ) ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_1
		
	
		namespace LGBM_Tree_2 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.4872575873420353 }} ,
					{ 7 ,  {1.0207646484176318 }} ,
					{ 18 ,  {0.41737285366524823 }} ,
					{ 20 ,  {-0.13354739701518645 }} ,
					{ 21 ,  {-0.29685386657714846 }} ,
					{ 23 ,  {-0.562842216030244 }} ,
					{ 33 ,  {0.1676879637282003 }} ,
					{ 34 ,  {-0.030852971188280554 }} ,
					{ 38 ,  {0.22944668382406236 }} ,
					{ 39 ,  {0.12306558111682536 }} ,
					{ 44 ,  {-0.30069104940802965 }} ,
					{ 45 ,  {-0.4381064014001326 }} ,
					{ 64 ,  {-0.08563497792929411 }} ,
					{ 65 ,  {0.0398647699367117 }} ,
					{ 70 ,  {-0.1616636018390241 }} ,
					{ 142 ,  {-0.0471087034791708 }} ,
					{ 143 ,  {-0.12190811891813536 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 1.13074261781607 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_2 <= -0.40674852834525027 ) ? ( ( ( scaler_output_7 <= -0.1283897392202328 ) ? ( 64 ) : ( 65 ) ) ) : ( 33 ) ) ) : ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 34 ) : ( ( ( scaler_output_10 <= -0.579621912252141 ) ? ( 70 ) : ( ( ( scaler_output_8 <= 0.07647469019470782 ) ? ( 142 ) : ( 143 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_14 <= -1.0242253527486742 ) ? ( 18 ) : ( ( ( scaler_output_4 <= -0.7192425420305321 ) ? ( 38 ) : ( 39 ) ) ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.448144276004751 ) ? ( ( ( scaler_output_2 <= -0.34071111781329677 ) ? ( 20 ) : ( 21 ) ) ) : ( ( ( scaler_output_2 <= 0.8094889868774345 ) ? ( ( ( scaler_output_14 <= 0.9003168763247735 ) ? ( 44 ) : ( 45 ) ) ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.6717871176899362 ) ? ( 6 ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_2
		
	
		namespace LGBM_Tree_3 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.4628946996870495 }} ,
					{ 7 ,  {0.9697264621655146 }} ,
					{ 18 ,  {0.39650421479473946 }} ,
					{ 20 ,  {-0.1268700288178829 }} ,
					{ 21 ,  {-0.2820111757516861 }} ,
					{ 23 ,  {-0.5347001014217254 }} ,
					{ 32 ,  {0.16862687380751595 }} ,
					{ 34 ,  {-0.029310325502107545 }} ,
					{ 38 ,  {0.2179743518680334 }} ,
					{ 39 ,  {0.11691229958087207 }} ,
					{ 44 ,  {-0.28565649765509143 }} ,
					{ 45 ,  {-0.41620108431035824 }} ,
					{ 66 ,  {-0.09198578777057785 }} ,
					{ 67 ,  {0.052118188159407254 }} ,
					{ 70 ,  {-0.15358042017273282 }} ,
					{ 142 ,  {-0.044753270074725154 }} ,
					{ 143 ,  {-0.11581271548528929 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 1.13074261781607 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_13 <= 0.3567718971311092 ) ? ( 32 ) : ( ( ( scaler_output_7 <= -0.20062342899396915 ) ? ( 66 ) : ( 67 ) ) ) ) ) : ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 34 ) : ( ( ( scaler_output_10 <= -0.579621912252141 ) ? ( 70 ) : ( ( ( scaler_output_8 <= 0.07647469019470782 ) ? ( 142 ) : ( 143 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_14 <= -1.0242253527486742 ) ? ( 18 ) : ( ( ( scaler_output_4 <= -0.7192425420305321 ) ? ( 38 ) : ( 39 ) ) ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.448144276004751 ) ? ( ( ( scaler_output_2 <= -0.34071111781329677 ) ? ( 20 ) : ( 21 ) ) ) : ( ( ( scaler_output_2 <= 0.8094889868774345 ) ? ( ( ( scaler_output_14 <= 0.9003168763247735 ) ? ( 44 ) : ( 45 ) ) ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.6717871176899362 ) ? ( 6 ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_3
		
	
		namespace LGBM_Tree_4 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {0.9001216561705978 }} ,
					{ 12 ,  {0.4488262629508972 }} ,
					{ 13 ,  {0.19551211631298065 }} ,
					{ 16 ,  {0.2758381972766735 }} ,
					{ 18 ,  {-0.027844806458978428 }} ,
					{ 20 ,  {-0.3191277128458023 }} ,
					{ 22 ,  {-0.3638423800468445 }} ,
					{ 23 ,  {-0.4905814593838107 }} ,
					{ 35 ,  {0.16882487437961735 }} ,
					{ 38 ,  {-0.1437976984928052 }} ,
					{ 42 ,  {-0.1094367877944656 }} ,
					{ 43 ,  {-0.24575325995683672 }} ,
					{ 68 ,  {-0.07795563204740377 }} ,
					{ 69 ,  {0.027667950552243456 }} ,
					{ 78 ,  {-0.04251560464501381 }} ,
					{ 79 ,  {-0.10732435005667962 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 0.7447880989269889 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_13 <= 0.29378023413101 ) ? ( 16 ) : ( ( ( scaler_output_7 <= 0.2455258313732251 ) ? ( ( ( scaler_output_7 <= -0.20062342899396915 ) ? ( 68 ) : ( 69 ) ) ) : ( 35 ) ) ) ) ) : ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 18 ) : ( ( ( scaler_output_10 <= -0.579621912252141 ) ? ( 38 ) : ( ( ( scaler_output_8 <= 0.07647469019470782 ) ? ( 78 ) : ( 79 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_2 <= 0.3067789804697961 ) ? ( ( ( scaler_output_9 <= -0.8888967014134915 ) ? ( 20 ) : ( ( ( scaler_output_12 <= 0.803418631451599 ) ? ( 42 ) : ( 43 ) ) ) ) ) : ( ( ( scaler_output_14 <= 1.2218877235893113 ) ? ( 22 ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( ( ( scaler_output_14 <= -1.0067865866280377 ) ? ( 12 ) : ( 13 ) ) ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_4
		
	
		namespace LGBM_Tree_5 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.4195132925396874 }} ,
					{ 7 ,  {0.876234057545662 }} ,
					{ 18 ,  {0.3606115233153105 }} ,
					{ 20 ,  {-0.11398603214094272 }} ,
					{ 21 ,  {-0.25282333880662916 }} ,
					{ 23 ,  {-0.5182343797250227 }} ,
					{ 33 ,  {0.15058369689028372 }} ,
					{ 35 ,  {-0.13262193070517644 }} ,
					{ 38 ,  {0.19749885775148868 }} ,
					{ 39 ,  {0.10349624640308322 }} ,
					{ 44 ,  {-0.25843456725279496 }} ,
					{ 45 ,  {-0.39688812409128466 }} ,
					{ 64 ,  {-0.07593208227306605 }} ,
					{ 65 ,  {0.028353116392261454 }} ,
					{ 68 ,  {-0.007674052050480476 }} ,
					{ 138 ,  {-0.12901121437549593 }} ,
					{ 139 ,  {-0.0617536703205627 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 1.13074261781607 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_2 <= -0.40674852834525027 ) ? ( ( ( scaler_output_7 <= -0.1283897392202328 ) ? ( 64 ) : ( 65 ) ) ) : ( 33 ) ) ) : ( ( ( scaler_output_9 <= 0.29307152216343385 ) ? ( ( ( scaler_output_8 <= 0.05157021945879913 ) ? ( 68 ) : ( ( ( scaler_output_6 <= 0.3973003074838933 ) ? ( 138 ) : ( 139 ) ) ) ) ) : ( 35 ) ) ) ) ) : ( ( ( scaler_output_14 <= -1.0242253527486742 ) ? ( 18 ) : ( ( ( scaler_output_4 <= -0.7192425420305321 ) ? ( 38 ) : ( 39 ) ) ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.448144276004751 ) ? ( ( ( scaler_output_2 <= -0.34071111781329677 ) ? ( 20 ) : ( 21 ) ) ) : ( ( ( scaler_output_2 <= 1.0376064059894794 ) ? ( ( ( scaler_output_14 <= 0.9003168763247735 ) ? ( 44 ) : ( 45 ) ) ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.6717871176899362 ) ? ( 6 ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_5
		
	
		namespace LGBM_Tree_6 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {0.8138412051730687 }} ,
					{ 12 ,  {0.40702908515930175 }} ,
					{ 13 ,  {0.1751374426484108 }} ,
					{ 16 ,  {0.2546831127594818 }} ,
					{ 18 ,  {-0.13033659788391863 }} ,
					{ 20 ,  {-0.28716436922550204 }} ,
					{ 22 ,  {-0.3296774695316951 }} ,
					{ 23 ,  {-0.44357783871312295 }} ,
					{ 35 ,  {0.15131255251163728 }} ,
					{ 38 ,  {-0.019878486012138666 }} ,
					{ 42 ,  {-0.09826564173335615 }} ,
					{ 43 ,  {-0.2210312417149544 }} ,
					{ 68 ,  {-0.07321579882308192 }} ,
					{ 69 ,  {0.023622583182385335 }} ,
					{ 78 ,  {-0.12316811207216234 }} ,
					{ 79 ,  {-0.06777415629476309 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 0.7447880989269889 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_13 <= 0.29378023413101 ) ? ( 16 ) : ( ( ( scaler_output_7 <= 0.2455258313732251 ) ? ( ( ( scaler_output_7 <= -0.20062342899396915 ) ? ( 68 ) : ( 69 ) ) ) : ( 35 ) ) ) ) ) : ( ( ( scaler_output_7 <= -0.6340255676363853 ) ? ( 18 ) : ( ( ( scaler_output_12 <= 0.11115119129852609 ) ? ( 38 ) : ( ( ( scaler_output_4 <= -0.2726140752727751 ) ? ( 78 ) : ( 79 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_2 <= 0.3067789804697961 ) ? ( ( ( scaler_output_9 <= -0.8888967014134915 ) ? ( 20 ) : ( ( ( scaler_output_12 <= 0.803418631451599 ) ? ( 42 ) : ( 43 ) ) ) ) ) : ( ( ( scaler_output_14 <= 1.2218877235893113 ) ? ( 22 ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( ( ( scaler_output_14 <= -1.0067865866280377 ) ? ( 12 ) : ( 13 ) ) ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_6
		
	
		namespace LGBM_Tree_7 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.3802494662148612 }} ,
					{ 7 ,  {0.7917302926381429 }} ,
					{ 18 ,  {0.3203236403465271 }} ,
					{ 19 ,  {0.13006119744754152 }} ,
					{ 20 ,  {-0.10321613794565201 }} ,
					{ 21 ,  {-0.2349746779033116 }} ,
					{ 22 ,  {-0.2849249769198267 }} ,
					{ 23 ,  {-0.462692529814584 }} ,
					{ 32 ,  {0.1500300649739802 }} ,
					{ 34 ,  {-0.019844710489823707 }} ,
					{ 66 ,  {0.015515072839999838 }} ,
					{ 67 ,  {-0.056125140700134496 }} ,
					{ 70 ,  {-0.12875992761034033 }} ,
					{ 142 ,  {-0.03443929900415242 }} ,
					{ 143 ,  {-0.09566262544611016 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 1.13074261781607 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_9 <= 0.30499008789040466 ) ? ( 32 ) : ( ( ( scaler_output_14 <= -0.7082349106427404 ) ? ( 66 ) : ( 67 ) ) ) ) ) : ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 34 ) : ( ( ( scaler_output_10 <= -0.579621912252141 ) ? ( 70 ) : ( ( ( scaler_output_8 <= 0.07647469019470782 ) ? ( 142 ) : ( 143 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_14 <= -1.0067865866280377 ) ? ( 18 ) : ( 19 ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.9777689480970188 ) ? ( ( ( scaler_output_12 <= 0.6880407247594201 ) ? ( 20 ) : ( 21 ) ) ) : ( ( ( scaler_output_2 <= 0.8094889868774345 ) ? ( 22 ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.6717871176899362 ) ? ( 6 ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_7
		
	
		namespace LGBM_Tree_8 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {0.7358486272670605 }} ,
					{ 9 ,  {0.17009809353437866 }} ,
					{ 12 ,  {0.35831748106992684 }} ,
					{ 13 ,  {0.13987286497246137 }} ,
					{ 17 ,  {0.09650889705293454 }} ,
					{ 20 ,  {-0.06178657375276089 }} ,
					{ 23 ,  {-0.24747981026768687 }} ,
					{ 42 ,  {-0.25223450783421014 }} ,
					{ 43 ,  {-0.1430017784610391 }} ,
					{ 44 ,  {-0.4188764715194703 }} ,
					{ 45 ,  {-0.3585425099600916 }} ,
					{ 64 ,  {-0.15255204237997533 }} ,
					{ 65 ,  {-0.07146446488797664 }} ,
					{ 67 ,  {-0.07657392337918283 }} ,
					{ 132 ,  {0.04365096560076756 }} ,
					{ 133 ,  {-0.01202876488012927 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 0.7447880989269889 ) ? ( ( ( scaler_output_14 <= 0.20904418730274124 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_6 <= 0.3973003074838933 ) ? ( ( ( scaler_output_7 <= -0.34225811482482377 ) ? ( ( ( scaler_output_7 <= -0.6085313241868316 ) ? ( 64 ) : ( 65 ) ) ) : ( ( ( scaler_output_8 <= 0.05157021945879913 ) ? ( ( ( scaler_output_9 <= 1.1862235197473068 ) ? ( 132 ) : ( 133 ) ) ) : ( 67 ) ) ) ) ) : ( 17 ) ) ) : ( 9 ) ) ) : ( ( ( scaler_output_2 <= 0.3067789804697961 ) ? ( ( ( scaler_output_8 <= 0.6154785925504433 ) ? ( 20 ) : ( ( ( scaler_output_13 <= 0.384572070644288 ) ? ( 42 ) : ( 43 ) ) ) ) ) : ( ( ( scaler_output_9 <= -0.8652745340708576 ) ? ( ( ( scaler_output_8 <= 1.031739031993487 ) ? ( 44 ) : ( 45 ) ) ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( ( ( scaler_output_11 <= -0.634929084476647 ) ? ( 12 ) : ( 13 ) ) ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_8
		
	
		namespace LGBM_Tree_9 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.34478533267974854 }} ,
					{ 7 ,  {0.7153513232866924 }} ,
					{ 18 ,  {0.29384617137908936 }} ,
					{ 19 ,  {0.11359802296287136 }} ,
					{ 20 ,  {-0.0897278789144296 }} ,
					{ 21 ,  {-0.20277246803045276 }} ,
					{ 23 ,  {-0.4319180163470182 }} ,
					{ 33 ,  {0.14321361737325788 }} ,
					{ 34 ,  {-0.015845346131495068 }} ,
					{ 44 ,  {-0.205675749729077 }} ,
					{ 45 ,  {-0.3285522288509778 }} ,
					{ 64 ,  {0.02641527858666248 }} ,
					{ 65 ,  {-0.06379481230185113 }} ,
					{ 70 ,  {-0.12158965040885268 }} ,
					{ 142 ,  {-0.03602961217208455 }} ,
					{ 143 ,  {-0.09241859827722822 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 1.13074261781607 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_2 <= -0.40530488960571875 ) ? ( ( ( scaler_output_12 <= -0.07345345940896016 ) ? ( 64 ) : ( 65 ) ) ) : ( 33 ) ) ) : ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 34 ) : ( ( ( scaler_output_7 <= -0.6340255676363853 ) ? ( 70 ) : ( ( ( scaler_output_8 <= 0.22234373307645808 ) ? ( 142 ) : ( 143 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_14 <= -1.0067865866280377 ) ? ( 18 ) : ( 19 ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.448144276004751 ) ? ( ( ( scaler_output_2 <= -0.34071111781329677 ) ? ( 20 ) : ( 21 ) ) ) : ( ( ( scaler_output_2 <= 1.0376064059894794 ) ? ( ( ( scaler_output_14 <= 0.9003168763247735 ) ? ( 44 ) : ( 45 ) ) ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.6717871176899362 ) ? ( 6 ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_9
		
	
		namespace LGBM_Tree_10 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.5860378130888327 }} ,
					{ 9 ,  {0.2369121549603267 }} ,
					{ 12 ,  {0.010498065987358923 }} ,
					{ 16 ,  {0.17232937690402783 }} ,
					{ 28 ,  {-0.08629543095827102 }} ,
					{ 29 ,  {-0.2059826666658575 }} ,
					{ 30 ,  {-0.24873079977145324 }} ,
					{ 31 ,  {-0.4130392480779578 }} ,
					{ 34 ,  {-0.059697724021971224 }} ,
					{ 52 ,  {-0.07693118776964106 }} ,
					{ 53 ,  {-0.012690236561355137 }} ,
					{ 54 ,  {-0.08688878383148801 }} ,
					{ 55 ,  {-0.12469836086034776 }} ,
					{ 70 ,  {0.06621908178696266 }} ,
					{ 71 ,  {0.006382047215645965 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_7 <= 1.2015599607314973 ) ? ( ( ( scaler_output_7 <= 0.5188807750267758 ) ? ( ( ( scaler_output_9 <= -0.1074543870060579 ) ? ( 16 ) : ( ( ( scaler_output_7 <= -0.20062342899396915 ) ? ( 34 ) : ( ( ( scaler_output_8 <= -1.0637942913565344 ) ? ( 70 ) : ( 71 ) ) ) ) ) ) ) : ( 9 ) ) ) : ( 5 ) ) ) : ( ( ( scaler_output_14 <= 0.3394861578851025 ) ? ( ( ( scaler_output_11 <= -0.726220550471154 ) ? ( 12 ) : ( ( ( scaler_output_14 <= -0.03579608903099569 ) ? ( ( ( scaler_output_10 <= -0.4650586771494674 ) ? ( 52 ) : ( 53 ) ) ) : ( ( ( scaler_output_14 <= 0.10720179315822383 ) ? ( 54 ) : ( 55 ) ) ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.9777689480970188 ) ? ( ( ( scaler_output_12 <= 0.6880407247594201 ) ? ( 28 ) : ( 29 ) ) ) : ( ( ( scaler_output_2 <= 0.8094889868774345 ) ? ( 30 ) : ( 31 ) ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_10
		
	
		namespace LGBM_Tree_11 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {0.2781349101103842 }} ,
					{ 5 ,  {0.7071466854640416 }} ,
					{ 26 ,  {0.31520832040905955 }} ,
					{ 27 ,  {0.03358596654041954 }} ,
					{ 28 ,  {-0.08198066037893297 }} ,
					{ 29 ,  {-0.19055538816111428 }} ,
					{ 30 ,  {-0.23547329127263184 }} ,
					{ 31 ,  {-0.3816053856696402 }} ,
					{ 48 ,  {0.14149738809336787 }} ,
					{ 51 ,  {-0.10713205681078963 }} ,
					{ 98 ,  {0.020779516987502578 }} ,
					{ 99 ,  {-0.047253587134182456 }} ,
					{ 100 ,  {0.008656740033378204 }} ,
					{ 202 ,  {-0.1013186528450913 }} ,
					{ 203 ,  {-0.0395159702077508 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_14 <= -1.0423616695141362 ) ? ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( 4 ) : ( 5 ) ) ) : ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.44027352439065054 ) ? ( ( ( scaler_output_14 <= -0.4180538423953485 ) ? ( ( ( scaler_output_9 <= 0.30499008789040466 ) ? ( 48 ) : ( ( ( scaler_output_14 <= -0.7186981703151222 ) ? ( 98 ) : ( 99 ) ) ) ) ) : ( ( ( scaler_output_9 <= 0.29307152216343385 ) ? ( ( ( scaler_output_6 <= -0.16198334624554048 ) ? ( 100 ) : ( ( ( scaler_output_6 <= 0.3973003074838933 ) ? ( 202 ) : ( 203 ) ) ) ) ) : ( 51 ) ) ) ) ) : ( ( ( scaler_output_4 <= -0.9597912072136919 ) ? ( 26 ) : ( 27 ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.9777689480970188 ) ? ( ( ( scaler_output_12 <= 0.6880407247594201 ) ? ( 28 ) : ( 29 ) ) ) : ( ( ( scaler_output_2 <= 0.8094889868774345 ) ? ( 30 ) : ( 31 ) ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_11
		
	
		namespace LGBM_Tree_12 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {0.264228159096092 }} ,
					{ 5 ,  {0.6717893282572429 }} ,
					{ 26 ,  {0.29944790247082714 }} ,
					{ 27 ,  {0.03190666864747587 }} ,
					{ 28 ,  {-0.07638871669769287 }} ,
					{ 29 ,  {-0.17321336108259858 }} ,
					{ 31 ,  {-0.3714946746826172 }} ,
					{ 48 ,  {0.1344225223935412 }} ,
					{ 51 ,  {-0.10177545555763774 }} ,
					{ 60 ,  {-0.17834933159812805 }} ,
					{ 61 ,  {-0.2859253525733948 }} ,
					{ 98 ,  {0.019740541468374433 }} ,
					{ 99 ,  {-0.044890909031033516 }} ,
					{ 100 ,  {0.002721843043608325 }} ,
					{ 202 ,  {-0.09967658230662346 }} ,
					{ 203 ,  {-0.04018482904395332 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_14 <= -1.0423616695141362 ) ? ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( 4 ) : ( 5 ) ) ) : ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.44027352439065054 ) ? ( ( ( scaler_output_14 <= -0.4180538423953485 ) ? ( ( ( scaler_output_9 <= 0.30499008789040466 ) ? ( 48 ) : ( ( ( scaler_output_14 <= -0.7186981703151222 ) ? ( 98 ) : ( 99 ) ) ) ) ) : ( ( ( scaler_output_9 <= 0.29307152216343385 ) ? ( ( ( scaler_output_8 <= 0.05157021945879913 ) ? ( 100 ) : ( ( ( scaler_output_6 <= 0.3973003074838933 ) ? ( 202 ) : ( 203 ) ) ) ) ) : ( 51 ) ) ) ) ) : ( ( ( scaler_output_4 <= -0.9597912072136919 ) ? ( 26 ) : ( 27 ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.448144276004751 ) ? ( ( ( scaler_output_2 <= -0.34071111781329677 ) ? ( 28 ) : ( 29 ) ) ) : ( ( ( scaler_output_2 <= 1.0376064059894794 ) ? ( ( ( scaler_output_14 <= 0.9003168763247735 ) ? ( 60 ) : ( 61 ) ) ) : ( 31 ) ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_12
		
	
		namespace LGBM_Tree_13 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 6 ,  {0.2776844966979254 }} ,
					{ 7 ,  {0.5904404113690059 }} ,
					{ 17 ,  {0.08633864628659055 }} ,
					{ 18 ,  {0.24376166570186616 }} ,
					{ 19 ,  {0.08886726686338846 }} ,
					{ 20 ,  {-0.07406219184398652 }} ,
					{ 21 ,  {-0.1713582294540746 }} ,
					{ 22 ,  {-0.20841757004198277 }} ,
					{ 23 ,  {-0.34540419386965887 }} ,
					{ 64 ,  {-0.07481747522417989 }} ,
					{ 66 ,  {-0.08121723708297525 }} ,
					{ 67 ,  {-0.13495721828192472 }} ,
					{ 130 ,  {0.04055502535090508 }} ,
					{ 262 ,  {0.010030964826760086 }} ,
					{ 263 ,  {-0.04736826379190792 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_7 <= 1.13074261781607 ) ? ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.32909029601342993 ) ? ( ( ( scaler_output_6 <= 0.5498322130464665 ) ? ( ( ( scaler_output_12 <= 0.5726628180672414 ) ? ( ( ( scaler_output_7 <= -0.5299240735507066 ) ? ( 64 ) : ( ( ( scaler_output_8 <= -0.8218651470648513 ) ? ( 130 ) : ( ( ( scaler_output_11 <= -0.634929084476647 ) ? ( 262 ) : ( 263 ) ) ) ) ) ) ) : ( ( ( scaler_output_8 <= -0.07473102498759422 ) ? ( 66 ) : ( 67 ) ) ) ) ) : ( 17 ) ) ) : ( ( ( scaler_output_14 <= -1.0067865866280377 ) ? ( 18 ) : ( 19 ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.9777689480970188 ) ? ( ( ( scaler_output_12 <= 0.6880407247594201 ) ? ( 20 ) : ( 21 ) ) ) : ( ( ( scaler_output_2 <= 0.8094889868774345 ) ? ( 22 ) : ( 23 ) ) ) ) ) ) ) : ( ( ( scaler_output_7 <= 1.6717871176899362 ) ? ( 6 ) : ( 7 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_13
		
	
		namespace LGBM_Tree_14 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 5 ,  {0.4838830840893281 }} ,
					{ 9 ,  {0.2446153303438967 }} ,
					{ 14 ,  {-0.13273832972028426 }} ,
					{ 24 ,  {0.01826771553605795 }} ,
					{ 26 ,  {-0.07035908025503158 }} ,
					{ 27 ,  {-0.16820151856349363 }} ,
					{ 30 ,  {-0.2548623197078705 }} ,
					{ 31 ,  {-0.3450811303180197 }} ,
					{ 32 ,  {0.013427201134618372 }} ,
					{ 33 ,  {-0.07690705440583684 }} ,
					{ 34 ,  {0.21766134795140135 }} ,
					{ 35 ,  {0.06459354764271168 }} ,
					{ 51 ,  {-0.020076128907887073 }} ,
					{ 100 ,  {-0.07496419761862073 }} ,
					{ 101 ,  {-0.11430501632392408 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_14 <= -0.40828813336779196 ) ? ( ( ( scaler_output_7 <= 1.2015599607314973 ) ? ( ( ( scaler_output_11 <= -0.3198262824956072 ) ? ( ( ( scaler_output_7 <= 0.2455258313732251 ) ? ( ( ( scaler_output_12 <= 0.34190700468288376 ) ? ( 32 ) : ( 33 ) ) ) : ( ( ( scaler_output_11 <= -0.8322364464647749 ) ? ( 34 ) : ( 35 ) ) ) ) ) : ( 9 ) ) ) : ( 5 ) ) ) : ( ( ( scaler_output_6 <= 0.926924979576161 ) ? ( ( ( scaler_output_14 <= 0.3394861578851025 ) ? ( ( ( scaler_output_12 <= -0.25805811011644636 ) ? ( 24 ) : ( ( ( scaler_output_4 <= -0.10026975722996248 ) ? ( ( ( scaler_output_9 <= 0.2662726629536914 ) ? ( 100 ) : ( 101 ) ) ) : ( 51 ) ) ) ) ) : ( ( ( scaler_output_12 <= 0.6880407247594201 ) ? ( 26 ) : ( 27 ) ) ) ) ) : ( ( ( scaler_output_2 <= 0.4751185066322022 ) ? ( 14 ) : ( ( ( scaler_output_2 <= 1.0376064059894794 ) ? ( 30 ) : ( 31 ) ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_14
		
	
		namespace LGBM_Tree_15 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {0.2266526290201 }} ,
					{ 5 ,  {0.5859730045000713 }} ,
					{ 26 ,  {0.25888601422309876 }} ,
					{ 27 ,  {0.018841317020680592 }} ,
					{ 28 ,  {-0.06684112858772277 }} ,
					{ 29 ,  {-0.15429235719942622 }} ,
					{ 30 ,  {-0.33621001541614537 }} ,
					{ 48 ,  {0.1224541225835033 }} ,
					{ 50 ,  {-0.09455331787272978 }} ,
					{ 62 ,  {-0.16487782840375548 }} ,
					{ 63 ,  {-0.2547622258216143 }} ,
					{ 98 ,  {0.015658435956747443 }} ,
					{ 99 ,  {-0.04483679855728279 }} ,
					{ 102 ,  {-0.001218515502349023 }} ,
					{ 206 ,  {-0.043709337108192 }} ,
					{ 207 ,  {-0.07794213704764844 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = ( ( scaler_output_14 <= -1.0423616695141362 ) ? ( ( ( scaler_output_7 <= 1.5818490921873434 ) ? ( 4 ) : ( 5 ) ) ) : ( ( ( scaler_output_14 <= 0.3039110749990041 ) ? ( ( ( scaler_output_7 <= 0.44027352439065054 ) ? ( ( ( scaler_output_14 <= -0.4180538423953485 ) ? ( ( ( scaler_output_9 <= 0.30499008789040466 ) ? ( 48 ) : ( ( ( scaler_output_14 <= -0.7082349106427404 ) ? ( 98 ) : ( 99 ) ) ) ) ) : ( ( ( scaler_output_7 <= -0.6340255676363853 ) ? ( 50 ) : ( ( ( scaler_output_12 <= 0.11115119129852609 ) ? ( 102 ) : ( ( ( scaler_output_8 <= 0.22234373307645808 ) ? ( 206 ) : ( 207 ) ) ) ) ) ) ) ) ) : ( ( ( scaler_output_4 <= -0.9597912072136919 ) ? ( 26 ) : ( 27 ) ) ) ) ) : ( ( ( scaler_output_6 <= 0.9777689480970188 ) ? ( ( ( scaler_output_12 <= 0.6880407247594201 ) ? ( 28 ) : ( 29 ) ) ) : ( ( ( scaler_output_6 <= 1.2065668064408774 ) ? ( 30 ) : ( ( ( scaler_output_14 <= 1.2588579077650608 ) ? ( 62 ) : ( 63 ) ) ) ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace LGBM_Tree_15
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
			std::vector<tTable> lTreeScores = { 
				LGBM_Tree_0::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_1::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_2::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_3::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_4::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_5::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_6::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_7::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_8::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_9::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_10::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_11::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_12::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_13::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_14::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				LGBM_Tree_15::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14)
			};
	
			tTable lAggregatedTable = aggregate_lgb_scores(lTreeScores, {"Estimator"});
	
	
			tTable lTable;
	
			std::any  lEstimator = lAggregatedTable["Estimator"][0];
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12) {
		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable;

		std::any  lEstimator = lTable_model[ "Estimator" ][0];
		lTable[ "Estimator" ] = { lEstimator };

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/boston.csv");
	return 0;
}
