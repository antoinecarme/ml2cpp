// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : SVC_sigmoid_Pipeline
// Dataset : FourClass_10

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_SVC_sigmoid_Pipeline_FourClass_10.exe ml2cpp-demo_SVC_sigmoid_Pipeline_FourClass_10.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	std::vector<std::any> get_classes(){
		std::vector<std::any> lClasses = { 0, 1, 2, 3 };

		return lClasses;
	}

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
	
			tTable lTable;
	
			lTable["imputer_output_2"] = { ((Feature_0 == std::any()) ?  ( -0.003903374463034205 ) : ( Feature_0)) };
			lTable["imputer_output_3"] = { ((Feature_1 == std::any()) ?  ( 0.6152232215702322 ) : ( Feature_1)) };
			lTable["imputer_output_4"] = { ((Feature_2 == std::any()) ?  ( 0.042796236914291665 ) : ( Feature_2)) };
			lTable["imputer_output_5"] = { ((Feature_3 == std::any()) ?  ( 0.7709819558904074 ) : ( Feature_3)) };
			lTable["imputer_output_6"] = { ((Feature_4 == std::any()) ?  ( -0.43300733624893334 ) : ( Feature_4)) };
			lTable["imputer_output_7"] = { ((Feature_5 == std::any()) ?  ( -0.0424956965794036 ) : ( Feature_5)) };
			lTable["imputer_output_8"] = { ((Feature_6 == std::any()) ?  ( -0.29809080119845455 ) : ( Feature_6)) };
			lTable["imputer_output_9"] = { ((Feature_7 == std::any()) ?  ( 0.14672241507251663 ) : ( Feature_7)) };
			lTable["imputer_output_10"] = { ((Feature_8 == std::any()) ?  ( 0.01746942384662034 ) : ( Feature_8)) };
			lTable["imputer_output_11"] = { ((Feature_9 == std::any()) ?  ( 0.11507331415602866 ) : ( Feature_9)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any imputer_output_2, std::any imputer_output_3, std::any imputer_output_4, std::any imputer_output_5, std::any imputer_output_6, std::any imputer_output_7, std::any imputer_output_8, std::any imputer_output_9, std::any imputer_output_10, std::any imputer_output_11) {
	
			tTable lTable;
	
			lTable["scaler_output_2"] = { ( ( imputer_output_2 - -0.003903374463034205 ) / 0.9795060640183997 ) };
			lTable["scaler_output_3"] = { ( ( imputer_output_3 - 0.6152232215702322 ) / 1.3900807236205235 ) };
			lTable["scaler_output_4"] = { ( ( imputer_output_4 - 0.042796236914291665 ) / 1.4962685135870766 ) };
			lTable["scaler_output_5"] = { ( ( imputer_output_5 - 0.7709819558904074 ) / 2.3333561060111743 ) };
			lTable["scaler_output_6"] = { ( ( imputer_output_6 - -0.43300733624893334 ) / 1.4029757772648748 ) };
			lTable["scaler_output_7"] = { ( ( imputer_output_7 - -0.0424956965794036 ) / 0.9558091076873229 ) };
			lTable["scaler_output_8"] = { ( ( imputer_output_8 - -0.29809080119845455 ) / 1.017013180721433 ) };
			lTable["scaler_output_9"] = { ( ( imputer_output_9 - 0.14672241507251663 ) / 1.600798539929603 ) };
			lTable["scaler_output_10"] = { ( ( imputer_output_10 - 0.01746942384662034 ) / 1.1487296361671415 ) };
			lTable["scaler_output_11"] = { ( ( imputer_output_11 - 0.11507331415602866 ) / 0.9690911857336224 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("imputer_output_2")[0], iTable.at("imputer_output_3")[0], iTable.at("imputer_output_4")[0], iTable.at("imputer_output_5")[0], iTable.at("imputer_output_6")[0], iTable.at("imputer_output_7")[0], iTable.at("imputer_output_8")[0], iTable.at("imputer_output_9")[0], iTable.at("imputer_output_10")[0], iTable.at("imputer_output_11")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		std::vector<std::any> get_classes(){
			std::vector<std::any> lClasses = { 0, 1, 2, 3 };
	
			return lClasses;
		}
	
		namespace pb_0_1 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 1 };
		
				return lClasses;
			}
		
			std::vector<std::any> lProblem_data_dual_0_1 = { 
			1.0 ,0.0 ,0.0 ,1.0 ,0.0 ,1.0 ,1.0 ,0.0 ,0.0 ,1.0 ,1.0 ,0.7818202591725558 ,1.0 ,0.0 ,0.3573995746420416 ,1.0 ,0.5713151639423462 ,-1.0 ,-1.0 ,-1.0 ,-0.0 ,-0.0 ,-1.0 ,-0.7105349977569436 ,-1.0 ,-0.0 ,-0.0 ,-0.0 ,-1.0 ,-1.0 ,-1.0 ,-0.0 ,-1.0 ,-0.0 , };
			
		
			std::vector<std::vector<std::any> > lProblem_data_sv_0_1 = { 
			 { 0.9714093888112304, -1.1362862709591603, 1.4121646810839101, 0.16748694582255716, 1.919129112546945, -1.3816843324216765, -0.264450213574542, 0.5734893436019516, -0.8001824570648544, 0.5312588986282071 },
			 { 0.7292873875447743, -0.5383205349459861, -0.3611452382946614, -0.4032738406425582, 0.9251863106955176, 0.017392189981687383, 0.34316771778421507, 0.6226561657231139, 0.10852466935652925, 0.7188007485970842 },
			 { 0.5155181451371881, -0.8714698092700448, -0.24389322910487762, -0.7991387414972061, -0.18581083474468457, -0.023588682037116185, 0.6986600728081974, -0.6135893124459777, 0.2006481214834177, 2.5794740486698324 },
			 { 0.7512981458283388, -0.9149828300753567, 0.2852823045034491, -0.11558803226776675, 0.24748912034828158, 0.28654936422754373, -0.07524606808095237, 0.5729190266147256, 0.6858859078443724, -0.620232456039194 },
			 { -0.7724118389110615, -1.523108404513254, -0.06934453307085123, -0.8222931132740179, 0.6337346825309558, 0.18651831067623925, 0.5994429231757117, 0.26611650190454433, -0.4332155471305799, -0.0021916563910858184 },
			 { -1.6525901403740733, -0.9890732087979381, -0.342927413635955, -0.4790906384194392, -0.5256139818544308, 0.9495403665210237, 0.2362342026029566, 0.3712062131271089, -0.8665466719556469, -0.2548238481870406 },
			 { -0.32663021936920433, -1.075224034129949, 0.3068201162977202, -0.16057356191138134, 0.42941985362453855, -0.8670582617243137, -0.054462713536908895, 0.7126993514412254, 0.3983018044769324, 0.2874206394894323 },
			 { 0.781312822280884, 0.6347829483833167, -0.9041192391704674, -0.9300186648244536, 1.326891768298379, 0.13188542176567378, 1.2923759777877002, -1.2673209344092986, 0.5635183958191062, 1.1924250826103184 },
			 { 0.3750056424765156, 0.08839156664387353, -1.1500997262003088, -0.7106948912048624, 0.8214637945754517, 0.02765690710297472, 0.802492887609131, 0.17755366813131324, 0.5203126451539958, -0.3473398360786861 },
			 { -2.04390942155231, 1.6045476968164614, -1.6078018561905978, -0.8553322073826393, 1.9483185006626593, -1.193969085208424, 1.4233791815648011, -1.001496133180198, 2.6578500028699037, 0.22383740962764367 },
			 { -0.9008243879031689, -0.7058080155207507, -0.1954871267874386, -0.14288199830722706, 0.7337440799607109, -0.37261544979685357, -0.018101107213572498, 1.1757591626798987, -0.7275765325824345, -1.4838347842326305 },
			 { 1.6205372377548237, 0.24588358170973168, 0.17361682358299016, -0.8594167963741567, 1.0360197969314284, -0.22808201831799044, 1.2154111271626897, -2.3575145129167856, -0.23125451691989812, 1.1072978105948121 },
			 { -2.0463565761467315, 0.021854712922967697, -0.45913908750371657, -0.2644863625352091, 1.4146860438861666, -0.25484644833947895, 0.346076492554258, 0.6033426931850794, 0.6694726458182755, 1.293706733667843 },
			 { 2.873564244275373, -0.5872911114054795, -1.036220513213831, -1.032451104156314, 0.06562210871181286, -0.2012723442633616, 0.982408087540338, -0.26033619760585114, 1.722492539259153, 0.7782941095903136 },
			 { 1.2833892138293526, -1.111176589341205, 0.3991096415334555, -0.4081262063348972, 1.2443424259568674, -0.758322531385854, 0.2952669404663437, 0.3301347714364283, 0.8695289827747983, -1.5856604372556145 },
			 { -0.1677974436428522, -0.609335392494558, 0.785396575978586, 0.3052336023473161, 0.9175267395284237, -0.3604428274466762, -0.4118383859489017, 0.7705520894457417, -0.671830837083766, -1.9277782785654813 },
			 { -0.6129536127403589, -1.2003117703069377, 0.169188933661664, -0.24184135719251648, 0.3752467217535285, 0.4980986824546179, -0.010420009873701903, 0.8568014759721623, 1.0375391875324445, 0.41331227685244276 },
			 { -0.5374379981119589, -0.7296309928188767, 1.4779845935418514, 0.5063019422966141, 0.6965900672935247, -0.3378223922992601, -0.6187951903122013, 0.285397306909334, -0.7749698771712716, -0.13844482114562637 },
			 { -0.6384379162711309, 0.717712741267091, -0.029441812995214225, 0.19454074631293933, 0.42356979543552, 0.4996306149226033, -0.014709875293858664, -0.21682672177070866, 0.8731634819745784, 0.3996037942181906 },
			 { -0.5091996214221497, 1.1713064754998441, -0.48494740604431213, -0.008898553173031508, 1.3733454370146492, -0.3114028163844563, 0.35946894921283384, -0.22891358225263628, 0.6298212594245098, -1.259802912006969 },
			 { 1.2835974213496795, -0.4613282319948631, 2.9398191114629366, 1.742369226229312, -0.39256666765475806, 0.24206147146925086, -1.9436465277045347, 0.3956742511898959, 0.8707557823789885, 0.9364683526980433 },
			 { -0.214016747171314, 0.9550052350042129, 0.8999958947966962, 1.9306336316149393, -1.6623106403953314, -0.5394342785606583, -2.089034439434298, 1.612983715349993, -1.5310909664536638, -0.6192139096108493 },
			 { -0.8230018764208287, 0.0541758510579681, 0.9375651162405912, 0.7344096380802708, 2.1783911480063463, -0.9615629165483969, -0.6697585979258878, 1.3075235034419233, -1.5935440702644323, -0.6659791402506481 },
			 { 1.498564845881099, 1.48831742779472, -0.9195950368877045, 0.45496476868785374, -0.8831439969763527, 0.1605753080607123, -0.29246802189369364, 0.2500655154498075, 0.8724808729913642, -1.5908321123459748 },
			 { -0.6167692842155993, -0.2173495764149621, 0.4539181821969074, 0.18067095507803288, 0.6122834345039813, -2.0679664960978896, -0.19976608756975378, 0.31411294150482844, -0.7119488376066533, -0.32601200274560516 },
			 { -0.46515313120920093, 1.2103577416175606, 0.14357328513380316, 1.0670224926771352, -0.004180412672813376, -0.5165474025968144, -0.9551233938552457, 0.9299887560835304, -1.1277360622292962, 1.3633593105363355 },
			 { 0.009674343495163067, 1.2178845494390973, 2.412039780702482, 2.7994399099133482, -2.364480222710695, -1.200108875400591, -2.9327320914381376, 0.8741712868555673, 0.15348555651244278, 0.10452254551846794 },
			 { -0.7181604123131647, 0.47635997350587705, 0.21388659584479253, 1.1163530548266316, -0.4968220838205612, -0.5072223495412532, -1.24688692572275, 1.7030243556175357, -1.003380404809525, 0.6423375532130973 },
			 { -0.38529554644994124, -0.33978526464340053, 1.1521852950916334, 0.6277675404581664, 1.4605869711557362, -0.5811596496045133, -0.6601503419469803, 0.9136756412886499, 0.10977779808551855, -0.36931239107023645 },
			 { -1.292731963918506, 0.5628285196619536, 0.007127339857400062, 0.3728509698863072, 0.7108565052671136, 1.5681721671032636, -0.26318102458574727, 0.512232870741319, 0.5221201360240043, 0.4516931545431869 },
			 { 0.3737039642758539, 0.3836668075977489, 0.2262882357990665, 0.4555038841016273, -0.23804811339629262, -0.3942471767707451, -0.4370578804876122, 0.2168474346275738, 0.46104028509524775, -1.4332412094725877 },
			 { 0.12894791123724086, 0.6506067209702775, -0.22887773821383223, 0.33102294500659235, -0.4701513824550577, 0.9428923579731946, -0.274116093353173, 0.14675015500968058, -1.3124142189597725, -0.32257928780172823 },
			 { -0.520327735882063, -1.5213111907033747, 2.4315184437785144, 0.3592795244718508, 0.32622900008176564, 1.1916928182803614, -0.5628887017025386, -0.6777260177602357, -0.2942834435409094, 1.3971427897210167 },
			 { 1.9823391269812736, 1.041533370242338, 1.1741916871533693, 2.144983578407978, -1.6631709351723898, -0.7478608271844139, -2.2951102991250854, 1.6281529749851422, 1.6396331333077083, -1.525977817768459 },
			};
			
		
			double get_problem_0_1_decision_function( std::vector<std::any> const & inputs) {
				return sigmoid_kernel( lProblem_data_dual_0_1, lProblem_data_sv_0_1, inputs, 0.09999999999999998,0.0 ) + 0.001289599661080841;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_1",
					"Proba_0", "Proba_1",
					"LogProba_0", "LogProba_1" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
				auto lClasses = get_classes();
		
				std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
		
				std::any lDotProduct_0_1 = sigmoid_kernel( lProblem_data_dual_0_1, lProblem_data_sv_0_1, inputs, 0.09999999999999998,0.0 ) + 0.001289599661080841;
		
				std::any lLogistic_0_1 = logistic(-2.2278160106608027 * lDotProduct_0_1 + -0.14415157978797255);
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					-lDotProduct_0_1,
					lDotProduct_0_1 
				} ;
				lTable["Proba"] = { 
					lLogistic_0_1,
					1.0 - lLogistic_0_1 
				} ;
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
		
				return lTable;
			}
		
		} // eof namespace pb_0_1
		
	
		namespace pb_0_2 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 2 };
		
				return lClasses;
			}
		
			std::vector<std::any> lProblem_data_dual_0_2 = { 
			0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.4812759719120323 ,1.0 ,0.0 ,1.0 ,1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-0.18222003367315479 ,-0.6959363907231843 ,-1.0 ,-1.0 ,-0.0 ,-1.0 ,-1.0 ,-1.0 ,-0.6031195475156933 , };
			
		
			std::vector<std::vector<std::any> > lProblem_data_sv_0_2 = { 
			 { 0.9714093888112304, -1.1362862709591603, 1.4121646810839101, 0.16748694582255716, 1.919129112546945, -1.3816843324216765, -0.264450213574542, 0.5734893436019516, -0.8001824570648544, 0.5312588986282071 },
			 { 0.7292873875447743, -0.5383205349459861, -0.3611452382946614, -0.4032738406425582, 0.9251863106955176, 0.017392189981687383, 0.34316771778421507, 0.6226561657231139, 0.10852466935652925, 0.7188007485970842 },
			 { 0.5155181451371881, -0.8714698092700448, -0.24389322910487762, -0.7991387414972061, -0.18581083474468457, -0.023588682037116185, 0.6986600728081974, -0.6135893124459777, 0.2006481214834177, 2.5794740486698324 },
			 { 0.7512981458283388, -0.9149828300753567, 0.2852823045034491, -0.11558803226776675, 0.24748912034828158, 0.28654936422754373, -0.07524606808095237, 0.5729190266147256, 0.6858859078443724, -0.620232456039194 },
			 { -0.7724118389110615, -1.523108404513254, -0.06934453307085123, -0.8222931132740179, 0.6337346825309558, 0.18651831067623925, 0.5994429231757117, 0.26611650190454433, -0.4332155471305799, -0.0021916563910858184 },
			 { -1.6525901403740733, -0.9890732087979381, -0.342927413635955, -0.4790906384194392, -0.5256139818544308, 0.9495403665210237, 0.2362342026029566, 0.3712062131271089, -0.8665466719556469, -0.2548238481870406 },
			 { -0.32663021936920433, -1.075224034129949, 0.3068201162977202, -0.16057356191138134, 0.42941985362453855, -0.8670582617243137, -0.054462713536908895, 0.7126993514412254, 0.3983018044769324, 0.2874206394894323 },
			 { 0.781312822280884, 0.6347829483833167, -0.9041192391704674, -0.9300186648244536, 1.326891768298379, 0.13188542176567378, 1.2923759777877002, -1.2673209344092986, 0.5635183958191062, 1.1924250826103184 },
			 { 0.3750056424765156, 0.08839156664387353, -1.1500997262003088, -0.7106948912048624, 0.8214637945754517, 0.02765690710297472, 0.802492887609131, 0.17755366813131324, 0.5203126451539958, -0.3473398360786861 },
			 { -2.04390942155231, 1.6045476968164614, -1.6078018561905978, -0.8553322073826393, 1.9483185006626593, -1.193969085208424, 1.4233791815648011, -1.001496133180198, 2.6578500028699037, 0.22383740962764367 },
			 { -0.9008243879031689, -0.7058080155207507, -0.1954871267874386, -0.14288199830722706, 0.7337440799607109, -0.37261544979685357, -0.018101107213572498, 1.1757591626798987, -0.7275765325824345, -1.4838347842326305 },
			 { 1.6205372377548237, 0.24588358170973168, 0.17361682358299016, -0.8594167963741567, 1.0360197969314284, -0.22808201831799044, 1.2154111271626897, -2.3575145129167856, -0.23125451691989812, 1.1072978105948121 },
			 { -2.0463565761467315, 0.021854712922967697, -0.45913908750371657, -0.2644863625352091, 1.4146860438861666, -0.25484644833947895, 0.346076492554258, 0.6033426931850794, 0.6694726458182755, 1.293706733667843 },
			 { 2.873564244275373, -0.5872911114054795, -1.036220513213831, -1.032451104156314, 0.06562210871181286, -0.2012723442633616, 0.982408087540338, -0.26033619760585114, 1.722492539259153, 0.7782941095903136 },
			 { 1.2833892138293526, -1.111176589341205, 0.3991096415334555, -0.4081262063348972, 1.2443424259568674, -0.758322531385854, 0.2952669404663437, 0.3301347714364283, 0.8695289827747983, -1.5856604372556145 },
			 { -0.1677974436428522, -0.609335392494558, 0.785396575978586, 0.3052336023473161, 0.9175267395284237, -0.3604428274466762, -0.4118383859489017, 0.7705520894457417, -0.671830837083766, -1.9277782785654813 },
			 { -0.6129536127403589, -1.2003117703069377, 0.169188933661664, -0.24184135719251648, 0.3752467217535285, 0.4980986824546179, -0.010420009873701903, 0.8568014759721623, 1.0375391875324445, 0.41331227685244276 },
			 { 0.3728477956732985, 0.2150610679834529, 0.08393670362034505, 0.7029479107610479, -0.8778134194688425, 0.6056477433901051, -0.844443589473496, 1.0202010595638178, 0.9073571060114952, 0.5949187633081499 },
			 { 1.4122845978733751, 0.8860898474486589, -1.9405186231398404, -0.07474079289882218, -0.7793444034413073, -2.6702025981079935, 0.06359503606562808, 1.295307501104366, -0.9879646225889391, -0.9684510673956982 },
			 { 1.4066838727702853, -1.9182044206192992, -0.5196200501051259, -1.4705199852923474, -0.3458523910961328, 0.33616488091266306, 1.1840694698786476, -0.6080444045275858, -0.29994497023595584, -0.7844124282150763 },
			 { -0.6292030328074096, 0.1912075700484827, -1.843749457931878, -0.7991127838709606, 0.6616827502981251, 1.7840049271298177, 0.8451858943105607, 0.8140681317224646, 0.08792025539317516, 0.9950261622110849 },
			 { 0.3341701047941328, -2.662482196896262, 0.07843518137226316, -1.8595180608743578, 0.009894199539738802, 0.5011525213358909, 1.5449586461756617, -1.3978967416343981, 0.8013585074033905, 1.6588023725821097 },
			 { 0.27097803892047134, -2.050244728369085, -0.4542127463856603, -1.6409303806916962, 1.2265855708161812, 0.39276279886971993, 1.4434868920883854, -0.300095627427432, 0.38730712905565656, -0.3090329471111716 },
			 { 0.7211425879338048, 1.457288622504473, 0.04006284303228038, 1.693972182129337, -0.43340082570959415, -1.0101635421053963, -1.6977213868691645, 2.1933689021891722, -0.32853587805805745, 1.092602209782003 },
			 { -2.3565166103036597, -0.30251013989767633, -0.3140968676549342, -0.2384809460116976, -0.057552546047053434, 0.3584567179839237, 0.16476994889061974, 0.24320679990529717, -0.34536210647094345, 0.194783439550393 },
			 { -0.24031816293735103, -1.4585692410501578, -0.44938429544290937, -1.2606210981503376, -0.38000785302533374, -0.479923877092441, 1.0649026744888006, -0.7953589462233127, -0.8458217624902522, -0.4718498061742985 },
			 { 0.8997969895548796, 0.17070669703209612, -0.059019571801465096, 0.5066476066412597, -1.0385184249597428, 2.2780994287848864, -0.6394833880466154, 0.7248295939295544, 1.4374871382070562, 0.3295857969942965 },
			 { -1.0674962632282596, 0.10738702259752413, -1.3736167044518084, -0.9294913297161647, -0.2591018033659197, -2.089976011450095, 0.9982561688181318, -0.5288704938579509, -0.2489618806830741, -0.20163113151409254 },
			 { 0.6771904971815166, 1.0719689016435152, 0.5245306374555708, 1.6491563675727086, 0.00379803365985488, 1.0864447846283871, -1.6707192554829466, 2.0264169541316184, 0.8991761439312493, -2.991975528502707 },
			 { 1.1169230852263023, -1.081815476337387, -0.7316315352999305, -0.8058827714197353, -2.60923888573501, 0.2674006587207947, 0.4628728123318298, -0.6413023779348499, 0.47979999991198313, 0.2109603749118481 },
			 { -1.4368565283727257, -1.2179850983373004, 0.02957834923686986, -1.8886785238541821, 0.7298464602800008, -1.2853111154258396, 2.0338563000592718, -2.9891471979477635, 0.8549405023016902, 0.544772187536236 },
			 { -0.029032309561236043, -0.6453345904438006, -1.117203658136182, -1.5618681060804385, 1.1721141707277283, -0.10688969820803637, 1.6685204789189094, -0.9473215546387913, -0.043736970360985186, 0.35416133142343575 },
			 { -0.934981534951002, -0.9646927105624221, -1.086082141474592, -1.8089677945974325, -0.5573323681766859, 1.5320749070354607, 1.8012437726323827, -1.9513058268134067, 0.5571671919157734, 1.2547979832590759 },
			 { -0.6712757510936834, -1.300069498625356, -1.0499512078393478, -1.4793894598074975, -0.22412315861444831, 0.8467584853979707, 1.3137737007513093, -0.575454483561529, 0.43967633716983207, -0.6302685701338885 },
			};
			
		
			double get_problem_0_2_decision_function( std::vector<std::any> const & inputs) {
				return sigmoid_kernel( lProblem_data_dual_0_2, lProblem_data_sv_0_2, inputs, 0.09999999999999998,0.0 ) + -0.12335491276988689;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_2",
					"Proba_0", "Proba_2",
					"LogProba_0", "LogProba_2" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
				auto lClasses = get_classes();
		
				std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
		
				std::any lDotProduct_0_2 = sigmoid_kernel( lProblem_data_dual_0_2, lProblem_data_sv_0_2, inputs, 0.09999999999999998,0.0 ) + -0.12335491276988689;
		
				std::any lLogistic_0_2 = logistic(-0.6011202188520597 * lDotProduct_0_2 + 0.05029547046236036);
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					-lDotProduct_0_2,
					lDotProduct_0_2 
				} ;
				lTable["Proba"] = { 
					lLogistic_0_2,
					1.0 - lLogistic_0_2 
				} ;
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
		
				return lTable;
			}
		
		} // eof namespace pb_0_2
		
	
		namespace pb_0_3 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 0, 3 };
		
				return lClasses;
			}
		
			std::vector<std::any> lProblem_data_dual_0_3 = { 
			0.0 ,0.0 ,1.0 ,1.0 ,0.0 ,1.0 ,0.0 ,1.0 ,0.0 ,1.0 ,0.7274646571751774 ,1.0 ,0.0 ,0.6968364755243183 ,0.0 ,1.0 ,0.0 ,-0.05387558585109622 ,-0.0 ,-0.0 ,-0.0 ,-1.0 ,-0.0 ,-0.0 ,-1.0 ,-1.0 ,-0.0 ,-1.0 ,-1.0 ,-0.0 ,-0.34916661299774027 ,-1.0 ,-0.021258933850659273 ,-1.0 ,-0.0 ,-0.0 ,-0.0 ,-1.0 , };
			
		
			std::vector<std::vector<std::any> > lProblem_data_sv_0_3 = { 
			 { 0.9714093888112304, -1.1362862709591603, 1.4121646810839101, 0.16748694582255716, 1.919129112546945, -1.3816843324216765, -0.264450213574542, 0.5734893436019516, -0.8001824570648544, 0.5312588986282071 },
			 { 0.7292873875447743, -0.5383205349459861, -0.3611452382946614, -0.4032738406425582, 0.9251863106955176, 0.017392189981687383, 0.34316771778421507, 0.6226561657231139, 0.10852466935652925, 0.7188007485970842 },
			 { 0.5155181451371881, -0.8714698092700448, -0.24389322910487762, -0.7991387414972061, -0.18581083474468457, -0.023588682037116185, 0.6986600728081974, -0.6135893124459777, 0.2006481214834177, 2.5794740486698324 },
			 { 0.7512981458283388, -0.9149828300753567, 0.2852823045034491, -0.11558803226776675, 0.24748912034828158, 0.28654936422754373, -0.07524606808095237, 0.5729190266147256, 0.6858859078443724, -0.620232456039194 },
			 { -0.7724118389110615, -1.523108404513254, -0.06934453307085123, -0.8222931132740179, 0.6337346825309558, 0.18651831067623925, 0.5994429231757117, 0.26611650190454433, -0.4332155471305799, -0.0021916563910858184 },
			 { -1.6525901403740733, -0.9890732087979381, -0.342927413635955, -0.4790906384194392, -0.5256139818544308, 0.9495403665210237, 0.2362342026029566, 0.3712062131271089, -0.8665466719556469, -0.2548238481870406 },
			 { -0.32663021936920433, -1.075224034129949, 0.3068201162977202, -0.16057356191138134, 0.42941985362453855, -0.8670582617243137, -0.054462713536908895, 0.7126993514412254, 0.3983018044769324, 0.2874206394894323 },
			 { 0.781312822280884, 0.6347829483833167, -0.9041192391704674, -0.9300186648244536, 1.326891768298379, 0.13188542176567378, 1.2923759777877002, -1.2673209344092986, 0.5635183958191062, 1.1924250826103184 },
			 { 0.3750056424765156, 0.08839156664387353, -1.1500997262003088, -0.7106948912048624, 0.8214637945754517, 0.02765690710297472, 0.802492887609131, 0.17755366813131324, 0.5203126451539958, -0.3473398360786861 },
			 { -2.04390942155231, 1.6045476968164614, -1.6078018561905978, -0.8553322073826393, 1.9483185006626593, -1.193969085208424, 1.4233791815648011, -1.001496133180198, 2.6578500028699037, 0.22383740962764367 },
			 { -0.9008243879031689, -0.7058080155207507, -0.1954871267874386, -0.14288199830722706, 0.7337440799607109, -0.37261544979685357, -0.018101107213572498, 1.1757591626798987, -0.7275765325824345, -1.4838347842326305 },
			 { 1.6205372377548237, 0.24588358170973168, 0.17361682358299016, -0.8594167963741567, 1.0360197969314284, -0.22808201831799044, 1.2154111271626897, -2.3575145129167856, -0.23125451691989812, 1.1072978105948121 },
			 { -2.0463565761467315, 0.021854712922967697, -0.45913908750371657, -0.2644863625352091, 1.4146860438861666, -0.25484644833947895, 0.346076492554258, 0.6033426931850794, 0.6694726458182755, 1.293706733667843 },
			 { 2.873564244275373, -0.5872911114054795, -1.036220513213831, -1.032451104156314, 0.06562210871181286, -0.2012723442633616, 0.982408087540338, -0.26033619760585114, 1.722492539259153, 0.7782941095903136 },
			 { 1.2833892138293526, -1.111176589341205, 0.3991096415334555, -0.4081262063348972, 1.2443424259568674, -0.758322531385854, 0.2952669404663437, 0.3301347714364283, 0.8695289827747983, -1.5856604372556145 },
			 { -0.1677974436428522, -0.609335392494558, 0.785396575978586, 0.3052336023473161, 0.9175267395284237, -0.3604428274466762, -0.4118383859489017, 0.7705520894457417, -0.671830837083766, -1.9277782785654813 },
			 { -0.6129536127403589, -1.2003117703069377, 0.169188933661664, -0.24184135719251648, 0.3752467217535285, 0.4980986824546179, -0.010420009873701903, 0.8568014759721623, 1.0375391875324445, 0.41331227685244276 },
			 { -0.5660905310030859, 0.5002282748841744, -0.630807616194282, -0.2583704317089291, -0.30445800484605134, 1.032556268076858, 0.37172754251482926, -0.481942479001224, -1.4390650797091615, 0.3882624280235004 },
			 { 0.3248603745454008, 1.0370813478156848, -0.37152939173718014, 0.08521597096943413, -0.6990946495007109, 0.5233935363455697, 0.1154292861950275, -0.8722439878658644, -1.5995337571369665, -1.2726884381166161 },
			 { 0.0008433489338253888, 1.0190935734784685, -1.0466969195863554, -0.153635634271338, -0.21784172021227197, 0.8348367712842659, 0.3439735076537882, -0.21776140010381564, -1.8166151201121956, -0.02152392332244568 },
			 { 2.093506346253696, 0.7868018823232313, 0.18278916218421545, 0.24191075244898885, -0.9317871505786788, 0.3782032312324477, -0.09283732723485805, -1.0928160169694834, -3.4897314525773777, 2.393131052598288 },
			 { 0.5773878879888359, -0.04740428413578312, -1.2234686072271048, -1.0128407016591991, -0.3818985360960217, 1.671097439599355, 1.0699845515484259, -0.8233511502676111, -1.4692416856923658, 0.005724382112255003 },
			 { 0.653603437858243, 0.8118703103381688, 0.4831496203093006, 0.7608214517358779, -1.1866385814847495, 1.8806879512866757, -0.7051943912062965, -0.3624691202705955, 0.4555274542508199, 0.7462749250325531 },
			 { -2.1024798763599506, 1.5240734804788811, 1.9689308324675117, 1.891995306292, 0.679249986774034, -0.1098862436845744, -1.6205444395313497, 0.12264829403156129, -0.20911262738915795, -0.6406762436910173 },
			 { 0.33214000192394044, 0.8682960329566819, -0.5013392512877888, -0.03281534427464479, -0.0032357270003156705, 0.2103253963377075, 0.2304232694176142, -0.4561249958634437, -0.0771639856812561, -0.11028680261650832 },
			 { -1.1379055912419944, -0.5640619761892367, -0.1777553768727278, -1.0356505287803321, -0.6587029210547068, 1.2318416707537607, 1.0684076836748335, -1.9304847007875792, -0.5480279298054324, -0.9752381834622871 },
			 { -0.5006819346453519, 0.36326746944304933, 0.21020563880553478, 0.06196019616673034, -0.9940517080057313, 0.5553169051990228, 0.007494494035180268, -1.0675251823213185, 0.971123508102832, 0.3953486654939566 },
			 { -0.30054156935146226, 0.7488764334812653, -1.0450013234492215, -0.45948890986000973, 0.04580678999985555, -0.05915947239622647, 0.6587191391651996, -0.5388077262123063, -0.09179898167213818, 1.4028984451900115 },
			 { 1.2807021497871602, 0.9028085169329397, 0.677196395824284, 0.5841719641966054, -0.1003411420861034, -0.1913006991311015, -0.38000168419271374, -0.769953217497543, 1.4932399236360718, 0.514295772343597 },
			 { -0.7372166845096658, -0.22015314479000983, 0.42961411818247125, 0.4250842123905216, -2.0765881027653883, -0.5245479335237841, -0.6405709412212055, -0.16744493265128024, -1.444178919308708, -1.239069279895893 },
			 { -0.2920866837452327, 1.022088295144699, 0.8926086199520507, 1.0512447783534276, -0.18433458091274885, -1.8267668306458908, -0.9027661724119904, -0.0929429673282683, 1.1530313398531398, -0.476144506380824 },
			 { 0.0209646061207601, 0.21454214449934803, 0.4214492573789425, -0.38655167771021287, -0.13001080381200664, -0.529477376429765, 0.5921183931822596, -1.980719521539998, -0.08522243972761444, 0.5408456420597524 },
			 { -1.317023769917958, -0.058837958294329924, -0.1429600357452079, -0.37947028052043186, -1.414603423328078, -2.181710803083857, 0.36689543292969956, -1.2843476755803171, -1.454449662722525, -0.10265053493868644 },
			 { -0.2936890582581222, 0.1845972607803685, 1.194851980968043, 0.8957339490455271, 0.07996263821322273, 0.6221954112193534, -0.9025809387220117, 0.256469803215711, 0.3952631174819938, 0.11259378535590062 },
			 { -0.2499588823503226, 0.4062830307551689, 0.6147208699654806, 0.21307335075360193, -0.16938933645317683, 0.816567519389673, -0.0750704380408266, -1.0048838899850687, -0.20213016399423803, -0.9139945144975332 },
			 { -0.26781113159397457, 2.0580942053839797, -0.5526850202219206, 0.7269221656066429, -0.3859571738438619, 0.08315744533443149, -0.3920658345360187, -0.15156763041018187, 1.3301281671225558, 0.338872576239318 },
			 { -0.11191263631327658, 1.3813029664097791, 1.656277470117092, 1.7619728083931392, -0.9651613323940517, 0.08470566089931222, -1.6220269594798407, -0.24693306041128285, 0.9092784839684264, -0.7129384781069622 },
			 { 0.44597422459008845, 0.9902936111731451, -0.8160384250812989, 0.35746313515467953, -0.269092058172476, -0.9631034804865878, -0.27341551428773603, 0.757789277759762, 0.4622806538341011, 0.6543304764988714 },
			};
			
		
			double get_problem_0_3_decision_function( std::vector<std::any> const & inputs) {
				return sigmoid_kernel( lProblem_data_dual_0_3, lProblem_data_sv_0_3, inputs, 0.09999999999999998,0.0 ) + -0.12362259171835117;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_0", "Score_3",
					"Proba_0", "Proba_3",
					"LogProba_0", "LogProba_3" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
				auto lClasses = get_classes();
		
				std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
		
				std::any lDotProduct_0_3 = sigmoid_kernel( lProblem_data_dual_0_3, lProblem_data_sv_0_3, inputs, 0.09999999999999998,0.0 ) + -0.12362259171835117;
		
				std::any lLogistic_0_3 = logistic(-2.6683748177479614 * lDotProduct_0_3 + -0.3197861555347313);
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					-lDotProduct_0_3,
					lDotProduct_0_3 
				} ;
				lTable["Proba"] = { 
					lLogistic_0_3,
					1.0 - lLogistic_0_3 
				} ;
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
		
				return lTable;
			}
		
		} // eof namespace pb_0_3
		
	
		namespace pb_1_2 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 1, 2 };
		
				return lClasses;
			}
		
			std::vector<std::any> lProblem_data_dual_1_2 = { 
			0.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,0.6522164505043788 ,0.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,0.4509175620504345 ,0.0 ,-1.0 ,-1.0 ,-0.0 ,-1.0 ,-0.0 ,-0.0 ,-1.0 ,-1.0 ,-0.10313401255481336 ,-1.0 ,-1.0 ,-1.0 ,-0.0 ,-1.0 ,-0.0 ,-0.0 ,-0.0 , };
			
		
			std::vector<std::vector<std::any> > lProblem_data_sv_1_2 = { 
			 { -0.5374379981119589, -0.7296309928188767, 1.4779845935418514, 0.5063019422966141, 0.6965900672935247, -0.3378223922992601, -0.6187951903122013, 0.285397306909334, -0.7749698771712716, -0.13844482114562637 },
			 { -0.6384379162711309, 0.717712741267091, -0.029441812995214225, 0.19454074631293933, 0.42356979543552, 0.4996306149226033, -0.014709875293858664, -0.21682672177070866, 0.8731634819745784, 0.3996037942181906 },
			 { -0.5091996214221497, 1.1713064754998441, -0.48494740604431213, -0.008898553173031508, 1.3733454370146492, -0.3114028163844563, 0.35946894921283384, -0.22891358225263628, 0.6298212594245098, -1.259802912006969 },
			 { 1.2835974213496795, -0.4613282319948631, 2.9398191114629366, 1.742369226229312, -0.39256666765475806, 0.24206147146925086, -1.9436465277045347, 0.3956742511898959, 0.8707557823789885, 0.9364683526980433 },
			 { -0.214016747171314, 0.9550052350042129, 0.8999958947966962, 1.9306336316149393, -1.6623106403953314, -0.5394342785606583, -2.089034439434298, 1.612983715349993, -1.5310909664536638, -0.6192139096108493 },
			 { -0.8230018764208287, 0.0541758510579681, 0.9375651162405912, 0.7344096380802708, 2.1783911480063463, -0.9615629165483969, -0.6697585979258878, 1.3075235034419233, -1.5935440702644323, -0.6659791402506481 },
			 { 1.498564845881099, 1.48831742779472, -0.9195950368877045, 0.45496476868785374, -0.8831439969763527, 0.1605753080607123, -0.29246802189369364, 0.2500655154498075, 0.8724808729913642, -1.5908321123459748 },
			 { -0.6167692842155993, -0.2173495764149621, 0.4539181821969074, 0.18067095507803288, 0.6122834345039813, -2.0679664960978896, -0.19976608756975378, 0.31411294150482844, -0.7119488376066533, -0.32601200274560516 },
			 { -0.46515313120920093, 1.2103577416175606, 0.14357328513380316, 1.0670224926771352, -0.004180412672813376, -0.5165474025968144, -0.9551233938552457, 0.9299887560835304, -1.1277360622292962, 1.3633593105363355 },
			 { 0.009674343495163067, 1.2178845494390973, 2.412039780702482, 2.7994399099133482, -2.364480222710695, -1.200108875400591, -2.9327320914381376, 0.8741712868555673, 0.15348555651244278, 0.10452254551846794 },
			 { -0.7181604123131647, 0.47635997350587705, 0.21388659584479253, 1.1163530548266316, -0.4968220838205612, -0.5072223495412532, -1.24688692572275, 1.7030243556175357, -1.003380404809525, 0.6423375532130973 },
			 { -0.38529554644994124, -0.33978526464340053, 1.1521852950916334, 0.6277675404581664, 1.4605869711557362, -0.5811596496045133, -0.6601503419469803, 0.9136756412886499, 0.10977779808551855, -0.36931239107023645 },
			 { -1.292731963918506, 0.5628285196619536, 0.007127339857400062, 0.3728509698863072, 0.7108565052671136, 1.5681721671032636, -0.26318102458574727, 0.512232870741319, 0.5221201360240043, 0.4516931545431869 },
			 { 0.3737039642758539, 0.3836668075977489, 0.2262882357990665, 0.4555038841016273, -0.23804811339629262, -0.3942471767707451, -0.4370578804876122, 0.2168474346275738, 0.46104028509524775, -1.4332412094725877 },
			 { 0.12894791123724086, 0.6506067209702775, -0.22887773821383223, 0.33102294500659235, -0.4701513824550577, 0.9428923579731946, -0.274116093353173, 0.14675015500968058, -1.3124142189597725, -0.32257928780172823 },
			 { -0.520327735882063, -1.5213111907033747, 2.4315184437785144, 0.3592795244718508, 0.32622900008176564, 1.1916928182803614, -0.5628887017025386, -0.6777260177602357, -0.2942834435409094, 1.3971427897210167 },
			 { 1.9823391269812736, 1.041533370242338, 1.1741916871533693, 2.144983578407978, -1.6631709351723898, -0.7478608271844139, -2.2951102991250854, 1.6281529749851422, 1.6396331333077083, -1.525977817768459 },
			 { 0.3728477956732985, 0.2150610679834529, 0.08393670362034505, 0.7029479107610479, -0.8778134194688425, 0.6056477433901051, -0.844443589473496, 1.0202010595638178, 0.9073571060114952, 0.5949187633081499 },
			 { 1.4122845978733751, 0.8860898474486589, -1.9405186231398404, -0.07474079289882218, -0.7793444034413073, -2.6702025981079935, 0.06359503606562808, 1.295307501104366, -0.9879646225889391, -0.9684510673956982 },
			 { 1.4066838727702853, -1.9182044206192992, -0.5196200501051259, -1.4705199852923474, -0.3458523910961328, 0.33616488091266306, 1.1840694698786476, -0.6080444045275858, -0.29994497023595584, -0.7844124282150763 },
			 { -0.6292030328074096, 0.1912075700484827, -1.843749457931878, -0.7991127838709606, 0.6616827502981251, 1.7840049271298177, 0.8451858943105607, 0.8140681317224646, 0.08792025539317516, 0.9950261622110849 },
			 { 0.3341701047941328, -2.662482196896262, 0.07843518137226316, -1.8595180608743578, 0.009894199539738802, 0.5011525213358909, 1.5449586461756617, -1.3978967416343981, 0.8013585074033905, 1.6588023725821097 },
			 { 0.27097803892047134, -2.050244728369085, -0.4542127463856603, -1.6409303806916962, 1.2265855708161812, 0.39276279886971993, 1.4434868920883854, -0.300095627427432, 0.38730712905565656, -0.3090329471111716 },
			 { 0.7211425879338048, 1.457288622504473, 0.04006284303228038, 1.693972182129337, -0.43340082570959415, -1.0101635421053963, -1.6977213868691645, 2.1933689021891722, -0.32853587805805745, 1.092602209782003 },
			 { -2.3565166103036597, -0.30251013989767633, -0.3140968676549342, -0.2384809460116976, -0.057552546047053434, 0.3584567179839237, 0.16476994889061974, 0.24320679990529717, -0.34536210647094345, 0.194783439550393 },
			 { -0.24031816293735103, -1.4585692410501578, -0.44938429544290937, -1.2606210981503376, -0.38000785302533374, -0.479923877092441, 1.0649026744888006, -0.7953589462233127, -0.8458217624902522, -0.4718498061742985 },
			 { 0.8997969895548796, 0.17070669703209612, -0.059019571801465096, 0.5066476066412597, -1.0385184249597428, 2.2780994287848864, -0.6394833880466154, 0.7248295939295544, 1.4374871382070562, 0.3295857969942965 },
			 { -1.0674962632282596, 0.10738702259752413, -1.3736167044518084, -0.9294913297161647, -0.2591018033659197, -2.089976011450095, 0.9982561688181318, -0.5288704938579509, -0.2489618806830741, -0.20163113151409254 },
			 { 0.6771904971815166, 1.0719689016435152, 0.5245306374555708, 1.6491563675727086, 0.00379803365985488, 1.0864447846283871, -1.6707192554829466, 2.0264169541316184, 0.8991761439312493, -2.991975528502707 },
			 { 1.1169230852263023, -1.081815476337387, -0.7316315352999305, -0.8058827714197353, -2.60923888573501, 0.2674006587207947, 0.4628728123318298, -0.6413023779348499, 0.47979999991198313, 0.2109603749118481 },
			 { -1.4368565283727257, -1.2179850983373004, 0.02957834923686986, -1.8886785238541821, 0.7298464602800008, -1.2853111154258396, 2.0338563000592718, -2.9891471979477635, 0.8549405023016902, 0.544772187536236 },
			 { -0.029032309561236043, -0.6453345904438006, -1.117203658136182, -1.5618681060804385, 1.1721141707277283, -0.10688969820803637, 1.6685204789189094, -0.9473215546387913, -0.043736970360985186, 0.35416133142343575 },
			 { -0.934981534951002, -0.9646927105624221, -1.086082141474592, -1.8089677945974325, -0.5573323681766859, 1.5320749070354607, 1.8012437726323827, -1.9513058268134067, 0.5571671919157734, 1.2547979832590759 },
			 { -0.6712757510936834, -1.300069498625356, -1.0499512078393478, -1.4793894598074975, -0.22412315861444831, 0.8467584853979707, 1.3137737007513093, -0.575454483561529, 0.43967633716983207, -0.6302685701338885 },
			};
			
		
			double get_problem_1_2_decision_function( std::vector<std::any> const & inputs) {
				return sigmoid_kernel( lProblem_data_dual_1_2, lProblem_data_sv_1_2, inputs, 0.09999999999999998,0.0 ) + 0.11377912496115627;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_1", "Score_2",
					"Proba_1", "Proba_2",
					"LogProba_1", "LogProba_2" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
				auto lClasses = get_classes();
		
				std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
		
				std::any lDotProduct_1_2 = sigmoid_kernel( lProblem_data_dual_1_2, lProblem_data_sv_1_2, inputs, 0.09999999999999998,0.0 ) + 0.11377912496115627;
		
				std::any lLogistic_1_2 = logistic(-1.4774052706710323 * lDotProduct_1_2 + 0.22009946965645047);
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					-lDotProduct_1_2,
					lDotProduct_1_2 
				} ;
				lTable["Proba"] = { 
					lLogistic_1_2,
					1.0 - lLogistic_1_2 
				} ;
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
		
				return lTable;
			}
		
		} // eof namespace pb_1_2
		
	
		namespace pb_1_3 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 1, 3 };
		
				return lClasses;
			}
		
			std::vector<std::any> lProblem_data_dual_1_3 = { 
			0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,0.48663752388056186 ,1.0 ,1.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,-0.0 ,-0.2581543707935585 ,-0.14365480906587824 ,-1.0 ,-0.0 ,-1.0 ,-1.0 ,-1.0 ,-0.0 ,-0.08482834402112509 ,-0.0 ,-1.0 ,-1.0 ,-1.0 ,-0.0 ,-0.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 , };
			
		
			std::vector<std::vector<std::any> > lProblem_data_sv_1_3 = { 
			 { -0.5374379981119589, -0.7296309928188767, 1.4779845935418514, 0.5063019422966141, 0.6965900672935247, -0.3378223922992601, -0.6187951903122013, 0.285397306909334, -0.7749698771712716, -0.13844482114562637 },
			 { -0.6384379162711309, 0.717712741267091, -0.029441812995214225, 0.19454074631293933, 0.42356979543552, 0.4996306149226033, -0.014709875293858664, -0.21682672177070866, 0.8731634819745784, 0.3996037942181906 },
			 { -0.5091996214221497, 1.1713064754998441, -0.48494740604431213, -0.008898553173031508, 1.3733454370146492, -0.3114028163844563, 0.35946894921283384, -0.22891358225263628, 0.6298212594245098, -1.259802912006969 },
			 { 1.2835974213496795, -0.4613282319948631, 2.9398191114629366, 1.742369226229312, -0.39256666765475806, 0.24206147146925086, -1.9436465277045347, 0.3956742511898959, 0.8707557823789885, 0.9364683526980433 },
			 { -0.214016747171314, 0.9550052350042129, 0.8999958947966962, 1.9306336316149393, -1.6623106403953314, -0.5394342785606583, -2.089034439434298, 1.612983715349993, -1.5310909664536638, -0.6192139096108493 },
			 { -0.8230018764208287, 0.0541758510579681, 0.9375651162405912, 0.7344096380802708, 2.1783911480063463, -0.9615629165483969, -0.6697585979258878, 1.3075235034419233, -1.5935440702644323, -0.6659791402506481 },
			 { 1.498564845881099, 1.48831742779472, -0.9195950368877045, 0.45496476868785374, -0.8831439969763527, 0.1605753080607123, -0.29246802189369364, 0.2500655154498075, 0.8724808729913642, -1.5908321123459748 },
			 { -0.6167692842155993, -0.2173495764149621, 0.4539181821969074, 0.18067095507803288, 0.6122834345039813, -2.0679664960978896, -0.19976608756975378, 0.31411294150482844, -0.7119488376066533, -0.32601200274560516 },
			 { -0.46515313120920093, 1.2103577416175606, 0.14357328513380316, 1.0670224926771352, -0.004180412672813376, -0.5165474025968144, -0.9551233938552457, 0.9299887560835304, -1.1277360622292962, 1.3633593105363355 },
			 { 0.009674343495163067, 1.2178845494390973, 2.412039780702482, 2.7994399099133482, -2.364480222710695, -1.200108875400591, -2.9327320914381376, 0.8741712868555673, 0.15348555651244278, 0.10452254551846794 },
			 { -0.7181604123131647, 0.47635997350587705, 0.21388659584479253, 1.1163530548266316, -0.4968220838205612, -0.5072223495412532, -1.24688692572275, 1.7030243556175357, -1.003380404809525, 0.6423375532130973 },
			 { -0.38529554644994124, -0.33978526464340053, 1.1521852950916334, 0.6277675404581664, 1.4605869711557362, -0.5811596496045133, -0.6601503419469803, 0.9136756412886499, 0.10977779808551855, -0.36931239107023645 },
			 { -1.292731963918506, 0.5628285196619536, 0.007127339857400062, 0.3728509698863072, 0.7108565052671136, 1.5681721671032636, -0.26318102458574727, 0.512232870741319, 0.5221201360240043, 0.4516931545431869 },
			 { 0.3737039642758539, 0.3836668075977489, 0.2262882357990665, 0.4555038841016273, -0.23804811339629262, -0.3942471767707451, -0.4370578804876122, 0.2168474346275738, 0.46104028509524775, -1.4332412094725877 },
			 { 0.12894791123724086, 0.6506067209702775, -0.22887773821383223, 0.33102294500659235, -0.4701513824550577, 0.9428923579731946, -0.274116093353173, 0.14675015500968058, -1.3124142189597725, -0.32257928780172823 },
			 { -0.520327735882063, -1.5213111907033747, 2.4315184437785144, 0.3592795244718508, 0.32622900008176564, 1.1916928182803614, -0.5628887017025386, -0.6777260177602357, -0.2942834435409094, 1.3971427897210167 },
			 { 1.9823391269812736, 1.041533370242338, 1.1741916871533693, 2.144983578407978, -1.6631709351723898, -0.7478608271844139, -2.2951102991250854, 1.6281529749851422, 1.6396331333077083, -1.525977817768459 },
			 { -0.5660905310030859, 0.5002282748841744, -0.630807616194282, -0.2583704317089291, -0.30445800484605134, 1.032556268076858, 0.37172754251482926, -0.481942479001224, -1.4390650797091615, 0.3882624280235004 },
			 { 0.3248603745454008, 1.0370813478156848, -0.37152939173718014, 0.08521597096943413, -0.6990946495007109, 0.5233935363455697, 0.1154292861950275, -0.8722439878658644, -1.5995337571369665, -1.2726884381166161 },
			 { 0.0008433489338253888, 1.0190935734784685, -1.0466969195863554, -0.153635634271338, -0.21784172021227197, 0.8348367712842659, 0.3439735076537882, -0.21776140010381564, -1.8166151201121956, -0.02152392332244568 },
			 { 2.093506346253696, 0.7868018823232313, 0.18278916218421545, 0.24191075244898885, -0.9317871505786788, 0.3782032312324477, -0.09283732723485805, -1.0928160169694834, -3.4897314525773777, 2.393131052598288 },
			 { 0.5773878879888359, -0.04740428413578312, -1.2234686072271048, -1.0128407016591991, -0.3818985360960217, 1.671097439599355, 1.0699845515484259, -0.8233511502676111, -1.4692416856923658, 0.005724382112255003 },
			 { 0.653603437858243, 0.8118703103381688, 0.4831496203093006, 0.7608214517358779, -1.1866385814847495, 1.8806879512866757, -0.7051943912062965, -0.3624691202705955, 0.4555274542508199, 0.7462749250325531 },
			 { -2.1024798763599506, 1.5240734804788811, 1.9689308324675117, 1.891995306292, 0.679249986774034, -0.1098862436845744, -1.6205444395313497, 0.12264829403156129, -0.20911262738915795, -0.6406762436910173 },
			 { 0.33214000192394044, 0.8682960329566819, -0.5013392512877888, -0.03281534427464479, -0.0032357270003156705, 0.2103253963377075, 0.2304232694176142, -0.4561249958634437, -0.0771639856812561, -0.11028680261650832 },
			 { -1.1379055912419944, -0.5640619761892367, -0.1777553768727278, -1.0356505287803321, -0.6587029210547068, 1.2318416707537607, 1.0684076836748335, -1.9304847007875792, -0.5480279298054324, -0.9752381834622871 },
			 { -0.5006819346453519, 0.36326746944304933, 0.21020563880553478, 0.06196019616673034, -0.9940517080057313, 0.5553169051990228, 0.007494494035180268, -1.0675251823213185, 0.971123508102832, 0.3953486654939566 },
			 { -0.30054156935146226, 0.7488764334812653, -1.0450013234492215, -0.45948890986000973, 0.04580678999985555, -0.05915947239622647, 0.6587191391651996, -0.5388077262123063, -0.09179898167213818, 1.4028984451900115 },
			 { 1.2807021497871602, 0.9028085169329397, 0.677196395824284, 0.5841719641966054, -0.1003411420861034, -0.1913006991311015, -0.38000168419271374, -0.769953217497543, 1.4932399236360718, 0.514295772343597 },
			 { -0.7372166845096658, -0.22015314479000983, 0.42961411818247125, 0.4250842123905216, -2.0765881027653883, -0.5245479335237841, -0.6405709412212055, -0.16744493265128024, -1.444178919308708, -1.239069279895893 },
			 { -0.2920866837452327, 1.022088295144699, 0.8926086199520507, 1.0512447783534276, -0.18433458091274885, -1.8267668306458908, -0.9027661724119904, -0.0929429673282683, 1.1530313398531398, -0.476144506380824 },
			 { 0.0209646061207601, 0.21454214449934803, 0.4214492573789425, -0.38655167771021287, -0.13001080381200664, -0.529477376429765, 0.5921183931822596, -1.980719521539998, -0.08522243972761444, 0.5408456420597524 },
			 { -1.317023769917958, -0.058837958294329924, -0.1429600357452079, -0.37947028052043186, -1.414603423328078, -2.181710803083857, 0.36689543292969956, -1.2843476755803171, -1.454449662722525, -0.10265053493868644 },
			 { -0.2936890582581222, 0.1845972607803685, 1.194851980968043, 0.8957339490455271, 0.07996263821322273, 0.6221954112193534, -0.9025809387220117, 0.256469803215711, 0.3952631174819938, 0.11259378535590062 },
			 { -0.2499588823503226, 0.4062830307551689, 0.6147208699654806, 0.21307335075360193, -0.16938933645317683, 0.816567519389673, -0.0750704380408266, -1.0048838899850687, -0.20213016399423803, -0.9139945144975332 },
			 { -0.26781113159397457, 2.0580942053839797, -0.5526850202219206, 0.7269221656066429, -0.3859571738438619, 0.08315744533443149, -0.3920658345360187, -0.15156763041018187, 1.3301281671225558, 0.338872576239318 },
			 { -0.11191263631327658, 1.3813029664097791, 1.656277470117092, 1.7619728083931392, -0.9651613323940517, 0.08470566089931222, -1.6220269594798407, -0.24693306041128285, 0.9092784839684264, -0.7129384781069622 },
			 { 0.44597422459008845, 0.9902936111731451, -0.8160384250812989, 0.35746313515467953, -0.269092058172476, -0.9631034804865878, -0.27341551428773603, 0.757789277759762, 0.4622806538341011, 0.6543304764988714 },
			};
			
		
			double get_problem_1_3_decision_function( std::vector<std::any> const & inputs) {
				return sigmoid_kernel( lProblem_data_dual_1_3, lProblem_data_sv_1_3, inputs, 0.09999999999999998,0.0 ) + 0.19637436082546167;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_1", "Score_3",
					"Proba_1", "Proba_3",
					"LogProba_1", "LogProba_3" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
				auto lClasses = get_classes();
		
				std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
		
				std::any lDotProduct_1_3 = sigmoid_kernel( lProblem_data_dual_1_3, lProblem_data_sv_1_3, inputs, 0.09999999999999998,0.0 ) + 0.19637436082546167;
		
				std::any lLogistic_1_3 = logistic(-0.9003233334575621 * lDotProduct_1_3 + 0.08247120999337626);
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					-lDotProduct_1_3,
					lDotProduct_1_3 
				} ;
				lTable["Proba"] = { 
					lLogistic_1_3,
					1.0 - lLogistic_1_3 
				} ;
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
		
				return lTable;
			}
		
		} // eof namespace pb_1_3
		
	
		namespace pb_2_3 {
		
			std::vector<std::any> get_classes(){
				std::vector<std::any> lClasses = { 2, 3 };
		
				return lClasses;
			}
		
			std::vector<std::any> lProblem_data_dual_2_3 = { 
			1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.7398802361703738 ,1.0 ,0.0 ,-0.6441989527720839 ,-0.0 ,-0.19544296700942135 ,-0.0 ,-1.0 ,-0.0 ,-0.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-1.0 ,-0.8308184716788115 ,-0.0 ,-1.0 ,-1.0 ,-0.0 ,-0.06941984471005723 ,-0.0 ,-1.0 , };
			
		
			std::vector<std::vector<std::any> > lProblem_data_sv_2_3 = { 
			 { 0.3728477956732985, 0.2150610679834529, 0.08393670362034505, 0.7029479107610479, -0.8778134194688425, 0.6056477433901051, -0.844443589473496, 1.0202010595638178, 0.9073571060114952, 0.5949187633081499 },
			 { 1.4122845978733751, 0.8860898474486589, -1.9405186231398404, -0.07474079289882218, -0.7793444034413073, -2.6702025981079935, 0.06359503606562808, 1.295307501104366, -0.9879646225889391, -0.9684510673956982 },
			 { 1.4066838727702853, -1.9182044206192992, -0.5196200501051259, -1.4705199852923474, -0.3458523910961328, 0.33616488091266306, 1.1840694698786476, -0.6080444045275858, -0.29994497023595584, -0.7844124282150763 },
			 { -0.6292030328074096, 0.1912075700484827, -1.843749457931878, -0.7991127838709606, 0.6616827502981251, 1.7840049271298177, 0.8451858943105607, 0.8140681317224646, 0.08792025539317516, 0.9950261622110849 },
			 { 0.3341701047941328, -2.662482196896262, 0.07843518137226316, -1.8595180608743578, 0.009894199539738802, 0.5011525213358909, 1.5449586461756617, -1.3978967416343981, 0.8013585074033905, 1.6588023725821097 },
			 { 0.27097803892047134, -2.050244728369085, -0.4542127463856603, -1.6409303806916962, 1.2265855708161812, 0.39276279886971993, 1.4434868920883854, -0.300095627427432, 0.38730712905565656, -0.3090329471111716 },
			 { 0.7211425879338048, 1.457288622504473, 0.04006284303228038, 1.693972182129337, -0.43340082570959415, -1.0101635421053963, -1.6977213868691645, 2.1933689021891722, -0.32853587805805745, 1.092602209782003 },
			 { -2.3565166103036597, -0.30251013989767633, -0.3140968676549342, -0.2384809460116976, -0.057552546047053434, 0.3584567179839237, 0.16476994889061974, 0.24320679990529717, -0.34536210647094345, 0.194783439550393 },
			 { -0.24031816293735103, -1.4585692410501578, -0.44938429544290937, -1.2606210981503376, -0.38000785302533374, -0.479923877092441, 1.0649026744888006, -0.7953589462233127, -0.8458217624902522, -0.4718498061742985 },
			 { 0.8997969895548796, 0.17070669703209612, -0.059019571801465096, 0.5066476066412597, -1.0385184249597428, 2.2780994287848864, -0.6394833880466154, 0.7248295939295544, 1.4374871382070562, 0.3295857969942965 },
			 { -1.0674962632282596, 0.10738702259752413, -1.3736167044518084, -0.9294913297161647, -0.2591018033659197, -2.089976011450095, 0.9982561688181318, -0.5288704938579509, -0.2489618806830741, -0.20163113151409254 },
			 { 0.6771904971815166, 1.0719689016435152, 0.5245306374555708, 1.6491563675727086, 0.00379803365985488, 1.0864447846283871, -1.6707192554829466, 2.0264169541316184, 0.8991761439312493, -2.991975528502707 },
			 { 1.1169230852263023, -1.081815476337387, -0.7316315352999305, -0.8058827714197353, -2.60923888573501, 0.2674006587207947, 0.4628728123318298, -0.6413023779348499, 0.47979999991198313, 0.2109603749118481 },
			 { -1.4368565283727257, -1.2179850983373004, 0.02957834923686986, -1.8886785238541821, 0.7298464602800008, -1.2853111154258396, 2.0338563000592718, -2.9891471979477635, 0.8549405023016902, 0.544772187536236 },
			 { -0.029032309561236043, -0.6453345904438006, -1.117203658136182, -1.5618681060804385, 1.1721141707277283, -0.10688969820803637, 1.6685204789189094, -0.9473215546387913, -0.043736970360985186, 0.35416133142343575 },
			 { -0.934981534951002, -0.9646927105624221, -1.086082141474592, -1.8089677945974325, -0.5573323681766859, 1.5320749070354607, 1.8012437726323827, -1.9513058268134067, 0.5571671919157734, 1.2547979832590759 },
			 { -0.6712757510936834, -1.300069498625356, -1.0499512078393478, -1.4793894598074975, -0.22412315861444831, 0.8467584853979707, 1.3137737007513093, -0.575454483561529, 0.43967633716983207, -0.6302685701338885 },
			 { -0.5660905310030859, 0.5002282748841744, -0.630807616194282, -0.2583704317089291, -0.30445800484605134, 1.032556268076858, 0.37172754251482926, -0.481942479001224, -1.4390650797091615, 0.3882624280235004 },
			 { 0.3248603745454008, 1.0370813478156848, -0.37152939173718014, 0.08521597096943413, -0.6990946495007109, 0.5233935363455697, 0.1154292861950275, -0.8722439878658644, -1.5995337571369665, -1.2726884381166161 },
			 { 0.0008433489338253888, 1.0190935734784685, -1.0466969195863554, -0.153635634271338, -0.21784172021227197, 0.8348367712842659, 0.3439735076537882, -0.21776140010381564, -1.8166151201121956, -0.02152392332244568 },
			 { 2.093506346253696, 0.7868018823232313, 0.18278916218421545, 0.24191075244898885, -0.9317871505786788, 0.3782032312324477, -0.09283732723485805, -1.0928160169694834, -3.4897314525773777, 2.393131052598288 },
			 { 0.5773878879888359, -0.04740428413578312, -1.2234686072271048, -1.0128407016591991, -0.3818985360960217, 1.671097439599355, 1.0699845515484259, -0.8233511502676111, -1.4692416856923658, 0.005724382112255003 },
			 { 0.653603437858243, 0.8118703103381688, 0.4831496203093006, 0.7608214517358779, -1.1866385814847495, 1.8806879512866757, -0.7051943912062965, -0.3624691202705955, 0.4555274542508199, 0.7462749250325531 },
			 { -2.1024798763599506, 1.5240734804788811, 1.9689308324675117, 1.891995306292, 0.679249986774034, -0.1098862436845744, -1.6205444395313497, 0.12264829403156129, -0.20911262738915795, -0.6406762436910173 },
			 { 0.33214000192394044, 0.8682960329566819, -0.5013392512877888, -0.03281534427464479, -0.0032357270003156705, 0.2103253963377075, 0.2304232694176142, -0.4561249958634437, -0.0771639856812561, -0.11028680261650832 },
			 { -1.1379055912419944, -0.5640619761892367, -0.1777553768727278, -1.0356505287803321, -0.6587029210547068, 1.2318416707537607, 1.0684076836748335, -1.9304847007875792, -0.5480279298054324, -0.9752381834622871 },
			 { -0.5006819346453519, 0.36326746944304933, 0.21020563880553478, 0.06196019616673034, -0.9940517080057313, 0.5553169051990228, 0.007494494035180268, -1.0675251823213185, 0.971123508102832, 0.3953486654939566 },
			 { -0.30054156935146226, 0.7488764334812653, -1.0450013234492215, -0.45948890986000973, 0.04580678999985555, -0.05915947239622647, 0.6587191391651996, -0.5388077262123063, -0.09179898167213818, 1.4028984451900115 },
			 { 1.2807021497871602, 0.9028085169329397, 0.677196395824284, 0.5841719641966054, -0.1003411420861034, -0.1913006991311015, -0.38000168419271374, -0.769953217497543, 1.4932399236360718, 0.514295772343597 },
			 { -0.7372166845096658, -0.22015314479000983, 0.42961411818247125, 0.4250842123905216, -2.0765881027653883, -0.5245479335237841, -0.6405709412212055, -0.16744493265128024, -1.444178919308708, -1.239069279895893 },
			 { -0.2920866837452327, 1.022088295144699, 0.8926086199520507, 1.0512447783534276, -0.18433458091274885, -1.8267668306458908, -0.9027661724119904, -0.0929429673282683, 1.1530313398531398, -0.476144506380824 },
			 { 0.0209646061207601, 0.21454214449934803, 0.4214492573789425, -0.38655167771021287, -0.13001080381200664, -0.529477376429765, 0.5921183931822596, -1.980719521539998, -0.08522243972761444, 0.5408456420597524 },
			 { -1.317023769917958, -0.058837958294329924, -0.1429600357452079, -0.37947028052043186, -1.414603423328078, -2.181710803083857, 0.36689543292969956, -1.2843476755803171, -1.454449662722525, -0.10265053493868644 },
			 { -0.2936890582581222, 0.1845972607803685, 1.194851980968043, 0.8957339490455271, 0.07996263821322273, 0.6221954112193534, -0.9025809387220117, 0.256469803215711, 0.3952631174819938, 0.11259378535590062 },
			 { -0.2499588823503226, 0.4062830307551689, 0.6147208699654806, 0.21307335075360193, -0.16938933645317683, 0.816567519389673, -0.0750704380408266, -1.0048838899850687, -0.20213016399423803, -0.9139945144975332 },
			 { -0.26781113159397457, 2.0580942053839797, -0.5526850202219206, 0.7269221656066429, -0.3859571738438619, 0.08315744533443149, -0.3920658345360187, -0.15156763041018187, 1.3301281671225558, 0.338872576239318 },
			 { -0.11191263631327658, 1.3813029664097791, 1.656277470117092, 1.7619728083931392, -0.9651613323940517, 0.08470566089931222, -1.6220269594798407, -0.24693306041128285, 0.9092784839684264, -0.7129384781069622 },
			 { 0.44597422459008845, 0.9902936111731451, -0.8160384250812989, 0.35746313515467953, -0.269092058172476, -0.9631034804865878, -0.27341551428773603, 0.757789277759762, 0.4622806538341011, 0.6543304764988714 },
			};
			
		
			double get_problem_2_3_decision_function( std::vector<std::any> const & inputs) {
				return sigmoid_kernel( lProblem_data_dual_2_3, lProblem_data_sv_2_3, inputs, 0.09999999999999998,0.0 ) + -0.05119411183741083;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { 
					"Score_2", "Score_3",
					"Proba_2", "Proba_3",
					"LogProba_2", "LogProba_3" };
		
				return lOutputs;
			}
		
			tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
				auto lClasses = get_classes();
		
				std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
		
				std::any lDotProduct_2_3 = sigmoid_kernel( lProblem_data_dual_2_3, lProblem_data_sv_2_3, inputs, 0.09999999999999998,0.0 ) + -0.05119411183741083;
		
				std::any lLogistic_2_3 = logistic(-2.34693939516556 * lDotProduct_2_3 + -0.24592136219427815);
		
		
				tTable lTable;
		
				lTable["Score"] = { 
					-lDotProduct_2_3,
					lDotProduct_2_3 
				} ;
				lTable["Proba"] = { 
					lLogistic_2_3,
					1.0 - lLogistic_2_3 
				} ;
		
				recompute_log_probas( lTable );
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
		
				return lTable;
			}
		
		} // eof namespace pb_2_3
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { 
				"Score_0", "Score_1", "Score_2", "Score_3",
				"Proba_0", "Proba_1", "Proba_2", "Proba_3",
				"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
				"Decision", "DecisionProba" };
	
			return lOutputs;
		}
	
		tTable compute_classification_scores(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
			auto lClasses = get_classes();
	
			std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
	
			std::map<uint, tTable> lBinaryScores = { 
				{ 0 , pb_0_1::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) },
				{ 1 , pb_0_2::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) },
				{ 2 , pb_0_3::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) },
				{ 3 , pb_1_2::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) },
				{ 4 , pb_1_3::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) },
				{ 5 , pb_2_3::compute_classification_scores(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) }
			};
	
			tTable lOVRTable = compute_svc_ovr_scores(lBinaryScores, lClasses);
	
	
			tTable lTable = lOVRTable;
	
			int lBestClass = get_arg_max( lTable["Score"] );
			auto lDecision = lClasses[lBestClass];
			lTable["Decision"] = { lDecision } ;
			lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };
	
			recompute_log_probas( lTable );
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_classification_scores(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { 
			"Score_0", "Score_1", "Score_2", "Score_3",
			"Proba_0", "Proba_1", "Proba_2", "Proba_3",
			"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
			"Decision", "DecisionProba" };

		return lOutputs;
	}

	tTable compute_classification_scores(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
		auto lClasses = get_classes();

		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable = lTable_model;

		int lBestClass = get_arg_max( lTable["Proba"] );
		auto lDecision = lClasses[lBestClass];
		lTable["Decision"] = { lDecision } ;
		lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };

		recompute_log_probas( lTable );

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_classification_scores(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/FourClass_10.csv");
	return 0;
}
