// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : MLPRegressor
// Dataset : RandomReg_100

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_MLPRegressor_RandomReg_100.exe ml2cpp-demo_MLPRegressor_RandomReg_100.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	namespace InputLayer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9", "input_10", "input_11", "input_12", "input_13", "input_14", "input_15", "input_16", "input_17", "input_18", "input_19", "input_20", "input_21", "input_22", "input_23", "input_24", "input_25", "input_26", "input_27", "input_28", "input_29", "input_30", "input_31", "input_32", "input_33", "input_34", "input_35", "input_36", "input_37", "input_38", "input_39", "input_40", "input_41", "input_42", "input_43", "input_44", "input_45", "input_46", "input_47", "input_48", "input_49", "input_50", "input_51", "input_52", "input_53", "input_54", "input_55", "input_56", "input_57", "input_58", "input_59", "input_60", "input_61", "input_62", "input_63", "input_64", "input_65", "input_66", "input_67", "input_68", "input_69", "input_70", "input_71", "input_72", "input_73", "input_74", "input_75", "input_76", "input_77", "input_78", "input_79", "input_80", "input_81", "input_82", "input_83", "input_84", "input_85", "input_86", "input_87", "input_88", "input_89", "input_90", "input_91", "input_92", "input_93", "input_94", "input_95", "input_96", "input_97", "input_98", "input_99" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
	
			tTable lTable;
	
			lTable["input_0"] = { Feature_0 };
			lTable["input_1"] = { Feature_1 };
			lTable["input_2"] = { Feature_2 };
			lTable["input_3"] = { Feature_3 };
			lTable["input_4"] = { Feature_4 };
			lTable["input_5"] = { Feature_5 };
			lTable["input_6"] = { Feature_6 };
			lTable["input_7"] = { Feature_7 };
			lTable["input_8"] = { Feature_8 };
			lTable["input_9"] = { Feature_9 };
			lTable["input_10"] = { Feature_10 };
			lTable["input_11"] = { Feature_11 };
			lTable["input_12"] = { Feature_12 };
			lTable["input_13"] = { Feature_13 };
			lTable["input_14"] = { Feature_14 };
			lTable["input_15"] = { Feature_15 };
			lTable["input_16"] = { Feature_16 };
			lTable["input_17"] = { Feature_17 };
			lTable["input_18"] = { Feature_18 };
			lTable["input_19"] = { Feature_19 };
			lTable["input_20"] = { Feature_20 };
			lTable["input_21"] = { Feature_21 };
			lTable["input_22"] = { Feature_22 };
			lTable["input_23"] = { Feature_23 };
			lTable["input_24"] = { Feature_24 };
			lTable["input_25"] = { Feature_25 };
			lTable["input_26"] = { Feature_26 };
			lTable["input_27"] = { Feature_27 };
			lTable["input_28"] = { Feature_28 };
			lTable["input_29"] = { Feature_29 };
			lTable["input_30"] = { Feature_30 };
			lTable["input_31"] = { Feature_31 };
			lTable["input_32"] = { Feature_32 };
			lTable["input_33"] = { Feature_33 };
			lTable["input_34"] = { Feature_34 };
			lTable["input_35"] = { Feature_35 };
			lTable["input_36"] = { Feature_36 };
			lTable["input_37"] = { Feature_37 };
			lTable["input_38"] = { Feature_38 };
			lTable["input_39"] = { Feature_39 };
			lTable["input_40"] = { Feature_40 };
			lTable["input_41"] = { Feature_41 };
			lTable["input_42"] = { Feature_42 };
			lTable["input_43"] = { Feature_43 };
			lTable["input_44"] = { Feature_44 };
			lTable["input_45"] = { Feature_45 };
			lTable["input_46"] = { Feature_46 };
			lTable["input_47"] = { Feature_47 };
			lTable["input_48"] = { Feature_48 };
			lTable["input_49"] = { Feature_49 };
			lTable["input_50"] = { Feature_50 };
			lTable["input_51"] = { Feature_51 };
			lTable["input_52"] = { Feature_52 };
			lTable["input_53"] = { Feature_53 };
			lTable["input_54"] = { Feature_54 };
			lTable["input_55"] = { Feature_55 };
			lTable["input_56"] = { Feature_56 };
			lTable["input_57"] = { Feature_57 };
			lTable["input_58"] = { Feature_58 };
			lTable["input_59"] = { Feature_59 };
			lTable["input_60"] = { Feature_60 };
			lTable["input_61"] = { Feature_61 };
			lTable["input_62"] = { Feature_62 };
			lTable["input_63"] = { Feature_63 };
			lTable["input_64"] = { Feature_64 };
			lTable["input_65"] = { Feature_65 };
			lTable["input_66"] = { Feature_66 };
			lTable["input_67"] = { Feature_67 };
			lTable["input_68"] = { Feature_68 };
			lTable["input_69"] = { Feature_69 };
			lTable["input_70"] = { Feature_70 };
			lTable["input_71"] = { Feature_71 };
			lTable["input_72"] = { Feature_72 };
			lTable["input_73"] = { Feature_73 };
			lTable["input_74"] = { Feature_74 };
			lTable["input_75"] = { Feature_75 };
			lTable["input_76"] = { Feature_76 };
			lTable["input_77"] = { Feature_77 };
			lTable["input_78"] = { Feature_78 };
			lTable["input_79"] = { Feature_79 };
			lTable["input_80"] = { Feature_80 };
			lTable["input_81"] = { Feature_81 };
			lTable["input_82"] = { Feature_82 };
			lTable["input_83"] = { Feature_83 };
			lTable["input_84"] = { Feature_84 };
			lTable["input_85"] = { Feature_85 };
			lTable["input_86"] = { Feature_86 };
			lTable["input_87"] = { Feature_87 };
			lTable["input_88"] = { Feature_88 };
			lTable["input_89"] = { Feature_89 };
			lTable["input_90"] = { Feature_90 };
			lTable["input_91"] = { Feature_91 };
			lTable["input_92"] = { Feature_92 };
			lTable["input_93"] = { Feature_93 };
			lTable["input_94"] = { Feature_94 };
			lTable["input_95"] = { Feature_95 };
			lTable["input_96"] = { Feature_96 };
			lTable["input_97"] = { Feature_97 };
			lTable["input_98"] = { Feature_98 };
			lTable["input_99"] = { Feature_99 };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace InputLayer
	

	namespace HiddenLayer_1 {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9", "input_10", "input_11", "input_12", "input_13", "input_14", "input_15", "input_16", "input_17", "input_18", "input_19", "input_20", "input_21", "input_22", "input_23", "input_24", "input_25", "input_26", "input_27", "input_28", "input_29", "input_30", "input_31", "input_32", "input_33", "input_34", "input_35", "input_36", "input_37", "input_38", "input_39", "input_40", "input_41", "input_42", "input_43", "input_44", "input_45", "input_46", "input_47", "input_48", "input_49", "input_50", "input_51", "input_52", "input_53", "input_54", "input_55", "input_56", "input_57", "input_58", "input_59", "input_60", "input_61", "input_62", "input_63", "input_64", "input_65", "input_66", "input_67", "input_68", "input_69", "input_70", "input_71", "input_72", "input_73", "input_74", "input_75", "input_76", "input_77", "input_78", "input_79", "input_80", "input_81", "input_82", "input_83", "input_84", "input_85", "input_86", "input_87", "input_88", "input_89", "input_90", "input_91", "input_92", "input_93", "input_94", "input_95", "input_96", "input_97", "input_98", "input_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "output_1_0", "output_1_1", "output_1_2" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any input_0, std::any input_1, std::any input_2, std::any input_3, std::any input_4, std::any input_5, std::any input_6, std::any input_7, std::any input_8, std::any input_9, std::any input_10, std::any input_11, std::any input_12, std::any input_13, std::any input_14, std::any input_15, std::any input_16, std::any input_17, std::any input_18, std::any input_19, std::any input_20, std::any input_21, std::any input_22, std::any input_23, std::any input_24, std::any input_25, std::any input_26, std::any input_27, std::any input_28, std::any input_29, std::any input_30, std::any input_31, std::any input_32, std::any input_33, std::any input_34, std::any input_35, std::any input_36, std::any input_37, std::any input_38, std::any input_39, std::any input_40, std::any input_41, std::any input_42, std::any input_43, std::any input_44, std::any input_45, std::any input_46, std::any input_47, std::any input_48, std::any input_49, std::any input_50, std::any input_51, std::any input_52, std::any input_53, std::any input_54, std::any input_55, std::any input_56, std::any input_57, std::any input_58, std::any input_59, std::any input_60, std::any input_61, std::any input_62, std::any input_63, std::any input_64, std::any input_65, std::any input_66, std::any input_67, std::any input_68, std::any input_69, std::any input_70, std::any input_71, std::any input_72, std::any input_73, std::any input_74, std::any input_75, std::any input_76, std::any input_77, std::any input_78, std::any input_79, std::any input_80, std::any input_81, std::any input_82, std::any input_83, std::any input_84, std::any input_85, std::any input_86, std::any input_87, std::any input_88, std::any input_89, std::any input_90, std::any input_91, std::any input_92, std::any input_93, std::any input_94, std::any input_95, std::any input_96, std::any input_97, std::any input_98, std::any input_99) {
	
			tTable lTable;
	
			double output_1_0_BA = -0.3687714767025936 * input_0 + 0.25704690851081324 * input_1 + 2.565754276147462 * input_2 + -3.7867571759964718 * input_3 + 0.6773721086094513 * input_4 + -1.2986332477150557 * input_5 + 0.29469082574919625 * input_6 + -2.315317446137059 * input_7 + 0.5026098888490967 * input_8 + 1.3681540900376337 * input_9 + -0.3593571119388549 * input_10 + 1.5419160198817117 * input_11 + 0.1755419846703806 * input_12 + 0.7484166907566396 * input_13 + -1.9730416845154213 * input_14 + -1.5230854360881585 * input_15 + 1.683206842740451 * input_16 + 0.1889314945190725 * input_17 + -1.8794083348095867 * input_18 + 1.398238509945166 * input_19 + -1.3254225873795242 * input_20 + -3.4721900496594555 * input_21 + 0.7467750452371498 * input_22 + 0.41547131011889193 * input_23 + -2.207881201864671 * input_24 + -1.2590241626506156 * input_25 + 2.875191824829041 * input_26 + -1.6997702674538622 * input_27 + -0.1962970943256877 * input_28 + -2.5234695598905033 * input_29 + -0.11516970215858514 * input_30 + 2.454356705375979 * input_31 + 2.387497490769294 * input_32 + -0.3824126731315392 * input_33 + -2.0790094920248867 * input_34 + 1.618825333229249 * input_35 + 2.7184866208643443 * input_36 + 0.6693794566771631 * input_37 + -0.3202714707562452 * input_38 + -0.7641811889343519 * input_39 + -2.105867443356208 * input_40 + -0.6496538399483966 * input_41 + -0.7732970227685311 * input_42 + -0.26803605348874526 * input_43 + 3.841934044584569 * input_44 + -1.725022977319866 * input_45 + -0.5199072641455215 * input_46 + -0.7263396719706008 * input_47 + 1.1381468850944032 * input_48 + 0.46592411141125056 * input_49 + -0.8485279327099019 * input_50 + -0.02124789790595477 * input_51 + 0.6310140101555899 * input_52 + -1.5173295990437088 * input_53 + -0.5494617599949949 * input_54 + 0.8128049859852092 * input_55 + 2.580476563777185 * input_56 + 1.4473130914460968 * input_57 + 3.243135050485896 * input_58 + -2.502838960427963 * input_59 + 1.3517869242318876 * input_60 + 0.8041638556766711 * input_61 + 0.015196560055646938 * input_62 + 0.09662046421765139 * input_63 + -0.018625893125081748 * input_64 + 2.377723345441278 * input_65 + 0.21024469714932767 * input_66 + -0.3878635655053768 * input_67 + -0.5411157108616778 * input_68 + 2.1055749467893463 * input_69 + 1.8862591659785957 * input_70 + -0.7609143485783888 * input_71 + -4.952587056671954 * input_72 + 3.2718511430072783 * input_73 + -2.354605491285164 * input_74 + 1.7329246755822119 * input_75 + 0.4459419346337748 * input_76 + -0.5233302675851538 * input_77 + -0.14321526969519113 * input_78 + 2.4441530573921884 * input_79 + -1.0472870942404922 * input_80 + -1.6213459279333127 * input_81 + -2.7378581267652744 * input_82 + -0.023487207455668346 * input_83 + -3.409183935138912 * input_84 + 0.03357394152736985 * input_85 + 0.5512639684071517 * input_86 + -0.21778546816778183 * input_87 + -2.2318242960580355 * input_88 + 2.4546031970495776 * input_89 + -0.45174240850075115 * input_90 + -1.3761283647912501 * input_91 + 0.9596503440057556 * input_92 + 0.4163831841959147 * input_93 + 1.0771403041970642 * input_94 + -2.17991051256479 * input_95 + -2.3761233209663133 * input_96 + -1.2186072818238765 * input_97 + -1.5074323832078658 * input_98 + -0.47692966789655383 * input_99 + -5.704838322692552;
	
			double output_1_1_BA = -1.9882434361988612 * input_0 + 0.6063658489948808 * input_1 + -3.1685567043144065 * input_2 + -1.5479500394234726 * input_3 + 0.06924186732538018 * input_4 + 1.7542218992921774 * input_5 + -0.9409420036459231 * input_6 + -1.405397318802166 * input_7 + -0.9322906558727172 * input_8 + 0.4045487880421032 * input_9 + -1.1278687541075156 * input_10 + 0.7536976978573329 * input_11 + -0.5407170819192942 * input_12 + 3.1630949126027743 * input_13 + 1.59936083483286 * input_14 + 2.290021401451064 * input_15 + 0.08816174739411667 * input_16 + -0.28144435650453326 * input_17 + 0.7300948045212379 * input_18 + -3.1311726879926485 * input_19 + 0.9301528884393482 * input_20 + 1.8444739401655799 * input_21 + -0.4789633500152789 * input_22 + -0.2246368315839441 * input_23 + 4.86453667998488 * input_24 + 0.19483784228132978 * input_25 + -1.1414642930646182 * input_26 + 2.27550735898822 * input_27 + -1.8516189691072622 * input_28 + 2.480641508367733 * input_29 + -2.317300885663768 * input_30 + -0.915334070390658 * input_31 + 0.8605843632002391 * input_32 + 0.5902293262124052 * input_33 + -1.3056464173501794 * input_34 + 0.4792776622840837 * input_35 + -0.5603438388356172 * input_36 + -1.7872404705801355 * input_37 + 1.7955367931914827 * input_38 + 3.91706770530328 * input_39 + -1.4696148615406388 * input_40 + 0.9425703469991975 * input_41 + -1.249396449434677 * input_42 + -0.576801451505103 * input_43 + -1.2497529760182737 * input_44 + 2.878925683223818 * input_45 + 2.5842857697515913 * input_46 + -1.6820123430162481 * input_47 + 0.17007205632411274 * input_48 + 0.7149082049383157 * input_49 + -0.21934930924740753 * input_50 + 0.6255374966403185 * input_51 + -0.7225152861041024 * input_52 + 1.751922830073422 * input_53 + -2.744617866455863 * input_54 + 1.7916763688706734 * input_55 + -4.054248632768952 * input_56 + -0.12716456760401482 * input_57 + -1.943788586715993 * input_58 + 1.283677551384441 * input_59 + 2.2831517142834006 * input_60 + 0.11746654749617544 * input_61 + -3.64054732502874 * input_62 + 3.502809731995897 * input_63 + -1.9252413902455128 * input_64 + -0.8494951769389462 * input_65 + 1.0386515274022967 * input_66 + 0.9859156976317331 * input_67 + 3.35286307898463 * input_68 + -1.3506498859165286 * input_69 + -0.3976499374369962 * input_70 + 3.5417004613273018 * input_71 + 0.820034982099783 * input_72 + 0.6558125971713118 * input_73 + 2.521213674824773 * input_74 + -2.0423236378335576 * input_75 + 0.36269726346411046 * input_76 + -3.6120007792465874 * input_77 + -0.8012460549999456 * input_78 + -0.509575534962412 * input_79 + 5.816701335801019 * input_80 + 3.0424109133092694 * input_81 + 2.509412075990486 * input_82 + -0.22756827912895106 * input_83 + 2.7079972232496727 * input_84 + -1.2933505492463377 * input_85 + -0.21544342628141938 * input_86 + -0.660457926902625 * input_87 + 0.6687115551136469 * input_88 + 1.191827079018226 * input_89 + 0.7056399158697185 * input_90 + -1.2273762394989347 * input_91 + -2.999489630156809 * input_92 + -1.6350016567237544 * input_93 + -2.473771678463599 * input_94 + 1.6910697582538035 * input_95 + 1.5990571813064631 * input_96 + 0.6247720782011799 * input_97 + 0.5185872224513566 * input_98 + 1.1371760642575106 * input_99 + -0.1059112100134222;
	
			double output_1_2_BA = -3.2459120349189834 * input_0 + -8.473099399735561 * input_1 + -3.6724060072085507 * input_2 + 1.0534677584728915 * input_3 + -0.35779254418171846 * input_4 + 1.1268656660045984 * input_5 + 0.34362860243605614 * input_6 + -2.873039330067098 * input_7 + 7.685070223019129 * input_8 + 2.5157845587040475 * input_9 + -1.1224861417588028 * input_10 + -0.2969405713599505 * input_11 + 4.124188613009894 * input_12 + -0.8972156258570924 * input_13 + 0.7293900728398575 * input_14 + 1.4421802509354202 * input_15 + 7.054016404466563 * input_16 + 4.952656262748077 * input_17 + 0.43461276757277245 * input_18 + -6.024526748415119 * input_19 + 4.945827288636692 * input_20 + -0.2613961634517733 * input_21 + 4.190801311598673 * input_22 + -3.8609313497039826 * input_23 + 1.2711453535248542 * input_24 + 3.9588095900593037 * input_25 + 3.4788682283003083 * input_26 + 3.38004398262671 * input_27 + 2.420367069203176 * input_28 + 1.056973978521427 * input_29 + 1.870530239967541 * input_30 + 2.8022378723951946 * input_31 + -1.5471669422588261 * input_32 + 5.240928549696988 * input_33 + -3.352042691176447 * input_34 + 0.6317202954201385 * input_35 + 0.755892772565513 * input_36 + -3.2372406974520898 * input_37 + 3.2622160452336155 * input_38 + 13.41828331896426 * input_39 + -3.0913835559646765 * input_40 + 10.669803133973756 * input_41 + -1.1459637806884226 * input_42 + 1.7342774580510893 * input_43 + 2.462099112050884 * input_44 + -2.363247594567244 * input_45 + -1.9581327091546503 * input_46 + -0.534771048514525 * input_47 + 1.279065057653182 * input_48 + 5.888952440510786 * input_49 + 1.5351821943794746 * input_50 + 1.8229197499566336 * input_51 + 0.706229365518032 * input_52 + 0.36838074267684856 * input_53 + 1.5871896934826517 * input_54 + -2.4758974416843667 * input_55 + -4.335184111713784 * input_56 + 2.2693506821376266 * input_57 + 0.28855375135054667 * input_58 + 1.612306544508971 * input_59 + 5.665393819517079 * input_60 + -3.024972358618971 * input_61 + -4.199692134558983 * input_62 + 13.877344316050632 * input_63 + 4.158494916589342 * input_64 + -2.337713274661874 * input_65 + 1.8509616367618842 * input_66 + -5.961467671313015 * input_67 + 4.288424832513062 * input_68 + -5.119137584669685 * input_69 + -2.0772574546689895 * input_70 + 1.7812143152067106 * input_71 + -1.2769262280881786 * input_72 + -2.944876125407755 * input_73 + 2.4840944551974973 * input_74 + 1.9807988053277976 * input_75 + -1.245845154816834 * input_76 + -7.527795609486312 * input_77 + 2.5638277101306572 * input_78 + 4.317269782460787 * input_79 + 21.491478560243127 * input_80 + 4.550615352492607 * input_81 + 1.408382374046468 * input_82 + 0.3513628739955291 * input_83 + -3.6765269473144846 * input_84 + 1.3605794103492852 * input_85 + -1.0740252394012029 * input_86 + 2.0812204162782346 * input_87 + -1.3413722706325018 * input_88 + 1.5153092521774802 * input_89 + -0.2667373917624038 * input_90 + 5.539294159857318 * input_91 + 4.277286331570355 * input_92 + -4.371381337880877 * input_93 + -4.9883664576458 * input_94 + 10.982412808313052 * input_95 + 1.1276219719320049 * input_96 + 2.264024907980582 * input_97 + -2.487069863903922 * input_98 + 0.43587428244156606 * input_99 + 1.0455718323104344;
	
			lTable["output_1_0"] = { relu(output_1_0_BA) };
			lTable["output_1_1"] = { relu(output_1_1_BA) };
			lTable["output_1_2"] = { relu(output_1_2_BA) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("input_0")[0], iTable.at("input_1")[0], iTable.at("input_2")[0], iTable.at("input_3")[0], iTable.at("input_4")[0], iTable.at("input_5")[0], iTable.at("input_6")[0], iTable.at("input_7")[0], iTable.at("input_8")[0], iTable.at("input_9")[0], iTable.at("input_10")[0], iTable.at("input_11")[0], iTable.at("input_12")[0], iTable.at("input_13")[0], iTable.at("input_14")[0], iTable.at("input_15")[0], iTable.at("input_16")[0], iTable.at("input_17")[0], iTable.at("input_18")[0], iTable.at("input_19")[0], iTable.at("input_20")[0], iTable.at("input_21")[0], iTable.at("input_22")[0], iTable.at("input_23")[0], iTable.at("input_24")[0], iTable.at("input_25")[0], iTable.at("input_26")[0], iTable.at("input_27")[0], iTable.at("input_28")[0], iTable.at("input_29")[0], iTable.at("input_30")[0], iTable.at("input_31")[0], iTable.at("input_32")[0], iTable.at("input_33")[0], iTable.at("input_34")[0], iTable.at("input_35")[0], iTable.at("input_36")[0], iTable.at("input_37")[0], iTable.at("input_38")[0], iTable.at("input_39")[0], iTable.at("input_40")[0], iTable.at("input_41")[0], iTable.at("input_42")[0], iTable.at("input_43")[0], iTable.at("input_44")[0], iTable.at("input_45")[0], iTable.at("input_46")[0], iTable.at("input_47")[0], iTable.at("input_48")[0], iTable.at("input_49")[0], iTable.at("input_50")[0], iTable.at("input_51")[0], iTable.at("input_52")[0], iTable.at("input_53")[0], iTable.at("input_54")[0], iTable.at("input_55")[0], iTable.at("input_56")[0], iTable.at("input_57")[0], iTable.at("input_58")[0], iTable.at("input_59")[0], iTable.at("input_60")[0], iTable.at("input_61")[0], iTable.at("input_62")[0], iTable.at("input_63")[0], iTable.at("input_64")[0], iTable.at("input_65")[0], iTable.at("input_66")[0], iTable.at("input_67")[0], iTable.at("input_68")[0], iTable.at("input_69")[0], iTable.at("input_70")[0], iTable.at("input_71")[0], iTable.at("input_72")[0], iTable.at("input_73")[0], iTable.at("input_74")[0], iTable.at("input_75")[0], iTable.at("input_76")[0], iTable.at("input_77")[0], iTable.at("input_78")[0], iTable.at("input_79")[0], iTable.at("input_80")[0], iTable.at("input_81")[0], iTable.at("input_82")[0], iTable.at("input_83")[0], iTable.at("input_84")[0], iTable.at("input_85")[0], iTable.at("input_86")[0], iTable.at("input_87")[0], iTable.at("input_88")[0], iTable.at("input_89")[0], iTable.at("input_90")[0], iTable.at("input_91")[0], iTable.at("input_92")[0], iTable.at("input_93")[0], iTable.at("input_94")[0], iTable.at("input_95")[0], iTable.at("input_96")[0], iTable.at("input_97")[0], iTable.at("input_98")[0], iTable.at("input_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace HiddenLayer_1
	

	namespace HiddenLayer_2 {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "output_1_0", "output_1_1", "output_1_2" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "output_2_0", "output_2_1", "output_2_2", "output_2_3", "output_2_4" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any output_1_0, std::any output_1_1, std::any output_1_2) {
	
			tTable lTable;
	
			double output_2_0_BA = -0.4569531719747784 * output_1_0 + 1.8835713738160167 * output_1_1 + 3.53144953325172 * output_1_2 + -0.8466785570957025;
	
			double output_2_1_BA = 0.32156122872177767 * output_1_0 + -0.17159120136801392 * output_1_1 + -7.4952637048614825 * output_1_2 + 13.28678942084592;
	
			double output_2_2_BA = 3.3905793217807876 * output_1_0 + 5.7451836029755485 * output_1_1 + 6.8359550678345995 * output_1_2 + -2.865839158733509;
	
			double output_2_3_BA = 0.9084846416204254 * output_1_0 + 4.60497490605307 * output_1_1 + 0.6229683954279948 * output_1_2 + 7.1159907867118;
	
			double output_2_4_BA = -0.6093467287668528 * output_1_0 + -0.37766844575352815 * output_1_1 + -0.6730015883942424 * output_1_2 + -0.01807831622698608;
	
			lTable["output_2_0"] = { relu(output_2_0_BA) };
			lTable["output_2_1"] = { relu(output_2_1_BA) };
			lTable["output_2_2"] = { relu(output_2_2_BA) };
			lTable["output_2_3"] = { relu(output_2_3_BA) };
			lTable["output_2_4"] = { relu(output_2_4_BA) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("output_1_0")[0], iTable.at("output_1_1")[0], iTable.at("output_1_2")[0]);
	
			return lTable;
		}
	
	} // eof namespace HiddenLayer_2
	

	namespace OutputLayer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "output_2_0", "output_2_1", "output_2_2", "output_2_3", "output_2_4" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any output_2_0, std::any output_2_1, std::any output_2_2, std::any output_2_3, std::any output_2_4) {
	
			tTable lTable;
	
			double output_3_0_BA = -0.2500066953022706 * output_2_0 + -14.880450378465243 * output_2_1 + 0.57722448721615 * output_2_2 + -0.5632081577442988 * output_2_3 + -0.2734750987144297 * output_2_4 + -11.860648700530598;
	
			lTable["Estimator"] = { output_3_0_BA };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("output_2_0")[0], iTable.at("output_2_1")[0], iTable.at("output_2_2")[0], iTable.at("output_2_3")[0], iTable.at("output_2_4")[0]);
	
			return lTable;
		}
	
	} // eof namespace OutputLayer
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
		tTable lTable_InputLayer = InputLayer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);

		tTable lTable_HiddenLayer_1 = HiddenLayer_1::compute_model_outputs_from_table( lTable_InputLayer );

		tTable lTable_HiddenLayer_2 = HiddenLayer_2::compute_model_outputs_from_table( lTable_HiddenLayer_1 );

		tTable lTable_OutputLayer = OutputLayer::compute_model_outputs_from_table( lTable_HiddenLayer_2 );


		tTable lTable;

		std::any  lEstimator = lTable_OutputLayer[ "Estimator" ][0];
		lTable[ "Estimator" ] = { lEstimator };

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/RandomReg_100.csv");
	return 0;
}
