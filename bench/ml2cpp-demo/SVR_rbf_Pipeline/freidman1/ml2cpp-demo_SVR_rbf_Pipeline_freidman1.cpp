// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : SVR_rbf_Pipeline
// Dataset : freidman1

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_SVR_rbf_Pipeline_freidman1.exe ml2cpp-demo_SVR_rbf_Pipeline_freidman1.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
	
			tTable lTable;
	
			lTable["imputer_output_2"] = { ((Feature_0 == std::any()) ?  ( 0.5629846484809591 ) : ( Feature_0)) };
			lTable["imputer_output_3"] = { ((Feature_1 == std::any()) ?  ( 0.45606442423375926 ) : ( Feature_1)) };
			lTable["imputer_output_4"] = { ((Feature_2 == std::any()) ?  ( 0.47113817481474773 ) : ( Feature_2)) };
			lTable["imputer_output_5"] = { ((Feature_3 == std::any()) ?  ( 0.533968020094518 ) : ( Feature_3)) };
			lTable["imputer_output_6"] = { ((Feature_4 == std::any()) ?  ( 0.4780936262373869 ) : ( Feature_4)) };
			lTable["imputer_output_7"] = { ((Feature_5 == std::any()) ?  ( 0.5682849224172329 ) : ( Feature_5)) };
			lTable["imputer_output_8"] = { ((Feature_6 == std::any()) ?  ( 0.47914374714280494 ) : ( Feature_6)) };
			lTable["imputer_output_9"] = { ((Feature_7 == std::any()) ?  ( 0.4594152477223205 ) : ( Feature_7)) };
			lTable["imputer_output_10"] = { ((Feature_8 == std::any()) ?  ( 0.4901106996809651 ) : ( Feature_8)) };
			lTable["imputer_output_11"] = { ((Feature_9 == std::any()) ?  ( 0.5378806933707533 ) : ( Feature_9)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any imputer_output_2, std::any imputer_output_3, std::any imputer_output_4, std::any imputer_output_5, std::any imputer_output_6, std::any imputer_output_7, std::any imputer_output_8, std::any imputer_output_9, std::any imputer_output_10, std::any imputer_output_11) {
	
			tTable lTable;
	
			lTable["scaler_output_2"] = { ( ( imputer_output_2 - 0.5629846484809591 ) / 0.2583714683396337 ) };
			lTable["scaler_output_3"] = { ( ( imputer_output_3 - 0.45606442423375926 ) / 0.2878721730712705 ) };
			lTable["scaler_output_4"] = { ( ( imputer_output_4 - 0.47113817481474773 ) / 0.3109216791553051 ) };
			lTable["scaler_output_5"] = { ( ( imputer_output_5 - 0.533968020094518 ) / 0.2826199867400281 ) };
			lTable["scaler_output_6"] = { ( ( imputer_output_6 - 0.4780936262373869 ) / 0.286140491317745 ) };
			lTable["scaler_output_7"] = { ( ( imputer_output_7 - 0.5682849224172329 ) / 0.29767408106451737 ) };
			lTable["scaler_output_8"] = { ( ( imputer_output_8 - 0.47914374714280494 ) / 0.2735314971431575 ) };
			lTable["scaler_output_9"] = { ( ( imputer_output_9 - 0.4594152477223205 ) / 0.28721149346998975 ) };
			lTable["scaler_output_10"] = { ( ( imputer_output_10 - 0.4901106996809651 ) / 0.2790486717322703 ) };
			lTable["scaler_output_11"] = { ( ( imputer_output_11 - 0.5378806933707533 ) / 0.2958192296543193 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("imputer_output_2")[0], iTable.at("imputer_output_3")[0], iTable.at("imputer_output_4")[0], iTable.at("imputer_output_5")[0], iTable.at("imputer_output_6")[0], iTable.at("imputer_output_7")[0], iTable.at("imputer_output_8")[0], iTable.at("imputer_output_9")[0], iTable.at("imputer_output_10")[0], iTable.at("imputer_output_11")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		std::vector<std::any> lProblem_data_dual = { 
		 -0.1 , 0.1 , -0.1 , 0.1 , 0.1 , 0.1 , -0.1 , 0.1 , -0.1 , -0.1 , 0.1 , 0.1 , -0.1 , 0.1 , 0.1 , -0.1 , -0.1 , 0.1 , -0.1 , -0.1 , 0.1 , -0.1 , -0.1 , 0.1 , 0.1 , 0.1 , -0.1 , 0.1 , -0.1 , 0.1 , 0.1 , 0.1 , -0.1 , -0.1 , 0.1 , -0.1 , -0.1 , 0.1 , 0.1 , 0.1 , 0.1 , -0.1 , 0.1 , -0.1 , 0.05112966690193947 , 0.05584120621768116 , -0.1 , -0.1 , -0.1 , -0.1 , 0.1 , -0.1 , -0.1 , -0.1 , -0.1 , 0.03650113133323029 , 0.1 , -0.1 , 0.1 , -0.1 , -0.1 , 0.1 , -0.1 , 0.1 , -0.04347200445285092 , 0.1 , -0.1 , -0.1 , -0.1 , -0.1 , 0.1 , -0.1 , 0.1 , -0.1 , 0.1 , 0.1 , 0.1 , 0.1 , 0.1 ,};
		
	
		std::vector<std::vector<std::any> > lProblem_data_sv = { 
		 { 0.5067870208512265, -1.3265829029216323, 1.4934916261539102, -0.24729208554702264, -0.2176048844127298, -1.2725658182291233, -1.3862750356794222, -1.0835979586201392, 1.0640691245065985, -0.24843050108227027 },
		 { 1.4457619587121728, -0.45215113938733736, 1.3020069739880047, 0.9248158657867962, 1.6339992324495063, 0.471602715380309, 1.0236902726380679, 1.1734656334539684, -0.34510096274072216, -0.026167134264266097 },
		 { -0.7795551265613678, 0.4756130566388556, -0.36917589223980124, -0.9418571203395795, -1.0743845309926605, -1.867739550979002, -0.5159115638118449, -1.1124767153031292, 0.19953243972926904, -0.11131775348359915 },
		 { -1.0151596802712823, 0.9183047218707472, 0.3594664303586105, 0.3845508502948606, 1.5410523072960958, 0.32333815990514314, 0.7500691335870233, -0.18760165504227694, -1.684742321061924, -1.401772538704984 },
		 { 1.133375861192972, 1.4322283784054002, -0.4742440987080401, 1.4448262448450668, -1.564979633550089, -0.7014209632678359, -0.35975870233952834, -0.0723109905575966, -1.2084841000401467, -1.8060309002876391 },
		 { 0.5741937586934704, 1.2907142426550566, 0.7253869745795006, 0.13211062005784202, 0.6102287486926927, -0.5063473055540599, -0.05638764156732255, 1.5471530888159195, 1.5204364809079687, 1.1050203656978952 },
		 { -2.120835329648434, -1.5821641033893452, -0.4204771590147179, 1.2289855843326805, 0.043898134754352114, 0.5428186200345558, 0.9956078980980605, -1.1418905130497181, -1.7510877164909417, -1.5305589812963774 },
		 { 0.33990662300424296, 1.280573788152331, -1.053634880826695, 1.5803010610044073, -1.6505395866293329, -1.063053262508225, 0.15424358951079814, 0.04486452053834909, 0.9120871757290964, 1.3072870750884769 },
		 { -0.6136952361961311, -0.6796692715042094, -1.390946512687778, -0.6233118608524243, -0.9803110550367957, -1.607715450570412, -0.10788605847546952, -1.2987720803711194, -0.850325397118765, -0.9939849738899496 },
		 { 0.331984022123399, -0.6050529807513185, 0.5081040118001584, -1.1733580420912495, -1.4810479775450385, 1.1430059366267062, 0.008395985904663696, -0.24534974764977216, -0.6544653965702296, -1.767206531719298 },
		 { -0.4729777775151986, 1.2942432288382526, -1.5026902185990336, 0.081931969527099, 0.8250760431478493, 1.2294220745697002, -0.341820375817671, -1.287726782671633, 1.494506302959332, -0.5919542361240013 },
		 { 0.7825578070905591, 0.3997248228000645, 0.6965869097182928, 0.37389636833180206, -1.0417498975381545, 1.075518782181769, 1.445769772645329, -0.4632017337849255, -0.6707775442500765, -0.8829132498135542 },
		 { -2.107102836304591, 1.0800414677676404, 1.4981299301247208, 0.77686986749436, -1.2357081711379774, 1.3982229651132614, 0.3530060140109391, -1.334944337428244, 1.1054090534148115, 0.3022799529607108 },
		 { 0.5197200123689821, 1.69670042053734, -1.494256254058765, 1.2194145417593911, -1.441095788966558, 1.1060106857202905, -0.497221606231084, 0.2952806421745938, 1.627622937162637, -1.307266743974428 },
		 { 0.39241789137752603, 1.2056550499266316, -0.40876029801168307, 0.3527568910413912, 1.0288103504137818, 1.248943949668479, 0.7618939934071481, 0.5671757902848612, -1.2719850775158121, 1.1997589760674303 },
		 { 1.0142430700286276, -0.7554344889579421, 0.20164738040552782, -0.5493949970659109, 1.7258247273025344, 0.6382309258457182, 1.1416152529881207, 0.6312792271477967, 1.0400541199199074, 0.05818526383756669 },
		 { 0.8391248275714503, -1.5693813850679423, -0.044306299165321895, 0.7968360491318162, 0.33091282700959057, 1.1668117578416817, -1.1743243009218087, -1.4294632201359858, -0.02202987408149027, 1.3605656881774035 },
		 { -0.31910872290021247, 0.9392944496770282, 1.5497883534680115, -0.8700967961356445, 1.2562796813598118, -1.1167207192319828, 1.427804916478543, 0.8046939253894865, 0.4088131841283075, -0.17951849091637712 },
		 { 1.1759835426923197, -1.2118139940822585, -0.5452569147648042, -1.5046685681014436, 0.2891619045023695, 0.7776913637039673, 1.2410818757565325, -0.9110980974074246, 1.0854113771371572, -0.9823390667723672 },
		 { 1.6546927772182016, -1.4708062936115678, -0.2542225117349198, 0.970334893970854, -0.284074478195057, 1.1332105964451313, 1.4692314197940095, -0.10936654990472222, -1.2138886023024253, -0.6102451899822995 },
		 { 0.48377485065345843, 0.8956890847478018, -0.7814424705304112, -0.7413492936252417, -0.13594689572113902, 0.3259727558636071, 0.5433394492167941, -0.6119335956585745, 0.942826410682349, -0.21231263052658303 },
		 { -1.6023302457450717, 0.1583339475181976, -0.8645058578458519, 1.5690232227087764, -0.6671518854241034, -0.42850870132298646, -1.4852018655971901, -0.427671316213745, 1.3082601892499066, -1.7161821936884916 },
		 { 0.7791436004212942, -0.8596743286443385, 0.8972591127015436, 0.042308795603837344, -1.4766759905234985, 0.4479795444987382, -0.7820361467453821, -1.183161592168932, -0.4092483354403313, 0.3612315056690704 },
		 { 1.0163540716834707, 1.5641680813770045, -1.4219391961587782, 0.19475366622676213, -0.16377186058820195, 1.1340834579994081, -0.08426699913044491, 0.8017532005998322, 0.9207122972327123, -1.6048859164681066 },
		 { -0.8418303310375542, 1.5794059772580444, 0.8144547601887837, 0.2683561593771677, 1.6437904437761277, -0.0857718402884655, 0.4929748118646864, -0.14399841666758603, 0.787814212453425, 1.1539987858805358 },
		 { -1.132085136352201, 0.901418794842219, -1.1855376210400028, 1.4564965262382703, -0.989067604456165, -1.287192709826148, 1.3146975914227568, 1.7483812009731485, -0.00765672910473169, -0.18966802487366397 },
		 { -1.8886707962253106, -0.8270805584779359, -0.4138253118262203, -0.2880438117977908, -0.13514664760025355, 0.7031292887435714, 1.2236435350387282, -0.3704860450346376, 1.2059154206063813, 1.1047339132528704 },
		 { 0.298652945877785, 0.36463849788058267, -0.936551939610252, 1.4625904780557843, 0.05664582974879215, -0.0003343942388556232, 1.2231544563183983, 1.1195531037743847, 0.5663402824970262, -0.5648160941772721 },
		 { 0.7251384108296299, -1.472393061587184, -0.4249525980347541, -0.02049998885272131, 1.699894786189821, -1.3006305918907084, -0.3270915809465192, 0.6109376071979224, -1.7079194508023643, 0.13588327037583606 },
		 { -0.7075715712901469, 1.2557686199382192, -1.2095995247832825, -1.620657142652391, 1.1089487214474851, 0.8754819335289856, -1.5841183576102709, 1.4733495739068174, -1.6058183460415314, 0.2361229612546322 },
		 { 0.10993834176203529, 0.735628171743746, 1.293029254155726, 0.8581114900016342, 1.6163837173282471, 1.3771456427095026, 0.22476839939598164, 1.430023298967, 0.7994279090478374, -0.3968809445759777 },
		 { 0.2807616912945926, -0.5058838857624789, -0.3966175942291259, 0.7592315127665472, 1.299936765985117, 0.7450610852871168, -1.3043300851068311, -0.34741350100023505, -0.6442385571241626, -1.3360568630362166 },
		 { -1.009378968378826, -1.2213253291078967, 0.693720962239313, 0.92322179479268, 0.5609955673106046, 0.6606427499456801, 0.24845761366678526, 1.6357077549061687, -0.21804609835230376, 1.0166959155956494 },
		 { 0.4954874044134974, -0.8684584593492759, 1.1964580705751156, -0.8528529548018084, 0.5310816278059199, 1.1527650374058969, -1.3438597903496678, -0.04106930891309609, -1.601930359779528, 1.5421867174608899 },
		 { 1.056051178088123, 0.5116921888952601, 1.5783958098420996, -1.7029225132008161, 0.4956067468954236, 0.8963609504508504, -0.15810867804101195, -0.4243713261257669, -0.24505988294963704, -1.755857511488208 },
		 { -0.09511273841263276, -0.610294898899078, -1.005195677545493, -0.12390037471932835, 0.3458538303524311, 1.2280695902975154, -1.191367677686448, -1.482615367062796, 0.7894961768352321, 1.0930697749396605 },
		 { -0.9203904375846967, 0.3518022003013365, -1.2684586243346392, -0.9919195281611775, 1.1470754194396842, -1.7453241833920532, 0.008955157699138325, -0.1639886089012623, 0.3164061871431094, 1.1923717553022093 },
		 { 0.9328625258284126, -0.024315422470180547, -1.3020222756727267, 1.0176817735843398, -1.1577089350606329, 0.3877014641686421, -1.7013859239184324, -1.2553925404413335, -1.2718579446514224, -1.6506637332700744 },
		 { 0.45298901480690473, 0.3412375523869295, -0.43661883753481745, -0.5489943736656773, 1.576268355922646, -0.6513440175280992, 1.7819204480038542, -0.5871557761977072, 1.0508462991514806, -0.6477438751118543 },
		 { 0.5141850550853257, 0.15879692331336695, 1.0374980151869304, 1.5352842246575986, -0.9446874107821644, -0.42193469562003916, 0.6831293428141179, 0.9715709394819769, -1.5308549435264238, 0.4041406722490066 },
		 { 0.8995207981172514, 0.812720016030792, -1.4352642725606903, 0.7794832123430957, -0.3980072134624079, -0.7359299089075567, -0.04743391387420796, 1.7884839479295447, -1.703618301803592, -0.4947974403605647 },
		 { -1.8298179391724234, -0.7959476575883369, -0.1543293074987559, 0.7786284551012908, -1.2542415606813888, 1.2133214747858803, -1.5889871437444927, -1.2587567163202005, -0.5683253533135081, 0.3065142830121232 },
		 { -0.4959484422897034, 1.7203908623546726, 0.796166158332829, 0.10805864579595224, -0.8848234469726766, 0.28805179488917165, -0.516351447761798, 0.44956801799211765, -0.9780158987777768, 0.9949699321754163 },
		 { -0.29112818531677287, -0.4417823438961026, -0.7190649064157157, -0.11176422090742412, -0.24018878068297203, -0.41454920367791825, 0.06963629839772269, 0.14514653336333871, 0.12983388003910332, 0.44325581235717215 },
		 { 0.1779088404443296, -1.119889204406406, -1.4586819529019672, -0.37904085415668237, 1.565583294677887, 1.029919488224141, 0.13658922405053012, 0.009484052806931402, 0.2741200520944042, 1.058482824750419 },
		 { 0.8307066425672895, -0.7922737005333039, -0.654261211436983, 0.39350528703697185, 0.7653435608821173, 0.4609552070253105, -0.8141895860305811, 1.2767810510472648, 0.9423548907711703, -0.9953028620501055 },
		 { -1.2328836564706502, -1.1593216041738719, -1.2360162391124727, -0.15217024365512222, -0.8171970324926926, -1.4763326006829993, -0.4060360121122358, 0.6575115036642606, -1.1656358769536912, -1.098991671049883 },
		 { -1.004896998755324, -0.04718963889277303, -0.7355605025533806, -0.8879188970740824, 1.7329348309940553, 0.44679806849876624, -1.2546033239557965, -0.3132504903975395, -1.4615137915493313, -0.8022355842773246 },
		 { -1.0809453656286363, 0.3480362685001459, -0.21798902556942237, -1.8532921531436786, -0.15154587456491952, 1.1060721718653521, 1.4218254601894342, -0.8325590009987935, 1.5992636356200565, 0.7360881786232232 },
		 { 0.7386850591540732, -1.076311466635762, -0.1628526691055773, -0.7739541085057048, -1.4561476797830333, -0.8699561668172026, -0.9537914599018384, 0.011266010810025543, 1.5051499293724473, 0.06956023007893718 },
		 { 0.9691863105075711, 1.7248885479130618, 1.2644463432844173, 0.8431990275849832, -0.2550582839006093, -0.7302730178084444, -1.0217973022095688, -1.2968476739447425, -1.603671238871663, 1.2257229424364224 },
		 { -1.3831104630520137, 1.6952219517817548, 0.05925705951145257, 0.3651727601884, 0.03092960076315465, 1.254862027705408, -0.6130752063948367, -0.33478052149552184, -0.4947863488021104, 1.459369645110766 },
		 { -0.06870006266556682, 1.2804016358872021, -1.3204821292127344, -1.370913509858256, -1.3222027672423808, 0.3794560470572633, -0.5526019151629767, 0.7116338366449987, 1.2755649924085368, -0.5936383076009937 },
		 { 1.2482929464213142, -1.0529572219846004, -0.04775551230796455, -0.7689341395930223, 0.22532956990845857, -1.4984098449046894, 1.4834147578127408, 1.0692738813037428, -0.5139520766916303, 0.5835913247160279 },
		 { -1.1831955356506787, -1.5214638347980467, 0.5225082106872388, 0.7024828261067553, -0.011522650860839, -0.8237757661264119, 0.10700444450742176, 0.45019389695314976, -0.18096073613733393, 1.444473527148171 },
		 { 1.297312338663854, -0.872776866661635, 0.6042472353041417, 0.07366050152193956, 1.6899700820395143, -1.8883928599100357, 1.4752302291474038, 1.2914308492273932, 0.6326553693081237, -0.27601135636459445 },
		 { -0.9230913960697019, 1.2752148466059385, -1.1962473912728349, -0.11595324649696086, 1.330149571684073, -1.8026564606711015, 1.6559273990477945, -1.3389478829214339, 0.1442423487777529, 1.511770321360701 },
		 { -0.9689811236795078, 0.2779582609991886, 1.0092934315830264, -1.7575368692968418, 0.5030180877150947, -1.183926188871818, -1.2049809205564428, 1.1951220699349165, 1.1987898627901887, 0.41212513367529297 },
		 { 0.9936554168312383, 0.013444087621772259, -1.4434787184059599, -1.1802300520078903, 0.020884485605986672, 1.1865135010740404, -1.2871442295582123, -0.4638580037938381, -0.21766166549579002, 1.2874772876190406 },
		 { -1.0823664182998887, -0.34279708862550906, 0.8951731552572393, -1.6130690601677815, -1.2227002308812427, -1.0257776538272085, 1.6012030547921345, -0.9232928062019263, 0.6759242455185315, -1.0297043183253698 },
		 { 0.08000491486027482, -1.0543172638365788, 0.46839716309105917, -0.38637410266327904, -1.0006667442208446, 0.6022464135633878, -0.6296723567516489, 0.8166336456595965, -0.8184162557688879, -0.17305455786014834 },
		 { 0.8801437858058357, 0.7035285881066706, 0.9201591903635318, -0.039917686306403466, -0.4680711028548929, 0.0023882619728447033, -0.2791564282757979, -1.0868810870942114, 1.8153629663676014, -1.596184266841443 },
		 { -2.1743927151462317, -0.6609067764561876, 1.6867580201383068, 0.7217687381929517, -0.44793069998232715, -0.7660349380774523, 0.4900711759067736, 1.8773963099963955, -0.5430307688365996, 0.08342151287296158 },
		 { 0.37504866215593313, -1.4864900489610466, 1.440583813074246, 1.574492469279121, 1.550698801308398, 0.44433769099874276, 1.5425493144364406, -0.5960496219769463, 0.7611846546661996, 0.11431995534514836 },
		 { 0.14717753170557932, -0.505535472593082, -0.8326203050169902, 0.6286933392094266, -0.5405672381194292, 0.3241506096354279, -1.0311399365910372, 0.8780413309857776, -0.7032265946378855, 0.3563318192728217 },
		 { -0.6608415876598743, 1.2956916927487803, 1.63550296996848, 1.6271312764787205, -0.14785833512350116, 1.2542771211130483, -0.2341069749855533, -0.8735510120466152, -0.8053584577379709, 0.3341292706609604 },
		 { 1.6901308441022944, -1.4060485771182971, 1.0262039183749228, -1.6054718065494864, -0.16471911443522538, -0.24930367508457013, -0.5999680352875597, 0.3631972247732269, 0.4148931054380287, 0.9632156425787901 },
		 { -1.5291215040808974, -0.308941235522363, -0.37089840465947077, -1.2126243089848852, 0.15250591914877656, -0.2718526934171035, 0.9000642061194776, -1.0030722630866309, 0.28975588179391293, 0.20115670868707905 },
		 { 0.706966422798997, -1.0815930115762815, -0.4916524586025889, -1.8025468478276074, -0.9283316540030475, -0.38653847382069584, -0.3148330585539104, 0.4057931080900593, -0.8975615944782666, 0.9962637986984064 },
		 { 0.9353265343511867, 0.8188319627549226, -1.0637797794666215, -1.546107242981104, -0.05770750251020976, 0.12149356998943735, -0.7901203559322442, 1.6239781490617415, 0.9052619310003376, -0.4812088796055741 },
		 { 1.4682575628346752, 0.3502438581410654, 0.3712177725812553, 0.6954872686497907, -1.1922879045305497, -1.6881380428806263, -1.5711043587953568, 1.3198251811088493, -0.32361939611095053, 1.3390475471524117 },
		 { -1.4702993969885956, -1.5376781745958936, -1.2073975049489003, 0.11530153080612787, 0.4949226414553508, 0.55075244378297, -1.3918018948727002, 1.6320860740308107, 0.7791612430651489, -0.13246246285798002 },
		 { -0.3494422751961778, 1.1882267191517717, 1.2182240925346162, -0.20796075390625857, -0.9355313074944549, 0.2176166179783945, 1.0175453118053863, 0.3472336869794851, -0.5961551642998771, 1.094708569754606 },
		 { -0.49715597879605455, -0.23275905451261217, 1.175154629438926, -1.6689959078266883, -0.4250044637376306, -1.890620953497875, 1.62174624393044, -0.38874054707345135, -0.04109661729558855, 1.5055714767370647 },
		 { 0.48922899102644213, -0.626126535142274, -0.7435536505424762, 0.5120651735437713, 1.5220178571512801, -1.5441298927069191, 0.2930512636426871, -0.6716045561458133, -0.7410525225889459, -0.11888598014055345 },
		 { 0.730409813835634, 0.08523947990766585, 0.6712296058111288, 1.3297770722595823, -0.34842010530428724, 1.2370054906209416, 0.05855558549775456, 1.3141211335949352, 0.17826788477021754, 0.019517717762795383 },
		 { 0.3891067898175791, -0.5929672822698918, 1.6155740529214335, 0.5521168786090315, -1.4387368810474168, -0.1844796866611429, 0.5803317345871072, -1.4782332697897325, -1.1805868521616583, 1.1944581381816883 },
		 { 1.546601187330293, 0.10389857115021651, -0.47643061026790895, -0.05837646312824779, -0.12991791943554348, 0.23537601165784758, 0.9506752534523342, -1.454635713451434, -0.3644284432475401, -1.5989179233860524 },
		 { -0.07255558649991471, -0.256076323161475, 0.731320205639038, 1.3886998211578971, -0.16921048665105004, 0.26246542127339256, -1.0488857578517312, -1.5141439499524454, 1.1655175721964997, 0.22043027850735725 },
		};
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11) {
			std::vector<std::any> inputs = { scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11 };
	
			std::any lDotProduct = rbf_kernel( lProblem_data_dual, lProblem_data_sv, inputs, 0.1 ) + 16.14083526332542;
	
	
			tTable lTable;
	
			std::any  lEstimator = lDotProduct;
			lTable[ "Estimator" ] = { lEstimator };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9) {
		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable;

		std::any  lEstimator = lTable_model[ "Estimator" ][0];
		lTable[ "Estimator" ] = { lEstimator };

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/freidman1.csv");
	return 0;
}
