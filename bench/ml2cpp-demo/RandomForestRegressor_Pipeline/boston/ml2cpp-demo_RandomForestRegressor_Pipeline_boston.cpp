// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : RandomForestRegressor_Pipeline
// Dataset : boston

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_RandomForestRegressor_Pipeline_boston.exe ml2cpp-demo_RandomForestRegressor_Pipeline_boston.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	namespace imputer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11", "imputer_output_12", "imputer_output_13", "imputer_output_14" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12) {
	
			tTable lTable;
	
			lTable["imputer_output_2"] = { ((Feature_0 == std::any()) ?  ( 3.3936090099009903 ) : ( Feature_0)) };
			lTable["imputer_output_3"] = { ((Feature_1 == std::any()) ?  ( 12.113861386138614 ) : ( Feature_1)) };
			lTable["imputer_output_4"] = { ((Feature_2 == std::any()) ?  ( 10.983613861386127 ) : ( Feature_2)) };
			lTable["imputer_output_5"] = { ((Feature_3 == std::any()) ?  ( 0.07178217821782178 ) : ( Feature_3)) };
			lTable["imputer_output_6"] = { ((Feature_4 == std::any()) ?  ( 0.5541153465346542 ) : ( Feature_4)) };
			lTable["imputer_output_7"] = { ((Feature_5 == std::any()) ?  ( 6.299148514851482 ) : ( Feature_5)) };
			lTable["imputer_output_8"] = { ((Feature_6 == std::any()) ?  ( 67.85049504950491 ) : ( Feature_6)) };
			lTable["imputer_output_9"] = { ((Feature_7 == std::any()) ?  ( 3.8198420792079233 ) : ( Feature_7)) };
			lTable["imputer_output_10"] = { ((Feature_8 == std::any()) ?  ( 9.55940594059406 ) : ( Feature_8)) };
			lTable["imputer_output_11"] = { ((Feature_9 == std::any()) ?  ( 405.8019801980198 ) : ( Feature_9)) };
			lTable["imputer_output_12"] = { ((Feature_10 == std::any()) ?  ( 18.40915841584154 ) : ( Feature_10)) };
			lTable["imputer_output_13"] = { ((Feature_11 == std::any()) ?  ( 358.3797277227715 ) : ( Feature_11)) };
			lTable["imputer_output_14"] = { ((Feature_12 == std::any()) ?  ( 12.626584158415856 ) : ( Feature_12)) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0]);
	
			return lTable;
		}
	
	} // eof namespace imputer
	

	namespace scaler {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "imputer_output_2", "imputer_output_3", "imputer_output_4", "imputer_output_5", "imputer_output_6", "imputer_output_7", "imputer_output_8", "imputer_output_9", "imputer_output_10", "imputer_output_11", "imputer_output_12", "imputer_output_13", "imputer_output_14" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any imputer_output_2, std::any imputer_output_3, std::any imputer_output_4, std::any imputer_output_5, std::any imputer_output_6, std::any imputer_output_7, std::any imputer_output_8, std::any imputer_output_9, std::any imputer_output_10, std::any imputer_output_11, std::any imputer_output_12, std::any imputer_output_13, std::any imputer_output_14) {
	
			tTable lTable;
	
			lTable["scaler_output_2"] = { ( ( imputer_output_2 - 3.3936090099009903 ) / 8.000616555737787 ) };
			lTable["scaler_output_3"] = { ( ( imputer_output_3 - 12.113861386138614 ) / 24.187656534977855 ) };
			lTable["scaler_output_4"] = { ( ( imputer_output_4 - 10.983613861386127 ) / 6.8177472477399235 ) };
			lTable["scaler_output_5"] = { ( ( imputer_output_5 - 0.07178217821782178 ) / 0.2581269011709685 ) };
			lTable["scaler_output_6"] = { ( ( imputer_output_6 - 0.5541153465346542 ) / 0.11800809760824685 ) };
			lTable["scaler_output_7"] = { ( ( imputer_output_7 - 6.299148514851482 ) / 0.7060417397996938 ) };
			lTable["scaler_output_8"] = { ( ( imputer_output_8 - 67.85049504950491 ) / 28.107403181658597 ) };
			lTable["scaler_output_9"] = { ( ( imputer_output_9 - 3.8198420792079233 ) / 2.0933726902675627 ) };
			lTable["scaler_output_10"] = { ( ( imputer_output_10 - 9.55940594059406 ) / 8.728803783375893 ) };
			lTable["scaler_output_11"] = { ( ( imputer_output_11 - 405.8019801980198 ) / 169.7858592930543 ) };
			lTable["scaler_output_12"] = { ( ( imputer_output_12 - 18.40915841584154 ) / 2.166792648327246 ) };
			lTable["scaler_output_13"] = { ( ( imputer_output_13 - 358.3797277227715 ) / 90.64691624336051 ) };
			lTable["scaler_output_14"] = { ( ( imputer_output_14 - 12.626584158415856 ) / 7.167938324035357 ) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("imputer_output_2")[0], iTable.at("imputer_output_3")[0], iTable.at("imputer_output_4")[0], iTable.at("imputer_output_5")[0], iTable.at("imputer_output_6")[0], iTable.at("imputer_output_7")[0], iTable.at("imputer_output_8")[0], iTable.at("imputer_output_9")[0], iTable.at("imputer_output_10")[0], iTable.at("imputer_output_11")[0], iTable.at("imputer_output_12")[0], iTable.at("imputer_output_13")[0], iTable.at("imputer_output_14")[0]);
	
			return lTable;
		}
	
	} // eof namespace scaler
	

	namespace model {
	
		namespace EXT_SubModel_0 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 9 ,  {20.9 }} ,
					{ 11 ,  {18.6 }} ,
					{ 14 ,  {19.4 }} ,
					{ 15 ,  {19.3 }} ,
					{ 17 ,  {19.5 }} ,
					{ 18 ,  {19.6 }} ,
					{ 21 ,  {22.6 }} ,
					{ 22 ,  {22. }} ,
					{ 25 ,  {20.9 }} ,
					{ 26 ,  {20.3 }} ,
					{ 27 ,  {19.3 }} ,
					{ 34 ,  {23.5 }} ,
					{ 35 ,  {23.7 }} ,
					{ 37 ,  {22.5 }} ,
					{ 38 ,  {23.1 }} ,
					{ 41 ,  {22. }} ,
					{ 42 ,  {21.9 }} ,
					{ 43 ,  {22.6 }} ,
					{ 48 ,  {25.2 }} ,
					{ 49 ,  {25.3 }} ,
					{ 50 ,  {25. }} ,
					{ 51 ,  {24.7 }} ,
					{ 54 ,  {24.4 }} ,
					{ 55 ,  {25. }} ,
					{ 57 ,  {24.3 }} ,
					{ 58 ,  {23. }} ,
					{ 65 ,  {22.3 }} ,
					{ 66 ,  {22.6 }} ,
					{ 69 ,  {24.6 }} ,
					{ 70 ,  {23.9 }} ,
					{ 71 ,  {23.2 }} ,
					{ 73 ,  {22.2 }} ,
					{ 74 ,  {20.8 }} ,
					{ 77 ,  {24.4 }} ,
					{ 78 ,  {24.5 }} ,
					{ 79 ,  {24. }} ,
					{ 82 ,  {22. }} ,
					{ 83 ,  {21.6 }} ,
					{ 84 ,  {20.5 }} ,
					{ 85 ,  {20.4 }} ,
					{ 90 ,  {22.1 }} ,
					{ 91 ,  {22.2 }} ,
					{ 92 ,  {23.1 }} ,
					{ 95 ,  {20.7 }} ,
					{ 96 ,  {21.1 }} ,
					{ 99 ,  {18.5 }} ,
					{ 100 ,  {18.2 }} ,
					{ 103 ,  {18.7 }} ,
					{ 104 ,  {19.2 }} ,
					{ 106 ,  {20.2 }} ,
					{ 107 ,  {20.3 }} ,
					{ 109 ,  {23. }} ,
					{ 110 ,  {24.3 }} ,
					{ 112 ,  {27.9 }} ,
					{ 115 ,  {29.6 }} ,
					{ 119 ,  {19.3 }} ,
					{ 121 ,  {20. }} ,
					{ 122 ,  {20.1 }} ,
					{ 124 ,  {24.4 }} ,
					{ 126 ,  {24.5 }} ,
					{ 130 ,  {22.5 }} ,
					{ 131 ,  {22.9 }} ,
					{ 132 ,  {23.3 }} ,
					{ 137 ,  {22. }} ,
					{ 138 ,  {21.7 }} ,
					{ 140 ,  {21.2 }} ,
					{ 141 ,  {21.4 }} ,
					{ 143 ,  {20.7 }} ,
					{ 144 ,  {20.6 }} ,
					{ 145 ,  {22.2 }} ,
					{ 147 ,  {15.3 }} ,
					{ 152 ,  {23.8 }} ,
					{ 154 ,  {23.1 }} ,
					{ 155 ,  {22.7 }} ,
					{ 156 ,  {21.2 }} ,
					{ 158 ,  {17.4 }} ,
					{ 160 ,  {19.6 }} ,
					{ 161 ,  {21.5 }} ,
					{ 166 ,  {18.5 }} ,
					{ 167 ,  {18.3 }} ,
					{ 168 ,  {20. }} ,
					{ 171 ,  {16.2 }} ,
					{ 172 ,  {16.1 }} ,
					{ 173 ,  {17.5 }} ,
					{ 177 ,  {20.8 }} ,
					{ 179 ,  {20.4 }} ,
					{ 180 ,  {20.3 }} ,
					{ 181 ,  {21.7 }} ,
					{ 183 ,  {17.7 }} ,
					{ 186 ,  {20.1 }} ,
					{ 187 ,  {19.8 }} ,
					{ 191 ,  {19.2 }} ,
					{ 193 ,  {19.3 }} ,
					{ 194 ,  {19.4 }} ,
					{ 196 ,  {19.6 }} ,
					{ 197 ,  {19.5 }} ,
					{ 198 ,  {20. }} ,
					{ 202 ,  {17.2 }} ,
					{ 203 ,  {17.1 }} ,
					{ 205 ,  {17.4 }} ,
					{ 207 ,  {20.1 }} ,
					{ 209 ,  {18.7 }} ,
					{ 211 ,  {18.9 }} ,
					{ 212 ,  {18.9 }} ,
					{ 213 ,  {16. }} ,
					{ 219 ,  {24. }} ,
					{ 220 ,  {26.6 }} ,
					{ 222 ,  {29.4 }} ,
					{ 223 ,  {28.6 }} ,
					{ 227 ,  {30.1 }} ,
					{ 228 ,  {31.2 }} ,
					{ 231 ,  {30.8 }} ,
					{ 233 ,  {31.6 }} ,
					{ 234 ,  {32. }} ,
					{ 235 ,  {33.1 }} ,
					{ 237 ,  {35.1 }} ,
					{ 238 ,  {32.4 }} ,
					{ 241 ,  {26.6 }} ,
					{ 242 ,  {27.9 }} ,
					{ 243 ,  {22.8 }} ,
					{ 247 ,  {30.1 }} ,
					{ 248 ,  {28.7 }} ,
					{ 250 ,  {26.5 }} ,
					{ 251 ,  {23.7 }} ,
					{ 254 ,  {27.1 }} ,
					{ 257 ,  {24.8 }} ,
					{ 259 ,  {23.9 }} ,
					{ 260 ,  {23.8 }} ,
					{ 261 ,  {22. }} ,
					{ 263 ,  {22. }} ,
					{ 264 ,  {21. }} ,
					{ 273 ,  {23.1 }} ,
					{ 274 ,  {23.7 }} ,
					{ 277 ,  {22.4 }} ,
					{ 278 ,  {22.5 }} ,
					{ 279 ,  {21.7 }} ,
					{ 280 ,  {19.8 }} ,
					{ 283 ,  {15.7 }} ,
					{ 284 ,  {17.3 }} ,
					{ 287 ,  {18.7 }} ,
					{ 288 ,  {18.8 }} ,
					{ 290 ,  {20.5 }} ,
					{ 291 ,  {20. }} ,
					{ 293 ,  {19.4 }} ,
					{ 295 ,  {16.6 }} ,
					{ 297 ,  {14.4 }} ,
					{ 298 ,  {15. }} ,
					{ 300 ,  {10.2 }} ,
					{ 305 ,  {16.6 }} ,
					{ 306 ,  {15.6 }} ,
					{ 308 ,  {19.1 }} ,
					{ 309 ,  {19.1 }} ,
					{ 311 ,  {14.5 }} ,
					{ 312 ,  {15.2 }} ,
					{ 315 ,  {13.8 }} ,
					{ 317 ,  {13.3 }} ,
					{ 318 ,  {13.1 }} ,
					{ 320 ,  {17.2 }} ,
					{ 321 ,  {16.3 }} ,
					{ 322 ,  {27.5 }} ,
					{ 327 ,  {15.6 }} ,
					{ 329 ,  {15.6 }} ,
					{ 332 ,  {19. }} ,
					{ 333 ,  {19.4 }} ,
					{ 334 ,  {18. }} ,
					{ 337 ,  {13.5 }} ,
					{ 340 ,  {15.1 }} ,
					{ 341 ,  {14.6 }} ,
					{ 343 ,  {14.2 }} ,
					{ 344 ,  {14.1 }} ,
					{ 348 ,  {16.1 }} ,
					{ 349 ,  {16.7 }} ,
					{ 351 ,  {18.4 }} ,
					{ 352 ,  {17.8 }} ,
					{ 356 ,  {14.9 }} ,
					{ 357 ,  {15.2 }} ,
					{ 358 ,  {14.1 }} ,
					{ 359 ,  {16.7 }} ,
					{ 361 ,  {9.6 }} ,
					{ 363 ,  {12.7 }} ,
					{ 364 ,  {11.7 }} ,
					{ 367 ,  {7. }} ,
					{ 371 ,  {13.3 }} ,
					{ 373 ,  {14.4 }} ,
					{ 375 ,  {13.8 }} ,
					{ 376 ,  {14. }} ,
					{ 377 ,  {15.4 }} ,
					{ 380 ,  {9.5 }} ,
					{ 383 ,  {12.3 }} ,
					{ 385 ,  {11.3 }} ,
					{ 386 ,  {12.1 }} ,
					{ 389 ,  {12.8 }} ,
					{ 391 ,  {11.8 }} ,
					{ 392 ,  {11.8 }} ,
					{ 393 ,  {15.6 }} ,
					{ 395 ,  {13.8 }} ,
					{ 396 ,  {13.4 }} ,
					{ 400 ,  {13.8 }} ,
					{ 401 ,  {13.9 }} ,
					{ 403 ,  {13.1 }} ,
					{ 405 ,  {10.2 }} ,
					{ 406 ,  {10.5 }} ,
					{ 409 ,  {10.4 }} ,
					{ 413 ,  {5.6 }} ,
					{ 414 ,  {7.2 }} ,
					{ 415 ,  {7. }} ,
					{ 418 ,  {7.4 }} ,
					{ 419 ,  {8.4 }} ,
					{ 420 ,  {10.2 }} ,
					{ 421 ,  {10.8 }} ,
					{ 427 ,  {33.4 }} ,
					{ 432 ,  {34.9 }} ,
					{ 433 ,  {34.7 }} ,
					{ 436 ,  {37.9 }} ,
					{ 437 ,  {37.3 }} ,
					{ 440 ,  {36.1 }} ,
					{ 441 ,  {36. }} ,
					{ 442 ,  {36.2 }} ,
					{ 443 ,  {33.8 }} ,
					{ 444 ,  {33.4 }} ,
					{ 445 ,  {31. }} ,
					{ 449 ,  {29. }} ,
					{ 450 ,  {29.8 }} ,
					{ 453 ,  {29.6 }} ,
					{ 455 ,  {32.7 }} ,
					{ 456 ,  {31.5 }} ,
					{ 459 ,  {32.9 }} ,
					{ 461 ,  {34.6 }} ,
					{ 462 ,  {34.9 }} ,
					{ 463 ,  {37. }} ,
					{ 464 ,  {23.6 }} ,
					{ 466 ,  {17.8 }} ,
					{ 467 ,  {15. }} ,
					{ 471 ,  {43.1 }} ,
					{ 472 ,  {42.3 }} ,
					{ 474 ,  {50. }} ,
					{ 478 ,  {46.7 }} ,
					{ 480 ,  {45.4 }} ,
					{ 481 ,  {46. }} ,
					{ 483 ,  {38.7 }} ,
					{ 485 ,  {44.8 }} ,
					{ 487 ,  {42.8 }} ,
					{ 488 ,  {41.7 }} ,
					{ 490 ,  {50. }} ,
					{ 491 ,  {50. }} ,
					{ 492 ,  {21.9 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 0.9147497415542603) ? ( (scaler_output_14 <= 0.30391107499599457) ? ( (scaler_output_9 <= -1.2385239005088806) ? ( 3 ) : ( (scaler_output_7 <= 0.32838211953639984) ? ( (scaler_output_14 <= -0.1871645823121071) ? ( (scaler_output_7 <= -0.5214259922504425) ? ( (scaler_output_4 <= -0.7852467596530914) ? ( (scaler_output_10 <= -0.8087483942508698) ? ( 9 ) : ( (scaler_output_14 <= -0.5750027298927307) ? ( 11 ) : ( (scaler_output_8 <= -1.0371108949184418) ? ( (scaler_output_12 <= -0.8810988366603851) ? ( 14 ) : ( 15 ) ) : ( (scaler_output_7 <= -0.5681654512882233) ? ( 17 ) : ( 18 ) ) ) ) ) : ( (scaler_output_8 <= -1.430245816707611) ? ( (scaler_output_3 <= -0.24243199080228806) ? ( 21 ) : ( 22 ) ) : ( (scaler_output_2 <= -0.4054461270570755) ? ( (scaler_output_11 <= -0.2020308431237936) ? ( 25 ) : ( 26 ) ) : ( 27 ) ) ) ) : ( (scaler_output_6 <= -0.35264822840690613) ? ( (scaler_output_8 <= -0.8894630074501038) ? ( (scaler_output_4 <= -0.8358499705791473) ? ( (scaler_output_14 <= -0.8596034049987793) ? ( (scaler_output_11 <= -0.3639995753765106) ? ( (scaler_output_10 <= -0.5223402976989746) ? ( 34 ) : ( 35 ) ) : ( (scaler_output_7 <= 0.1860392652451992) ? ( 37 ) : ( 38 ) ) ) : ( (scaler_output_12 <= -0.8118720650672913) ? ( (scaler_output_6 <= -1.3864756226539612) ? ( 41 ) : ( 42 ) ) : ( 43 ) ) ) : ( (scaler_output_11 <= -0.7232756614685059) ? ( (scaler_output_14 <= -0.7828728258609772) ? ( (scaler_output_8 <= -1.7486672401428223) ? ( (scaler_output_9 <= 0.5995625704526901) ? ( 48 ) : ( 49 ) ) : ( 50 ) ) : ( 51 ) ) : ( (scaler_output_14 <= -0.9056417346000671) ? ( (scaler_output_6 <= -0.7805849611759186) ? ( 54 ) : ( 55 ) ) : ( (scaler_output_13 <= 0.3878816217184067) ? ( 57 ) : ( 58 ) ) ) ) ) : ( (scaler_output_2 <= -0.38157235085964203) ? ( (scaler_output_8 <= 0.2063337191939354) ? ( (scaler_output_2 <= -0.4070035070180893) ? ( (scaler_output_2 <= -0.4153109937906265) ? ( (scaler_output_2 <= -0.41807952523231506) ? ( (scaler_output_8 <= -0.4269513990730047) ? ( 65 ) : ( 66 ) ) : ( (scaler_output_14 <= -0.3852689564228058) ? ( (scaler_output_14 <= -0.6517332941293716) ? ( 69 ) : ( 70 ) ) : ( 71 ) ) ) : ( (scaler_output_14 <= -0.4564191401004791) ? ( 73 ) : ( 74 ) ) ) : ( (scaler_output_2 <= -0.3891623765230179) ? ( (scaler_output_7 <= 0.11380557157099247) ? ( 77 ) : ( 78 ) ) : ( 79 ) ) ) : ( (scaler_output_10 <= -0.579621896147728) ? ( (scaler_output_13 <= 0.4064702242612839) ? ( 82 ) : ( 83 ) ) : ( 84 ) ) ) : ( 85 ) ) ) : ( (scaler_output_8 <= 0.8289454877376556) ? ( (scaler_output_14 <= -0.8317013680934906) ? ( (scaler_output_2 <= -0.30890607833862305) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( 90 ) : ( 91 ) ) : ( 92 ) ) : ( (scaler_output_14 <= -0.5547737628221512) ? ( (scaler_output_14 <= -0.7319516241550446) ? ( 95 ) : ( 96 ) ) : ( (scaler_output_13 <= 0.3629497140645981) ? ( (scaler_output_2 <= -0.37540532648563385) ? ( 99 ) : ( 100 ) ) : ( (scaler_output_2 <= -0.3928970992565155) ? ( (scaler_output_2 <= -0.41088883578777313) ? ( 103 ) : ( 104 ) ) : ( (scaler_output_13 <= 0.40431901812553406) ? ( 106 ) : ( 107 ) ) ) ) ) ) : ( (scaler_output_8 <= 1.106452465057373) ? ( 109 ) : ( 110 ) ) ) ) ) : ( (scaler_output_9 <= -1.1376101970672607) ? ( 112 ) : ( (scaler_output_9 <= 0.9906300902366638) ? ( (scaler_output_4 <= -1.133602261543274) ? ( 115 ) : ( (scaler_output_8 <= 0.08181136101484299) ? ( (scaler_output_7 <= -0.6673097014427185) ? ( (scaler_output_13 <= 0.3951626121997833) ? ( 119 ) : ( (scaler_output_10 <= 0.45144718885421753) ? ( 121 ) : ( 122 ) ) ) : ( (scaler_output_13 <= 0.2911325991153717) ? ( 124 ) : ( (scaler_output_8 <= -0.8787896633148193) ? ( 126 ) : ( (scaler_output_12 <= 0.0650000274181366) ? ( (scaler_output_14 <= 0.07790466398000717) ? ( (scaler_output_9 <= 0.5608212798833847) ? ( 130 ) : ( 131 ) ) : ( 132 ) ) : ( (scaler_output_9 <= 0.404542351141572) ? ( (scaler_output_9 <= -0.3640021085739136) ? ( (scaler_output_11 <= -0.10779448598623276) ? ( (scaler_output_12 <= 0.7341918796300888) ? ( 137 ) : ( 138 ) ) : ( (scaler_output_6 <= 0.5583062022924423) ? ( 140 ) : ( 141 ) ) ) : ( (scaler_output_2 <= -0.1162971705198288) ? ( 143 ) : ( 144 ) ) ) : ( 145 ) ) ) ) ) ) : ( (scaler_output_7 <= -1.5454447269439697) ? ( 147 ) : ( (scaler_output_12 <= -0.14268019841983914) ? ( (scaler_output_8 <= 0.9018799960613251) ? ( (scaler_output_9 <= -0.5525734126567841) ? ( (scaler_output_13 <= -0.5187129378318787) ? ( 152 ) : ( (scaler_output_8 <= 0.7933676540851593) ? ( 154 ) : ( 155 ) ) ) : ( 156 ) ) : ( (scaler_output_8 <= 0.9997189939022064) ? ( 158 ) : ( (scaler_output_14 <= 0.14835728332400322) ? ( 160 ) : ( 161 ) ) ) ) : ( (scaler_output_8 <= 0.5158606916666031) ? ( (scaler_output_8 <= 0.24191153049468994) ? ( (scaler_output_4 <= 0.0405392125248909) ? ( (scaler_output_13 <= 0.39312173426151276) ? ( 166 ) : ( 167 ) ) : ( 168 ) ) : ( (scaler_output_8 <= 0.4215794950723648) ? ( (scaler_output_14 <= -0.12019972130656242) ? ( 171 ) : ( 172 ) ) : ( 173 ) ) ) : ( (scaler_output_13 <= 0.36410804092884064) ? ( (scaler_output_9 <= -0.701519638299942) ? ( (scaler_output_9 <= -0.851755678653717) ? ( 177 ) : ( (scaler_output_14 <= 0.21671724319458008) ? ( 179 ) : ( 180 ) ) ) : ( 181 ) ) : ( (scaler_output_13 <= 0.37067197263240814) ? ( 183 ) : ( (scaler_output_2 <= -0.4022195041179657) ? ( (scaler_output_8 <= 0.9143322110176086) ? ( 186 ) : ( 187 ) ) : ( (scaler_output_14 <= 0.239736407995224) ? ( (scaler_output_2 <= -0.3496679365634918) ? ( (scaler_output_9 <= -0.6703259646892548) ? ( 191 ) : ( (scaler_output_8 <= 0.7488954067230225) ? ( 193 ) : ( 194 ) ) ) : ( (scaler_output_14 <= 0.1790495067834854) ? ( 196 ) : ( 197 ) ) ) : ( 198 ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_8 <= 0.7222120463848114) ? ( (scaler_output_14 <= 0.02419326640665531) ? ( (scaler_output_4 <= -0.844650536775589) ? ( 202 ) : ( 203 ) ) : ( (scaler_output_7 <= -0.8946333825588226) ? ( 205 ) : ( (scaler_output_8 <= -1.0068697929382324) ? ( 207 ) : ( (scaler_output_7 <= -0.6864303946495056) ? ( 209 ) : ( (scaler_output_8 <= -0.09251993894577026) ? ( 211 ) : ( 212 ) ) ) ) ) ) : ( 213 ) ) ) ) ) : ( (scaler_output_14 <= -0.7793850898742676) ? ( (scaler_output_12 <= -0.027302297297865152) ? ( (scaler_output_3 <= 0.28469639271497726) ? ( (scaler_output_14 <= -1.0423616766929626) ? ( (scaler_output_4 <= -0.9348562657833099) ? ( 219 ) : ( 220 ) ) : ( (scaler_output_13 <= 0.3921840190887451) ? ( 222 ) : ( 223 ) ) ) : ( (scaler_output_13 <= 0.4179433137178421) ? ( (scaler_output_13 <= 0.375470831990242) ? ( (scaler_output_12 <= -0.5118895024061203) ? ( 227 ) : ( 228 ) ) : ( (scaler_output_4 <= -0.8886533379554749) ? ( (scaler_output_8 <= -1.3057234287261963) ? ( 231 ) : ( (scaler_output_14 <= -1.0200400650501251) ? ( 233 ) : ( 234 ) ) ) : ( 235 ) ) ) : ( (scaler_output_11 <= -1.0059846937656403) ? ( 237 ) : ( 238 ) ) ) ) : ( (scaler_output_8 <= -0.3326701819896698) ? ( (scaler_output_10 <= -0.8087483942508698) ? ( 241 ) : ( 242 ) ) : ( 243 ) ) ) : ( (scaler_output_9 <= -0.1471988670527935) ? ( (scaler_output_11 <= -0.35516492277383804) ? ( (scaler_output_8 <= 0.5372073799371719) ? ( 247 ) : ( 248 ) ) : ( (scaler_output_6 <= -0.2382492944598198) ? ( 250 ) : ( 251 ) ) ) : ( (scaler_output_14 <= -0.3043530806899071) ? ( (scaler_output_7 <= 0.36520713567733765) ? ( 254 ) : ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_8 <= -1.0033120065927505) ? ( 257 ) : ( (scaler_output_2 <= -0.39950595796108246) ? ( 259 ) : ( 260 ) ) ) : ( 261 ) ) ) : ( (scaler_output_12 <= 0.18037793040275574) ? ( 263 ) : ( 264 ) ) ) ) ) ) ) : ( (scaler_output_6 <= 0.4142483025789261) ? ( (scaler_output_7 <= 0.4466470703482628) ? ( (scaler_output_12 <= 0.5957383960485458) ? ( (scaler_output_9 <= 0.8361186385154724) ? ( (scaler_output_8 <= 0.8769755363464355) ? ( (scaler_output_13 <= 0.4157921075820923) ? ( (scaler_output_8 <= -1.2078844904899597) ? ( (scaler_output_4 <= -0.12373792380094528) ? ( 273 ) : ( 274 ) ) : ( (scaler_output_7 <= -0.6389828026294708) ? ( (scaler_output_2 <= -0.39484694600105286) ? ( 277 ) : ( 278 ) ) : ( 279 ) ) ) : ( 280 ) ) : ( (scaler_output_13 <= 0.17452631145715714) ? ( (scaler_output_9 <= -0.9406075179576874) ? ( 283 ) : ( 284 ) ) : ( (scaler_output_14 <= 0.7154659330844879) ? ( (scaler_output_12 <= 0.01884886622428894) ? ( 287 ) : ( 288 ) ) : ( (scaler_output_9 <= -0.40073707699775696) ? ( 290 ) : ( 291 ) ) ) ) ) : ( (scaler_output_8 <= 0.20989149063825607) ? ( 293 ) : ( (scaler_output_14 <= 0.9763499200344086) ? ( 295 ) : ( (scaler_output_3 <= -0.24243199080228806) ? ( 297 ) : ( 298 ) ) ) ) ) : ( (scaler_output_13 <= -3.3573092222213745) ? ( 300 ) : ( (scaler_output_8 <= 0.9570256173610687) ? ( (scaler_output_7 <= -0.24240566045045853) ? ( (scaler_output_11 <= 0.47529295086860657) ? ( (scaler_output_14 <= 0.408543661236763) ? ( 305 ) : ( 306 ) ) : ( (scaler_output_2 <= 0.2079097256064415) ? ( 308 ) : ( 309 ) ) ) : ( (scaler_output_8 <= 0.7488954067230225) ? ( 311 ) : ( 312 ) ) ) : ( (scaler_output_6 <= 0.30832336843013763) ? ( (scaler_output_14 <= 0.7838259339332581) ? ( 315 ) : ( (scaler_output_12 <= 1.011098861694336) ? ( 317 ) : ( 318 ) ) ) : ( (scaler_output_9 <= -1.0976507067680359) ? ( 320 ) : ( 321 ) ) ) ) ) ) : ( 322 ) ) : ( (scaler_output_14 <= 0.9582135677337646) ? ( (scaler_output_2 <= 1.1036638021469116) ? ( (scaler_output_2 <= 0.10874986834824085) ? ( (scaler_output_14 <= 0.35971513390541077) ? ( 327 ) : ( (scaler_output_7 <= -0.8932170569896698) ? ( 329 ) : ( (scaler_output_7 <= -0.15246763825416565) ? ( (scaler_output_6 <= 1.7700874507427216) ? ( 332 ) : ( 333 ) ) : ( 334 ) ) ) ) : ( (scaler_output_7 <= -0.1425532065331936) ? ( (scaler_output_8 <= 0.7097598165273666) ? ( 337 ) : ( (scaler_output_6 <= 1.2913067936897278) ? ( (scaler_output_2 <= 0.6504456102848053) ? ( 340 ) : ( 341 ) ) : ( (scaler_output_7 <= -0.2884369269013405) ? ( 343 ) : ( 344 ) ) ) ) : ( (scaler_output_14 <= 0.7029100358486176) ? ( (scaler_output_6 <= 1.4819716215133667) ? ( (scaler_output_7 <= 0.07768873043823987) ? ( 348 ) : ( 349 ) ) : ( (scaler_output_9 <= -0.8390011489391327) ? ( 351 ) : ( 352 ) ) ) : ( (scaler_output_13 <= 0.19162562489509583) ? ( (scaler_output_14 <= 0.7440655529499054) ? ( (scaler_output_9 <= -0.7672986686229706) ? ( 356 ) : ( 357 ) ) : ( 358 ) ) : ( 359 ) ) ) ) ) : ( (scaler_output_13 <= -3.2468807697296143) ? ( 361 ) : ( (scaler_output_8 <= 0.9605834186077118) ? ( 363 ) : ( 364 ) ) ) ) : ( (scaler_output_2 <= 1.011514663696289) ? ( (scaler_output_6 <= 0.5286472290754318) ? ( 367 ) : ( (scaler_output_2 <= -0.07958811521530151) ? ( (scaler_output_2 <= -0.10461118444800377) ? ( (scaler_output_2 <= -0.39037729799747467) ? ( 371 ) : ( (scaler_output_7 <= -1.0263536423444748) ? ( 373 ) : ( (scaler_output_11 <= 0.08362310193479061) ? ( 375 ) : ( 376 ) ) ) ) : ( 377 ) ) : ( (scaler_output_2 <= 0.9369704127311707) ? ( (scaler_output_6 <= 1.1175898313522339) ? ( 380 ) : ( (scaler_output_6 <= 1.4057056903839111) ? ( (scaler_output_9 <= -1.081074595451355) ? ( 383 ) : ( (scaler_output_2 <= 0.7496617138385773) ? ( 385 ) : ( 386 ) ) ) : ( (scaler_output_8 <= 1.1046735644340515) ? ( (scaler_output_14 <= 1.507185935974121) ? ( 389 ) : ( (scaler_output_7 <= -0.8755127191543579) ? ( 391 ) : ( 392 ) ) ) : ( 393 ) ) ) ) : ( (scaler_output_7 <= -0.7529986798763275) ? ( 395 ) : ( 396 ) ) ) ) ) : ( (scaler_output_9 <= -1.1116234064102173) ? ( (scaler_output_9 <= -1.172434389591217) ? ( (scaler_output_7 <= -1.282712459564209) ? ( 400 ) : ( 401 ) ) : ( (scaler_output_8 <= 1.0762113332748413) ? ( 403 ) : ( (scaler_output_6 <= 1.11335289478302) ? ( 405 ) : ( 406 ) ) ) ) : ( (scaler_output_9 <= -0.9371203184127808) ? ( (scaler_output_6 <= 1.1175898313522339) ? ( 409 ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( (scaler_output_2 <= 4.000003099441528) ? ( (scaler_output_7 <= -0.19000082835555077) ? ( 413 ) : ( 414 ) ) : ( 415 ) ) : ( (scaler_output_8 <= 0.9570256471633911) ? ( (scaler_output_6 <= 1.312491774559021) ? ( 418 ) : ( 419 ) ) : ( 420 ) ) ) ) : ( 421 ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.6583318710327148) ? ( (scaler_output_6 <= 0.8887920081615448) ? ( (scaler_output_11 <= -0.817512035369873) ? ( (scaler_output_14 <= -0.30784084647893906) ? ( (scaler_output_7 <= 1.0082286298274994) ? ( 427 ) : ( (scaler_output_7 <= 1.5259034037590027) ? ( (scaler_output_14 <= -0.5491933673620224) ? ( (scaler_output_2 <= -0.41862261295318604) ? ( (scaler_output_4 <= -0.8761858940124512) ? ( 432 ) : ( 433 ) ) : ( (scaler_output_14 <= -1.053522527217865) ? ( (scaler_output_4 <= -1.0675980746746063) ? ( 436 ) : ( 437 ) ) : ( (scaler_output_9 <= 0.583870206028223) ? ( (scaler_output_2 <= -0.37925565242767334) ? ( 440 ) : ( 441 ) ) : ( 442 ) ) ) ) : ( 443 ) ) : ( 444 ) ) ) : ( 445 ) ) : ( (scaler_output_8 <= 0.39489611983299255) ? ( (scaler_output_13 <= 0.19636930525302887) ? ( (scaler_output_2 <= -0.1302848383784294) ? ( 449 ) : ( 450 ) ) : ( (scaler_output_3 <= 1.1529078483581543) ? ( (scaler_output_7 <= 1.132867157459259) ? ( 453 ) : ( (scaler_output_2 <= -0.39136846363544464) ? ( 455 ) : ( 456 ) ) ) : ( (scaler_output_2 <= -0.41614656150341034) ? ( (scaler_output_14 <= -1.1330432295799255) ? ( 459 ) : ( (scaler_output_3 <= 3.1167194843292236) ? ( 461 ) : ( 462 ) ) ) : ( 463 ) ) ) ) : ( 464 ) ) ) : ( (scaler_output_2 <= 1.3167717456817627) ? ( 466 ) : ( 467 ) ) ) : ( (scaler_output_12 <= 0.572662815451622) ? ( (scaler_output_7 <= 1.8814064860343933) ? ( (scaler_output_11 <= -0.5878109186887741) ? ( 471 ) : ( 472 ) ) : ( (scaler_output_12 <= -1.6656686067581177) ? ( 474 ) : ( (scaler_output_14 <= -1.1574575304985046) ? ( (scaler_output_7 <= 2.3303884267807007) ? ( (scaler_output_9 <= 0.10273274779319763) ? ( 478 ) : ( (scaler_output_2 <= -0.4181020259857178) ? ( 480 ) : ( 481 ) ) ) : ( (scaler_output_2 <= -0.39691053330898285) ? ( 483 ) : ( (scaler_output_9 <= -0.21660837857052684) ? ( 485 ) : ( (scaler_output_4 <= -0.7265763580799103) ? ( 487 ) : ( 488 ) ) ) ) ) : ( (scaler_output_8 <= 0.015992403030395508) ? ( 490 ) : ( 491 ) ) ) ) ) : ( 492 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_0
		
	
		namespace EXT_SubModel_1 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 10 ,  {22. }} ,
					{ 11 ,  {22.6 }} ,
					{ 14 ,  {20.9 }} ,
					{ 15 ,  {21. }} ,
					{ 16 ,  {19.6 }} ,
					{ 21 ,  {22.2 }} ,
					{ 22 ,  {21.9 }} ,
					{ 26 ,  {24.6 }} ,
					{ 28 ,  {23.6 }} ,
					{ 30 ,  {24.1 }} ,
					{ 31 ,  {23.9 }} ,
					{ 32 ,  {23.5 }} ,
					{ 35 ,  {22. }} ,
					{ 37 ,  {22.9 }} ,
					{ 38 ,  {22.6 }} ,
					{ 39 ,  {23.7 }} ,
					{ 41 ,  {20.7 }} ,
					{ 43 ,  {23.2 }} ,
					{ 45 ,  {22.3 }} ,
					{ 47 ,  {22.2 }} ,
					{ 48 ,  {22.2 }} ,
					{ 50 ,  {23.4 }} ,
					{ 52 ,  {25. }} ,
					{ 54 ,  {24.5 }} ,
					{ 55 ,  {24.3 }} ,
					{ 60 ,  {27. }} ,
					{ 62 ,  {22.8 }} ,
					{ 65 ,  {25. }} ,
					{ 66 ,  {24.7 }} ,
					{ 67 ,  {24.3 }} ,
					{ 68 ,  {27.5 }} ,
					{ 71 ,  {25. }} ,
					{ 73 ,  {25.2 }} ,
					{ 75 ,  {23.8 }} ,
					{ 77 ,  {23. }} ,
					{ 78 ,  {23.1 }} ,
					{ 80 ,  {22.1 }} ,
					{ 81 ,  {20.4 }} ,
					{ 82 ,  {29.1 }} ,
					{ 86 ,  {19.9 }} ,
					{ 87 ,  {20.6 }} ,
					{ 88 ,  {23.1 }} ,
					{ 89 ,  {11.9 }} ,
					{ 96 ,  {28.4 }} ,
					{ 97 ,  {29.4 }} ,
					{ 99 ,  {30.8 }} ,
					{ 101 ,  {30.1 }} ,
					{ 102 ,  {29.8 }} ,
					{ 106 ,  {26.6 }} ,
					{ 107 ,  {26.6 }} ,
					{ 108 ,  {26.2 }} ,
					{ 109 ,  {29. }} ,
					{ 115 ,  {30.1 }} ,
					{ 116 ,  {31.2 }} ,
					{ 118 ,  {32. }} ,
					{ 119 ,  {33.1 }} ,
					{ 121 ,  {37. }} ,
					{ 126 ,  {34.7 }} ,
					{ 128 ,  {33.8 }} ,
					{ 129 ,  {33.4 }} ,
					{ 131 ,  {36.1 }} ,
					{ 132 ,  {34.9 }} ,
					{ 134 ,  {36. }} ,
					{ 135 ,  {37.9 }} ,
					{ 138 ,  {32.2 }} ,
					{ 139 ,  {32.7 }} ,
					{ 141 ,  {31.5 }} ,
					{ 142 ,  {31.7 }} ,
					{ 145 ,  {32.9 }} ,
					{ 146 ,  {31.6 }} ,
					{ 148 ,  {29. }} ,
					{ 150 ,  {30.3 }} ,
					{ 151 ,  {29.6 }} ,
					{ 152 ,  {26.7 }} ,
					{ 156 ,  {33.3 }} ,
					{ 158 ,  {28.5 }} ,
					{ 160 ,  {28. }} ,
					{ 161 ,  {27.9 }} ,
					{ 163 ,  {28.2 }} ,
					{ 166 ,  {23.6 }} ,
					{ 168 ,  {24. }} ,
					{ 169 ,  {23.9 }} ,
					{ 170 ,  {22. }} ,
					{ 172 ,  {30.1 }} ,
					{ 173 ,  {32.5 }} ,
					{ 176 ,  {27.1 }} ,
					{ 177 ,  {28.7 }} ,
					{ 180 ,  {22.8 }} ,
					{ 181 ,  {22. }} ,
					{ 184 ,  {23.8 }} ,
					{ 185 ,  {23.7 }} ,
					{ 186 ,  {25. }} ,
					{ 191 ,  {50. }} ,
					{ 194 ,  {43.1 }} ,
					{ 195 ,  {42.3 }} ,
					{ 197 ,  {44. }} ,
					{ 198 ,  {43.8 }} ,
					{ 200 ,  {50. }} ,
					{ 201 ,  {48.8 }} ,
					{ 203 ,  {37.6 }} ,
					{ 205 ,  {46.7 }} ,
					{ 206 ,  {44.8 }} ,
					{ 207 ,  {21.9 }} ,
					{ 214 ,  {29.6 }} ,
					{ 220 ,  {22.8 }} ,
					{ 221 ,  {22.4 }} ,
					{ 223 ,  {23.3 }} ,
					{ 224 ,  {23.1 }} ,
					{ 226 ,  {24.7 }} ,
					{ 227 ,  {24.5 }} ,
					{ 230 ,  {19.3 }} ,
					{ 231 ,  {20. }} ,
					{ 235 ,  {21. }} ,
					{ 236 ,  {21.1 }} ,
					{ 237 ,  {20.7 }} ,
					{ 240 ,  {21.7 }} ,
					{ 241 ,  {21.7 }} ,
					{ 242 ,  {22.2 }} ,
					{ 245 ,  {15.6 }} ,
					{ 250 ,  {23.8 }} ,
					{ 252 ,  {23.1 }} ,
					{ 253 ,  {22.7 }} ,
					{ 254 ,  {21.5 }} ,
					{ 256 ,  {19.4 }} ,
					{ 257 ,  {19.6 }} ,
					{ 262 ,  {20. }} ,
					{ 264 ,  {20.5 }} ,
					{ 265 ,  {20.4 }} ,
					{ 266 ,  {18.8 }} ,
					{ 269 ,  {22.8 }} ,
					{ 270 ,  {22. }} ,
					{ 272 ,  {20.6 }} ,
					{ 274 ,  {21.2 }} ,
					{ 275 ,  {21.4 }} ,
					{ 279 ,  {19.3 }} ,
					{ 280 ,  {19.2 }} ,
					{ 281 ,  {18.5 }} ,
					{ 282 ,  {16.2 }} ,
					{ 285 ,  {18.5 }} ,
					{ 286 ,  {18.3 }} ,
					{ 287 ,  {16.8 }} ,
					{ 291 ,  {19.4 }} ,
					{ 292 ,  {18.9 }} ,
					{ 296 ,  {17.4 }} ,
					{ 297 ,  {17.5 }} ,
					{ 298 ,  {17.1 }} ,
					{ 299 ,  {16.6 }} ,
					{ 301 ,  {20.1 }} ,
					{ 302 ,  {22.2 }} ,
					{ 303 ,  {27.1 }} ,
					{ 307 ,  {16.1 }} ,
					{ 308 ,  {15. }} ,
					{ 314 ,  {18.2 }} ,
					{ 318 ,  {20.6 }} ,
					{ 319 ,  {20.4 }} ,
					{ 320 ,  {21. }} ,
					{ 322 ,  {20.1 }} ,
					{ 323 ,  {19.6 }} ,
					{ 325 ,  {19.5 }} ,
					{ 327 ,  {18.7 }} ,
					{ 329 ,  {18.2 }} ,
					{ 331 ,  {18.5 }} ,
					{ 332 ,  {18.4 }} ,
					{ 335 ,  {17.5 }} ,
					{ 336 ,  {17.7 }} ,
					{ 337 ,  {18.9 }} ,
					{ 342 ,  {20.6 }} ,
					{ 343 ,  {21.4 }} ,
					{ 345 ,  {19.5 }} ,
					{ 346 ,  {20.2 }} ,
					{ 349 ,  {21.9 }} ,
					{ 350 ,  {21.7 }} ,
					{ 352 ,  {22.6 }} ,
					{ 353 ,  {22.7 }} ,
					{ 355 ,  {20.1 }} ,
					{ 356 ,  {16.8 }} ,
					{ 358 ,  {23. }} ,
					{ 359 ,  {19.2 }} ,
					{ 363 ,  {11.7 }} ,
					{ 365 ,  {12.7 }} ,
					{ 366 ,  {13.4 }} ,
					{ 368 ,  {19. }} ,
					{ 371 ,  {11.7 }} ,
					{ 375 ,  {13.9 }} ,
					{ 376 ,  {13.8 }} ,
					{ 378 ,  {14.2 }} ,
					{ 379 ,  {14.1 }} ,
					{ 380 ,  {13.1 }} ,
					{ 383 ,  {15.2 }} ,
					{ 384 ,  {14.9 }} ,
					{ 385 ,  {16.7 }} ,
					{ 388 ,  {23.2 }} ,
					{ 389 ,  {19.1 }} ,
					{ 392 ,  {13.1 }} ,
					{ 393 ,  {12.5 }} ,
					{ 395 ,  {13.6 }} ,
					{ 400 ,  {15.2 }} ,
					{ 401 ,  {15.6 }} ,
					{ 402 ,  {16.7 }} ,
					{ 403 ,  {12.6 }} ,
					{ 405 ,  {19.5 }} ,
					{ 409 ,  {18.1 }} ,
					{ 410 ,  {18. }} ,
					{ 411 ,  {17.8 }} ,
					{ 412 ,  {18.4 }} ,
					{ 414 ,  {22. }} ,
					{ 416 ,  {27.5 }} ,
					{ 418 ,  {31. }} ,
					{ 419 ,  {29.8 }} ,
					{ 424 ,  {17.8 }} ,
					{ 426 ,  {16.5 }} ,
					{ 427 ,  {15.7 }} ,
					{ 429 ,  {11.8 }} ,
					{ 432 ,  {15. }} ,
					{ 434 ,  {14.4 }} ,
					{ 435 ,  {14.6 }} ,
					{ 436 ,  {15.6 }} ,
					{ 440 ,  {13.5 }} ,
					{ 441 ,  {13.6 }} ,
					{ 442 ,  {13.3 }} ,
					{ 444 ,  {14. }} ,
					{ 445 ,  {14.4 }} ,
					{ 449 ,  {13.3 }} ,
					{ 451 ,  {13.8 }} ,
					{ 452 ,  {13.9 }} ,
					{ 454 ,  {10.2 }} ,
					{ 455 ,  {13.1 }} ,
					{ 463 ,  {7. }} ,
					{ 464 ,  {7.5 }} ,
					{ 466 ,  {8.4 }} ,
					{ 467 ,  {8.5 }} ,
					{ 468 ,  {9.5 }} ,
					{ 472 ,  {10.4 }} ,
					{ 473 ,  {10.8 }} ,
					{ 474 ,  {8.8 }} ,
					{ 476 ,  {8.4 }} ,
					{ 477 ,  {8.3 }} ,
					{ 478 ,  {12.1 }} ,
					{ 479 ,  {5.6 }} ,
					{ 481 ,  {13.3 }} ,
					{ 482 ,  {13.4 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_14 <= -0.4006150811910629) ? ( (scaler_output_7 <= 1.6059269905090332) ? ( (scaler_output_9 <= -1.1153733730316162) ? ( 3 ) : ( (scaler_output_7 <= 0.324841246008873) ? ( (scaler_output_12 <= 1.011098861694336) ? ( (scaler_output_4 <= -0.6957743763923645) ? ( (scaler_output_7 <= -0.4768110662698746) ? ( (scaler_output_13 <= 0.4211425334215164) ? ( (scaler_output_2 <= -0.4152716100215912) ? ( 10 ) : ( 11 ) ) : ( (scaler_output_12 <= 0.4803604930639267) ? ( (scaler_output_8 <= -1.0886987745761871) ? ( 14 ) : ( 15 ) ) : ( 16 ) ) ) : ( (scaler_output_4 <= -0.8072481453418732) ? ( (scaler_output_4 <= -0.8732523620128632) ? ( (scaler_output_7 <= -0.22328497469425201) ? ( (scaler_output_11 <= -0.7350552082061768) ? ( 21 ) : ( 22 ) ) : ( (scaler_output_7 <= 0.16621040552854538) ? ( (scaler_output_9 <= 1.2520025372505188) ? ( (scaler_output_14 <= -0.8044968843460083) ? ( 26 ) : ( (scaler_output_9 <= -0.051109910011291504) ? ( 28 ) : ( (scaler_output_12 <= -0.8349476605653763) ? ( 30 ) : ( 31 ) ) ) ) : ( 32 ) ) : ( (scaler_output_4 <= -0.9993937313556671) ? ( (scaler_output_8 <= -1.0566787421703339) ? ( 35 ) : ( (scaler_output_10 <= -0.9233116209506989) ? ( 37 ) : ( 38 ) ) ) : ( 39 ) ) ) ) : ( (scaler_output_13 <= 0.3439198285341263) ? ( 41 ) : ( (scaler_output_8 <= -1.1794221997261047) ? ( 43 ) : ( (scaler_output_2 <= -0.4181232750415802) ? ( 45 ) : ( (scaler_output_6 <= -0.5941570848226547) ? ( 47 ) : ( 48 ) ) ) ) ) ) : ( (scaler_output_7 <= -0.34863168001174927) ? ( 50 ) : ( (scaler_output_10 <= -0.46505866944789886) ? ( 52 ) : ( (scaler_output_13 <= 0.26548363268375397) ? ( 54 ) : ( 55 ) ) ) ) ) ) : ( (scaler_output_3 <= 0.739473819732666) ? ( (scaler_output_13 <= 0.41148969531059265) ? ( (scaler_output_6 <= 0.909976989030838) ? ( (scaler_output_14 <= -0.9928355813026428) ? ( 60 ) : ( (scaler_output_7 <= -0.3309273421764374) ? ( 62 ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_9 <= 0.4840551856905222) ? ( 65 ) : ( 66 ) ) : ( 67 ) ) ) ) : ( 68 ) ) : ( (scaler_output_2 <= -0.38090740144252777) ? ( (scaler_output_14 <= -0.9056417346000671) ? ( 71 ) : ( (scaler_output_11 <= -0.8881892561912537) ? ( 73 ) : ( (scaler_output_2 <= -0.4023457467556) ? ( 75 ) : ( (scaler_output_7 <= 0.06352526228874922) ? ( 77 ) : ( 78 ) ) ) ) ) : ( (scaler_output_9 <= -0.06646791100502014) ? ( 80 ) : ( 81 ) ) ) ) : ( 82 ) ) ) : ( (scaler_output_8 <= 0.38778056204319) ? ( (scaler_output_2 <= -0.3190940320491791) ? ( (scaler_output_14 <= -0.5373350083827972) ? ( 86 ) : ( 87 ) ) : ( 88 ) ) : ( 89 ) ) ) : ( (scaler_output_4 <= -0.36648671329021454) ? ( (scaler_output_13 <= 0.4116000235080719) ? ( (scaler_output_7 <= 0.6753870844841003) ? ( (scaler_output_4 <= -0.9847261309623718) ? ( (scaler_output_9 <= 0.07094193249940872) ? ( (scaler_output_11 <= -0.8646301627159119) ? ( 96 ) : ( 97 ) ) : ( (scaler_output_10 <= -0.6369035243988037) ? ( 99 ) : ( (scaler_output_14 <= -1.1295554637908936) ? ( 101 ) : ( 102 ) ) ) ) : ( (scaler_output_8 <= -0.2330522984266281) ? ( (scaler_output_10 <= -0.5223402827978134) ? ( (scaler_output_8 <= -1.3644268363714218) ? ( 106 ) : ( 107 ) ) : ( 108 ) ) : ( 109 ) ) ) : ( (scaler_output_14 <= -0.41526365280151367) ? ( (scaler_output_9 <= 1.6663578152656555) ? ( (scaler_output_7 <= 0.8687184453010559) ? ( (scaler_output_13 <= 0.37850457429885864) ? ( (scaler_output_12 <= -1.434912696480751) ? ( 115 ) : ( 116 ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( 118 ) : ( 119 ) ) ) : ( (scaler_output_7 <= 0.9565319716930389) ? ( 121 ) : ( (scaler_output_11 <= -0.7762836217880249) ? ( (scaler_output_8 <= 0.681297555565834) ? ( (scaler_output_3 <= 0.5947718918323517) ? ( (scaler_output_10 <= -0.8087483644485474) ? ( 126 ) : ( (scaler_output_12 <= -1.181081309914589) ? ( 128 ) : ( 129 ) ) ) : ( (scaler_output_13 <= 0.40012693405151367) ? ( 131 ) : ( 132 ) ) ) : ( (scaler_output_13 <= 0.33454279601573944) ? ( 134 ) : ( 135 ) ) ) : ( (scaler_output_4 <= -0.9385231733322144) ? ( (scaler_output_7 <= 1.2256378531455994) ? ( 138 ) : ( 139 ) ) : ( (scaler_output_7 <= 1.537942349910736) ? ( 141 ) : ( 142 ) ) ) ) ) ) : ( (scaler_output_4 <= -1.3917520642280579) ? ( (scaler_output_3 <= 3.530153512954712) ? ( 145 ) : ( 146 ) ) : ( (scaler_output_6 <= -1.2890246510505676) ? ( 148 ) : ( (scaler_output_10 <= -0.579621896147728) ? ( 150 ) : ( 151 ) ) ) ) ) : ( 152 ) ) ) : ( (scaler_output_2 <= -0.4143766909837723) ? ( (scaler_output_6 <= -1.0559898018836975) ? ( (scaler_output_12 <= -1.2041568905115128) ? ( 156 ) : ( (scaler_output_2 <= -0.4197206646203995) ? ( 158 ) : ( (scaler_output_4 <= -0.8915868699550629) ? ( 160 ) : ( 161 ) ) ) ) : ( (scaler_output_11 <= -0.9411972165107727) ? ( 163 ) : ( (scaler_output_10 <= -0.4077770560979843) ? ( (scaler_output_11 <= -0.7232756614685059) ? ( 166 ) : ( (scaler_output_12 <= -0.9041744023561478) ? ( 168 ) : ( 169 ) ) ) : ( 170 ) ) ) ) : ( (scaler_output_8 <= 0.7239909321069717) ? ( 172 ) : ( 173 ) ) ) ) : ( (scaler_output_12 <= -0.46573834167793393) ? ( (scaler_output_14 <= -0.5701198875904083) ? ( 176 ) : ( 177 ) ) : ( (scaler_output_14 <= -0.820540577173233) ? ( (scaler_output_4 <= -0.010064005851745605) ? ( 180 ) : ( 181 ) ) : ( (scaler_output_7 <= 0.8588040471076965) ? ( (scaler_output_2 <= -0.044361457228660583) ? ( 184 ) : ( 185 ) ) : ( 186 ) ) ) ) ) ) ) : ( (scaler_output_12 <= 0.3188314288854599) ? ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_7 <= 2.161843180656433) ? ( (scaler_output_9 <= -0.8428943753242493) ? ( 191 ) : ( (scaler_output_12 <= -1.4349128007888794) ? ( (scaler_output_12 <= -2.1041045784950256) ? ( 194 ) : ( 195 ) ) : ( (scaler_output_2 <= -0.4180907905101776) ? ( 197 ) : ( 198 ) ) ) ) : ( (scaler_output_7 <= 2.956413745880127) ? ( 200 ) : ( 201 ) ) ) : ( (scaler_output_14 <= -1.269763171672821) ? ( 203 ) : ( (scaler_output_7 <= 2.3750033378601074) ? ( 205 ) : ( 206 ) ) ) ) : ( 207 ) ) ) : ( (scaler_output_14 <= 1.0077396929264069) ? ( (scaler_output_7 <= 0.7100875973701477) ? ( (scaler_output_12 <= 0.5726628303527832) ? ( (scaler_output_14 <= 0.8856683075428009) ? ( (scaler_output_9 <= 0.8484910130500793) ? ( (scaler_output_4 <= -1.21867436170578) ? ( 214 ) : ( (scaler_output_8 <= -0.1369922012090683) ? ( (scaler_output_9 <= 0.029883794486522675) ? ( (scaler_output_7 <= -0.5554183125495911) ? ( (scaler_output_13 <= 0.3775117099285126) ? ( (scaler_output_4 <= -0.543231338262558) ? ( 220 ) : ( 221 ) ) : ( (scaler_output_13 <= 0.3824208676815033) ? ( 223 ) : ( 224 ) ) ) : ( (scaler_output_6 <= -0.10266537964344025) ? ( 226 ) : ( 227 ) ) ) : ( (scaler_output_4 <= -0.5938345491886139) ? ( (scaler_output_4 <= -0.8666519224643707) ? ( 230 ) : ( 231 ) ) : ( (scaler_output_9 <= 0.4959976524114609) ? ( (scaler_output_8 <= -0.27396678924560547) ? ( (scaler_output_14 <= 0.03326142579317093) ? ( 235 ) : ( 236 ) ) : ( 237 ) ) : ( (scaler_output_7 <= -0.35854609310626984) ? ( (scaler_output_11 <= -0.640818864107132) ? ( 240 ) : ( 241 ) ) : ( 242 ) ) ) ) ) : ( (scaler_output_12 <= 0.34190699458122253) ? ( (scaler_output_13 <= -1.76442551612854) ? ( 245 ) : ( (scaler_output_12 <= -0.558040663599968) ? ( (scaler_output_8 <= 1.0690957307815552) ? ( (scaler_output_8 <= 0.949910044670105) ? ( (scaler_output_13 <= -0.5187129378318787) ? ( 250 ) : ( (scaler_output_8 <= 0.7933676540851593) ? ( 252 ) : ( 253 ) ) ) : ( 254 ) ) : ( (scaler_output_13 <= -0.6244528517127037) ? ( 256 ) : ( 257 ) ) ) : ( (scaler_output_2 <= -0.4070516377687454) ? ( (scaler_output_13 <= 0.28556152433156967) ? ( (scaler_output_8 <= 0.9427945017814636) ? ( (scaler_output_6 <= -0.5263651348650455) ? ( 262 ) : ( (scaler_output_11 <= -0.5642518252134323) ? ( 264 ) : ( 265 ) ) ) : ( 266 ) ) : ( (scaler_output_9 <= -0.5331310927867889) ? ( (scaler_output_6 <= 0.0837625004351139) ? ( 269 ) : ( 270 ) ) : ( (scaler_output_2 <= -0.4142954349517822) ? ( 272 ) : ( (scaler_output_9 <= -0.3378242701292038) ? ( 274 ) : ( 275 ) ) ) ) ) : ( (scaler_output_9 <= -0.22343945503234863) ? ( (scaler_output_7 <= -0.2289503701031208) ? ( (scaler_output_8 <= 0.21522817760705948) ? ( 279 ) : ( 280 ) ) : ( 281 ) ) : ( 282 ) ) ) ) ) : ( (scaler_output_14 <= 0.22160010039806366) ? ( (scaler_output_10 <= -0.46505868434906006) ? ( 285 ) : ( 286 ) ) : ( 287 ) ) ) ) ) : ( (scaler_output_7 <= -0.23957296460866928) ? ( (scaler_output_12 <= -0.8810988366603851) ? ( (scaler_output_4 <= -0.786713495850563) ? ( 291 ) : ( 292 ) ) : ( (scaler_output_4 <= -0.6591053903102875) ? ( (scaler_output_3 <= 0.48107755929231644) ? ( (scaler_output_9 <= 1.641350269317627) ? ( 296 ) : ( 297 ) ) : ( 298 ) ) : ( 299 ) ) ) : ( (scaler_output_7 <= -0.0072920843958854675) ? ( 301 ) : ( 302 ) ) ) ) : ( 303 ) ) : ( (scaler_output_14 <= 0.3185596466064453) ? ( (scaler_output_13 <= -1.670103445649147) ? ( (scaler_output_2 <= 3.1742947548627853) ? ( 307 ) : ( 308 ) ) : ( (scaler_output_8 <= 1.065537929534912) ? ( (scaler_output_2 <= 0.03767471946775913) ? ( (scaler_output_14 <= 0.24322416633367538) ? ( (scaler_output_9 <= 0.2517506405711174) ? ( (scaler_output_7 <= -0.7083837687969208) ? ( 314 ) : ( (scaler_output_13 <= 0.3509250432252884) ? ( (scaler_output_8 <= 0.6546141803264618) ? ( (scaler_output_12 <= 0.9880232810974121) ? ( 318 ) : ( 319 ) ) : ( 320 ) ) : ( (scaler_output_12 <= 1.2187790870666504) ? ( 322 ) : ( 323 ) ) ) ) : ( (scaler_output_14 <= -0.36224979162216187) ? ( 325 ) : ( (scaler_output_4 <= -0.854184478521347) ? ( 327 ) : ( (scaler_output_13 <= 0.2824174612760544) ? ( 329 ) : ( (scaler_output_2 <= -0.37395980954170227) ? ( 331 ) : ( 332 ) ) ) ) ) ) : ( (scaler_output_14 <= 0.2941453754901886) ? ( (scaler_output_2 <= -0.14435812272131443) ? ( 335 ) : ( 336 ) ) : ( 337 ) ) ) : ( (scaler_output_14 <= 0.2362486571073532) ? ( (scaler_output_6 <= 1.3675727248191833) ? ( (scaler_output_8 <= 0.2259015031158924) ? ( (scaler_output_13 <= 0.37707044184207916) ? ( 342 ) : ( 343 ) ) : ( (scaler_output_9 <= -0.5024628937244415) ? ( 345 ) : ( 346 ) ) ) : ( (scaler_output_2 <= 0.0827306229621172) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 349 ) : ( 350 ) ) : ( (scaler_output_2 <= 0.16722848638892174) ? ( 352 ) : ( 353 ) ) ) ) : ( (scaler_output_7 <= -0.7664539813995361) ? ( 355 ) : ( 356 ) ) ) ) : ( (scaler_output_7 <= 0.16408588737249374) ? ( 358 ) : ( 359 ) ) ) ) : ( (scaler_output_13 <= 0.05929900915361941) ? ( (scaler_output_13 <= -3.7743669748306274) ? ( (scaler_output_8 <= 0.4055694751441479) ? ( 363 ) : ( (scaler_output_7 <= 0.08972768485546112) ? ( 365 ) : ( 366 ) ) ) : ( (scaler_output_13 <= -3.5513036251068115) ? ( 368 ) : ( (scaler_output_8 <= 0.9979401230812073) ? ( (scaler_output_14 <= 0.39180244505405426) ? ( 371 ) : ( (scaler_output_14 <= 0.7838259339332581) ? ( (scaler_output_7 <= -0.7034265547990799) ? ( (scaler_output_4 <= 0.3133566379547119) ? ( 375 ) : ( 376 ) ) : ( (scaler_output_9 <= -0.7951962351799011) ? ( 378 ) : ( 379 ) ) ) : ( 380 ) ) ) : ( (scaler_output_2 <= 0.6617147624492645) ? ( (scaler_output_6 <= 1.4607866406440735) ? ( 383 ) : ( 384 ) ) : ( 385 ) ) ) ) ) : ( (scaler_output_8 <= 0.6848553419113159) ? ( (scaler_output_2 <= 0.8800279349088669) ? ( 388 ) : ( 389 ) ) : ( (scaler_output_9 <= -0.9796354472637177) ? ( (scaler_output_13 <= 0.3978102505207062) ? ( 392 ) : ( 393 ) ) : ( (scaler_output_12 <= 0.8034186363220215) ? ( 395 ) : ( (scaler_output_8 <= 1.024623453617096) ? ( (scaler_output_8 <= 0.9783723056316376) ? ( (scaler_output_2 <= -0.04270532727241516) ? ( (scaler_output_9 <= 0.17598774284124374) ? ( 400 ) : ( 401 ) ) : ( 402 ) ) : ( 403 ) ) : ( (scaler_output_11 <= 0.027670271694660187) ? ( 405 ) : ( (scaler_output_8 <= 1.122462511062622) ? ( (scaler_output_11 <= 0.8581281453371048) ? ( (scaler_output_8 <= 1.0904424786567688) ? ( 409 ) : ( 410 ) ) : ( 411 ) ) : ( 412 ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_6 <= -0.7339779883623123) ? ( 414 ) : ( (scaler_output_6 <= 0.4354332983493805) ? ( 416 ) : ( (scaler_output_10 <= 0.5660104155540466) ? ( 418 ) : ( 419 ) ) ) ) ) : ( (scaler_output_11 <= 0.8581281453371048) ? ( (scaler_output_12 <= 0.7572674602270126) ? ( (scaler_output_13 <= 0.33967258036136627) ? ( (scaler_output_7 <= -1.2742143273353577) ? ( 424 ) : ( (scaler_output_2 <= -0.3867594301700592) ? ( 426 ) : ( 427 ) ) ) : ( (scaler_output_7 <= -1.9611425995826721) ? ( 429 ) : ( (scaler_output_2 <= -0.02007332444190979) ? ( (scaler_output_14 <= 1.7248217463493347) ? ( 432 ) : ( (scaler_output_6 <= 0.8930290043354034) ? ( 434 ) : ( 435 ) ) ) : ( 436 ) ) ) ) : ( (scaler_output_14 <= 1.410923957824707) ? ( (scaler_output_12 <= 1.2418546676635742) ? ( (scaler_output_13 <= -0.506798543035984) ? ( 440 ) : ( 441 ) ) : ( 442 ) ) : ( (scaler_output_14 <= 2.3240177631378174) ? ( 444 ) : ( 445 ) ) ) ) : ( (scaler_output_9 <= -1.1498392820358276) ? ( (scaler_output_9 <= -1.169305443763733) ? ( (scaler_output_14 <= 1.3411688804626465) ? ( 449 ) : ( (scaler_output_7 <= -1.282712459564209) ? ( 451 ) : ( 452 ) ) ) : ( (scaler_output_13 <= 0.40751825273036957) ? ( 454 ) : ( 455 ) ) ) : ( (scaler_output_9 <= -0.8471458852291107) ? ( (scaler_output_13 <= 0.4039880633354187) ? ( (scaler_output_8 <= 1.1242413520812988) ? ( (scaler_output_2 <= 1.1141254901885986) ? ( (scaler_output_9 <= -0.9200426042079926) ? ( (scaler_output_6 <= 1.1175898313522339) ? ( (scaler_output_12 <= 0.8034186363220215) ? ( 463 ) : ( 464 ) ) : ( (scaler_output_8 <= 0.7062020003795624) ? ( 466 ) : ( 467 ) ) ) : ( 468 ) ) : ( (scaler_output_7 <= -0.6007414162158966) ? ( (scaler_output_14 <= 2.2333361506462097) ? ( (scaler_output_13 <= -1.924386739730835) ? ( 472 ) : ( 473 ) ) : ( 474 ) ) : ( (scaler_output_8 <= 0.8467343747615814) ? ( 476 ) : ( 477 ) ) ) ) : ( 478 ) ) : ( 479 ) ) : ( (scaler_output_7 <= 0.1364671289920807) ? ( 481 ) : ( 482 ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_1
		
	
		namespace EXT_SubModel_2 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 10 ,  {25. }} ,
					{ 12 ,  {24.8 }} ,
					{ 13 ,  {24.7 }} ,
					{ 16 ,  {21.9 }} ,
					{ 17 ,  {22.5 }} ,
					{ 20 ,  {22.8 }} ,
					{ 23 ,  {24.1 }} ,
					{ 24 ,  {24.2 }} ,
					{ 26 ,  {23.2 }} ,
					{ 28 ,  {23.7 }} ,
					{ 29 ,  {23.7 }} ,
					{ 31 ,  {22.6 }} ,
					{ 33 ,  {23. }} ,
					{ 34 ,  {23.1 }} ,
					{ 36 ,  {24.6 }} ,
					{ 38 ,  {20.7 }} ,
					{ 40 ,  {22.2 }} ,
					{ 41 ,  {22.1 }} ,
					{ 44 ,  {24.4 }} ,
					{ 45 ,  {22.9 }} ,
					{ 46 ,  {29.1 }} ,
					{ 48 ,  {27.9 }} ,
					{ 55 ,  {23.8 }} ,
					{ 56 ,  {21.9 }} ,
					{ 58 ,  {19.6 }} ,
					{ 59 ,  {17.4 }} ,
					{ 63 ,  {15.3 }} ,
					{ 64 ,  {16.1 }} ,
					{ 66 ,  {17.2 }} ,
					{ 67 ,  {16.8 }} ,
					{ 70 ,  {16. }} ,
					{ 71 ,  {17.5 }} ,
					{ 73 ,  {20.3 }} ,
					{ 75 ,  {20.8 }} ,
					{ 76 ,  {20.6 }} ,
					{ 81 ,  {22.8 }} ,
					{ 82 ,  {22.7 }} ,
					{ 83 ,  {21.2 }} ,
					{ 84 ,  {24.5 }} ,
					{ 88 ,  {21.7 }} ,
					{ 91 ,  {23.1 }} ,
					{ 92 ,  {22.6 }} ,
					{ 94 ,  {23.4 }} ,
					{ 95 ,  {23.2 }} ,
					{ 98 ,  {19.4 }} ,
					{ 99 ,  {18.9 }} ,
					{ 100 ,  {22.9 }} ,
					{ 104 ,  {22.5 }} ,
					{ 106 ,  {17.1 }} ,
					{ 109 ,  {19.5 }} ,
					{ 112 ,  {18.6 }} ,
					{ 113 ,  {18.5 }} ,
					{ 116 ,  {18.9 }} ,
					{ 117 ,  {19. }} ,
					{ 118 ,  {18.7 }} ,
					{ 119 ,  {19.6 }} ,
					{ 122 ,  {19.3 }} ,
					{ 124 ,  {20.3 }} ,
					{ 125 ,  {20. }} ,
					{ 127 ,  {21.1 }} ,
					{ 129 ,  {20.9 }} ,
					{ 130 ,  {20.7 }} ,
					{ 135 ,  {18.5 }} ,
					{ 136 ,  {18.7 }} ,
					{ 137 ,  {18.2 }} ,
					{ 140 ,  {19.4 }} ,
					{ 141 ,  {19.6 }} ,
					{ 142 ,  {19.2 }} ,
					{ 144 ,  {18.3 }} ,
					{ 146 ,  {16.8 }} ,
					{ 147 ,  {16.2 }} ,
					{ 148 ,  {11.9 }} ,
					{ 152 ,  {24. }} ,
					{ 154 ,  {24.3 }} ,
					{ 155 ,  {24.4 }} ,
					{ 159 ,  {20.6 }} ,
					{ 161 ,  {20.1 }} ,
					{ 162 ,  {20. }} ,
					{ 165 ,  {21.4 }} ,
					{ 166 ,  {21.5 }} ,
					{ 167 ,  {21. }} ,
					{ 170 ,  {22. }} ,
					{ 172 ,  {23.9 }} ,
					{ 173 ,  {22.9 }} ,
					{ 174 ,  {26.4 }} ,
					{ 177 ,  {18.2 }} ,
					{ 178 ,  {16.1 }} ,
					{ 184 ,  {21.7 }} ,
					{ 185 ,  {21.4 }} ,
					{ 186 ,  {23. }} ,
					{ 190 ,  {21.1 }} ,
					{ 192 ,  {20.4 }} ,
					{ 193 ,  {20.6 }} ,
					{ 195 ,  {21.4 }} ,
					{ 196 ,  {22.2 }} ,
					{ 198 ,  {19.3 }} ,
					{ 200 ,  {19.6 }} ,
					{ 201 ,  {19.5 }} ,
					{ 204 ,  {17.7 }} ,
					{ 205 ,  {18.4 }} ,
					{ 207 ,  {20.2 }} ,
					{ 208 ,  {19.2 }} ,
					{ 210 ,  {22.6 }} ,
					{ 211 ,  {22.7 }} ,
					{ 217 ,  {30.8 }} ,
					{ 219 ,  {31.6 }} ,
					{ 220 ,  {31.2 }} ,
					{ 223 ,  {29.6 }} ,
					{ 224 ,  {29.8 }} ,
					{ 225 ,  {28.5 }} ,
					{ 227 ,  {33.1 }} ,
					{ 228 ,  {32. }} ,
					{ 230 ,  {35.4 }} ,
					{ 231 ,  {34.9 }} ,
					{ 240 ,  {29.4 }} ,
					{ 241 ,  {30.1 }} ,
					{ 243 ,  {28.4 }} ,
					{ 244 ,  {28.2 }} ,
					{ 247 ,  {27.1 }} ,
					{ 249 ,  {26.6 }} ,
					{ 250 ,  {26.6 }} ,
					{ 252 ,  {27.9 }} ,
					{ 253 ,  {28. }} ,
					{ 256 ,  {24.8 }} ,
					{ 257 ,  {23.9 }} ,
					{ 258 ,  {26.5 }} ,
					{ 260 ,  {24. }} ,
					{ 261 ,  {23.9 }} ,
					{ 262 ,  {32. }} ,
					{ 264 ,  {32.5 }} ,
					{ 265 ,  {30.1 }} ,
					{ 270 ,  {24.8 }} ,
					{ 271 ,  {23.8 }} ,
					{ 273 ,  {21. }} ,
					{ 276 ,  {22. }} ,
					{ 277 ,  {22.4 }} ,
					{ 278 ,  {22.8 }} ,
					{ 280 ,  {25. }} ,
					{ 281 ,  {27.5 }} ,
					{ 282 ,  {28.7 }} ,
					{ 288 ,  {10.2 }} ,
					{ 291 ,  {15.2 }} ,
					{ 294 ,  {17.5 }} ,
					{ 298 ,  {19.4 }} ,
					{ 299 ,  {19.5 }} ,
					{ 300 ,  {19.8 }} ,
					{ 303 ,  {19. }} ,
					{ 304 ,  {19.1 }} ,
					{ 305 ,  {18.7 }} ,
					{ 308 ,  {16.6 }} ,
					{ 309 ,  {17.4 }} ,
					{ 311 ,  {18. }} ,
					{ 312 ,  {18.1 }} ,
					{ 314 ,  {13.1 }} ,
					{ 315 ,  {16.6 }} ,
					{ 317 ,  {22.4 }} ,
					{ 318 ,  {21.7 }} ,
					{ 319 ,  {27.5 }} ,
					{ 325 ,  {13.1 }} ,
					{ 327 ,  {13.5 }} ,
					{ 330 ,  {15.1 }} ,
					{ 331 ,  {15.6 }} ,
					{ 333 ,  {14.9 }} ,
					{ 334 ,  {14.2 }} ,
					{ 336 ,  {19.4 }} ,
					{ 340 ,  {15.6 }} ,
					{ 341 ,  {15.2 }} ,
					{ 342 ,  {16.7 }} ,
					{ 344 ,  {18.4 }} ,
					{ 345 ,  {17.8 }} ,
					{ 346 ,  {23.2 }} ,
					{ 348 ,  {12.5 }} ,
					{ 349 ,  {13. }} ,
					{ 352 ,  {11.7 }} ,
					{ 353 ,  {12.7 }} ,
					{ 354 ,  {10.4 }} ,
					{ 359 ,  {11.8 }} ,
					{ 362 ,  {15.6 }} ,
					{ 364 ,  {13.8 }} ,
					{ 365 ,  {14.4 }} ,
					{ 367 ,  {13.3 }} ,
					{ 369 ,  {13.8 }} ,
					{ 370 ,  {13.9 }} ,
					{ 373 ,  {15.4 }} ,
					{ 375 ,  {17.2 }} ,
					{ 376 ,  {17.8 }} ,
					{ 377 ,  {14.6 }} ,
					{ 380 ,  {10.2 }} ,
					{ 381 ,  {10.5 }} ,
					{ 382 ,  {13.1 }} ,
					{ 385 ,  {13.3 }} ,
					{ 387 ,  {17.3 }} ,
					{ 388 ,  {19.1 }} ,
					{ 396 ,  {8.4 }} ,
					{ 397 ,  {8.4 }} ,
					{ 398 ,  {8.3 }} ,
					{ 399 ,  {9.5 }} ,
					{ 400 ,  {11.8 }} ,
					{ 402 ,  {10.4 }} ,
					{ 404 ,  {11. }} ,
					{ 405 ,  {10.8 }} ,
					{ 406 ,  {14. }} ,
					{ 410 ,  {8.5 }} ,
					{ 412 ,  {7. }} ,
					{ 413 ,  {7.2 }} ,
					{ 414 ,  {5.6 }} ,
					{ 416 ,  {8.7 }} ,
					{ 417 ,  {10.2 }} ,
					{ 420 ,  {15. }} ,
					{ 425 ,  {32.9 }} ,
					{ 426 ,  {31.5 }} ,
					{ 428 ,  {29.8 }} ,
					{ 429 ,  {30.3 }} ,
					{ 433 ,  {32.7 }} ,
					{ 434 ,  {32.2 }} ,
					{ 439 ,  {34.6 }} ,
					{ 440 ,  {34.9 }} ,
					{ 442 ,  {33.8 }} ,
					{ 443 ,  {33.4 }} ,
					{ 444 ,  {36.2 }} ,
					{ 446 ,  {33.3 }} ,
					{ 447 ,  {33.4 }} ,
					{ 448 ,  {37.3 }} ,
					{ 450 ,  {23.6 }} ,
					{ 452 ,  {30.7 }} ,
					{ 453 ,  {31. }} ,
					{ 456 ,  {50. }} ,
					{ 460 ,  {38.7 }} ,
					{ 461 ,  {37.6 }} ,
					{ 463 ,  {44.8 }} ,
					{ 464 ,  {41.7 }} ,
					{ 466 ,  {45.4 }} ,
					{ 469 ,  {44. }} ,
					{ 470 ,  {43.5 }} ,
					{ 472 ,  {42.3 }} ,
					{ 474 ,  {43.1 }} ,
					{ 475 ,  {42.8 }} ,
					{ 476 ,  {50. }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 0.9614891707897186) ? ( (scaler_output_14 <= 0.30391107499599457) ? ( (scaler_output_9 <= -1.2385239005088806) ? ( 3 ) : ( (scaler_output_7 <= 0.3262576013803482) ? ( (scaler_output_14 <= -0.7054446935653687) ? ( (scaler_output_7 <= 0.2582729607820511) ? ( (scaler_output_8 <= -1.0460054278373718) ? ( (scaler_output_11 <= -0.7173858880996704) ? ( (scaler_output_14 <= -0.8596034049987793) ? ( 10 ) : ( (scaler_output_2 <= -0.41192249953746796) ? ( 12 ) : ( 13 ) ) ) : ( (scaler_output_6 <= -1.284787654876709) ? ( (scaler_output_7 <= -0.10289550200104713) ? ( 16 ) : ( 17 ) ) : ( (scaler_output_6 <= -0.9331168830394745) ? ( (scaler_output_7 <= -0.26294268667697906) ? ( 20 ) : ( (scaler_output_10 <= -0.5223402976989746) ? ( (scaler_output_7 <= -0.013665646314620972) ? ( 23 ) : ( 24 ) ) : ( (scaler_output_6 <= -1.1661517024040222) ? ( 26 ) : ( (scaler_output_13 <= 0.20607730001211166) ? ( 28 ) : ( 29 ) ) ) ) ) : ( (scaler_output_4 <= -0.8321830630302429) ? ( 31 ) : ( (scaler_output_11 <= -0.640818864107132) ? ( 33 ) : ( 34 ) ) ) ) ) ) : ( (scaler_output_12 <= -0.4195871804840863) ? ( 36 ) : ( (scaler_output_11 <= -0.8940790295600891) ? ( 38 ) : ( (scaler_output_11 <= -0.6584881842136383) ? ( 40 ) : ( 41 ) ) ) ) ) : ( (scaler_output_4 <= -0.7111753523349762) ? ( (scaler_output_14 <= -0.9328462183475494) ? ( 44 ) : ( 45 ) ) : ( 46 ) ) ) : ( (scaler_output_9 <= -1.1376101970672607) ? ( 48 ) : ( (scaler_output_7 <= -0.3762504309415817) ? ( (scaler_output_7 <= -0.38333216309547424) ? ( (scaler_output_13 <= 0.323455810546875) ? ( (scaler_output_13 <= -0.17584412544965744) ? ( (scaler_output_8 <= 0.8947644531726837) ? ( (scaler_output_10 <= 0.5660104155540466) ? ( 55 ) : ( 56 ) ) : ( (scaler_output_9 <= -0.8651551306247711) ? ( 58 ) : ( 59 ) ) ) : ( (scaler_output_13 <= 0.10248856619000435) ? ( (scaler_output_13 <= -0.07319308631122112) ? ( (scaler_output_12 <= -0.8580232416279614) ? ( 63 ) : ( 64 ) ) : ( (scaler_output_2 <= -0.156438447535038) ? ( 66 ) : ( 67 ) ) ) : ( (scaler_output_4 <= 0.3133566379547119) ? ( (scaler_output_11 <= -0.6496535241603851) ? ( 70 ) : ( 71 ) ) : ( (scaler_output_6 <= 0.23629440367221832) ? ( 73 ) : ( (scaler_output_9 <= -0.43281450495123863) ? ( 75 ) : ( 76 ) ) ) ) ) ) : ( (scaler_output_9 <= -0.6495461165904999) ? ( (scaler_output_14 <= 0.08767037466168404) ? ( (scaler_output_7 <= -0.5136360824108124) ? ( (scaler_output_14 <= -0.22064700722694397) ? ( 81 ) : ( 82 ) ) : ( 83 ) ) : ( 84 ) ) : ( (scaler_output_12 <= -0.719569742679596) ? ( (scaler_output_11 <= -0.6025353372097015) ? ( (scaler_output_6 <= -0.9839608371257782) ? ( 88 ) : ( (scaler_output_9 <= -0.3303005173802376) ? ( (scaler_output_7 <= -0.8266487121582031) ? ( 91 ) : ( 92 ) ) : ( (scaler_output_14 <= -0.4682774692773819) ? ( 94 ) : ( 95 ) ) ) ) : ( (scaler_output_7 <= -0.40882641077041626) ? ( (scaler_output_8 <= -0.38603687286376953) ? ( 98 ) : ( 99 ) ) : ( 100 ) ) ) : ( (scaler_output_8 <= -0.07650991715490818) ? ( (scaler_output_4 <= -0.721442699432373) ? ( (scaler_output_9 <= 0.3820905536413193) ? ( 104 ) : ( (scaler_output_10 <= -0.8660300076007843) ? ( 106 ) : ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_7 <= -0.598616898059845) ? ( 109 ) : ( (scaler_output_13 <= 0.41342025995254517) ? ( (scaler_output_6 <= -0.7721109539270401) ? ( 112 ) : ( 113 ) ) : ( (scaler_output_2 <= -0.4168889969587326) ? ( (scaler_output_7 <= -0.5136360824108124) ? ( 116 ) : ( 117 ) ) : ( 118 ) ) ) ) : ( 119 ) ) ) ) : ( (scaler_output_3 <= -0.24243199080228806) ? ( (scaler_output_7 <= -0.7657458186149597) ? ( 122 ) : ( (scaler_output_14 <= -0.13973113149404526) ? ( 124 ) : ( 125 ) ) ) : ( (scaler_output_13 <= 0.3487738221883774) ? ( 127 ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( 129 ) : ( 130 ) ) ) ) ) : ( (scaler_output_13 <= 0.4189913272857666) ? ( (scaler_output_8 <= 0.37710724025964737) ? ( (scaler_output_12 <= 0.8957209587097168) ? ( (scaler_output_12 <= 0.5726628303527832) ? ( 135 ) : ( 136 ) ) : ( 137 ) ) : ( (scaler_output_11 <= -0.21381039917469025) ? ( (scaler_output_2 <= -0.35456568002700806) ? ( 140 ) : ( 141 ) ) : ( 142 ) ) ) : ( (scaler_output_8 <= 0.22412262484431267) ? ( 144 ) : ( (scaler_output_9 <= -0.28577905893325806) ? ( 146 ) : ( 147 ) ) ) ) ) ) ) ) : ( 148 ) ) : ( (scaler_output_12 <= 0.43420933187007904) ? ( (scaler_output_7 <= -0.26719173789024353) ? ( (scaler_output_13 <= 0.22786513715982437) ? ( 152 ) : ( (scaler_output_8 <= -0.7418150752782822) ? ( 154 ) : ( 155 ) ) ) : ( (scaler_output_7 <= 0.04936178866773844) ? ( (scaler_output_2 <= -0.410633847117424) ? ( (scaler_output_14 <= -0.1878621242940426) ? ( 159 ) : ( (scaler_output_13 <= -0.008270859718322754) ? ( 161 ) : ( 162 ) ) ) : ( (scaler_output_12 <= -0.09652903722599149) ? ( (scaler_output_10 <= -0.6941851377487183) ? ( 165 ) : ( 166 ) ) : ( 167 ) ) ) : ( (scaler_output_7 <= 0.2476503551006317) ? ( (scaler_output_6 <= -1.1449667513370514) ? ( 170 ) : ( (scaler_output_11 <= -0.867575079202652) ? ( 172 ) : ( 173 ) ) ) : ( 174 ) ) ) ) : ( (scaler_output_13 <= 0.2569339722394943) ? ( (scaler_output_10 <= 0.5087288022041321) ? ( 177 ) : ( 178 ) ) : ( (scaler_output_6 <= 1.5878965854644775) ? ( (scaler_output_7 <= 0.10601566731929779) ? ( (scaler_output_13 <= 0.3927356153726578) ? ( (scaler_output_6 <= 0.5498322248458862) ? ( (scaler_output_4 <= 0.3441585898399353) ? ( 184 ) : ( 185 ) ) : ( 186 ) ) : ( (scaler_output_8 <= 0.4269161522388458) ? ( (scaler_output_14 <= -0.23599312454462051) ? ( (scaler_output_2 <= -0.41886383295059204) ? ( 190 ) : ( (scaler_output_7 <= -0.30968213081359863) ? ( 192 ) : ( 193 ) ) ) : ( (scaler_output_9 <= 0.17665651440620422) ? ( 195 ) : ( 196 ) ) ) : ( (scaler_output_13 <= 0.4115448594093323) ? ( 198 ) : ( (scaler_output_9 <= -0.6291961669921875) ? ( 200 ) : ( 201 ) ) ) ) ) : ( (scaler_output_13 <= 0.3777875006198883) ? ( (scaler_output_7 <= 0.19312100112438202) ? ( 204 ) : ( 205 ) ) : ( (scaler_output_4 <= 1.3217542171478271) ? ( 207 ) : ( 208 ) ) ) ) : ( (scaler_output_13 <= 0.3828621506690979) ? ( 210 ) : ( 211 ) ) ) ) ) ) ) ) : ( (scaler_output_14 <= -1.1121167540550232) ? ( (scaler_output_7 <= 0.9395357966423035) ? ( (scaler_output_4 <= -0.7111753523349762) ? ( (scaler_output_2 <= -0.42007437348365784) ? ( (scaler_output_10 <= -0.6369035243988037) ? ( 217 ) : ( (scaler_output_2 <= -0.4213680177927017) ? ( 219 ) : ( 220 ) ) ) : ( (scaler_output_3 <= 2.083134412765503) ? ( (scaler_output_14 <= -1.197217881679535) ? ( 223 ) : ( 224 ) ) : ( 225 ) ) ) : ( (scaler_output_7 <= 0.7660332918167114) ? ( 227 ) : ( 228 ) ) ) : ( (scaler_output_7 <= 0.9522829055786133) ? ( 230 ) : ( 231 ) ) ) : ( (scaler_output_14 <= -0.5791880339384079) ? ( (scaler_output_8 <= 0.9054377973079681) ? ( (scaler_output_11 <= -0.08718028478324413) ? ( (scaler_output_6 <= -0.21282730996608734) ? ( (scaler_output_11 <= -0.349275141954422) ? ( (scaler_output_9 <= 0.07003431022167206) ? ( (scaler_output_12 <= -0.3272848576307297) ? ( (scaler_output_13 <= 0.3921840190887451) ? ( 240 ) : ( 241 ) ) : ( (scaler_output_10 <= -0.579621896147728) ? ( 243 ) : ( 244 ) ) ) : ( (scaler_output_13 <= 0.40260909497737885) ? ( (scaler_output_7 <= 0.4112384021282196) ? ( 247 ) : ( (scaler_output_3 <= 0.32603979110717773) ? ( 249 ) : ( 250 ) ) ) : ( (scaler_output_6 <= -1.1492037177085876) ? ( 252 ) : ( 253 ) ) ) ) : ( (scaler_output_14 <= -0.7256736755371094) ? ( (scaler_output_8 <= -0.5674837678670883) ? ( 256 ) : ( 257 ) ) : ( 258 ) ) ) : ( (scaler_output_2 <= -0.41997626423835754) ? ( 260 ) : ( 261 ) ) ) : ( 262 ) ) : ( (scaler_output_8 <= 1.0655379891395569) ? ( 264 ) : ( 265 ) ) ) : ( (scaler_output_4 <= 0.28255464136600494) ? ( (scaler_output_10 <= -0.23593220114707947) ? ( (scaler_output_7 <= 0.39565859735012054) ? ( (scaler_output_6 <= -0.6746600046753883) ? ( 270 ) : ( 271 ) ) : ( (scaler_output_13 <= 0.30183345079421997) ? ( 273 ) : ( (scaler_output_11 <= -0.1490228921175003) ? ( (scaler_output_8 <= -0.21882117167115211) ? ( 276 ) : ( 277 ) ) : ( 278 ) ) ) ) : ( (scaler_output_8 <= -0.25973567366600037) ? ( 280 ) : ( 281 ) ) ) : ( 282 ) ) ) ) ) ) : ( (scaler_output_14 <= 1.0077396929264069) ? ( (scaler_output_6 <= 0.9226879775524139) ? ( (scaler_output_14 <= 0.9296140074729919) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_8 <= -0.24906232208013535) ? ( 288 ) : ( (scaler_output_14 <= 0.7831283807754517) ? ( (scaler_output_7 <= -1.1155834794044495) ? ( 291 ) : ( (scaler_output_12 <= 1.1726279258728027) ? ( (scaler_output_7 <= -1.0107738375663757) ? ( 294 ) : ( (scaler_output_11 <= 0.012945838272571564) ? ( (scaler_output_6 <= -0.1874053254723549) ? ( (scaler_output_4 <= -0.4764937460422516) ? ( 298 ) : ( 299 ) ) : ( 300 ) ) : ( (scaler_output_8 <= 0.7898098826408386) ? ( (scaler_output_9 <= -0.4442076086997986) ? ( 303 ) : ( 304 ) ) : ( 305 ) ) ) ) : ( (scaler_output_8 <= 0.9961612522602081) ? ( (scaler_output_12 <= 1.2418546676635742) ? ( 308 ) : ( 309 ) ) : ( (scaler_output_14 <= 0.4950399696826935) ? ( 311 ) : ( 312 ) ) ) ) ) : ( (scaler_output_13 <= 0.19168078363873065) ? ( 314 ) : ( 315 ) ) ) ) : ( (scaler_output_7 <= -0.5887024700641632) ? ( 317 ) : ( 318 ) ) ) : ( 319 ) ) : ( (scaler_output_2 <= 1.1036638021469116) ? ( (scaler_output_14 <= 0.8940389156341553) ? ( (scaler_output_14 <= 0.7838259041309357) ? ( (scaler_output_8 <= 1.044191300868988) ? ( (scaler_output_2 <= -0.05034162010997534) ? ( 325 ) : ( (scaler_output_13 <= -3.4488182067871094) ? ( 327 ) : ( (scaler_output_2 <= 0.4498104453086853) ? ( (scaler_output_4 <= 1.1523434519767761) ? ( 330 ) : ( 331 ) ) : ( (scaler_output_8 <= 0.7702420949935913) ? ( 333 ) : ( 334 ) ) ) ) ) : ( (scaler_output_2 <= -0.15517479181289673) ? ( 336 ) : ( (scaler_output_13 <= 0.089691661298275) ? ( (scaler_output_2 <= 0.6087857186794281) ? ( (scaler_output_2 <= 0.050556860864162445) ? ( 340 ) : ( 341 ) ) : ( 342 ) ) : ( (scaler_output_6 <= 1.7022954821586609) ? ( 344 ) : ( 345 ) ) ) ) ) : ( 346 ) ) : ( (scaler_output_7 <= 0.15842049568891525) ? ( 348 ) : ( 349 ) ) ) : ( (scaler_output_7 <= 0.40911389887332916) ? ( (scaler_output_14 <= 0.4371432512998581) ? ( 352 ) : ( 353 ) ) : ( 354 ) ) ) ) : ( (scaler_output_9 <= -1.0834153294563293) ? ( (scaler_output_2 <= 1.6478406190872192) ? ( (scaler_output_9 <= -1.1334781050682068) ? ( (scaler_output_7 <= -1.9753060340881348) ? ( 359 ) : ( (scaler_output_2 <= 0.445820152759552) ? ( (scaler_output_9 <= -1.1485733389854431) ? ( 362 ) : ( (scaler_output_12 <= -0.21190696954727173) ? ( 364 ) : ( 365 ) ) ) : ( (scaler_output_2 <= 0.8839551210403442) ? ( 367 ) : ( (scaler_output_9 <= -1.2230464816093445) ? ( 369 ) : ( 370 ) ) ) ) ) : ( (scaler_output_14 <= 2.2737940549850464) ? ( (scaler_output_14 <= 1.5762434005737305) ? ( 373 ) : ( (scaler_output_9 <= -1.1119338870048523) ? ( 375 ) : ( 376 ) ) ) : ( 377 ) ) ) : ( (scaler_output_7 <= 0.0033305175602436066) ? ( (scaler_output_9 <= -1.1432231664657593) ? ( 380 ) : ( 381 ) ) : ( 382 ) ) ) : ( (scaler_output_6 <= 0.35916733741760254) ? ( (scaler_output_13 <= -0.4562177062034607) ? ( 385 ) : ( (scaler_output_7 <= -0.5235505104064941) ? ( 387 ) : ( 388 ) ) ) : ( (scaler_output_8 <= 1.0530856847763062) ? ( (scaler_output_13 <= -0.4862793833017349) ? ( (scaler_output_13 <= -3.0397032499313354) ? ( (scaler_output_9 <= -0.8798204362392426) ? ( (scaler_output_9 <= -0.8985223174095154) ? ( (scaler_output_8 <= 0.8467343747615814) ? ( (scaler_output_2 <= 1.1688587665557861) ? ( 396 ) : ( 397 ) ) : ( 398 ) ) : ( 399 ) ) : ( 400 ) ) : ( (scaler_output_9 <= -0.9784650802612305) ? ( 402 ) : ( (scaler_output_8 <= 0.6937497705221176) ? ( 404 ) : ( 405 ) ) ) ) : ( 406 ) ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( (scaler_output_14 <= 1.7778356075286865) ? ( (scaler_output_14 <= 1.0454074144363403) ? ( 410 ) : ( (scaler_output_13 <= 0.1334328055381775) ? ( 412 ) : ( 413 ) ) ) : ( 414 ) ) : ( (scaler_output_13 <= -1.8451783880591393) ? ( 416 ) : ( 417 ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.611592411994934) ? ( (scaler_output_9 <= -1.0138147473335266) ? ( 420 ) : ( (scaler_output_8 <= 0.5461018532514572) ? ( (scaler_output_13 <= 0.36135008931159973) ? ( (scaler_output_14 <= -0.8310038149356842) ? ( (scaler_output_13 <= 0.3177744299173355) ? ( 425 ) : ( 426 ) ) : ( (scaler_output_9 <= 0.5259971022605896) ? ( 428 ) : ( 429 ) ) ) : ( (scaler_output_4 <= -0.9568577110767365) ? ( (scaler_output_10 <= -0.9233116209506989) ? ( (scaler_output_9 <= 1.6016058325767517) ? ( 433 ) : ( 434 ) ) : ( (scaler_output_7 <= 1.3899341225624084) ? ( (scaler_output_13 <= 0.4178881496191025) ? ( (scaler_output_6 <= -0.9415908753871918) ? ( (scaler_output_4 <= -1.2832118272781372) ? ( 439 ) : ( 440 ) ) : ( (scaler_output_13 <= 0.3898121863603592) ? ( 442 ) : ( 443 ) ) ) : ( 444 ) ) : ( (scaler_output_12 <= -1.342610374558717) ? ( 446 ) : ( 447 ) ) ) ) : ( 448 ) ) ) : ( (scaler_output_6 <= 0.11765849590301514) ? ( 450 ) : ( (scaler_output_13 <= 0.33498406410217285) ? ( 452 ) : ( 453 ) ) ) ) ) : ( (scaler_output_2 <= -0.3520721197128296) ? ( (scaler_output_2 <= -0.4223442077636719) ? ( 456 ) : ( (scaler_output_3 <= -0.08739423751831055) ? ( (scaler_output_7 <= 2.6462337970733643) ? ( (scaler_output_2 <= -0.39273522794246674) ? ( 460 ) : ( 461 ) ) : ( (scaler_output_6 <= -0.4119661897420883) ? ( 463 ) : ( 464 ) ) ) : ( (scaler_output_11 <= -1.0354335606098175) ? ( 466 ) : ( (scaler_output_7 <= 1.6937405467033386) ? ( (scaler_output_7 <= 1.6470010876655579) ? ( 469 ) : ( 470 ) ) : ( (scaler_output_14 <= -1.2976651787757874) ? ( 472 ) : ( (scaler_output_12 <= -1.0887789875268936) ? ( 474 ) : ( 475 ) ) ) ) ) ) ) : ( 476 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_2
		
	
		namespace EXT_SubModel_3 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {50. }} ,
					{ 5 ,  {27.9 }} ,
					{ 10 ,  {22.6 }} ,
					{ 13 ,  {23.4 }} ,
					{ 15 ,  {24.2 }} ,
					{ 16 ,  {24.5 }} ,
					{ 19 ,  {25.3 }} ,
					{ 21 ,  {26.4 }} ,
					{ 23 ,  {27.5 }} ,
					{ 24 ,  {27. }} ,
					{ 25 ,  {24.3 }} ,
					{ 29 ,  {23.1 }} ,
					{ 30 ,  {24.3 }} ,
					{ 34 ,  {22.6 }} ,
					{ 35 ,  {23.4 }} ,
					{ 38 ,  {21.9 }} ,
					{ 39 ,  {22.1 }} ,
					{ 40 ,  {20.9 }} ,
					{ 44 ,  {21. }} ,
					{ 45 ,  {20.9 }} ,
					{ 46 ,  {20.6 }} ,
					{ 47 ,  {19.9 }} ,
					{ 51 ,  {25. }} ,
					{ 52 ,  {25.2 }} ,
					{ 55 ,  {23.5 }} ,
					{ 57 ,  {24.7 }} ,
					{ 58 ,  {24.4 }} ,
					{ 61 ,  {23.2 }} ,
					{ 62 ,  {23.1 }} ,
					{ 63 ,  {23. }} ,
					{ 68 ,  {22. }} ,
					{ 69 ,  {21.6 }} ,
					{ 71 ,  {24.1 }} ,
					{ 73 ,  {22.9 }} ,
					{ 74 ,  {22.9 }} ,
					{ 76 ,  {24.4 }} ,
					{ 78 ,  {23.9 }} ,
					{ 79 ,  {23.6 }} ,
					{ 81 ,  {20.7 }} ,
					{ 83 ,  {22.3 }} ,
					{ 84 ,  {22.2 }} ,
					{ 88 ,  {31.6 }} ,
					{ 89 ,  {35.1 }} ,
					{ 91 ,  {28.4 }} ,
					{ 94 ,  {30.8 }} ,
					{ 95 ,  {30.1 }} ,
					{ 97 ,  {29.1 }} ,
					{ 98 ,  {29.8 }} ,
					{ 101 ,  {26.6 }} ,
					{ 103 ,  {29.4 }} ,
					{ 106 ,  {28. }} ,
					{ 107 ,  {27.9 }} ,
					{ 108 ,  {28.6 }} ,
					{ 114 ,  {23.9 }} ,
					{ 115 ,  {23.8 }} ,
					{ 116 ,  {23.7 }} ,
					{ 117 ,  {22. }} ,
					{ 118 ,  {22. }} ,
					{ 119 ,  {29. }} ,
					{ 125 ,  {22.8 }} ,
					{ 126 ,  {22.5 }} ,
					{ 129 ,  {21.1 }} ,
					{ 131 ,  {20.3 }} ,
					{ 133 ,  {20.7 }} ,
					{ 134 ,  {20.6 }} ,
					{ 135 ,  {22. }} ,
					{ 138 ,  {20.1 }} ,
					{ 139 ,  {20. }} ,
					{ 141 ,  {19.5 }} ,
					{ 142 ,  {19. }} ,
					{ 145 ,  {23.3 }} ,
					{ 146 ,  {23. }} ,
					{ 149 ,  {24.4 }} ,
					{ 150 ,  {24.4 }} ,
					{ 151 ,  {24.7 }} ,
					{ 158 ,  {20.8 }} ,
					{ 159 ,  {19.6 }} ,
					{ 161 ,  {23.1 }} ,
					{ 162 ,  {21.9 }} ,
					{ 163 ,  {15.3 }} ,
					{ 168 ,  {19.4 }} ,
					{ 170 ,  {19.3 }} ,
					{ 171 ,  {19.3 }} ,
					{ 173 ,  {18.3 }} ,
					{ 174 ,  {18.5 }} ,
					{ 176 ,  {21.8 }} ,
					{ 177 ,  {20.1 }} ,
					{ 179 ,  {15. }} ,
					{ 181 ,  {16.2 }} ,
					{ 182 ,  {16.8 }} ,
					{ 188 ,  {24.5 }} ,
					{ 189 ,  {23.8 }} ,
					{ 190 ,  {22.6 }} ,
					{ 193 ,  {23.2 }} ,
					{ 194 ,  {22.2 }} ,
					{ 199 ,  {20.8 }} ,
					{ 200 ,  {20.6 }} ,
					{ 201 ,  {21.2 }} ,
					{ 203 ,  {20.3 }} ,
					{ 204 ,  {20. }} ,
					{ 206 ,  {23. }} ,
					{ 207 ,  {21.4 }} ,
					{ 210 ,  {23. }} ,
					{ 212 ,  {21. }} ,
					{ 213 ,  {21.4 }} ,
					{ 216 ,  {18.5 }} ,
					{ 219 ,  {19.6 }} ,
					{ 223 ,  {20.1 }} ,
					{ 224 ,  {20.1 }} ,
					{ 225 ,  {20.2 }} ,
					{ 226 ,  {20.4 }} ,
					{ 229 ,  {19.4 }} ,
					{ 230 ,  {19.2 }} ,
					{ 231 ,  {19.6 }} ,
					{ 232 ,  {21.7 }} ,
					{ 235 ,  {16.8 }} ,
					{ 237 ,  {17.5 }} ,
					{ 238 ,  {17.7 }} ,
					{ 239 ,  {20. }} ,
					{ 244 ,  {17.1 }} ,
					{ 245 ,  {17.2 }} ,
					{ 246 ,  {17.5 }} ,
					{ 247 ,  {16. }} ,
					{ 249 ,  {18.7 }} ,
					{ 250 ,  {18.9 }} ,
					{ 256 ,  {21.7 }} ,
					{ 258 ,  {23.1 }} ,
					{ 259 ,  {23.7 }} ,
					{ 262 ,  {18.3 }} ,
					{ 264 ,  {19.8 }} ,
					{ 265 ,  {20.4 }} ,
					{ 267 ,  {20.5 }} ,
					{ 268 ,  {21.7 }} ,
					{ 270 ,  {15.6 }} ,
					{ 272 ,  {17.8 }} ,
					{ 273 ,  {19.3 }} ,
					{ 276 ,  {11.8 }} ,
					{ 279 ,  {14.6 }} ,
					{ 280 ,  {13.8 }} ,
					{ 281 ,  {15.6 }} ,
					{ 283 ,  {17.8 }} ,
					{ 286 ,  {14.4 }} ,
					{ 288 ,  {15.4 }} ,
					{ 289 ,  {15.7 }} ,
					{ 290 ,  {17.3 }} ,
					{ 295 ,  {8.5 }} ,
					{ 297 ,  {12.1 }} ,
					{ 298 ,  {13.3 }} ,
					{ 305 ,  {14.2 }} ,
					{ 306 ,  {13.5 }} ,
					{ 307 ,  {16.7 }} ,
					{ 308 ,  {19. }} ,
					{ 313 ,  {14.1 }} ,
					{ 315 ,  {13.4 }} ,
					{ 316 ,  {13.1 }} ,
					{ 318 ,  {14.5 }} ,
					{ 319 ,  {14.9 }} ,
					{ 321 ,  {14.9 }} ,
					{ 322 ,  {15.2 }} ,
					{ 325 ,  {13.6 }} ,
					{ 326 ,  {13.5 }} ,
					{ 327 ,  {13. }} ,
					{ 328 ,  {19.1 }} ,
					{ 334 ,  {15.2 }} ,
					{ 335 ,  {15.1 }} ,
					{ 336 ,  {15.6 }} ,
					{ 337 ,  {14.6 }} ,
					{ 338 ,  {17.4 }} ,
					{ 341 ,  {16.7 }} ,
					{ 342 ,  {17.1 }} ,
					{ 344 ,  {18.4 }} ,
					{ 345 ,  {17.8 }} ,
					{ 350 ,  {10.2 }} ,
					{ 352 ,  {12.7 }} ,
					{ 353 ,  {11.7 }} ,
					{ 354 ,  {16.3 }} ,
					{ 355 ,  {7.2 }} ,
					{ 356 ,  {17.2 }} ,
					{ 360 ,  {11. }} ,
					{ 363 ,  {7.5 }} ,
					{ 365 ,  {8.8 }} ,
					{ 366 ,  {8.4 }} ,
					{ 368 ,  {6.3 }} ,
					{ 369 ,  {7.4 }} ,
					{ 373 ,  {11.8 }} ,
					{ 375 ,  {8.3 }} ,
					{ 376 ,  {9.5 }} ,
					{ 378 ,  {10.2 }} ,
					{ 383 ,  {13.9 }} ,
					{ 384 ,  {13.8 }} ,
					{ 386 ,  {13.3 }} ,
					{ 387 ,  {13.1 }} ,
					{ 388 ,  {14.4 }} ,
					{ 391 ,  {12.3 }} ,
					{ 392 ,  {11.3 }} ,
					{ 394 ,  {12.8 }} ,
					{ 395 ,  {13.4 }} ,
					{ 396 ,  {7. }} ,
					{ 398 ,  {7. }} ,
					{ 399 ,  {5. }} ,
					{ 405 ,  {32. }} ,
					{ 407 ,  {30.1 }} ,
					{ 408 ,  {28.2 }} ,
					{ 414 ,  {35.4 }} ,
					{ 415 ,  {35.4 }} ,
					{ 416 ,  {36.1 }} ,
					{ 417 ,  {34.9 }} ,
					{ 419 ,  {33.4 }} ,
					{ 421 ,  {36.2 }} ,
					{ 422 ,  {33.4 }} ,
					{ 425 ,  {36. }} ,
					{ 427 ,  {37.9 }} ,
					{ 428 ,  {37.3 }} ,
					{ 429 ,  {33.8 }} ,
					{ 432 ,  {29. }} ,
					{ 434 ,  {34.6 }} ,
					{ 435 ,  {37. }} ,
					{ 441 ,  {29.6 }} ,
					{ 443 ,  {29.9 }} ,
					{ 444 ,  {29.8 }} ,
					{ 445 ,  {31.5 }} ,
					{ 447 ,  {26.7 }} ,
					{ 448 ,  {27.5 }} ,
					{ 449 ,  {22. }} ,
					{ 451 ,  {23.6 }} ,
					{ 452 ,  {23.9 }} ,
					{ 454 ,  {15. }} ,
					{ 455 ,  {17.8 }} ,
					{ 458 ,  {50. }} ,
					{ 460 ,  {48.8 }} ,
					{ 461 ,  {50. }} ,
					{ 464 ,  {50. }} ,
					{ 467 ,  {46.7 }} ,
					{ 468 ,  {46. }} ,
					{ 472 ,  {44. }} ,
					{ 473 ,  {43.8 }} ,
					{ 475 ,  {45.4 }} ,
					{ 476 ,  {44.8 }} ,
					{ 477 ,  {41.7 }} ,
					{ 479 ,  {42.8 }} ,
					{ 481 ,  {38.7 }} ,
					{ 482 ,  {39.8 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 0.7561188638210297) ? ( (scaler_output_14 <= 0.3185596466064453) ? ( (scaler_output_9 <= -1.1631909012794495) ? ( (scaler_output_14 <= -0.2959824725985527) ? ( 4 ) : ( 5 ) ) : ( (scaler_output_14 <= -0.4096832275390625) ? ( (scaler_output_7 <= 0.3439619392156601) ? ( (scaler_output_13 <= 0.2968691438436508) ? ( (scaler_output_2 <= -0.41445043683052063) ? ( 10 ) : ( (scaler_output_6 <= -1.0348048210144043) ? ( (scaler_output_7 <= 0.04511274769902229) ? ( 13 ) : ( (scaler_output_10 <= -0.46505866944789886) ? ( 15 ) : ( 16 ) ) ) : ( (scaler_output_8 <= 1.0121712684631348) ? ( (scaler_output_10 <= -0.6369035243988037) ? ( 19 ) : ( (scaler_output_6 <= -0.2975672781467438) ? ( 21 ) : ( (scaler_output_7 <= -1.9738897271454334) ? ( 23 ) : ( 24 ) ) ) ) : ( 25 ) ) ) ) : ( (scaler_output_7 <= -0.2225768119096756) ? ( (scaler_output_13 <= 0.3657628297805786) ? ( (scaler_output_9 <= 1.1738034039735794) ? ( 29 ) : ( 30 ) ) : ( (scaler_output_12 <= 0.11115118814632297) ? ( (scaler_output_11 <= -0.6231495440006256) ? ( (scaler_output_12 <= -0.7887964844703674) ? ( 34 ) : ( 35 ) ) : ( (scaler_output_14 <= -0.6580112725496292) ? ( (scaler_output_13 <= 0.40282972157001495) ? ( 38 ) : ( 39 ) ) : ( 40 ) ) ) : ( (scaler_output_2 <= -0.3769501894712448) ? ( (scaler_output_4 <= -0.2909485846757889) ? ( (scaler_output_11 <= -0.5524722784757614) ? ( 44 ) : ( 45 ) ) : ( 46 ) ) : ( 47 ) ) ) ) : ( (scaler_output_8 <= -1.1011509895324707) ? ( (scaler_output_11 <= -0.7497796416282654) ? ( (scaler_output_12 <= -0.004226718097925186) ? ( 51 ) : ( 52 ) ) : ( (scaler_output_14 <= -0.9209878444671631) ? ( (scaler_output_7 <= 0.052902660332620144) ? ( 55 ) : ( (scaler_output_11 <= -0.49651944637298584) ? ( 57 ) : ( 58 ) ) ) : ( (scaler_output_6 <= -0.7890589535236359) ? ( (scaler_output_7 <= 0.08972767740488052) ? ( 61 ) : ( 62 ) ) : ( 63 ) ) ) ) : ( (scaler_output_9 <= 1.215434730052948) ? ( (scaler_output_2 <= -0.41838012635707855) ? ( (scaler_output_3 <= 0.015964269638061523) ? ( (scaler_output_7 <= 0.1612531915307045) ? ( 68 ) : ( 69 ) ) : ( (scaler_output_6 <= -1.132255733013153) ? ( 71 ) : ( (scaler_output_13 <= 0.37999387085437775) ? ( 73 ) : ( 74 ) ) ) ) : ( (scaler_output_11 <= -1.0059846937656403) ? ( 76 ) : ( (scaler_output_2 <= -0.41527098417282104) ? ( 78 ) : ( 79 ) ) ) ) : ( (scaler_output_7 <= 0.01891033397987485) ? ( 81 ) : ( (scaler_output_7 <= 0.023159374482929707) ? ( 83 ) : ( 84 ) ) ) ) ) ) ) : ( (scaler_output_4 <= -1.0815322995185852) ? ( (scaler_output_12 <= -1.5041395425796509) ? ( (scaler_output_6 <= -1.0775984525680542) ? ( 88 ) : ( 89 ) ) : ( (scaler_output_3 <= 1.111564427614212) ? ( 91 ) : ( (scaler_output_11 <= -0.867575079202652) ? ( (scaler_output_9 <= 2.36171892285347) ? ( 94 ) : ( 95 ) ) : ( (scaler_output_2 <= -0.41540786623954773) ? ( 97 ) : ( 98 ) ) ) ) ) : ( (scaler_output_8 <= -1.0993720889091492) ? ( (scaler_output_8 <= -1.9461241364479065) ? ( 101 ) : ( (scaler_output_13 <= 0.3921840190887451) ? ( 103 ) : ( (scaler_output_14 <= -0.9551678597927094) ? ( (scaler_output_3 <= 1.6697003841400146) ? ( 106 ) : ( 107 ) ) : ( 108 ) ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_12 <= 1.011098861694336) ? ( (scaler_output_14 <= -0.45153626799583435) ? ( (scaler_output_12 <= 0.4111337508074939) ? ( (scaler_output_8 <= 0.14229364693164825) ? ( 114 ) : ( 115 ) ) : ( 116 ) ) : ( 117 ) ) : ( 118 ) ) : ( 119 ) ) ) ) ) : ( (scaler_output_11 <= -0.732110321521759) ? ( (scaler_output_11 <= -0.7821733951568604) ? ( (scaler_output_9 <= 0.38252048194408417) ? ( (scaler_output_4 <= -0.7713125348091125) ? ( (scaler_output_7 <= -0.724671795964241) ? ( 125 ) : ( 126 ) ) : ( (scaler_output_14 <= 0.2362486645579338) ? ( (scaler_output_7 <= -0.5823288857936859) ? ( 129 ) : ( (scaler_output_11 <= -1.1797329783439636) ? ( 131 ) : ( (scaler_output_13 <= 0.3942800611257553) ? ( 133 ) : ( 134 ) ) ) ) : ( 135 ) ) ) : ( (scaler_output_8 <= -1.0139853358268738) ? ( (scaler_output_10 <= -0.8660300076007843) ? ( 138 ) : ( 139 ) ) : ( (scaler_output_7 <= -0.527091383934021) ? ( 141 ) : ( 142 ) ) ) ) : ( (scaler_output_2 <= -0.4085371494293213) ? ( (scaler_output_7 <= -0.23886479809880257) ? ( 145 ) : ( 146 ) ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 149 ) : ( 150 ) ) : ( 151 ) ) ) ) : ( (scaler_output_9 <= 1.3405438661575317) ? ( (scaler_output_7 <= -0.6085313260555267) ? ( (scaler_output_7 <= -0.9357074201107025) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_14 <= 0.14138177409768105) ? ( (scaler_output_4 <= 1.1523434519767761) ? ( 158 ) : ( 159 ) ) : ( (scaler_output_11 <= 0.442899227142334) ? ( 161 ) : ( 162 ) ) ) : ( 163 ) ) : ( (scaler_output_8 <= 0.28994158655405045) ? ( (scaler_output_12 <= 0.6880407333374023) ? ( (scaler_output_8 <= 0.0017612762749195099) ? ( (scaler_output_2 <= -0.41729646921157837) ? ( 168 ) : ( (scaler_output_4 <= -0.639304094016552) ? ( 170 ) : ( 171 ) ) ) : ( (scaler_output_9 <= -0.006182417273521423) ? ( 173 ) : ( 174 ) ) ) : ( (scaler_output_2 <= 0.569097526371479) ? ( 176 ) : ( 177 ) ) ) : ( (scaler_output_13 <= -1.9919014442712069) ? ( 179 ) : ( (scaler_output_10 <= 0.5087288022041321) ? ( 181 ) : ( 182 ) ) ) ) ) : ( (scaler_output_14 <= 0.22090254724025726) ? ( (scaler_output_8 <= 0.5176396071910858) ? ( (scaler_output_9 <= -0.5733532905578613) ? ( (scaler_output_2 <= -0.04534825310111046) ? ( (scaler_output_11 <= -0.05184165574610233) ? ( 188 ) : ( 189 ) ) : ( 190 ) ) : ( (scaler_output_11 <= -0.6231495440006256) ? ( (scaler_output_13 <= 0.40470513701438904) ? ( 193 ) : ( 194 ) ) : ( (scaler_output_13 <= 0.4213080108165741) ? ( (scaler_output_8 <= 0.20099704712629318) ? ( (scaler_output_7 <= -0.19991525262594223) ? ( (scaler_output_11 <= 0.7432775888592005) ? ( 199 ) : ( 200 ) ) : ( 201 ) ) : ( (scaler_output_7 <= -0.2459465330466628) ? ( 203 ) : ( 204 ) ) ) : ( (scaler_output_14 <= -0.09020503982901573) ? ( 206 ) : ( 207 ) ) ) ) ) : ( (scaler_output_13 <= 0.3126998096704483) ? ( (scaler_output_14 <= -0.15019439533352852) ? ( 210 ) : ( (scaler_output_10 <= 0.5087288022041321) ? ( 212 ) : ( 213 ) ) ) : ( (scaler_output_6 <= 1.5878965854644775) ? ( (scaler_output_12 <= -0.14268019841983914) ? ( 216 ) : ( (scaler_output_8 <= 0.7951465547084808) ? ( (scaler_output_4 <= -0.38628798723220825) ? ( 219 ) : ( (scaler_output_14 <= 0.1525425836443901) ? ( (scaler_output_10 <= 0.5660104155540466) ? ( (scaler_output_12 <= 0.9649477005004883) ? ( 223 ) : ( 224 ) ) : ( 225 ) ) : ( 226 ) ) ) : ( (scaler_output_2 <= -0.3283633291721344) ? ( (scaler_output_14 <= -0.0650932164862752) ? ( 229 ) : ( 230 ) ) : ( 231 ) ) ) ) : ( 232 ) ) ) ) : ( (scaler_output_14 <= 0.2871698588132858) ? ( (scaler_output_14 <= 0.2599653825163841) ? ( 235 ) : ( (scaler_output_13 <= 0.33879002928733826) ? ( 237 ) : ( 238 ) ) ) : ( 239 ) ) ) ) : ( (scaler_output_13 <= 0.39918921887874603) ? ( (scaler_output_6 <= -0.9034578800201416) ? ( (scaler_output_7 <= -0.4860173165798187) ? ( (scaler_output_12 <= -0.2580581158399582) ? ( 244 ) : ( 245 ) ) : ( 246 ) ) : ( 247 ) ) : ( (scaler_output_3 <= 1.5663418769836426) ? ( 249 ) : ( 250 ) ) ) ) ) ) ) : ( (scaler_output_12 <= 0.572662815451622) ? ( (scaler_output_8 <= 0.9072166979312897) ? ( (scaler_output_2 <= -0.38618262112140656) ? ( (scaler_output_8 <= -0.44474033266305923) ? ( (scaler_output_4 <= -0.32321731001138687) ? ( 256 ) : ( (scaler_output_9 <= -0.2994173429906368) ? ( 258 ) : ( 259 ) ) ) : ( (scaler_output_14 <= 0.5550293028354645) ? ( (scaler_output_9 <= -0.6446735858917236) ? ( 262 ) : ( (scaler_output_10 <= -0.5223402976989746) ? ( 264 ) : ( 265 ) ) ) : ( (scaler_output_10 <= -0.7514667510986328) ? ( 267 ) : ( 268 ) ) ) ) : ( (scaler_output_14 <= 0.5647950172424316) ? ( 270 ) : ( (scaler_output_14 <= 1.1898004114627838) ? ( 272 ) : ( 273 ) ) ) ) : ( (scaler_output_9 <= -1.1114084124565125) ? ( (scaler_output_9 <= -1.1660571098327637) ? ( 276 ) : ( (scaler_output_13 <= 0.3963209539651871) ? ( (scaler_output_2 <= -0.1274437978863716) ? ( 279 ) : ( 280 ) ) : ( 281 ) ) ) : ( (scaler_output_7 <= -1.4257634282112122) ? ( 283 ) : ( (scaler_output_7 <= -0.7997381389141083) ? ( (scaler_output_4 <= 0.33169111609458923) ? ( 286 ) : ( (scaler_output_13 <= -0.030996395740658045) ? ( 288 ) : ( 289 ) ) ) : ( 290 ) ) ) ) ) : ( (scaler_output_14 <= 1.2267705798149109) ? ( (scaler_output_2 <= 1.0341317057609558) ? ( (scaler_output_9 <= -0.9892610311508179) ? ( (scaler_output_2 <= 0.6549815237522125) ? ( 295 ) : ( (scaler_output_14 <= 1.1367865204811096) ? ( 297 ) : ( 298 ) ) ) : ( (scaler_output_13 <= 0.20707017183303833) ? ( (scaler_output_14 <= 1.1918930411338806) ? ( (scaler_output_14 <= 0.6512913107872009) ? ( (scaler_output_9 <= -0.4750669002532959) ? ( (scaler_output_2 <= 0.7812374234199524) ? ( (scaler_output_14 <= 0.5152689218521118) ? ( 305 ) : ( 306 ) ) : ( 307 ) ) : ( 308 ) ) : ( (scaler_output_14 <= 0.8905511796474457) ? ( (scaler_output_8 <= 0.9908245801925659) ? ( (scaler_output_2 <= 0.5263739228248596) ? ( (scaler_output_8 <= 0.7720209956169128) ? ( 313 ) : ( (scaler_output_13 <= -1.9728716367390007) ? ( 315 ) : ( 316 ) ) ) : ( (scaler_output_7 <= 0.3382965475320816) ? ( 318 ) : ( 319 ) ) ) : ( (scaler_output_8 <= 1.047749102115631) ? ( 321 ) : ( 322 ) ) ) : ( (scaler_output_2 <= 0.1469644159078598) ? ( (scaler_output_2 <= -0.24514411389827728) ? ( 325 ) : ( 326 ) ) : ( 327 ) ) ) ) : ( 328 ) ) : ( (scaler_output_7 <= -0.1425532065331936) ? ( (scaler_output_12 <= 1.2418546676635742) ? ( (scaler_output_7 <= -0.1921253502368927) ? ( (scaler_output_9 <= 0.17598774284124374) ? ( (scaler_output_8 <= 0.942794531583786) ? ( 334 ) : ( 335 ) ) : ( 336 ) ) : ( 337 ) ) : ( 338 ) ) : ( (scaler_output_8 <= 1.0477490425109863) ? ( (scaler_output_14 <= 0.903107076883316) ? ( 341 ) : ( 342 ) ) : ( (scaler_output_14 <= 0.6233892738819122) ? ( 344 ) : ( 345 ) ) ) ) ) ) : ( (scaler_output_14 <= 1.1360889673233032) ? ( (scaler_output_14 <= 1.056568205356598) ? ( (scaler_output_14 <= 0.7796406149864197) ? ( (scaler_output_13 <= -3.262545943260193) ? ( 350 ) : ( (scaler_output_6 <= 1.2616477608680725) ? ( 352 ) : ( 353 ) ) ) : ( 354 ) ) : ( 355 ) ) : ( 356 ) ) ) : ( (scaler_output_2 <= 3.912641167640686) ? ( (scaler_output_8 <= 0.8680810630321503) ? ( (scaler_output_14 <= 1.3258227705955505) ? ( 360 ) : ( (scaler_output_13 <= -0.5117077454924583) ? ( (scaler_output_6 <= 1.1472488641738892) ? ( 363 ) : ( (scaler_output_6 <= 1.312491774559021) ? ( 365 ) : ( 366 ) ) ) : ( (scaler_output_9 <= -1.1036936044692993) ? ( 368 ) : ( 369 ) ) ) ) : ( (scaler_output_4 <= 2.0287325382232666) ? ( (scaler_output_13 <= -3.0127304792404175) ? ( (scaler_output_14 <= 1.5908920168876648) ? ( 373 ) : ( (scaler_output_9 <= -0.8985223174095154) ? ( 375 ) : ( 376 ) ) ) : ( (scaler_output_14 <= 1.3537247776985168) ? ( 378 ) : ( (scaler_output_6 <= 1.11335289478302) ? ( (scaler_output_12 <= 1.0572500228881836) ? ( (scaler_output_9 <= -1.172434389591217) ? ( (scaler_output_14 <= 2.2849549055099487) ? ( 383 ) : ( 384 ) ) : ( (scaler_output_13 <= -0.09431901574134827) ? ( 386 ) : ( 387 ) ) ) : ( 388 ) ) : ( (scaler_output_9 <= -1.0132175981998444) ? ( (scaler_output_7 <= -1.0922138094902039) ? ( 391 ) : ( 392 ) ) : ( (scaler_output_7 <= -0.24240565299987793) ? ( 394 ) : ( 395 ) ) ) ) ) ) : ( 396 ) ) ) : ( (scaler_output_13 <= -1.3432307541370392) ? ( 398 ) : ( 399 ) ) ) ) ) ) : ( (scaler_output_7 <= 1.611592411994934) ? ( (scaler_output_6 <= 0.8887920081615448) ? ( (scaler_output_11 <= -0.817512035369873) ? ( (scaler_output_7 <= 0.8665939271450043) ? ( (scaler_output_6 <= -0.8017699420452118) ? ( 405 ) : ( (scaler_output_14 <= -0.7549708187580109) ? ( 407 ) : ( 408 ) ) ) : ( (scaler_output_2 <= -0.4145510643720627) ? ( (scaler_output_8 <= -0.8681163191795349) ? ( (scaler_output_11 <= -0.9824256002902985) ? ( (scaler_output_12 <= -0.11960462527349591) ? ( (scaler_output_7 <= 1.1463224291801453) ? ( 414 ) : ( 415 ) ) : ( 416 ) ) : ( 417 ) ) : ( (scaler_output_7 <= 1.0953339636325836) ? ( 419 ) : ( (scaler_output_14 <= -0.9384266436100006) ? ( 421 ) : ( 422 ) ) ) ) : ( (scaler_output_14 <= -0.5491933673620224) ? ( (scaler_output_9 <= -0.7271720468997955) ? ( 425 ) : ( (scaler_output_3 <= 1.1529078483581543) ? ( 427 ) : ( 428 ) ) ) : ( 429 ) ) ) ) : ( (scaler_output_12 <= -1.158005803823471) ? ( (scaler_output_8 <= -1.853621780872345) ? ( 432 ) : ( (scaler_output_12 <= -2.081028997898102) ? ( 434 ) : ( 435 ) ) ) : ( (scaler_output_13 <= 0.39626578986644745) ? ( (scaler_output_3 <= 0.5741002112627029) ? ( (scaler_output_8 <= 0.2917204722762108) ? ( (scaler_output_7 <= 1.2320114374160767) ? ( (scaler_output_6 <= -0.7085560113191605) ? ( 441 ) : ( (scaler_output_12 <= -0.004226714372634888) ? ( 443 ) : ( 444 ) ) ) : ( 445 ) ) : ( (scaler_output_14 <= -0.39154691994190216) ? ( 447 ) : ( 448 ) ) ) : ( 449 ) ) : ( (scaler_output_14 <= -0.9844649732112885) ? ( 451 ) : ( 452 ) ) ) ) ) : ( (scaler_output_7 <= 1.492619276046753) ? ( 454 ) : ( 455 ) ) ) : ( (scaler_output_12 <= -1.6656686067581177) ? ( (scaler_output_14 <= -0.9921380281448364) ? ( 458 ) : ( (scaler_output_14 <= -0.8303062617778778) ? ( 460 ) : ( 461 ) ) ) : ( (scaler_output_13 <= 0.3989685922861099) ? ( (scaler_output_11 <= -1.185622751712799) ? ( 464 ) : ( (scaler_output_13 <= 0.2526315748691559) ? ( (scaler_output_9 <= 0.22626546025276184) ? ( 467 ) : ( 468 ) ) : ( (scaler_output_6 <= -0.4119661897420883) ? ( (scaler_output_8 <= -0.6101771406829357) ? ( (scaler_output_8 <= -1.149181067943573) ? ( 472 ) : ( 473 ) ) : ( (scaler_output_11 <= -0.8499057590961456) ? ( 475 ) : ( 476 ) ) ) : ( 477 ) ) ) ) : ( (scaler_output_8 <= -0.912588581442833) ? ( 479 ) : ( (scaler_output_14 <= -0.9405192732810974) ? ( 481 ) : ( 482 ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_3
		
	
		namespace EXT_SubModel_4 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {50. }} ,
					{ 11 ,  {24.6 }} ,
					{ 12 ,  {24.1 }} ,
					{ 13 ,  {23.7 }} ,
					{ 14 ,  {22.9 }} ,
					{ 16 ,  {20.7 }} ,
					{ 18 ,  {23.7 }} ,
					{ 20 ,  {23.2 }} ,
					{ 23 ,  {22.5 }} ,
					{ 24 ,  {22.9 }} ,
					{ 26 ,  {22.3 }} ,
					{ 27 ,  {22.2 }} ,
					{ 30 ,  {27.5 }} ,
					{ 36 ,  {25.3 }} ,
					{ 37 ,  {25.2 }} ,
					{ 38 ,  {25. }} ,
					{ 39 ,  {24.4 }} ,
					{ 41 ,  {24.4 }} ,
					{ 42 ,  {23.8 }} ,
					{ 46 ,  {23.4 }} ,
					{ 47 ,  {23.1 }} ,
					{ 48 ,  {24.3 }} ,
					{ 49 ,  {24.2 }} ,
					{ 50 ,  {29.1 }} ,
					{ 52 ,  {11.9 }} ,
					{ 58 ,  {18.2 }} ,
					{ 60 ,  {19.3 }} ,
					{ 61 ,  {19.4 }} ,
					{ 64 ,  {22. }} ,
					{ 68 ,  {21. }} ,
					{ 69 ,  {21.1 }} ,
					{ 70 ,  {20.9 }} ,
					{ 71 ,  {20.3 }} ,
					{ 73 ,  {24.7 }} ,
					{ 74 ,  {22.6 }} ,
					{ 76 ,  {22.8 }} ,
					{ 79 ,  {15.3 }} ,
					{ 80 ,  {16.2 }} ,
					{ 85 ,  {20.3 }} ,
					{ 86 ,  {20.1 }} ,
					{ 87 ,  {19.9 }} ,
					{ 89 ,  {19.3 }} ,
					{ 90 ,  {19.6 }} ,
					{ 94 ,  {19. }} ,
					{ 95 ,  {19.5 }} ,
					{ 97 ,  {18.5 }} ,
					{ 98 ,  {18.7 }} ,
					{ 99 ,  {17.2 }} ,
					{ 102 ,  {20.8 }} ,
					{ 104 ,  {22.7 }} ,
					{ 106 ,  {21.9 }} ,
					{ 107 ,  {21.8 }} ,
					{ 108 ,  {20.6 }} ,
					{ 111 ,  {16.1 }} ,
					{ 114 ,  {18.5 }} ,
					{ 115 ,  {19.6 }} ,
					{ 116 ,  {21.4 }} ,
					{ 122 ,  {21.6 }} ,
					{ 123 ,  {22. }} ,
					{ 124 ,  {22.9 }} ,
					{ 125 ,  {20.5 }} ,
					{ 129 ,  {23.2 }} ,
					{ 130 ,  {23.4 }} ,
					{ 132 ,  {23.9 }} ,
					{ 133 ,  {23.6 }} ,
					{ 136 ,  {24.3 }} ,
					{ 137 ,  {24.5 }} ,
					{ 138 ,  {25. }} ,
					{ 142 ,  {17.5 }} ,
					{ 143 ,  {18.2 }} ,
					{ 145 ,  {23. }} ,
					{ 147 ,  {20.8 }} ,
					{ 148 ,  {20.2 }} ,
					{ 152 ,  {20.6 }} ,
					{ 153 ,  {21.2 }} ,
					{ 156 ,  {23. }} ,
					{ 158 ,  {24.4 }} ,
					{ 159 ,  {24. }} ,
					{ 161 ,  {21.4 }} ,
					{ 163 ,  {22.2 }} ,
					{ 164 ,  {22.7 }} ,
					{ 167 ,  {22.9 }} ,
					{ 168 ,  {22.5 }} ,
					{ 172 ,  {19.4 }} ,
					{ 173 ,  {20.1 }} ,
					{ 174 ,  {18.4 }} ,
					{ 177 ,  {22.2 }} ,
					{ 178 ,  {21.7 }} ,
					{ 182 ,  {20. }} ,
					{ 183 ,  {20.1 }} ,
					{ 184 ,  {19.6 }} ,
					{ 187 ,  {21.2 }} ,
					{ 188 ,  {21.4 }} ,
					{ 189 ,  {21.7 }} ,
					{ 194 ,  {26.2 }} ,
					{ 196 ,  {29.8 }} ,
					{ 197 ,  {28. }} ,
					{ 198 ,  {22. }} ,
					{ 201 ,  {26.6 }} ,
					{ 202 ,  {29.6 }} ,
					{ 206 ,  {30.1 }} ,
					{ 207 ,  {31.2 }} ,
					{ 210 ,  {31.6 }} ,
					{ 211 ,  {32. }} ,
					{ 212 ,  {32.4 }} ,
					{ 216 ,  {34.6 }} ,
					{ 218 ,  {32.2 }} ,
					{ 220 ,  {33.3 }} ,
					{ 221 ,  {33.4 }} ,
					{ 222 ,  {30.3 }} ,
					{ 225 ,  {35.4 }} ,
					{ 226 ,  {36.1 }} ,
					{ 228 ,  {37. }} ,
					{ 229 ,  {37.3 }} ,
					{ 233 ,  {29.8 }} ,
					{ 235 ,  {29. }} ,
					{ 236 ,  {28.4 }} ,
					{ 238 ,  {31.5 }} ,
					{ 239 ,  {31.7 }} ,
					{ 242 ,  {32.5 }} ,
					{ 244 ,  {26.6 }} ,
					{ 245 ,  {28.2 }} ,
					{ 250 ,  {29.9 }} ,
					{ 252 ,  {26.7 }} ,
					{ 253 ,  {24.8 }} ,
					{ 257 ,  {22. }} ,
					{ 258 ,  {22.4 }} ,
					{ 260 ,  {22.8 }} ,
					{ 262 ,  {23.6 }} ,
					{ 264 ,  {23.8 }} ,
					{ 266 ,  {24. }} ,
					{ 267 ,  {23.9 }} ,
					{ 269 ,  {26.5 }} ,
					{ 270 ,  {25. }} ,
					{ 272 ,  {22.8 }} ,
					{ 273 ,  {22. }} ,
					{ 274 ,  {15. }} ,
					{ 282 ,  {14.6 }} ,
					{ 284 ,  {15.7 }} ,
					{ 286 ,  {15.4 }} ,
					{ 287 ,  {15.2 }} ,
					{ 289 ,  {16.8 }} ,
					{ 291 ,  {17.2 }} ,
					{ 293 ,  {17.3 }} ,
					{ 294 ,  {17.4 }} ,
					{ 297 ,  {14.2 }} ,
					{ 298 ,  {14. }} ,
					{ 300 ,  {12.5 }} ,
					{ 301 ,  {11. }} ,
					{ 303 ,  {7. }} ,
					{ 306 ,  {13.8 }} ,
					{ 308 ,  {13.3 }} ,
					{ 309 ,  {13.4 }} ,
					{ 310 ,  {15.6 }} ,
					{ 314 ,  {10.2 }} ,
					{ 315 ,  {9.6 }} ,
					{ 319 ,  {16.7 }} ,
					{ 320 ,  {16.3 }} ,
					{ 321 ,  {17.2 }} ,
					{ 324 ,  {13.9 }} ,
					{ 326 ,  {13.1 }} ,
					{ 328 ,  {12.7 }} ,
					{ 329 ,  {12.8 }} ,
					{ 331 ,  {10.2 }} ,
					{ 332 ,  {12.1 }} ,
					{ 334 ,  {13.8 }} ,
					{ 338 ,  {12.3 }} ,
					{ 340 ,  {9.7 }} ,
					{ 342 ,  {10.8 }} ,
					{ 344 ,  {10.4 }} ,
					{ 345 ,  {10.5 }} ,
					{ 348 ,  {9.5 }} ,
					{ 349 ,  {8.7 }} ,
					{ 350 ,  {5.6 }} ,
					{ 352 ,  {6.3 }} ,
					{ 353 ,  {7.4 }} ,
					{ 354 ,  {5. }} ,
					{ 360 ,  {20. }} ,
					{ 361 ,  {21.7 }} ,
					{ 363 ,  {22. }} ,
					{ 366 ,  {23.1 }} ,
					{ 367 ,  {23.7 }} ,
					{ 368 ,  {24.4 }} ,
					{ 372 ,  {17.8 }} ,
					{ 373 ,  {18.3 }} ,
					{ 374 ,  {16.8 }} ,
					{ 378 ,  {21.7 }} ,
					{ 379 ,  {23.1 }} ,
					{ 382 ,  {19.3 }} ,
					{ 383 ,  {20.5 }} ,
					{ 384 ,  {21.7 }} ,
					{ 386 ,  {18.8 }} ,
					{ 388 ,  {19.5 }} ,
					{ 389 ,  {20. }} ,
					{ 392 ,  {18.9 }} ,
					{ 393 ,  {19.4 }} ,
					{ 396 ,  {16.6 }} ,
					{ 397 ,  {16.5 }} ,
					{ 398 ,  {15. }} ,
					{ 402 ,  {23.2 }} ,
					{ 406 ,  {19. }} ,
					{ 407 ,  {19.1 }} ,
					{ 408 ,  {20. }} ,
					{ 409 ,  {17.5 }} ,
					{ 412 ,  {13.5 }} ,
					{ 413 ,  {14.9 }} ,
					{ 414 ,  {19.1 }} ,
					{ 419 ,  {17.7 }} ,
					{ 421 ,  {17.8 }} ,
					{ 422 ,  {17.8 }} ,
					{ 423 ,  {18.4 }} ,
					{ 424 ,  {12.6 }} ,
					{ 427 ,  {13.8 }} ,
					{ 429 ,  {12.7 }} ,
					{ 430 ,  {13.1 }} ,
					{ 432 ,  {19.1 }} ,
					{ 436 ,  {14.5 }} ,
					{ 437 ,  {14.1 }} ,
					{ 440 ,  {15.2 }} ,
					{ 442 ,  {14.9 }} ,
					{ 443 ,  {14.9 }} ,
					{ 444 ,  {14.1 }} ,
					{ 445 ,  {13.4 }} ,
					{ 451 ,  {45.4 }} ,
					{ 452 ,  {46. }} ,
					{ 455 ,  {44. }} ,
					{ 457 ,  {43.5 }} ,
					{ 458 ,  {43.1 }} ,
					{ 459 ,  {42.3 }} ,
					{ 460 ,  {50. }} ,
					{ 461 ,  {50. }} ,
					{ 464 ,  {33.4 }} ,
					{ 465 ,  {37.6 }} ,
					{ 468 ,  {41.7 }} ,
					{ 469 ,  {42.8 }} ,
					{ 470 ,  {50. }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 1.5818490982055664) ? ( (scaler_output_14 <= 0.19858092814683914) ? ( (scaler_output_7 <= 0.3510436713695526) ? ( (scaler_output_9 <= -1.160897970199585) ? ( 4 ) : ( (scaler_output_14 <= -0.67265984416008) ? ( (scaler_output_4 <= -0.8072481453418732) ? ( (scaler_output_9 <= 1.215434730052948) ? ( (scaler_output_12 <= -0.281133696436882) ? ( (scaler_output_7 <= 0.14000799227505922) ? ( (scaler_output_3 <= 1.2045871019363403) ? ( 11 ) : ( 12 ) ) : ( 13 ) ) : ( 14 ) ) : ( (scaler_output_2 <= -0.41941317915916443) ? ( 16 ) : ( (scaler_output_8 <= -1.9176617860794067) ? ( 18 ) : ( (scaler_output_2 <= -0.41888071596622467) ? ( 20 ) : ( (scaler_output_4 <= -1.0705316066741943) ? ( (scaler_output_8 <= -1.2665878236293793) ? ( 23 ) : ( 24 ) ) : ( (scaler_output_6 <= -1.0602267682552338) ? ( 26 ) : ( 27 ) ) ) ) ) ) ) : ( (scaler_output_3 <= 0.7808172255754471) ? ( (scaler_output_9 <= -1.019690454006195) ? ( 30 ) : ( (scaler_output_4 <= -0.47282683849334717) ? ( (scaler_output_14 <= -0.7996140420436859) ? ( (scaler_output_9 <= 1.5696478486061096) ? ( (scaler_output_11 <= -0.9883153736591339) ? ( (scaler_output_12 <= -0.07345346361398697) ? ( 36 ) : ( 37 ) ) : ( 38 ) ) : ( 39 ) ) : ( (scaler_output_6 <= -0.6407640278339386) ? ( 41 ) : ( 42 ) ) ) : ( (scaler_output_7 <= 0.04511274769902229) ? ( (scaler_output_8 <= -0.11386656761169434) ? ( (scaler_output_6 <= -0.6661860197782516) ? ( 46 ) : ( 47 ) ) : ( 48 ) ) : ( 49 ) ) ) ) : ( 50 ) ) ) : ( (scaler_output_14 <= -0.65033820271492) ? ( 52 ) : ( (scaler_output_7 <= -0.4357369989156723) ? ( (scaler_output_2 <= -0.21362590789794922) ? ( (scaler_output_8 <= -0.8574429452419281) ? ( (scaler_output_4 <= -1.0969332456588745) ? ( (scaler_output_14 <= -0.504550114274025) ? ( 58 ) : ( (scaler_output_8 <= -1.401783525943756) ? ( 60 ) : ( 61 ) ) ) : ( (scaler_output_7 <= -0.5823289155960083) ? ( (scaler_output_14 <= -0.5847684442996979) ? ( 64 ) : ( (scaler_output_11 <= -0.2020308431237936) ? ( (scaler_output_11 <= -0.640818864107132) ? ( (scaler_output_14 <= -0.2429686188697815) ? ( 68 ) : ( 69 ) ) : ( 70 ) ) : ( 71 ) ) ) : ( (scaler_output_13 <= 0.40580831468105316) ? ( 73 ) : ( 74 ) ) ) ) : ( (scaler_output_12 <= -2.1041045784950256) ? ( 76 ) : ( (scaler_output_7 <= -0.8393958508968353) ? ( (scaler_output_7 <= -1.332284539937973) ? ( 79 ) : ( 80 ) ) : ( (scaler_output_9 <= 0.377385213971138) ? ( (scaler_output_14 <= 0.11906015127897263) ? ( (scaler_output_9 <= -0.009215787053108215) ? ( (scaler_output_14 <= -0.13484828174114227) ? ( 85 ) : ( 86 ) ) : ( 87 ) ) : ( (scaler_output_9 <= -0.20736491680145264) ? ( 89 ) : ( 90 ) ) ) : ( (scaler_output_14 <= -0.058815259486436844) ? ( (scaler_output_8 <= -0.5496948510408401) ? ( (scaler_output_14 <= -0.39852242171764374) ? ( 94 ) : ( 95 ) ) : ( (scaler_output_7 <= -0.5207178145647049) ? ( 97 ) : ( 98 ) ) ) : ( 99 ) ) ) ) ) ) : ( (scaler_output_7 <= -0.6184457540512085) ? ( (scaler_output_14 <= -0.323884516954422) ? ( 102 ) : ( (scaler_output_10 <= 0.5660104155540466) ? ( 104 ) : ( (scaler_output_9 <= -0.4273209869861603) ? ( 106 ) : ( 107 ) ) ) ) : ( 108 ) ) ) : ( (scaler_output_9 <= -0.7264077067375183) ? ( (scaler_output_8 <= 0.41446392238140106) ? ( 111 ) : ( (scaler_output_10 <= 0.6232920289039612) ? ( (scaler_output_2 <= -0.3407217562198639) ? ( 114 ) : ( 115 ) ) : ( 116 ) ) ) : ( (scaler_output_14 <= -0.34062571823596954) ? ( (scaler_output_2 <= -0.4183451384305954) ? ( (scaler_output_14 <= -0.4661848396062851) ? ( (scaler_output_12 <= -0.1888313628733158) ? ( (scaler_output_11 <= -0.8822995126247406) ? ( 122 ) : ( 123 ) ) : ( 124 ) ) : ( 125 ) ) : ( (scaler_output_12 <= 0.0650000274181366) ? ( (scaler_output_8 <= -0.7204683721065521) ? ( (scaler_output_3 <= -0.06672252714633942) ? ( 129 ) : ( 130 ) ) : ( (scaler_output_8 <= -0.06405767798423767) ? ( 132 ) : ( 133 ) ) ) : ( (scaler_output_4 <= -0.40462249517440796) ? ( (scaler_output_14 <= -0.4585117697715759) ? ( 136 ) : ( 137 ) ) : ( 138 ) ) ) ) : ( (scaler_output_14 <= -0.28900696337223053) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_7 <= -0.34579898416996) ? ( 142 ) : ( 143 ) ) : ( (scaler_output_12 <= -0.39651159942150116) ? ( 145 ) : ( (scaler_output_13 <= 0.35313139855861664) ? ( 147 ) : ( 148 ) ) ) ) : ( (scaler_output_14 <= -0.14321888983249664) ? ( (scaler_output_14 <= -0.2736608535051346) ? ( (scaler_output_6 <= -0.259434275329113) ? ( 152 ) : ( 153 ) ) : ( (scaler_output_14 <= -0.20320824533700943) ? ( (scaler_output_9 <= -0.13461151719093323) ? ( 156 ) : ( (scaler_output_2 <= -0.3891623765230179) ? ( 158 ) : ( 159 ) ) ) : ( (scaler_output_10 <= -0.6369035243988037) ? ( 161 ) : ( (scaler_output_12 <= -0.004226714372634888) ? ( 163 ) : ( 164 ) ) ) ) ) : ( (scaler_output_7 <= -0.3996201604604721) ? ( (scaler_output_7 <= -0.404577374458313) ? ( 167 ) : ( 168 ) ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_12 <= 0.5957383955828846) ? ( (scaler_output_7 <= -0.24453017860651016) ? ( 172 ) : ( 173 ) ) : ( 174 ) ) : ( (scaler_output_8 <= -0.28819791600108147) ? ( (scaler_output_14 <= 0.037446729838848114) ? ( 177 ) : ( 178 ) ) : ( (scaler_output_6 <= -0.12385037168860435) ? ( (scaler_output_2 <= -0.1630629301071167) ? ( (scaler_output_14 <= -0.06648831814527512) ? ( 182 ) : ( 183 ) ) : ( 184 ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_12 <= 0.5957383960485458) ? ( 187 ) : ( 188 ) ) : ( 189 ) ) ) ) ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_8 <= -0.7560462057590485) ? ( (scaler_output_7 <= 0.6066942811012268) ? ( (scaler_output_4 <= -0.7346435189247131) ? ( (scaler_output_3 <= 0.47074170410633087) ? ( 194 ) : ( (scaler_output_7 <= 0.4848884493112564) ? ( 196 ) : ( 197 ) ) ) : ( 198 ) ) : ( (scaler_output_8 <= -1.9229985475540161) ? ( (scaler_output_9 <= 1.66905677318573) ? ( 201 ) : ( 202 ) ) : ( (scaler_output_7 <= 0.8687184453010559) ? ( (scaler_output_13 <= 0.3536278307437897) ? ( (scaler_output_14 <= -1.1260677576065063) ? ( 206 ) : ( 207 ) ) : ( (scaler_output_12 <= -0.9272499829530716) ? ( (scaler_output_6 <= -1.1025967597961426) ? ( 210 ) : ( 211 ) ) : ( 212 ) ) ) : ( (scaler_output_10 <= -0.6941851377487183) ? ( (scaler_output_2 <= -0.4187457263469696) ? ( (scaler_output_13 <= 0.3865026384592056) ? ( 216 ) : ( (scaler_output_10 <= -0.9233116209506989) ? ( 218 ) : ( (scaler_output_4 <= -1.3396820425987244) ? ( 220 ) : ( 221 ) ) ) ) : ( 222 ) ) : ( (scaler_output_11 <= -1.0030398070812225) ? ( (scaler_output_14 <= -0.9426119029521942) ? ( 225 ) : ( 226 ) ) : ( (scaler_output_4 <= -0.9957268536090851) ? ( 228 ) : ( 229 ) ) ) ) ) ) ) : ( (scaler_output_13 <= 0.35395878553390503) ? ( (scaler_output_8 <= 0.062243560794740915) ? ( (scaler_output_9 <= -0.3849252909421921) ? ( 233 ) : ( (scaler_output_12 <= -0.3272848576307297) ? ( 235 ) : ( 236 ) ) ) : ( (scaler_output_8 <= 0.22768040001392365) ? ( 238 ) : ( 239 ) ) ) : ( (scaler_output_11 <= -0.867575079202652) ? ( (scaler_output_9 <= -0.38454313576221466) ? ( 242 ) : ( (scaler_output_8 <= -0.16545445099473) ? ( 244 ) : ( 245 ) ) ) : ( (scaler_output_2 <= 1.1594757437705994) ? ( (scaler_output_14 <= -0.3755032569169998) ? ( (scaler_output_13 <= 0.36918269097805023) ? ( (scaler_output_7 <= 0.8021501302719116) ? ( 250 ) : ( (scaler_output_11 <= -0.4317319691181183) ? ( 252 ) : ( 253 ) ) ) : ( (scaler_output_11 <= -0.16963709145784378) ? ( (scaler_output_13 <= 0.39924438297748566) ? ( (scaler_output_9 <= -0.6621334552764893) ? ( 257 ) : ( 258 ) ) : ( (scaler_output_14 <= -1.0974681377410889) ? ( 260 ) : ( (scaler_output_11 <= -0.7910080552101135) ? ( 262 ) : ( (scaler_output_13 <= 0.41827426850795746) ? ( 264 ) : ( (scaler_output_12 <= -0.9041744023561478) ? ( 266 ) : ( 267 ) ) ) ) ) ) : ( (scaler_output_11 <= 0.7020491883158684) ? ( 269 ) : ( 270 ) ) ) ) : ( (scaler_output_2 <= -0.41078634560108185) ? ( 272 ) : ( 273 ) ) ) : ( 274 ) ) ) ) ) ) : ( (scaler_output_9 <= -0.8675674796104431) ? ( (scaler_output_2 <= 5.611403822898865) ? ( (scaler_output_2 <= 0.5380305349826813) ? ( (scaler_output_8 <= 1.0744324326515198) ? ( (scaler_output_7 <= -0.4605230838060379) ? ( (scaler_output_7 <= -0.968991607427597) ? ( (scaler_output_7 <= -1.5709390044212341) ? ( 282 ) : ( (scaler_output_11 <= -0.6496535185724497) ? ( 284 ) : ( (scaler_output_12 <= -0.46573835611343384) ? ( 286 ) : ( 287 ) ) ) ) : ( (scaler_output_8 <= 0.8325032889842987) ? ( 289 ) : ( (scaler_output_13 <= -0.17545800656080246) ? ( 291 ) : ( (scaler_output_12 <= 0.8034186214208603) ? ( 293 ) : ( 294 ) ) ) ) ) : ( (scaler_output_7 <= -0.16379841417074203) ? ( (scaler_output_4 <= 1.3217542171478271) ? ( 297 ) : ( 298 ) ) : ( (scaler_output_9 <= -0.9619128406047821) ? ( 300 ) : ( 301 ) ) ) ) : ( (scaler_output_2 <= -0.3970974087715149) ? ( 303 ) : ( (scaler_output_2 <= 0.03944896021857858) ? ( (scaler_output_13 <= -0.837366908788681) ? ( 306 ) : ( (scaler_output_6 <= 1.6387405395507812) ? ( 308 ) : ( 309 ) ) ) : ( 310 ) ) ) ) : ( (scaler_output_14 <= 1.5504340529441833) ? ( (scaler_output_13 <= -3.608613967895508) ? ( (scaler_output_8 <= 0.3077304810285568) ? ( 314 ) : ( 315 ) ) : ( (scaler_output_13 <= -0.1929985973984003) ? ( (scaler_output_14 <= 1.1193477511405945) ? ( (scaler_output_2 <= 2.05959016084671) ? ( 319 ) : ( 320 ) ) : ( 321 ) ) : ( (scaler_output_8 <= 1.122462511062622) ? ( (scaler_output_13 <= 0.2109313067048788) ? ( 324 ) : ( (scaler_output_9 <= -0.9868964552879333) ? ( 326 ) : ( (scaler_output_14 <= 0.9749547839164734) ? ( 328 ) : ( 329 ) ) ) ) : ( (scaler_output_9 <= -1.1021888852119446) ? ( 331 ) : ( 332 ) ) ) ) ) : ( (scaler_output_9 <= -1.1938352584838867) ? ( 334 ) : ( (scaler_output_14 <= 2.3016960620880127) ? ( (scaler_output_7 <= -0.5362976342439651) ? ( (scaler_output_2 <= 0.7988860607147217) ? ( 338 ) : ( (scaler_output_2 <= 1.0994766354560852) ? ( 340 ) : ( (scaler_output_14 <= 1.7562114596366882) ? ( 342 ) : ( (scaler_output_6 <= 1.1472488641738892) ? ( 344 ) : ( 345 ) ) ) ) ) : ( (scaler_output_14 <= 1.9508281350135803) ? ( (scaler_output_6 <= 1.3167287111282349) ? ( 348 ) : ( 349 ) ) : ( 350 ) ) ) : ( (scaler_output_14 <= 2.560487389564514) ? ( 352 ) : ( 353 ) ) ) ) ) ) : ( 354 ) ) : ( (scaler_output_2 <= -0.3479299396276474) ? ( (scaler_output_9 <= 0.8361186385154724) ? ( (scaler_output_8 <= 0.08181136101484299) ? ( (scaler_output_4 <= -0.32321731001138687) ? ( (scaler_output_14 <= 0.3213498368859291) ? ( 360 ) : ( 361 ) ) : ( (scaler_output_10 <= -0.7514667510986328) ? ( 363 ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_9 <= -0.2994173429906368) ? ( 366 ) : ( 367 ) ) : ( 368 ) ) ) ) : ( (scaler_output_8 <= 0.7293275892734528) ? ( (scaler_output_7 <= -0.455565869808197) ? ( (scaler_output_6 <= -0.07300640270113945) ? ( 372 ) : ( 373 ) ) : ( 374 ) ) : ( (scaler_output_8 <= 0.9427945017814636) ? ( (scaler_output_14 <= 0.6938418745994568) ? ( (scaler_output_11 <= -0.7026614546775818) ? ( 378 ) : ( 379 ) ) : ( (scaler_output_10 <= -0.4077770560979843) ? ( (scaler_output_4 <= 1.046736627817154) ? ( 382 ) : ( 383 ) ) : ( 384 ) ) ) : ( (scaler_output_9 <= -0.8422972857952118) ? ( 386 ) : ( (scaler_output_14 <= 0.9979739487171173) ? ( 388 ) : ( 389 ) ) ) ) ) ) : ( (scaler_output_14 <= 0.6798908710479736) ? ( (scaler_output_6 <= -1.0602267682552338) ? ( 392 ) : ( 393 ) ) : ( (scaler_output_7 <= -0.13547147065401077) ? ( (scaler_output_3 <= -0.24243199080228806) ? ( 396 ) : ( 397 ) ) : ( 398 ) ) ) ) : ( (scaler_output_8 <= 0.62437304854393) ? ( (scaler_output_2 <= 0.4853489547967911) ? ( (scaler_output_9 <= -0.6578819453716278) ? ( 402 ) : ( (scaler_output_9 <= 0.03919890522956848) ? ( (scaler_output_2 <= 0.35657888650894165) ? ( (scaler_output_9 <= -0.2919413670897484) ? ( 406 ) : ( 407 ) ) : ( 408 ) ) : ( 409 ) ) ) : ( (scaler_output_2 <= 1.0617345571517944) ? ( (scaler_output_9 <= -0.4961811453104019) ? ( 412 ) : ( 413 ) ) : ( 414 ) ) ) : ( (scaler_output_14 <= 0.6966320872306824) ? ( (scaler_output_2 <= 0.7574786245822906) ? ( (scaler_output_8 <= 1.131356954574585) ? ( (scaler_output_2 <= 0.3220990505069494) ? ( 419 ) : ( (scaler_output_9 <= -0.7320206761360168) ? ( 421 ) : ( 422 ) ) ) : ( 423 ) ) : ( 424 ) ) : ( (scaler_output_7 <= -0.43856970965862274) ? ( (scaler_output_14 <= 0.7838259339332581) ? ( 427 ) : ( (scaler_output_13 <= -1.9168300384189934) ? ( 429 ) : ( 430 ) ) ) : ( (scaler_output_7 <= -0.3210129216313362) ? ( 432 ) : ( (scaler_output_14 <= 1.1674787998199463) ? ( (scaler_output_8 <= 0.7560109794139862) ? ( (scaler_output_9 <= -0.7526572048664093) ? ( 436 ) : ( 437 ) ) : ( (scaler_output_8 <= 1.0886635780334473) ? ( (scaler_output_2 <= 0.3088507056236267) ? ( 440 ) : ( (scaler_output_2 <= 0.5633617043495178) ? ( 442 ) : ( 443 ) ) ) : ( 444 ) ) ) : ( 445 ) ) ) ) ) ) ) ) ) : ( (scaler_output_10 <= -0.4077770560979843) ? ( (scaler_output_7 <= 2.161843180656433) ? ( (scaler_output_11 <= -0.1784717533737421) ? ( (scaler_output_11 <= -1.0354335606098175) ? ( (scaler_output_2 <= -0.4181020259857178) ? ( 451 ) : ( 452 ) ) : ( (scaler_output_11 <= -0.5878109186887741) ? ( (scaler_output_6 <= -0.5899201035499573) ? ( 455 ) : ( (scaler_output_6 <= 0.48204025626182556) ? ( 457 ) : ( 458 ) ) ) : ( 459 ) ) ) : ( 460 ) ) : ( 461 ) ) : ( (scaler_output_7 <= 2.6207395792007446) ? ( (scaler_output_4 <= -0.9964601993560791) ? ( 464 ) : ( 465 ) ) : ( (scaler_output_14 <= -1.1916375160217285) ? ( (scaler_output_9 <= 1.2194235143251717) ? ( 468 ) : ( 469 ) ) : ( 470 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_4
		
	
		namespace EXT_SubModel_5 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 9 ,  {22.1 }} ,
					{ 10 ,  {24. }} ,
					{ 12 ,  {24.3 }} ,
					{ 13 ,  {25.2 }} ,
					{ 14 ,  {27. }} ,
					{ 16 ,  {27.5 }} ,
					{ 17 ,  {29.1 }} ,
					{ 23 ,  {22.9 }} ,
					{ 24 ,  {22.6 }} ,
					{ 25 ,  {23.7 }} ,
					{ 27 ,  {24.8 }} ,
					{ 28 ,  {24.1 }} ,
					{ 32 ,  {22.5 }} ,
					{ 34 ,  {22.2 }} ,
					{ 35 ,  {21.9 }} ,
					{ 37 ,  {23.1 }} ,
					{ 38 ,  {22.9 }} ,
					{ 39 ,  {20.7 }} ,
					{ 42 ,  {22.8 }} ,
					{ 43 ,  {23.1 }} ,
					{ 46 ,  {23.1 }} ,
					{ 47 ,  {23.8 }} ,
					{ 50 ,  {25. }} ,
					{ 51 ,  {24.7 }} ,
					{ 52 ,  {24.2 }} ,
					{ 55 ,  {29.6 }} ,
					{ 57 ,  {22. }} ,
					{ 58 ,  {24.4 }} ,
					{ 60 ,  {27.9 }} ,
					{ 64 ,  {15. }} ,
					{ 66 ,  {16.1 }} ,
					{ 67 ,  {17.2 }} ,
					{ 70 ,  {23.8 }} ,
					{ 71 ,  {20.8 }} ,
					{ 73 ,  {19.6 }} ,
					{ 75 ,  {17.4 }} ,
					{ 76 ,  {16.8 }} ,
					{ 81 ,  {18.2 }} ,
					{ 83 ,  {19.5 }} ,
					{ 84 ,  {19.4 }} ,
					{ 86 ,  {21.1 }} ,
					{ 87 ,  {20.9 }} ,
					{ 89 ,  {19. }} ,
					{ 93 ,  {24.7 }} ,
					{ 94 ,  {23.4 }} ,
					{ 98 ,  {21. }} ,
					{ 100 ,  {21.4 }} ,
					{ 102 ,  {22.5 }} ,
					{ 104 ,  {22.2 }} ,
					{ 105 ,  {22.3 }} ,
					{ 107 ,  {22.6 }} ,
					{ 109 ,  {22.8 }} ,
					{ 110 ,  {23.1 }} ,
					{ 111 ,  {23.9 }} ,
					{ 113 ,  {24.3 }} ,
					{ 114 ,  {24.5 }} ,
					{ 121 ,  {19.3 }} ,
					{ 124 ,  {20. }} ,
					{ 125 ,  {20.1 }} ,
					{ 126 ,  {19.9 }} ,
					{ 128 ,  {20.3 }} ,
					{ 129 ,  {20.6 }} ,
					{ 130 ,  {17.4 }} ,
					{ 133 ,  {24. }} ,
					{ 135 ,  {22.9 }} ,
					{ 136 ,  {22.6 }} ,
					{ 140 ,  {22. }} ,
					{ 141 ,  {21.7 }} ,
					{ 144 ,  {21.2 }} ,
					{ 145 ,  {20.9 }} ,
					{ 148 ,  {20.4 }} ,
					{ 149 ,  {20.4 }} ,
					{ 150 ,  {20.6 }} ,
					{ 152 ,  {23. }} ,
					{ 153 ,  {22.4 }} ,
					{ 155 ,  {11.9 }} ,
					{ 158 ,  {16.2 }} ,
					{ 161 ,  {20.4 }} ,
					{ 162 ,  {19.8 }} ,
					{ 165 ,  {18.3 }} ,
					{ 166 ,  {18.5 }} ,
					{ 170 ,  {19.3 }} ,
					{ 171 ,  {19.4 }} ,
					{ 172 ,  {19.6 }} ,
					{ 173 ,  {18.4 }} ,
					{ 177 ,  {20. }} ,
					{ 178 ,  {20.8 }} ,
					{ 180 ,  {23. }} ,
					{ 181 ,  {22.6 }} ,
					{ 183 ,  {20.6 }} ,
					{ 186 ,  {19.6 }} ,
					{ 187 ,  {19.5 }} ,
					{ 188 ,  {19.2 }} ,
					{ 190 ,  {24.4 }} ,
					{ 192 ,  {21.7 }} ,
					{ 193 ,  {22.7 }} ,
					{ 198 ,  {30.8 }} ,
					{ 200 ,  {28.6 }} ,
					{ 201 ,  {27.9 }} ,
					{ 203 ,  {32. }} ,
					{ 204 ,  {32.4 }} ,
					{ 210 ,  {29. }} ,
					{ 211 ,  {28.7 }} ,
					{ 212 ,  {30.1 }} ,
					{ 213 ,  {25.1 }} ,
					{ 216 ,  {23.9 }} ,
					{ 217 ,  {22.8 }} ,
					{ 220 ,  {26.6 }} ,
					{ 221 ,  {26.5 }} ,
					{ 222 ,  {25. }} ,
					{ 224 ,  {21. }} ,
					{ 225 ,  {22. }} ,
					{ 226 ,  {50. }} ,
					{ 231 ,  {21.7 }} ,
					{ 234 ,  {20.5 }} ,
					{ 235 ,  {20.4 }} ,
					{ 236 ,  {18.9 }} ,
					{ 237 ,  {27.1 }} ,
					{ 241 ,  {23.7 }} ,
					{ 242 ,  {23.1 }} ,
					{ 244 ,  {19.8 }} ,
					{ 245 ,  {19.4 }} ,
					{ 248 ,  {11.8 }} ,
					{ 251 ,  {14.6 }} ,
					{ 252 ,  {14.4 }} ,
					{ 254 ,  {13.8 }} ,
					{ 255 ,  {13.4 }} ,
					{ 262 ,  {15.6 }} ,
					{ 263 ,  {15.4 }} ,
					{ 264 ,  {15.2 }} ,
					{ 266 ,  {16.6 }} ,
					{ 267 ,  {16.6 }} ,
					{ 269 ,  {13.5 }} ,
					{ 270 ,  {13.3 }} ,
					{ 274 ,  {17.8 }} ,
					{ 275 ,  {19.3 }} ,
					{ 277 ,  {17.3 }} ,
					{ 278 ,  {15.7 }} ,
					{ 279 ,  {14.4 }} ,
					{ 282 ,  {18. }} ,
					{ 283 ,  {16.5 }} ,
					{ 285 ,  {19.4 }} ,
					{ 286 ,  {20. }} ,
					{ 292 ,  {17.9 }} ,
					{ 293 ,  {17.2 }} ,
					{ 294 ,  {16.3 }} ,
					{ 295 ,  {10.2 }} ,
					{ 300 ,  {14.2 }} ,
					{ 301 ,  {15.1 }} ,
					{ 303 ,  {13.6 }} ,
					{ 304 ,  {13.1 }} ,
					{ 305 ,  {9.6 }} ,
					{ 308 ,  {10.2 }} ,
					{ 309 ,  {13.1 }} ,
					{ 315 ,  {9.5 }} ,
					{ 316 ,  {8.5 }} ,
					{ 317 ,  {7. }} ,
					{ 318 ,  {12.1 }} ,
					{ 321 ,  {6.3 }} ,
					{ 322 ,  {5. }} ,
					{ 325 ,  {7.2 }} ,
					{ 326 ,  {7.5 }} ,
					{ 327 ,  {8.3 }} ,
					{ 330 ,  {12.8 }} ,
					{ 331 ,  {11.8 }} ,
					{ 334 ,  {10.2 }} ,
					{ 335 ,  {10.5 }} ,
					{ 337 ,  {7.4 }} ,
					{ 338 ,  {8.7 }} ,
					{ 343 ,  {11.7 }} ,
					{ 344 ,  {11.7 }} ,
					{ 346 ,  {12.7 }} ,
					{ 347 ,  {13.5 }} ,
					{ 351 ,  {13.4 }} ,
					{ 352 ,  {13. }} ,
					{ 353 ,  {14.5 }} ,
					{ 356 ,  {14.9 }} ,
					{ 357 ,  {15.2 }} ,
					{ 358 ,  {14.1 }} ,
					{ 361 ,  {23.2 }} ,
					{ 364 ,  {19.1 }} ,
					{ 365 ,  {18.4 }} ,
					{ 366 ,  {17.8 }} ,
					{ 368 ,  {16.1 }} ,
					{ 369 ,  {12.6 }} ,
					{ 375 ,  {28.5 }} ,
					{ 376 ,  {29.6 }} ,
					{ 379 ,  {37.3 }} ,
					{ 382 ,  {36.2 }} ,
					{ 385 ,  {35.4 }} ,
					{ 386 ,  {35.1 }} ,
					{ 387 ,  {34.7 }} ,
					{ 388 ,  {37.9 }} ,
					{ 392 ,  {32.7 }} ,
					{ 394 ,  {33.1 }} ,
					{ 395 ,  {33.3 }} ,
					{ 399 ,  {31.6 }} ,
					{ 400 ,  {31.7 }} ,
					{ 401 ,  {31.5 }} ,
					{ 402 ,  {31.2 }} ,
					{ 404 ,  {34.9 }} ,
					{ 405 ,  {37. }} ,
					{ 410 ,  {26.7 }} ,
					{ 411 ,  {27.5 }} ,
					{ 412 ,  {30.1 }} ,
					{ 414 ,  {24.8 }} ,
					{ 415 ,  {23.6 }} ,
					{ 419 ,  {30.3 }} ,
					{ 420 ,  {30.7 }} ,
					{ 421 ,  {32.2 }} ,
					{ 425 ,  {33.8 }} ,
					{ 426 ,  {33.4 }} ,
					{ 427 ,  {34.6 }} ,
					{ 428 ,  {36. }} ,
					{ 431 ,  {29.8 }} ,
					{ 434 ,  {23.9 }} ,
					{ 435 ,  {25. }} ,
					{ 436 ,  {26.6 }} ,
					{ 437 ,  {10.4 }} ,
					{ 442 ,  {46. }} ,
					{ 444 ,  {43.1 }} ,
					{ 445 ,  {43.5 }} ,
					{ 447 ,  {50. }} ,
					{ 449 ,  {50. }} ,
					{ 450 ,  {48.8 }} ,
					{ 453 ,  {44.8 }} ,
					{ 454 ,  {50. }} ,
					{ 457 ,  {39.8 }} ,
					{ 459 ,  {37.6 }} ,
					{ 460 ,  {38.7 }} ,
					{ 463 ,  {44. }} ,
					{ 464 ,  {42.8 }} ,
					{ 465 ,  {41.7 }} ,
					{ 466 ,  {21.9 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 0.7136284708976746) ? ( (scaler_output_14 <= 0.3004233241081238) ? ( (scaler_output_7 <= 0.4176119714975357) ? ( (scaler_output_14 <= -0.7075373530387878) ? ( (scaler_output_9 <= 0.3076174259185791) ? ( (scaler_output_14 <= -0.8051944375038147) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_14 <= -0.8958760499954224) ? ( (scaler_output_9 <= -0.21720551699399948) ? ( 9 ) : ( 10 ) ) : ( (scaler_output_13 <= 0.18770933337509632) ? ( 12 ) : ( 13 ) ) ) : ( 14 ) ) : ( (scaler_output_13 <= 0.19217721931636333) ? ( 16 ) : ( 17 ) ) ) : ( (scaler_output_4 <= -0.8167820870876312) ? ( (scaler_output_9 <= 1.215434730052948) ? ( (scaler_output_13 <= 0.3731541484594345) ? ( (scaler_output_7 <= 0.1527551133185625) ? ( (scaler_output_6 <= -0.9415908753871918) ? ( 23 ) : ( 24 ) ) : ( 25 ) ) : ( (scaler_output_8 <= -1.1580755114555359) ? ( 27 ) : ( 28 ) ) ) : ( (scaler_output_14 <= -0.821238100528717) ? ( (scaler_output_7 <= 0.2462339997291565) ? ( (scaler_output_13 <= 0.22720322385430336) ? ( 32 ) : ( (scaler_output_3 <= 1.6697003841400146) ? ( 34 ) : ( 35 ) ) ) : ( (scaler_output_12 <= 0.18037793785333633) ? ( 37 ) : ( 38 ) ) ) : ( 39 ) ) ) : ( (scaler_output_7 <= -0.2282421886920929) ? ( (scaler_output_11 <= -0.5878109335899353) ? ( 42 ) : ( 43 ) ) : ( (scaler_output_9 <= 0.3873691111803055) ? ( (scaler_output_7 <= 0.14425703138113022) ? ( 46 ) : ( 47 ) ) : ( (scaler_output_11 <= -0.6467086374759674) ? ( (scaler_output_14 <= -0.8156577050685883) ? ( 50 ) : ( 51 ) ) : ( 52 ) ) ) ) ) ) : ( (scaler_output_11 <= -1.0737170577049255) ? ( (scaler_output_13 <= 0.32819949090480804) ? ( 55 ) : ( (scaler_output_9 <= -0.349790608510375) ? ( 57 ) : ( 58 ) ) ) : ( (scaler_output_9 <= -1.1802685856819153) ? ( 60 ) : ( (scaler_output_13 <= 0.10248856619000435) ? ( (scaler_output_6 <= 0.3973003029823303) ? ( (scaler_output_14 <= -0.21715925261378288) ? ( 64 ) : ( (scaler_output_9 <= 0.6910655796527863) ? ( 66 ) : ( 67 ) ) ) : ( (scaler_output_13 <= -0.7331714034080505) ? ( (scaler_output_11 <= 0.7580020185559988) ? ( 70 ) : ( 71 ) ) : ( (scaler_output_9 <= -0.9896432459354401) ? ( 73 ) : ( (scaler_output_6 <= 1.1303008496761322) ? ( 75 ) : ( 76 ) ) ) ) ) : ( (scaler_output_4 <= -0.7287764847278595) ? ( (scaler_output_2 <= -0.41856324672698975) ? ( (scaler_output_7 <= -0.6042822897434235) ? ( (scaler_output_4 <= -1.2238079905509949) ? ( 81 ) : ( (scaler_output_14 <= -0.36364489793777466) ? ( 83 ) : ( 84 ) ) ) : ( (scaler_output_9 <= 1.8071114420890808) ? ( 86 ) : ( 87 ) ) ) : ( (scaler_output_11 <= -1.0148193538188934) ? ( 89 ) : ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_8 <= -1.1385076940059662) ? ( (scaler_output_13 <= 0.40580831468105316) ? ( 93 ) : ( 94 ) ) : ( (scaler_output_7 <= 0.10530748963356018) ? ( (scaler_output_6 <= -0.4204401820898056) ? ( (scaler_output_8 <= -0.8734529614448547) ? ( 98 ) : ( (scaler_output_9 <= -0.09479539096355438) ? ( 100 ) : ( (scaler_output_8 <= -0.8005184531211853) ? ( 102 ) : ( (scaler_output_4 <= -0.8593181371688843) ? ( 104 ) : ( 105 ) ) ) ) ) : ( (scaler_output_2 <= -0.41019387543201447) ? ( 107 ) : ( (scaler_output_4 <= -1.022861897945404) ? ( 109 ) : ( 110 ) ) ) ) : ( 111 ) ) ) : ( (scaler_output_8 <= -0.9197041392326355) ? ( 113 ) : ( 114 ) ) ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_8 <= 0.07113801687955856) ? ( (scaler_output_7 <= -0.5993250608444214) ? ( (scaler_output_9 <= 0.9455353617668152) ? ( (scaler_output_7 <= -0.6326092183589935) ? ( (scaler_output_2 <= -0.4016839265823364) ? ( 121 ) : ( (scaler_output_12 <= 1.011098861694336) ? ( (scaler_output_4 <= 0.22315087914466858) ? ( 124 ) : ( 125 ) ) : ( 126 ) ) ) : ( (scaler_output_6 <= -0.37383323162794113) ? ( 128 ) : ( 129 ) ) ) : ( 130 ) ) : ( (scaler_output_12 <= 0.11115118861198425) ? ( (scaler_output_9 <= -0.07688171416521072) ? ( 133 ) : ( (scaler_output_13 <= 0.4145234525203705) ? ( 135 ) : ( 136 ) ) ) : ( (scaler_output_7 <= -0.0880238525569439) ? ( (scaler_output_8 <= -1.4462558031082153) ? ( (scaler_output_7 <= -0.5377139747142792) ? ( 140 ) : ( 141 ) ) : ( (scaler_output_2 <= -0.38728003203868866) ? ( (scaler_output_9 <= 0.9249227046966553) ? ( 144 ) : ( 145 ) ) : ( (scaler_output_6 <= 0.05410351604223251) ? ( (scaler_output_7 <= -0.4307797849178314) ? ( 148 ) : ( 149 ) ) : ( 150 ) ) ) ) : ( (scaler_output_7 <= 0.1676267571747303) ? ( 152 ) : ( 153 ) ) ) ) ) : ( (scaler_output_14 <= -0.5784904956817627) ? ( 155 ) : ( (scaler_output_4 <= -0.010064005851745605) ? ( (scaler_output_14 <= -0.14182379096746445) ? ( 158 ) : ( (scaler_output_9 <= -0.595231831073761) ? ( (scaler_output_7 <= 0.0019141733646392822) ? ( 161 ) : ( 162 ) ) : ( (scaler_output_8 <= 0.46249399334192276) ? ( (scaler_output_2 <= -0.3896523416042328) ? ( 165 ) : ( 166 ) ) : ( (scaler_output_8 <= 0.8734177649021149) ? ( (scaler_output_9 <= -0.18949902057647705) ? ( (scaler_output_6 <= -0.1874053254723549) ? ( 170 ) : ( 171 ) ) : ( 172 ) ) : ( 173 ) ) ) ) ) : ( (scaler_output_13 <= 0.3807109445333481) ? ( (scaler_output_13 <= 0.2746400386095047) ? ( (scaler_output_2 <= -0.18795226514339447) ? ( 177 ) : ( 178 ) ) : ( (scaler_output_6 <= 1.2108038067817688) ? ( 180 ) : ( 181 ) ) ) : ( (scaler_output_8 <= 0.43758951127529144) ? ( 183 ) : ( (scaler_output_7 <= 0.13150990940630436) ? ( (scaler_output_6 <= 0.9692949652671814) ? ( 186 ) : ( 187 ) ) : ( 188 ) ) ) ) ) ) ) : ( (scaler_output_8 <= 0.1209469586610794) ? ( 190 ) : ( (scaler_output_9 <= -0.5760522782802582) ? ( 192 ) : ( 193 ) ) ) ) ) ) ) ) ) : ( (scaler_output_6 <= 0.4057742953300476) ? ( (scaler_output_6 <= -0.9034578800201416) ? ( (scaler_output_7 <= 0.5932389795780182) ? ( (scaler_output_13 <= 0.4179433137178421) ? ( 198 ) : ( (scaler_output_12 <= -0.3734360486268997) ? ( 200 ) : ( 201 ) ) ) : ( (scaler_output_6 <= -0.9500648677349091) ? ( 203 ) : ( 204 ) ) ) : ( (scaler_output_8 <= 0.6528352797031403) ? ( (scaler_output_12 <= -0.419587180018425) ? ( (scaler_output_9 <= 0.03826739639043808) ? ( (scaler_output_2 <= -0.3577604293823242) ? ( (scaler_output_13 <= 0.1997891729697585) ? ( 210 ) : ( 211 ) ) : ( 212 ) ) : ( 213 ) ) : ( (scaler_output_12 <= -0.2580581083893776) ? ( (scaler_output_4 <= -0.5997015759348869) ? ( 216 ) : ( 217 ) ) : ( (scaler_output_3 <= 0.015964269638061523) ? ( (scaler_output_12 <= 0.5957383960485458) ? ( 220 ) : ( 221 ) ) : ( 222 ) ) ) ) : ( (scaler_output_7 <= 0.6159005463123322) ? ( 224 ) : ( 225 ) ) ) ) : ( 226 ) ) ) : ( (scaler_output_11 <= 0.9523644894361496) ? ( (scaler_output_2 <= -0.4057367295026779) ? ( (scaler_output_8 <= 0.9481311738491058) ? ( (scaler_output_8 <= -0.8734530210494995) ? ( 231 ) : ( (scaler_output_9 <= 0.5153205394744873) ? ( (scaler_output_11 <= -0.5642518252134323) ? ( 234 ) : ( 235 ) ) : ( 236 ) ) ) : ( 237 ) ) : ( (scaler_output_8 <= 0.3308560773730278) ? ( (scaler_output_13 <= 0.4050360918045044) ? ( (scaler_output_8 <= -1.7273205518722534) ? ( 241 ) : ( 242 ) ) : ( (scaler_output_9 <= 0.5922776833176613) ? ( 244 ) : ( 245 ) ) ) : ( (scaler_output_9 <= -1.1114084124565125) ? ( (scaler_output_7 <= -1.9611425995826721) ? ( 248 ) : ( (scaler_output_7 <= -1.5411957502365112) ? ( (scaler_output_11 <= 0.08362310193479061) ? ( 251 ) : ( 252 ) ) : ( (scaler_output_2 <= -0.06792151322588325) ? ( 254 ) : ( 255 ) ) ) ) : ( (scaler_output_8 <= 1.0851057767868042) ? ( (scaler_output_14 <= 1.407436192035675) ? ( (scaler_output_8 <= 0.9979401230812073) ? ( (scaler_output_9 <= 0.34440018236637115) ? ( (scaler_output_13 <= 0.4107726365327835) ? ( (scaler_output_8 <= 0.9481311738491058) ? ( 262 ) : ( 263 ) ) : ( 264 ) ) : ( (scaler_output_13 <= 0.2915738672018051) ? ( 266 ) : ( 267 ) ) ) : ( (scaler_output_4 <= 0.5913076400756836) ? ( 269 ) : ( 270 ) ) ) : ( (scaler_output_14 <= 2.3630805015563965) ? ( (scaler_output_4 <= 1.7060453295707703) ? ( (scaler_output_7 <= -1.4222225546836853) ? ( 274 ) : ( 275 ) ) : ( (scaler_output_14 <= 1.912462830543518) ? ( 277 ) : ( 278 ) ) ) : ( 279 ) ) ) : ( (scaler_output_2 <= -0.37660086154937744) ? ( (scaler_output_9 <= 0.06088641285896301) ? ( 282 ) : ( 283 ) ) : ( (scaler_output_9 <= -0.5114913582801819) ? ( 285 ) : ( 286 ) ) ) ) ) ) ) : ( (scaler_output_9 <= -0.8675674796104431) ? ( (scaler_output_6 <= 0.4142483025789261) ? ( (scaler_output_7 <= -0.8103607594966888) ? ( (scaler_output_2 <= 2.5422779321670532) ? ( (scaler_output_13 <= -2.059250771999359) ? ( 292 ) : ( 293 ) ) : ( 294 ) ) : ( 295 ) ) : ( (scaler_output_14 <= 0.8884585201740265) ? ( (scaler_output_6 <= 1.4819716215133667) ? ( (scaler_output_8 <= 1.0690957903862) ? ( (scaler_output_14 <= 0.5271272659301758) ? ( 300 ) : ( 301 ) ) : ( (scaler_output_12 <= 0.8034186363220215) ? ( 303 ) : ( 304 ) ) ) : ( 305 ) ) : ( (scaler_output_9 <= -1.1532070636749268) ? ( (scaler_output_13 <= 0.40751825273036957) ? ( 308 ) : ( 309 ) ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( (scaler_output_2 <= 0.7952538430690765) ? ( (scaler_output_2 <= 0.7591528594493866) ? ( (scaler_output_11 <= 1.6650269031524658) ? ( (scaler_output_13 <= -1.4503496587276459) ? ( 315 ) : ( 316 ) ) : ( 317 ) ) : ( 318 ) ) : ( (scaler_output_7 <= -0.6021577715873718) ? ( (scaler_output_8 <= 0.7488954216241837) ? ( 321 ) : ( 322 ) ) : ( (scaler_output_2 <= 1.4567179083824158) ? ( (scaler_output_7 <= 0.3729970343410969) ? ( 325 ) : ( 326 ) ) : ( 327 ) ) ) ) : ( (scaler_output_14 <= 1.756211519241333) ? ( (scaler_output_14 <= 1.507185935974121) ? ( 330 ) : ( 331 ) ) : ( (scaler_output_7 <= -1.9250257015228271) ? ( (scaler_output_2 <= 1.9961138367652893) ? ( 334 ) : ( 335 ) ) : ( (scaler_output_7 <= -1.0242291539907455) ? ( 337 ) : ( 338 ) ) ) ) ) ) ) ) : ( (scaler_output_13 <= 0.04010365158319473) ? ( (scaler_output_7 <= -0.06323778175283223) ? ( (scaler_output_9 <= -0.6775869727134705) ? ( (scaler_output_13 <= -3.3783799409866333) ? ( 343 ) : ( 344 ) ) : ( (scaler_output_2 <= 0.38010770827531815) ? ( 346 ) : ( 347 ) ) ) : ( (scaler_output_9 <= -0.7072042524814606) ? ( (scaler_output_2 <= 0.5768881440162659) ? ( (scaler_output_14 <= 0.8019622564315796) ? ( 351 ) : ( 352 ) ) : ( 353 ) ) : ( (scaler_output_14 <= 0.739880234003067) ? ( (scaler_output_7 <= 0.25331573642324656) ? ( 356 ) : ( 357 ) ) : ( 358 ) ) ) ) : ( (scaler_output_7 <= -0.09085654839873314) ? ( (scaler_output_2 <= 0.26074253022670746) ? ( 361 ) : ( (scaler_output_6 <= 1.7022954821586609) ? ( (scaler_output_13 <= 0.26294631510972977) ? ( 364 ) : ( 365 ) ) : ( 366 ) ) ) : ( (scaler_output_8 <= 0.937457799911499) ? ( 368 ) : ( 369 ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.611592411994934) ? ( (scaler_output_12 <= 0.4803604930639267) ? ( (scaler_output_14 <= -0.994928240776062) ? ( (scaler_output_14 <= -1.2669729590415955) ? ( (scaler_output_4 <= -0.8182488679885864) ? ( 375 ) : ( 376 ) ) : ( (scaler_output_11 <= -0.9205830097198486) ? ( (scaler_output_8 <= -1.348416805267334) ? ( 379 ) : ( (scaler_output_8 <= 0.31306716054677963) ? ( (scaler_output_4 <= -1.2069402933120728) ? ( 382 ) : ( (scaler_output_7 <= 1.100999355316162) ? ( (scaler_output_2 <= -0.4087052494287491) ? ( 385 ) : ( 386 ) ) : ( 387 ) ) ) : ( 388 ) ) ) : ( (scaler_output_11 <= -0.12840869091451168) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_3 <= 1.0495493412017822) ? ( 392 ) : ( (scaler_output_9 <= 1.0824914276599884) ? ( 394 ) : ( 395 ) ) ) : ( (scaler_output_12 <= -0.419587180018425) ? ( (scaler_output_2 <= -0.3632487654685974) ? ( (scaler_output_8 <= -0.32555462419986725) ? ( 399 ) : ( 400 ) ) : ( 401 ) ) : ( 402 ) ) ) : ( (scaler_output_14 <= -1.087702453136444) ? ( 404 ) : ( 405 ) ) ) ) ) : ( (scaler_output_7 <= 1.0075204372406006) ? ( (scaler_output_9 <= -0.22592349350452423) ? ( (scaler_output_3 <= -0.08739423751831055) ? ( (scaler_output_2 <= -0.362820029258728) ? ( 410 ) : ( 411 ) ) : ( 412 ) ) : ( (scaler_output_2 <= -0.41787080466747284) ? ( 414 ) : ( 415 ) ) ) : ( (scaler_output_7 <= 1.2121825814247131) ? ( (scaler_output_12 <= -1.9656510949134827) ? ( (scaler_output_8 <= -0.2579568028450012) ? ( 419 ) : ( 420 ) ) : ( 421 ) ) : ( (scaler_output_8 <= 0.8200510591268539) ? ( (scaler_output_11 <= -0.6437637507915497) ? ( (scaler_output_13 <= 0.4023332893848419) ? ( 425 ) : ( 426 ) ) : ( 427 ) ) : ( 428 ) ) ) ) ) : ( (scaler_output_14 <= 0.25229231268167496) ? ( (scaler_output_13 <= 0.26349790394306183) ? ( 431 ) : ( (scaler_output_9 <= 1.0898717865347862) ? ( (scaler_output_10 <= 0.33688393235206604) ? ( 434 ) : ( 435 ) ) : ( 436 ) ) ) : ( 437 ) ) ) : ( (scaler_output_2 <= -0.08141547301784158) ? ( (scaler_output_12 <= -1.3887616395950317) ? ( (scaler_output_7 <= 2.0690723657608032) ? ( (scaler_output_4 <= -1.075665295124054) ? ( 442 ) : ( (scaler_output_13 <= 0.3414928466081619) ? ( 444 ) : ( 445 ) ) ) : ( (scaler_output_7 <= 2.956413745880127) ? ( 447 ) : ( (scaler_output_8 <= 0.7595687508583069) ? ( 449 ) : ( 450 ) ) ) ) : ( (scaler_output_13 <= 0.2989652007818222) ? ( (scaler_output_2 <= -0.37153124809265137) ? ( 453 ) : ( 454 ) ) : ( (scaler_output_9 <= -0.07310790149495006) ? ( (scaler_output_7 <= 2.270901918411255) ? ( 457 ) : ( (scaler_output_13 <= 0.3724370747804642) ? ( 459 ) : ( 460 ) ) ) : ( (scaler_output_8 <= -0.5016648322343826) ? ( (scaler_output_4 <= -0.9062544405460358) ? ( 463 ) : ( 464 ) ) : ( 465 ) ) ) ) ) : ( 466 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_5
		
	
		namespace EXT_SubModel_6 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 9 ,  {15.3 }} ,
					{ 10 ,  {15. }} ,
					{ 11 ,  {19.6 }} ,
					{ 15 ,  {23.8 }} ,
					{ 17 ,  {21.7 }} ,
					{ 20 ,  {22.7 }} ,
					{ 21 ,  {22.9 }} ,
					{ 24 ,  {23.2 }} ,
					{ 25 ,  {23.3 }} ,
					{ 26 ,  {23.1 }} ,
					{ 30 ,  {19.4 }} ,
					{ 31 ,  {18.9 }} ,
					{ 32 ,  {20.9 }} ,
					{ 33 ,  {23.4 }} ,
					{ 36 ,  {11.9 }} ,
					{ 37 ,  {17.1 }} ,
					{ 41 ,  {22. }} ,
					{ 43 ,  {22.6 }} ,
					{ 44 ,  {23.1 }} ,
					{ 47 ,  {24.5 }} ,
					{ 49 ,  {20.8 }} ,
					{ 52 ,  {22. }} ,
					{ 53 ,  {21.9 }} ,
					{ 54 ,  {21.2 }} ,
					{ 57 ,  {16.1 }} ,
					{ 58 ,  {17.4 }} ,
					{ 65 ,  {20.3 }} ,
					{ 66 ,  {20.1 }} ,
					{ 69 ,  {20.7 }} ,
					{ 70 ,  {20.6 }} ,
					{ 71 ,  {21. }} ,
					{ 72 ,  {19.4 }} ,
					{ 75 ,  {21.8 }} ,
					{ 76 ,  {21.1 }} ,
					{ 77 ,  {22.5 }} ,
					{ 80 ,  {21.1 }} ,
					{ 83 ,  {20.3 }} ,
					{ 84 ,  {20.4 }} ,
					{ 85 ,  {19.9 }} ,
					{ 89 ,  {18.5 }} ,
					{ 90 ,  {18.7 }} ,
					{ 91 ,  {19. }} ,
					{ 93 ,  {20. }} ,
					{ 95 ,  {19.3 }} ,
					{ 96 ,  {19.5 }} ,
					{ 98 ,  {16.8 }} ,
					{ 99 ,  {18.3 }} ,
					{ 102 ,  {17.2 }} ,
					{ 103 ,  {16. }} ,
					{ 104 ,  {18.7 }} ,
					{ 109 ,  {20.7 }} ,
					{ 111 ,  {22.2 }} ,
					{ 112 ,  {21.6 }} ,
					{ 115 ,  {24. }} ,
					{ 117 ,  {25. }} ,
					{ 118 ,  {24.7 }} ,
					{ 123 ,  {24.8 }} ,
					{ 124 ,  {24.1 }} ,
					{ 126 ,  {22. }} ,
					{ 127 ,  {23.1 }} ,
					{ 129 ,  {22.6 }} ,
					{ 132 ,  {21.9 }} ,
					{ 133 ,  {22. }} ,
					{ 134 ,  {22.3 }} ,
					{ 136 ,  {24.8 }} ,
					{ 137 ,  {23.9 }} ,
					{ 143 ,  {24.6 }} ,
					{ 145 ,  {23.7 }} ,
					{ 146 ,  {23.6 }} ,
					{ 148 ,  {22.6 }} ,
					{ 149 ,  {22.2 }} ,
					{ 152 ,  {26.4 }} ,
					{ 155 ,  {25.3 }} ,
					{ 157 ,  {24.7 }} ,
					{ 158 ,  {25. }} ,
					{ 160 ,  {24.3 }} ,
					{ 161 ,  {24.4 }} ,
					{ 165 ,  {23. }} ,
					{ 166 ,  {23.1 }} ,
					{ 167 ,  {24.3 }} ,
					{ 169 ,  {25. }} ,
					{ 171 ,  {23.8 }} ,
					{ 173 ,  {24.5 }} ,
					{ 174 ,  {24.2 }} ,
					{ 175 ,  {27. }} ,
					{ 176 ,  {29.4 }} ,
					{ 178 ,  {29.6 }} ,
					{ 183 ,  {20.8 }} ,
					{ 184 ,  {21.2 }} ,
					{ 185 ,  {20.1 }} ,
					{ 188 ,  {24.4 }} ,
					{ 189 ,  {24.4 }} ,
					{ 193 ,  {23. }} ,
					{ 194 ,  {22.4 }} ,
					{ 195 ,  {24. }} ,
					{ 198 ,  {22.2 }} ,
					{ 199 ,  {21.7 }} ,
					{ 201 ,  {21. }} ,
					{ 202 ,  {21.4 }} ,
					{ 206 ,  {21.4 }} ,
					{ 209 ,  {20.5 }} ,
					{ 212 ,  {20.1 }} ,
					{ 213 ,  {20. }} ,
					{ 214 ,  {19.8 }} ,
					{ 218 ,  {18.5 }} ,
					{ 219 ,  {18.2 }} ,
					{ 220 ,  {17.7 }} ,
					{ 223 ,  {19.6 }} ,
					{ 224 ,  {19.5 }} ,
					{ 225 ,  {20. }} ,
					{ 226 ,  {23. }} ,
					{ 228 ,  {21.7 }} ,
					{ 230 ,  {22.7 }} ,
					{ 231 ,  {23. }} ,
					{ 238 ,  {35.4 }} ,
					{ 239 ,  {35.1 }} ,
					{ 240 ,  {37. }} ,
					{ 241 ,  {32. }} ,
					{ 242 ,  {29. }} ,
					{ 246 ,  {30.1 }} ,
					{ 248 ,  {30.8 }} ,
					{ 249 ,  {31.2 }} ,
					{ 250 ,  {28.5 }} ,
					{ 253 ,  {26.6 }} ,
					{ 254 ,  {26.2 }} ,
					{ 257 ,  {27.9 }} ,
					{ 258 ,  {28. }} ,
					{ 259 ,  {28.6 }} ,
					{ 264 ,  {24.8 }} ,
					{ 265 ,  {26.7 }} ,
					{ 267 ,  {28.7 }} ,
					{ 268 ,  {29.9 }} ,
					{ 270 ,  {30.1 }} ,
					{ 271 ,  {30.7 }} ,
					{ 274 ,  {28.4 }} ,
					{ 277 ,  {23.9 }} ,
					{ 278 ,  {25. }} ,
					{ 279 ,  {26.5 }} ,
					{ 282 ,  {22.8 }} ,
					{ 283 ,  {22.8 }} ,
					{ 284 ,  {22. }} ,
					{ 290 ,  {16.3 }} ,
					{ 292 ,  {19.3 }} ,
					{ 293 ,  {17.9 }} ,
					{ 294 ,  {14.4 }} ,
					{ 298 ,  {15.2 }} ,
					{ 299 ,  {17.5 }} ,
					{ 303 ,  {13.8 }} ,
					{ 304 ,  {13.9 }} ,
					{ 305 ,  {13.6 }} ,
					{ 306 ,  {11.7 }} ,
					{ 307 ,  {7. }} ,
					{ 316 ,  {22.4 }} ,
					{ 317 ,  {21.7 }} ,
					{ 318 ,  {23.1 }} ,
					{ 319 ,  {18.9 }} ,
					{ 322 ,  {20.4 }} ,
					{ 323 ,  {20.5 }} ,
					{ 325 ,  {18.8 }} ,
					{ 327 ,  {19.4 }} ,
					{ 328 ,  {19.5 }} ,
					{ 330 ,  {16.5 }} ,
					{ 331 ,  {13.6 }} ,
					{ 332 ,  {27.1 }} ,
					{ 335 ,  {22.5 }} ,
					{ 337 ,  {19.8 }} ,
					{ 338 ,  {19.1 }} ,
					{ 342 ,  {16.6 }} ,
					{ 343 ,  {15.6 }} ,
					{ 345 ,  {17.4 }} ,
					{ 347 ,  {18.1 }} ,
					{ 348 ,  {18. }} ,
					{ 353 ,  {19.1 }} ,
					{ 354 ,  {17.2 }} ,
					{ 355 ,  {16.6 }} ,
					{ 358 ,  {13.3 }} ,
					{ 360 ,  {14.5 }} ,
					{ 361 ,  {15. }} ,
					{ 362 ,  {16.7 }} ,
					{ 364 ,  {15.2 }} ,
					{ 367 ,  {13.3 }} ,
					{ 368 ,  {13.1 }} ,
					{ 369 ,  {13.5 }} ,
					{ 370 ,  {27.5 }} ,
					{ 378 ,  {13.1 }} ,
					{ 380 ,  {13.5 }} ,
					{ 381 ,  {13.4 }} ,
					{ 382 ,  {14.1 }} ,
					{ 383 ,  {14.9 }} ,
					{ 385 ,  {14.2 }} ,
					{ 388 ,  {15.2 }} ,
					{ 390 ,  {14.9 }} ,
					{ 391 ,  {14.9 }} ,
					{ 393 ,  {15.6 }} ,
					{ 394 ,  {15.4 }} ,
					{ 396 ,  {16.1 }} ,
					{ 397 ,  {17.8 }} ,
					{ 399 ,  {8.5 }} ,
					{ 404 ,  {13.4 }} ,
					{ 405 ,  {11.8 }} ,
					{ 406 ,  {15.6 }} ,
					{ 409 ,  {12.3 }} ,
					{ 410 ,  {11.3 }} ,
					{ 412 ,  {12.5 }} ,
					{ 413 ,  {12.8 }} ,
					{ 415 ,  {15.1 }} ,
					{ 416 ,  {14.1 }} ,
					{ 419 ,  {6.3 }} ,
					{ 423 ,  {8.8 }} ,
					{ 424 ,  {8.4 }} ,
					{ 425 ,  {7.5 }} ,
					{ 426 ,  {7.4 }} ,
					{ 430 ,  {13.9 }} ,
					{ 431 ,  {13.1 }} ,
					{ 435 ,  {11.7 }} ,
					{ 437 ,  {13.4 }} ,
					{ 439 ,  {12.7 }} ,
					{ 440 ,  {12.6 }} ,
					{ 442 ,  {11.8 }} ,
					{ 443 ,  {10.8 }} ,
					{ 445 ,  {9.6 }} ,
					{ 446 ,  {10.4 }} ,
					{ 451 ,  {9.7 }} ,
					{ 453 ,  {10.5 }} ,
					{ 454 ,  {10.2 }} ,
					{ 455 ,  {12.1 }} ,
					{ 456 ,  {8.7 }} ,
					{ 458 ,  {7. }} ,
					{ 459 ,  {5. }} ,
					{ 463 ,  {37.3 }} ,
					{ 465 ,  {36.1 }} ,
					{ 466 ,  {35.4 }} ,
					{ 469 ,  {30.3 }} ,
					{ 471 ,  {31.5 }} ,
					{ 472 ,  {31.7 }} ,
					{ 475 ,  {34.6 }} ,
					{ 476 ,  {33.8 }} ,
					{ 480 ,  {32.2 }} ,
					{ 481 ,  {32.7 }} ,
					{ 482 ,  {33.3 }} ,
					{ 483 ,  {31. }} ,
					{ 491 ,  {46. }} ,
					{ 492 ,  {46.7 }} ,
					{ 494 ,  {44. }} ,
					{ 495 ,  {44.8 }} ,
					{ 497 ,  {50. }} ,
					{ 498 ,  {50. }} ,
					{ 499 ,  {37.6 }} ,
					{ 501 ,  {43.5 }} ,
					{ 502 ,  {50. }} ,
					{ 504 ,  {38.7 }} ,
					{ 505 ,  {39.8 }} ,
					{ 506 ,  {21.9 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 1.0981666445732117) ? ( (scaler_output_14 <= 0.30251598358154297) ? ( (scaler_output_9 <= -1.1631909012794495) ? ( 3 ) : ( (scaler_output_7 <= 0.4176119714975357) ? ( (scaler_output_7 <= -0.3493398427963257) ? ( (scaler_output_9 <= -1.0216012001037598) ? ( (scaler_output_14 <= 0.010242253541946411) ? ( (scaler_output_8 <= 0.93034228682518) ? ( 9 ) : ( 10 ) ) : ( 11 ) ) : ( (scaler_output_12 <= -0.719569742679596) ? ( (scaler_output_9 <= 0.9906300902366638) ? ( (scaler_output_13 <= -0.5314546823501587) ? ( 15 ) : ( (scaler_output_8 <= -0.8218651413917542) ? ( 17 ) : ( (scaler_output_12 <= -1.2041569650173187) ? ( (scaler_output_3 <= -0.24243199080228806) ? ( 20 ) : ( 21 ) ) : ( (scaler_output_2 <= -0.41108444333076477) ? ( (scaler_output_6 <= -0.20435331761837006) ? ( 24 ) : ( 25 ) ) : ( 26 ) ) ) ) ) : ( (scaler_output_12 <= -0.8349476456642151) ? ( (scaler_output_12 <= -0.9964767396450043) ? ( (scaler_output_8 <= -0.38603687286376953) ? ( 30 ) : ( 31 ) ) : ( 32 ) ) : ( 33 ) ) ) : ( (scaler_output_10 <= -0.9233116209506989) ? ( (scaler_output_9 <= 0.35971036553382874) ? ( 36 ) : ( 37 ) ) : ( (scaler_output_9 <= 1.355901837348938) ? ( (scaler_output_8 <= -1.3003867268562317) ? ( (scaler_output_8 <= -1.6365970969200134) ? ( 41 ) : ( (scaler_output_12 <= 0.6418895572423935) ? ( 43 ) : ( 44 ) ) ) : ( (scaler_output_9 <= -0.6526272594928741) ? ( (scaler_output_8 <= -0.4945492446422577) ? ( 47 ) : ( (scaler_output_13 <= -0.6022237688302994) ? ( 49 ) : ( (scaler_output_9 <= -0.7100704610347748) ? ( (scaler_output_11 <= 0.1248515248298645) ? ( 52 ) : ( 53 ) ) : ( 54 ) ) ) ) : ( (scaler_output_7 <= -0.9364156126976013) ? ( (scaler_output_7 <= -1.4385105669498444) ? ( 57 ) : ( 58 ) ) : ( (scaler_output_6 <= 0.2532423958182335) ? ( (scaler_output_9 <= 0.3076174259185791) ? ( (scaler_output_9 <= 0.09382367320358753) ? ( (scaler_output_8 <= 0.558554083108902) ? ( (scaler_output_9 <= -0.33077821135520935) ? ( (scaler_output_4 <= 0.4424315243959427) ? ( 65 ) : ( 66 ) ) : ( (scaler_output_13 <= 0.3942800611257553) ? ( (scaler_output_2 <= -0.2698540836572647) ? ( 69 ) : ( 70 ) ) : ( 71 ) ) ) : ( 72 ) ) : ( (scaler_output_7 <= -0.5150524228811264) ? ( (scaler_output_14 <= -0.1278727799654007) ? ( 75 ) : ( 76 ) ) : ( 77 ) ) ) : ( (scaler_output_14 <= -0.47874073684215546) ? ( (scaler_output_4 <= -0.6891739666461945) ? ( 80 ) : ( (scaler_output_2 <= -0.3630150258541107) ? ( (scaler_output_2 <= -0.39698241651058197) ? ( 83 ) : ( 84 ) ) : ( 85 ) ) ) : ( (scaler_output_9 <= 0.5428836941719055) ? ( (scaler_output_7 <= -0.45698221027851105) ? ( (scaler_output_9 <= 0.45228826999664307) ? ( 89 ) : ( 90 ) ) : ( 91 ) ) : ( (scaler_output_8 <= -1.220336675643921) ? ( 93 ) : ( (scaler_output_10 <= -0.6369035243988037) ? ( 95 ) : ( 96 ) ) ) ) ) ) : ( (scaler_output_2 <= -0.3933733105659485) ? ( 98 ) : ( 99 ) ) ) ) ) ) : ( (scaler_output_13 <= 0.31126565486192703) ? ( (scaler_output_7 <= -0.5200096368789673) ? ( 102 ) : ( 103 ) ) : ( 104 ) ) ) ) ) ) : ( (scaler_output_14 <= -0.4159611910581589) ? ( (scaler_output_2 <= -0.4176420718431473) ? ( (scaler_output_11 <= -0.9500318765640259) ? ( (scaler_output_7 <= 0.019618507008999586) ? ( 109 ) : ( (scaler_output_7 <= 0.09822575747966766) ? ( 111 ) : ( 112 ) ) ) : ( (scaler_output_14 <= -0.8847152292728424) ? ( (scaler_output_3 <= 0.45007001608610153) ? ( 115 ) : ( (scaler_output_8 <= -1.2648089528083801) ? ( 117 ) : ( 118 ) ) ) : ( (scaler_output_14 <= -0.48362360894680023) ? ( (scaler_output_2 <= -0.4194244295358658) ? ( (scaler_output_9 <= 1.4181936383247375) ? ( (scaler_output_3 <= 1.7213796377182007) ? ( 123 ) : ( 124 ) ) : ( (scaler_output_11 <= -0.47296033799648285) ? ( 126 ) : ( 127 ) ) ) : ( (scaler_output_13 <= 0.37679463624954224) ? ( 129 ) : ( (scaler_output_13 <= 0.4064702242612839) ? ( (scaler_output_7 <= -0.060405097901821136) ? ( 132 ) : ( 133 ) ) : ( 134 ) ) ) ) : ( (scaler_output_14 <= -0.42712199687957764) ? ( 136 ) : ( 137 ) ) ) ) ) : ( (scaler_output_7 <= 0.3439619392156601) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_4 <= -0.821182370185852) ? ( (scaler_output_12 <= -0.7657209038734436) ? ( (scaler_output_2 <= -0.4156259596347809) ? ( 143 ) : ( (scaler_output_14 <= -0.6873084008693695) ? ( 145 ) : ( 146 ) ) ) : ( (scaler_output_12 <= -0.050377875566482544) ? ( 148 ) : ( 149 ) ) ) : ( (scaler_output_12 <= 0.20345351099967957) ? ( (scaler_output_6 <= -1.0009088218212128) ? ( 152 ) : ( (scaler_output_8 <= -0.615513801574707) ? ( (scaler_output_7 <= -0.17512918263673782) ? ( 155 ) : ( (scaler_output_8 <= -1.9229985475540161) ? ( 157 ) : ( 158 ) ) ) : ( (scaler_output_7 <= 0.004038691520690918) ? ( 160 ) : ( 161 ) ) ) ) : ( (scaler_output_7 <= 0.1364671215415001) ? ( (scaler_output_9 <= 1.392899602651596) ? ( (scaler_output_14 <= -0.8533254265785217) ? ( 165 ) : ( 166 ) ) : ( 167 ) ) : ( (scaler_output_7 <= 0.16550222784280777) ? ( 169 ) : ( (scaler_output_9 <= 0.5226054340600967) ? ( 171 ) : ( (scaler_output_12 <= 0.34190699458122253) ? ( 173 ) : ( 174 ) ) ) ) ) ) ) : ( 175 ) ) : ( 176 ) ) ) : ( (scaler_output_11 <= -1.1120006144046783) ? ( 178 ) : ( (scaler_output_8 <= 0.14051475748419762) ? ( (scaler_output_6 <= -0.7721109688282013) ? ( (scaler_output_9 <= 0.8862530589103699) ? ( (scaler_output_9 <= 0.3498937040567398) ? ( 183 ) : ( 184 ) ) : ( 185 ) ) : ( (scaler_output_6 <= -0.5348390936851501) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 188 ) : ( 189 ) ) : ( (scaler_output_14 <= -0.11461931467056274) ? ( (scaler_output_14 <= -0.25343189388513565) ? ( (scaler_output_6 <= -0.013688437640666962) ? ( 193 ) : ( 194 ) ) : ( 195 ) ) : ( (scaler_output_4 <= -0.2572131007909775) ? ( (scaler_output_6 <= -0.40349218249320984) ? ( 198 ) : ( 199 ) ) : ( (scaler_output_10 <= 0.5087288022041321) ? ( 201 ) : ( 202 ) ) ) ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_8 <= 1.065537929534912) ? ( (scaler_output_9 <= -0.8197260200977325) ? ( 206 ) : ( (scaler_output_6 <= -0.21282730996608734) ? ( (scaler_output_6 <= -1.0178568363189697) ? ( 209 ) : ( (scaler_output_13 <= 0.3925701379776001) ? ( (scaler_output_4 <= -0.042332738637924194) ? ( 212 ) : ( 213 ) ) : ( 214 ) ) ) : ( (scaler_output_13 <= 0.39477649331092834) ? ( (scaler_output_8 <= 0.6617297530174255) ? ( (scaler_output_2 <= -0.37540532648563385) ? ( 218 ) : ( 219 ) ) : ( 220 ) ) : ( (scaler_output_14 <= 0.239736407995224) ? ( (scaler_output_6 <= 0.9692949652671814) ? ( 223 ) : ( 224 ) ) : ( 225 ) ) ) ) ) : ( 226 ) ) : ( (scaler_output_9 <= -0.5760522782802582) ? ( 228 ) : ( (scaler_output_8 <= 0.7133175730705261) ? ( 230 ) : ( 231 ) ) ) ) ) ) ) ) : ( (scaler_output_8 <= -0.8396540582180023) ? ( (scaler_output_12 <= -1.2964593172073364) ? ( (scaler_output_3 <= 1.8764173984527588) ? ( (scaler_output_14 <= -0.9398217499256134) ? ( (scaler_output_11 <= -0.5819211211055517) ? ( (scaler_output_2 <= -0.4087052494287491) ? ( 238 ) : ( 239 ) ) : ( 240 ) ) : ( 241 ) ) : ( 242 ) ) : ( (scaler_output_14 <= -1.1121167540550232) ? ( (scaler_output_4 <= -0.9707919061183929) ? ( (scaler_output_11 <= -1.0972761809825897) ? ( 246 ) : ( (scaler_output_7 <= 0.6166086941957474) ? ( 248 ) : ( 249 ) ) ) : ( 250 ) ) : ( (scaler_output_13 <= 0.40751825273036957) ? ( (scaler_output_2 <= -0.404284343123436) ? ( 253 ) : ( 254 ) ) : ( (scaler_output_9 <= 0.8888565301895142) ? ( (scaler_output_7 <= 0.5372932851314545) ? ( 257 ) : ( 258 ) ) : ( 259 ) ) ) ) ) : ( (scaler_output_12 <= -0.419587180018425) ? ( (scaler_output_2 <= -0.3633737415075302) ? ( (scaler_output_6 <= -0.38654419779777527) ? ( (scaler_output_2 <= -0.39902912080287933) ? ( 264 ) : ( 265 ) ) : ( (scaler_output_7 <= 0.6399784237146378) ? ( 267 ) : ( 268 ) ) ) : ( (scaler_output_3 <= -0.08739423751831055) ? ( 270 ) : ( 271 ) ) ) : ( (scaler_output_8 <= 0.4073483645915985) ? ( (scaler_output_13 <= 0.39648643136024475) ? ( 274 ) : ( (scaler_output_12 <= 0.9880232810974121) ? ( (scaler_output_8 <= -0.040932103991508484) ? ( 277 ) : ( 278 ) ) : ( 279 ) ) ) : ( (scaler_output_7 <= 0.644935667514801) ? ( (scaler_output_8 <= 0.5051873624324799) ? ( 282 ) : ( 283 ) ) : ( 284 ) ) ) ) ) ) ) : ( (scaler_output_6 <= 0.7913410663604736) ? ( (scaler_output_7 <= -0.989528626203537) ? ( (scaler_output_7 <= -1.2607590556144714) ? ( (scaler_output_13 <= 0.4157921075820923) ? ( (scaler_output_14 <= 1.3118717670440674) ? ( 290 ) : ( (scaler_output_12 <= 0.45728491246700287) ? ( 292 ) : ( 293 ) ) ) : ( 294 ) ) : ( (scaler_output_14 <= 1.3767439723014832) ? ( (scaler_output_12 <= 0.8034186363220215) ? ( (scaler_output_2 <= -0.4036268889904022) ? ( 298 ) : ( 299 ) ) : ( (scaler_output_2 <= 0.6287448108196259) ? ( (scaler_output_14 <= 0.970071941614151) ? ( (scaler_output_7 <= -1.1134589612483978) ? ( 303 ) : ( 304 ) ) : ( 305 ) ) : ( 306 ) ) ) : ( 307 ) ) ) : ( (scaler_output_7 <= 0.5224216282367706) ? ( (scaler_output_2 <= -0.39637933671474457) ? ( (scaler_output_7 <= -0.3139311820268631) ? ( (scaler_output_8 <= 1.0637590885162354) ? ( (scaler_output_8 <= -0.35401687771081924) ? ( (scaler_output_11 <= 0.14252081513404846) ? ( (scaler_output_11 <= -0.32277117669582367) ? ( (scaler_output_7 <= -0.6389828026294708) ? ( 316 ) : ( 317 ) ) : ( 318 ) ) : ( 319 ) ) : ( (scaler_output_13 <= 0.2245555892586708) ? ( (scaler_output_8 <= 0.5389863029122353) ? ( 322 ) : ( 323 ) ) : ( (scaler_output_9 <= -0.8422972857952118) ? ( 325 ) : ( (scaler_output_4 <= -0.4764937460422516) ? ( 327 ) : ( 328 ) ) ) ) ) : ( (scaler_output_7 <= -0.6970530152320862) ? ( 330 ) : ( 331 ) ) ) : ( 332 ) ) : ( (scaler_output_8 <= 0.5265340507030487) ? ( (scaler_output_11 <= -0.6791023910045624) ? ( 335 ) : ( (scaler_output_2 <= -0.05313640832901001) ? ( 337 ) : ( 338 ) ) ) : ( (scaler_output_14 <= 0.6519888639450073) ? ( (scaler_output_12 <= 1.2418546676635742) ? ( (scaler_output_13 <= 0.30034416913986206) ? ( 342 ) : ( 343 ) ) : ( (scaler_output_8 <= 0.9961612522602081) ? ( 345 ) : ( (scaler_output_8 <= 1.0904424786567688) ? ( 347 ) : ( 348 ) ) ) ) : ( (scaler_output_12 <= 1.011098861694336) ? ( (scaler_output_7 <= -0.28772875666618347) ? ( (scaler_output_7 <= -0.4003283381462097) ? ( (scaler_output_2 <= 0.31491024047136307) ? ( 353 ) : ( 354 ) ) : ( 355 ) ) : ( (scaler_output_13 <= 0.3969828635454178) ? ( (scaler_output_7 <= -0.06252960860729218) ? ( 358 ) : ( (scaler_output_13 <= -1.3281722962856293) ? ( 360 ) : ( 361 ) ) ) : ( 362 ) ) ) : ( (scaler_output_8 <= 0.9072166979312897) ? ( 364 ) : ( (scaler_output_2 <= -0.2513979971408844) ? ( (scaler_output_2 <= -0.33658018708229065) ? ( 367 ) : ( 368 ) ) : ( 369 ) ) ) ) ) ) ) : ( 370 ) ) ) : ( (scaler_output_2 <= 0.770073264837265) ? ( (scaler_output_13 <= 0.3388451933860779) ? ( (scaler_output_13 <= -0.024708261247724295) ? ( (scaler_output_8 <= 0.9321211576461792) ? ( (scaler_output_9 <= -0.4961811453104019) ? ( (scaler_output_14 <= 0.7196512818336487) ? ( (scaler_output_14 <= 0.5459611564874649) ? ( 378 ) : ( (scaler_output_7 <= 0.06140074133872986) ? ( 380 ) : ( 381 ) ) ) : ( 382 ) ) : ( 383 ) ) : ( (scaler_output_14 <= 0.4950399398803711) ? ( 385 ) : ( (scaler_output_6 <= 2.1302322149276733) ? ( (scaler_output_14 <= 0.7161635160446167) ? ( 388 ) : ( (scaler_output_2 <= 0.5633617043495178) ? ( 390 ) : ( 391 ) ) ) : ( (scaler_output_9 <= -1.0980806350708008) ? ( 393 ) : ( 394 ) ) ) ) ) : ( (scaler_output_6 <= 1.5878965854644775) ? ( 396 ) : ( 397 ) ) ) : ( (scaler_output_13 <= 0.39036376774311066) ? ( 399 ) : ( (scaler_output_9 <= -0.9305519759654999) ? ( (scaler_output_7 <= -1.1403695940971375) ? ( (scaler_output_7 <= -1.2232258915901184) ? ( (scaler_output_9 <= -1.1876012682914734) ? ( 404 ) : ( 405 ) ) : ( 406 ) ) : ( (scaler_output_7 <= -1.0164392292499542) ? ( (scaler_output_7 <= -1.0922138094902039) ? ( 409 ) : ( 410 ) ) : ( (scaler_output_14 <= 1.185615062713623) ? ( 412 ) : ( 413 ) ) ) ) : ( (scaler_output_13 <= 0.411324217915535) ? ( 415 ) : ( 416 ) ) ) ) ) : ( (scaler_output_8 <= 0.8431766033172607) ? ( (scaler_output_2 <= 0.8726535141468048) ? ( 419 ) : ( (scaler_output_2 <= 2.2432509660720825) ? ( (scaler_output_9 <= -0.9616501033306122) ? ( (scaler_output_6 <= 1.312491774559021) ? ( 423 ) : ( 424 ) ) : ( 425 ) ) : ( 426 ) ) ) : ( (scaler_output_8 <= 1.0299601554870605) ? ( (scaler_output_9 <= -1.1553328037261963) ? ( (scaler_output_8 <= 0.9570256173610687) ? ( 430 ) : ( 431 ) ) : ( (scaler_output_2 <= 1.3465825915336609) ? ( (scaler_output_14 <= 1.5211369395256042) ? ( (scaler_output_14 <= 0.4371432512998581) ? ( 435 ) : ( (scaler_output_13 <= -1.20461605489254) ? ( 437 ) : ( (scaler_output_9 <= -0.8740880787372589) ? ( 439 ) : ( 440 ) ) ) ) : ( (scaler_output_13 <= -2.38937771320343) ? ( 442 ) : ( 443 ) ) ) : ( (scaler_output_7 <= 0.5882817730307579) ? ( 445 ) : ( 446 ) ) ) ) : ( (scaler_output_2 <= 3.959237575531006) ? ( (scaler_output_9 <= -0.9447634816169739) ? ( (scaler_output_7 <= 0.020326681435108185) ? ( (scaler_output_8 <= 1.0904424786567688) ? ( 451 ) : ( (scaler_output_7 <= -2.171470046043396) ? ( 453 ) : ( 454 ) ) ) : ( 455 ) ) : ( 456 ) ) : ( (scaler_output_13 <= -1.3432307541370392) ? ( 458 ) : ( 459 ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.6059269905090332) ? ( (scaler_output_11 <= -0.8911341726779938) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( 463 ) : ( (scaler_output_11 <= -1.0707721710205078) ? ( 465 ) : ( 466 ) ) ) : ( (scaler_output_13 <= 0.36135008931159973) ? ( (scaler_output_2 <= -0.3923196494579315) ? ( 469 ) : ( (scaler_output_7 <= 1.537942349910736) ? ( 471 ) : ( 472 ) ) ) : ( (scaler_output_13 <= 0.38313792645931244) ? ( (scaler_output_10 <= -0.6941851377487183) ? ( 475 ) : ( 476 ) ) : ( (scaler_output_4 <= -1.1020669341087341) ? ( (scaler_output_10 <= -0.9233116209506989) ? ( (scaler_output_12 <= -1.3887616395950317) ? ( 480 ) : ( 481 ) ) : ( 482 ) ) : ( 483 ) ) ) ) ) : ( (scaler_output_6 <= 1.0879308879375458) ? ( (scaler_output_13 <= 0.4099452495574951) ? ( (scaler_output_13 <= 0.3258276581764221) ? ( (scaler_output_13 <= 0.3141890913248062) ? ( (scaler_output_2 <= -0.37153124809265137) ? ( (scaler_output_13 <= 0.2526315748691559) ? ( (scaler_output_10 <= -0.35049544274806976) ? ( 491 ) : ( 492 ) ) : ( (scaler_output_8 <= -0.41272029280662537) ? ( 494 ) : ( 495 ) ) ) : ( (scaler_output_8 <= 0.25436375476419926) ? ( 497 ) : ( 498 ) ) ) : ( 499 ) ) : ( (scaler_output_7 <= 1.9139825105667114) ? ( 501 ) : ( 502 ) ) ) : ( (scaler_output_14 <= -0.9405192732810974) ? ( 504 ) : ( 505 ) ) ) : ( 506 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_6
		
	
		namespace EXT_SubModel_7 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 11 ,  {22.6 }} ,
					{ 12 ,  {22.8 }} ,
					{ 13 ,  {23.1 }} ,
					{ 14 ,  {24.3 }} ,
					{ 16 ,  {23.4 }} ,
					{ 20 ,  {19.9 }} ,
					{ 21 ,  {20.4 }} ,
					{ 22 ,  {18.7 }} ,
					{ 24 ,  {22.2 }} ,
					{ 26 ,  {21.1 }} ,
					{ 28 ,  {20.6 }} ,
					{ 30 ,  {20.4 }} ,
					{ 31 ,  {20.5 }} ,
					{ 34 ,  {18.2 }} ,
					{ 35 ,  {18.6 }} ,
					{ 37 ,  {19.6 }} ,
					{ 38 ,  {20.9 }} ,
					{ 47 ,  {22.9 }} ,
					{ 49 ,  {22.5 }} ,
					{ 50 ,  {22.6 }} ,
					{ 51 ,  {22. }} ,
					{ 52 ,  {24.1 }} ,
					{ 55 ,  {23.7 }} ,
					{ 56 ,  {23.4 }} ,
					{ 58 ,  {25.3 }} ,
					{ 59 ,  {24.5 }} ,
					{ 62 ,  {23.5 }} ,
					{ 65 ,  {24.8 }} ,
					{ 67 ,  {24.7 }} ,
					{ 68 ,  {24.6 }} ,
					{ 69 ,  {25. }} ,
					{ 72 ,  {23.2 }} ,
					{ 74 ,  {23.8 }} ,
					{ 75 ,  {23.6 }} ,
					{ 76 ,  {21.6 }} ,
					{ 79 ,  {22.2 }} ,
					{ 80 ,  {22.9 }} ,
					{ 81 ,  {20.7 }} ,
					{ 83 ,  {29.4 }} ,
					{ 87 ,  {25. }} ,
					{ 88 ,  {24.8 }} ,
					{ 89 ,  {26.4 }} ,
					{ 92 ,  {23.8 }} ,
					{ 93 ,  {24. }} ,
					{ 94 ,  {23.1 }} ,
					{ 95 ,  {27. }} ,
					{ 100 ,  {33.1 }} ,
					{ 103 ,  {35.1 }} ,
					{ 104 ,  {34.9 }} ,
					{ 105 ,  {37. }} ,
					{ 107 ,  {31.6 }} ,
					{ 109 ,  {32.4 }} ,
					{ 110 ,  {32. }} ,
					{ 112 ,  {30.8 }} ,
					{ 115 ,  {27.9 }} ,
					{ 116 ,  {28. }} ,
					{ 118 ,  {26.6 }} ,
					{ 119 ,  {26.2 }} ,
					{ 123 ,  {22.8 }} ,
					{ 124 ,  {22. }} ,
					{ 126 ,  {24.8 }} ,
					{ 128 ,  {23.9 }} ,
					{ 129 ,  {23.6 }} ,
					{ 133 ,  {29.9 }} ,
					{ 134 ,  {30.1 }} ,
					{ 135 ,  {28.7 }} ,
					{ 138 ,  {26.6 }} ,
					{ 139 ,  {28.4 }} ,
					{ 142 ,  {25. }} ,
					{ 144 ,  {23.7 }} ,
					{ 145 ,  {23.9 }} ,
					{ 146 ,  {26.5 }} ,
					{ 149 ,  {27.9 }} ,
					{ 151 ,  {30.7 }} ,
					{ 155 ,  {29.6 }} ,
					{ 159 ,  {20.3 }} ,
					{ 161 ,  {22.5 }} ,
					{ 162 ,  {22. }} ,
					{ 164 ,  {21.1 }} ,
					{ 166 ,  {20.6 }} ,
					{ 167 ,  {20.7 }} ,
					{ 170 ,  {23.2 }} ,
					{ 172 ,  {24.7 }} ,
					{ 173 ,  {24.4 }} ,
					{ 176 ,  {23.1 }} ,
					{ 177 ,  {23. }} ,
					{ 178 ,  {22.6 }} ,
					{ 183 ,  {18.5 }} ,
					{ 184 ,  {18.7 }} ,
					{ 187 ,  {20. }} ,
					{ 188 ,  {19.5 }} ,
					{ 189 ,  {19. }} ,
					{ 190 ,  {16. }} ,
					{ 193 ,  {21.7 }} ,
					{ 195 ,  {20.1 }} ,
					{ 196 ,  {20.1 }} ,
					{ 198 ,  {22.2 }} ,
					{ 199 ,  {22. }} ,
					{ 202 ,  {15. }} ,
					{ 203 ,  {16.1 }} ,
					{ 207 ,  {23.8 }} ,
					{ 208 ,  {24. }} ,
					{ 213 ,  {18.2 }} ,
					{ 214 ,  {18.5 }} ,
					{ 216 ,  {19.4 }} ,
					{ 217 ,  {19.2 }} ,
					{ 220 ,  {21.2 }} ,
					{ 221 ,  {21. }} ,
					{ 222 ,  {19.8 }} ,
					{ 226 ,  {21.7 }} ,
					{ 227 ,  {21.8 }} ,
					{ 231 ,  {20.8 }} ,
					{ 232 ,  {20.8 }} ,
					{ 233 ,  {20.2 }} ,
					{ 234 ,  {21.2 }} ,
					{ 235 ,  {23. }} ,
					{ 241 ,  {19.6 }} ,
					{ 242 ,  {19.3 }} ,
					{ 244 ,  {20.8 }} ,
					{ 246 ,  {21.7 }} ,
					{ 247 ,  {21.9 }} ,
					{ 249 ,  {21.2 }} ,
					{ 251 ,  {20.1 }} ,
					{ 254 ,  {19.3 }} ,
					{ 255 ,  {19.2 }} ,
					{ 256 ,  {19.5 }} ,
					{ 259 ,  {17.1 }} ,
					{ 260 ,  {17.4 }} ,
					{ 263 ,  {18.9 }} ,
					{ 264 ,  {19.6 }} ,
					{ 266 ,  {18.3 }} ,
					{ 267 ,  {18.4 }} ,
					{ 269 ,  {18.9 }} ,
					{ 272 ,  {16.8 }} ,
					{ 274 ,  {17.4 }} ,
					{ 275 ,  {17.7 }} ,
					{ 276 ,  {16.8 }} ,
					{ 283 ,  {23.1 }} ,
					{ 284 ,  {23.2 }} ,
					{ 285 ,  {23.7 }} ,
					{ 287 ,  {22.5 }} ,
					{ 288 ,  {21.7 }} ,
					{ 290 ,  {17.5 }} ,
					{ 292 ,  {19.4 }} ,
					{ 293 ,  {19.8 }} ,
					{ 296 ,  {18.8 }} ,
					{ 297 ,  {27.1 }} ,
					{ 299 ,  {21.7 }} ,
					{ 302 ,  {13.1 }} ,
					{ 304 ,  {13.8 }} ,
					{ 305 ,  {14.1 }} ,
					{ 309 ,  {13.9 }} ,
					{ 310 ,  {13.1 }} ,
					{ 313 ,  {16.6 }} ,
					{ 314 ,  {16.5 }} ,
					{ 317 ,  {15.2 }} ,
					{ 318 ,  {15.6 }} ,
					{ 319 ,  {14.4 }} ,
					{ 323 ,  {18. }} ,
					{ 324 ,  {19.4 }} ,
					{ 327 ,  {17.8 }} ,
					{ 328 ,  {15.7 }} ,
					{ 332 ,  {14.4 }} ,
					{ 334 ,  {14. }} ,
					{ 336 ,  {13.3 }} ,
					{ 337 ,  {13.4 }} ,
					{ 338 ,  {15.2 }} ,
					{ 339 ,  {15.6 }} ,
					{ 344 ,  {17.8 }} ,
					{ 346 ,  {17.3 }} ,
					{ 347 ,  {17.4 }} ,
					{ 350 ,  {18.1 }} ,
					{ 351 ,  {18.4 }} ,
					{ 353 ,  {18.7 }} ,
					{ 354 ,  {19.1 }} ,
					{ 356 ,  {19.3 }} ,
					{ 357 ,  {20. }} ,
					{ 358 ,  {16.7 }} ,
					{ 363 ,  {11.7 }} ,
					{ 364 ,  {10.2 }} ,
					{ 366 ,  {19.1 }} ,
					{ 370 ,  {16.3 }} ,
					{ 371 ,  {17.2 }} ,
					{ 372 ,  {13.8 }} ,
					{ 374 ,  {13.3 }} ,
					{ 375 ,  {13.8 }} ,
					{ 376 ,  {27.5 }} ,
					{ 383 ,  {14.9 }} ,
					{ 384 ,  {14.9 }} ,
					{ 385 ,  {15.1 }} ,
					{ 387 ,  {12.5 }} ,
					{ 389 ,  {13.1 }} ,
					{ 390 ,  {13.4 }} ,
					{ 392 ,  {17.1 }} ,
					{ 393 ,  {17.8 }} ,
					{ 396 ,  {12.7 }} ,
					{ 397 ,  {12.6 }} ,
					{ 399 ,  {10.4 }} ,
					{ 400 ,  {11.7 }} ,
					{ 404 ,  {11. }} ,
					{ 406 ,  {10.2 }} ,
					{ 407 ,  {10.4 }} ,
					{ 409 ,  {13.9 }} ,
					{ 411 ,  {13.3 }} ,
					{ 412 ,  {13.1 }} ,
					{ 416 ,  {6.3 }} ,
					{ 417 ,  {5. }} ,
					{ 419 ,  {8.5 }} ,
					{ 421 ,  {7. }} ,
					{ 422 ,  {7.2 }} ,
					{ 426 ,  {12.3 }} ,
					{ 427 ,  {11.3 }} ,
					{ 428 ,  {12.8 }} ,
					{ 432 ,  {10.5 }} ,
					{ 433 ,  {10.2 }} ,
					{ 434 ,  {9.7 }} ,
					{ 436 ,  {8.4 }} ,
					{ 437 ,  {8.4 }} ,
					{ 442 ,  {34.9 }} ,
					{ 443 ,  {36.2 }} ,
					{ 444 ,  {37.9 }} ,
					{ 448 ,  {32.7 }} ,
					{ 450 ,  {33.3 }} ,
					{ 451 ,  {33.8 }} ,
					{ 452 ,  {31. }} ,
					{ 453 ,  {29. }} ,
					{ 458 ,  {44. }} ,
					{ 459 ,  {43.5 }} ,
					{ 461 ,  {46. }} ,
					{ 462 ,  {45.4 }} ,
					{ 464 ,  {50. }} ,
					{ 466 ,  {48.8 }} ,
					{ 467 ,  {50. }} ,
					{ 469 ,  {37.6 }} ,
					{ 471 ,  {50. }} ,
					{ 474 ,  {41.7 }} ,
					{ 475 ,  {42.8 }} ,
					{ 476 ,  {44.8 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 1.019559383392334) ? ( (scaler_output_14 <= -0.4061954766511917) ? ( (scaler_output_9 <= -1.0711385011672974) ? ( 3 ) : ( (scaler_output_7 <= 0.4048648476600647) ? ( (scaler_output_7 <= -0.22328497469425201) ? ( (scaler_output_3 <= 0.47074170410633087) ? ( (scaler_output_13 <= 0.3885435312986374) ? ( (scaler_output_10 <= -0.4077770560979843) ? ( (scaler_output_2 <= -0.3525758385658264) ? ( (scaler_output_9 <= 0.08348152041435242) ? ( 11 ) : ( 12 ) ) : ( 13 ) ) : ( 14 ) ) : ( (scaler_output_8 <= -1.4195724129676819) ? ( 16 ) : ( (scaler_output_7 <= -0.42015719413757324) ? ( (scaler_output_7 <= -0.48247645795345306) ? ( (scaler_output_7 <= -0.5773716866970062) ? ( 20 ) : ( 21 ) ) : ( 22 ) ) : ( (scaler_output_4 <= -0.9011208117008209) ? ( 24 ) : ( (scaler_output_4 <= -0.8167820870876312) ? ( 26 ) : ( (scaler_output_9 <= -0.1507338285446167) ? ( 28 ) : ( (scaler_output_7 <= -0.3132230043411255) ? ( 30 ) : ( 31 ) ) ) ) ) ) ) ) : ( (scaler_output_14 <= -0.5568664073944092) ? ( (scaler_output_9 <= 3.261797547340393) ? ( 34 ) : ( 35 ) ) : ( (scaler_output_14 <= -0.4731603413820267) ? ( 37 ) : ( 38 ) ) ) ) : ( (scaler_output_8 <= 0.7862521111965179) ? ( (scaler_output_7 <= 0.27385276556015015) ? ( (scaler_output_12 <= 0.5726628303527832) ? ( (scaler_output_13 <= 0.40680117905139923) ? ( (scaler_output_2 <= -0.41481415927410126) ? ( (scaler_output_3 <= 2.6516062021255493) ? ( (scaler_output_8 <= 0.07647469080984592) ? ( (scaler_output_2 <= -0.4186144918203354) ? ( 47 ) : ( (scaler_output_12 <= -1.181081384420395) ? ( 49 ) : ( 50 ) ) ) : ( 51 ) ) : ( 52 ) ) : ( (scaler_output_6 <= -1.0559898018836975) ? ( (scaler_output_4 <= -0.45669247582554817) ? ( 55 ) : ( 56 ) ) : ( (scaler_output_12 <= 0.04192443937063217) ? ( 58 ) : ( 59 ) ) ) ) : ( (scaler_output_14 <= -0.7947311997413635) ? ( (scaler_output_6 <= -1.272076666355133) ? ( 62 ) : ( (scaler_output_4 <= -0.7133755087852478) ? ( (scaler_output_7 <= 0.013244946720078588) ? ( 65 ) : ( (scaler_output_2 <= -0.41949379444122314) ? ( 67 ) : ( 68 ) ) ) : ( 69 ) ) ) : ( (scaler_output_14 <= -0.4933893233537674) ? ( (scaler_output_6 <= -0.8907468616962433) ? ( 72 ) : ( (scaler_output_14 <= -0.6287141442298889) ? ( 74 ) : ( 75 ) ) ) : ( 76 ) ) ) ) : ( (scaler_output_14 <= -0.821238100528717) ? ( (scaler_output_11 <= -0.5671966969966888) ? ( 79 ) : ( 80 ) ) : ( 81 ) ) ) : ( (scaler_output_9 <= -0.21617846563458443) ? ( 83 ) : ( (scaler_output_8 <= -1.513853669166565) ? ( (scaler_output_4 <= -0.7507778704166412) ? ( (scaler_output_14 <= -0.7298589497804642) ? ( 87 ) : ( 88 ) ) : ( 89 ) ) : ( (scaler_output_11 <= -0.46118082106113434) ? ( (scaler_output_9 <= 0.012567240744829178) ? ( 92 ) : ( 93 ) ) : ( 94 ) ) ) ) ) : ( 95 ) ) ) : ( (scaler_output_8 <= -0.9108096957206726) ? ( (scaler_output_12 <= -0.30420926958322525) ? ( (scaler_output_8 <= -1.2559144496917725) ? ( (scaler_output_14 <= -1.1532722115516663) ? ( 100 ) : ( (scaler_output_14 <= -1.0674735307693481) ? ( (scaler_output_12 <= -1.1349302232265472) ? ( 103 ) : ( 104 ) ) : ( 105 ) ) ) : ( (scaler_output_6 <= -1.1025967597961426) ? ( 107 ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( 109 ) : ( 110 ) ) ) ) : ( (scaler_output_4 <= -1.0382629036903381) ? ( 112 ) : ( (scaler_output_4 <= -0.8182488679885864) ? ( (scaler_output_9 <= 0.6873396039009094) ? ( 115 ) : ( 116 ) ) : ( (scaler_output_3 <= -0.04605083167552948) ? ( 118 ) : ( 119 ) ) ) ) ) : ( (scaler_output_14 <= -0.8540229797363281) ? ( (scaler_output_7 <= 0.7554107010364532) ? ( (scaler_output_14 <= -0.9928355515003204) ? ( 123 ) : ( 124 ) ) : ( (scaler_output_13 <= 0.39163243770599365) ? ( 126 ) : ( (scaler_output_10 <= -0.9233116209506989) ? ( 128 ) : ( 129 ) ) ) ) : ( (scaler_output_12 <= -0.419587180018425) ? ( (scaler_output_4 <= -0.13767215609550476) ? ( (scaler_output_8 <= 0.34686607867479324) ? ( 133 ) : ( 134 ) ) : ( 135 ) ) : ( (scaler_output_7 <= 0.5153399109840393) ? ( (scaler_output_3 <= 0.1813378632068634) ? ( 138 ) : ( 139 ) ) : ( (scaler_output_12 <= 0.9880232810974121) ? ( (scaler_output_6 <= -0.7255040109157562) ? ( 142 ) : ( (scaler_output_3 <= 0.636115312576294) ? ( 144 ) : ( 145 ) ) ) : ( 146 ) ) ) ) ) ) ) ) : ( (scaler_output_14 <= 0.30391107499599457) ? ( (scaler_output_9 <= -1.1802685856819153) ? ( 149 ) : ( (scaler_output_12 <= -2.1041045784950256) ? ( 151 ) : ( (scaler_output_11 <= -0.6113699972629547) ? ( (scaler_output_9 <= 0.3607613295316696) ? ( (scaler_output_4 <= -1.133602261543274) ? ( 155 ) : ( (scaler_output_11 <= -0.7821733951568604) ? ( (scaler_output_3 <= -0.08739423751831055) ? ( (scaler_output_13 <= 0.2761293277144432) ? ( 159 ) : ( (scaler_output_14 <= 0.13789402320981026) ? ( 161 ) : ( 162 ) ) ) : ( (scaler_output_7 <= -0.5823288857936859) ? ( 164 ) : ( (scaler_output_14 <= -0.0706736147403717) ? ( 166 ) : ( 167 ) ) ) ) : ( (scaler_output_13 <= 0.3883780539035797) ? ( (scaler_output_9 <= -0.0567228589206934) ? ( 170 ) : ( (scaler_output_8 <= -0.825422927737236) ? ( 172 ) : ( 173 ) ) ) : ( (scaler_output_12 <= -0.37343601882457733) ? ( (scaler_output_7 <= -0.46264757588505745) ? ( 176 ) : ( 177 ) ) : ( 178 ) ) ) ) ) : ( (scaler_output_7 <= -0.4279470890760422) ? ( (scaler_output_8 <= 0.569227434694767) ? ( (scaler_output_13 <= 0.41507503390312195) ? ( (scaler_output_10 <= -0.35049544274806976) ? ( 183 ) : ( 184 ) ) : ( (scaler_output_7 <= -0.527091383934021) ? ( (scaler_output_10 <= -0.6369035243988037) ? ( 187 ) : ( 188 ) ) : ( 189 ) ) ) : ( 190 ) ) : ( (scaler_output_2 <= -0.4104563742876053) ? ( (scaler_output_7 <= -0.3500480204820633) ? ( 193 ) : ( (scaler_output_2 <= -0.4163084179162979) ? ( 195 ) : ( 196 ) ) ) : ( (scaler_output_8 <= -0.6706594377756119) ? ( 198 ) : ( 199 ) ) ) ) ) : ( (scaler_output_13 <= -2.157819986343384) ? ( (scaler_output_9 <= -0.9616739749908447) ? ( 202 ) : ( 203 ) ) : ( (scaler_output_14 <= -0.03370343614369631) ? ( (scaler_output_13 <= 0.20370546728372574) ? ( (scaler_output_9 <= -0.37305448204278946) ? ( 207 ) : ( 208 ) ) : ( (scaler_output_4 <= -0.08413539454340935) ? ( (scaler_output_14 <= -0.13903358206152916) ? ( (scaler_output_13 <= 0.37894585728645325) ? ( (scaler_output_10 <= -0.5223402976989746) ? ( 213 ) : ( 214 ) ) : ( (scaler_output_8 <= -0.39137354493141174) ? ( 216 ) : ( 217 ) ) ) : ( (scaler_output_8 <= 0.8663021624088287) ? ( (scaler_output_8 <= 0.42869506031274796) ? ( 220 ) : ( 221 ) ) : ( 222 ) ) ) : ( (scaler_output_4 <= 1.3217542171478271) ? ( (scaler_output_8 <= -0.88234743475914) ? ( (scaler_output_8 <= -1.3857735097408295) ? ( 226 ) : ( 227 ) ) : ( (scaler_output_14 <= -0.30574817955493927) ? ( (scaler_output_2 <= 0.16949643194675446) ? ( (scaler_output_10 <= 0.5660104155540466) ? ( 231 ) : ( 232 ) ) : ( 233 ) ) : ( 234 ) ) ) : ( 235 ) ) ) ) : ( (scaler_output_14 <= 0.22160010039806366) ? ( (scaler_output_9 <= -0.4703377038240433) ? ( (scaler_output_13 <= 0.3927356153726578) ? ( (scaler_output_12 <= 0.27268026769161224) ? ( (scaler_output_10 <= -0.46505868434906006) ? ( 241 ) : ( 242 ) ) : ( (scaler_output_13 <= -0.6022237688302994) ? ( 244 ) : ( (scaler_output_8 <= 0.8307243883609772) ? ( 246 ) : ( 247 ) ) ) ) : ( (scaler_output_12 <= 0.572662815451622) ? ( 249 ) : ( (scaler_output_9 <= -0.8147818446159363) ? ( 251 ) : ( (scaler_output_2 <= 0.012984126806259155) ? ( (scaler_output_8 <= 0.9001010954380035) ? ( 254 ) : ( 255 ) ) : ( 256 ) ) ) ) ) : ( (scaler_output_7 <= -0.7777847647666931) ? ( (scaler_output_4 <= -0.721442699432373) ? ( 259 ) : ( 260 ) ) : ( (scaler_output_6 <= -0.16198334842920303) ? ( (scaler_output_8 <= 0.6741819977760315) ? ( 263 ) : ( 264 ) ) : ( (scaler_output_7 <= -0.21903592348098755) ? ( 266 ) : ( 267 ) ) ) ) ) : ( (scaler_output_10 <= -0.6369035243988037) ? ( 269 ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_2 <= -0.33468784391880035) ? ( 272 ) : ( (scaler_output_7 <= -0.24594654142856598) ? ( 274 ) : ( 275 ) ) ) : ( 276 ) ) ) ) ) ) ) ) ) : ( (scaler_output_2 <= 0.29692724347114563) ? ( (scaler_output_8 <= 0.5336496233940125) ? ( (scaler_output_13 <= 0.39880311489105225) ? ( (scaler_output_9 <= 0.07230337336659431) ? ( (scaler_output_9 <= -0.2994173429906368) ? ( (scaler_output_10 <= 0.6232920289039612) ? ( 283 ) : ( 284 ) ) : ( 285 ) ) : ( (scaler_output_9 <= 0.5173746347427368) ? ( 287 ) : ( 288 ) ) ) : ( (scaler_output_9 <= -0.2885497137904167) ? ( 290 ) : ( (scaler_output_4 <= -0.3782208114862442) ? ( 292 ) : ( 293 ) ) ) ) : ( (scaler_output_2 <= -0.4057367295026779) ? ( (scaler_output_8 <= 0.9997189939022064) ? ( 296 ) : ( 297 ) ) : ( (scaler_output_4 <= -0.6495714485645294) ? ( 299 ) : ( (scaler_output_13 <= -1.5549312829971313) ? ( (scaler_output_7 <= -0.8471857756376266) ? ( 302 ) : ( (scaler_output_2 <= 0.021529093384742737) ? ( 304 ) : ( 305 ) ) ) : ( (scaler_output_4 <= -0.28801505267620087) ? ( (scaler_output_13 <= 0.10419849515892565) ? ( (scaler_output_14 <= 0.6701251566410065) ? ( 309 ) : ( 310 ) ) : ( (scaler_output_13 <= 0.3541242629289627) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( 313 ) : ( 314 ) ) : ( (scaler_output_9 <= 0.6281528174877167) ? ( (scaler_output_8 <= 0.891206681728363) ? ( 317 ) : ( 318 ) ) : ( 319 ) ) ) ) : ( (scaler_output_9 <= -0.9253928363323212) ? ( (scaler_output_14 <= 0.5996725410223007) ? ( (scaler_output_6 <= 1.6387405395507812) ? ( 323 ) : ( 324 ) ) : ( (scaler_output_13 <= 0.1688449247740209) ? ( (scaler_output_13 <= -0.002644632011651993) ? ( 327 ) : ( 328 ) ) : ( (scaler_output_2 <= 0.03944896021857858) ? ( (scaler_output_4 <= 2.0287325382232666) ? ( (scaler_output_7 <= -1.5411957502365112) ? ( 332 ) : ( (scaler_output_13 <= 0.3494908958673477) ? ( 334 ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( 336 ) : ( 337 ) ) ) ) : ( 338 ) ) : ( 339 ) ) ) ) : ( (scaler_output_7 <= 0.15629597939550877) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_7 <= -0.46264761686325073) ? ( (scaler_output_8 <= 0.7293276190757751) ? ( 344 ) : ( (scaler_output_10 <= -0.7514667510986328) ? ( 346 ) : ( 347 ) ) ) : ( (scaler_output_14 <= 0.6136235594749451) ? ( (scaler_output_10 <= 0.5087288022041321) ? ( 350 ) : ( 351 ) ) : ( (scaler_output_12 <= 0.27268026769161224) ? ( 353 ) : ( 354 ) ) ) ) : ( (scaler_output_13 <= 0.4157921075820923) ? ( 356 ) : ( 357 ) ) ) : ( 358 ) ) ) ) ) ) ) ) : ( (scaler_output_6 <= 0.9777689576148987) ? ( (scaler_output_7 <= 0.2943897843360901) ? ( (scaler_output_14 <= 0.7001198530197144) ? ( (scaler_output_7 <= -0.8471857905387878) ? ( 363 ) : ( 364 ) ) : ( (scaler_output_8 <= 0.5461018420755863) ? ( 366 ) : ( (scaler_output_9 <= -0.9182034432888031) ? ( (scaler_output_6 <= 0.664231151342392) ? ( (scaler_output_13 <= -1.054362714290619) ? ( 370 ) : ( 371 ) ) : ( 372 ) ) : ( (scaler_output_13 <= -0.33878403529524803) ? ( 374 ) : ( 375 ) ) ) ) ) : ( 376 ) ) : ( (scaler_output_14 <= 0.9896033704280853) ? ( (scaler_output_2 <= 0.8038013279438019) ? ( (scaler_output_2 <= 0.681978166103363) ? ( (scaler_output_7 <= 0.10459931753575802) ? ( (scaler_output_13 <= -0.023825719952583313) ? ( (scaler_output_2 <= 0.4532826840877533) ? ( 383 ) : ( 384 ) ) : ( 385 ) ) : ( (scaler_output_2 <= 0.36263155937194824) ? ( 387 ) : ( (scaler_output_6 <= 1.2616477608680725) ? ( 389 ) : ( 390 ) ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( 392 ) : ( 393 ) ) ) : ( (scaler_output_2 <= 1.2802751660346985) ? ( (scaler_output_7 <= -0.3259701207280159) ? ( 396 ) : ( 397 ) ) : ( (scaler_output_9 <= -0.9556311070919037) ? ( 399 ) : ( 400 ) ) ) ) : ( (scaler_output_6 <= 1.1175898313522339) ? ( (scaler_output_7 <= 0.0033305175602436066) ? ( (scaler_output_2 <= 1.1528231352567673) ? ( 404 ) : ( (scaler_output_14 <= 1.6160038113594055) ? ( 406 ) : ( 407 ) ) ) : ( (scaler_output_9 <= -1.1791459918022156) ? ( 409 ) : ( (scaler_output_14 <= 1.3725586533546448) ? ( 411 ) : ( 412 ) ) ) ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( (scaler_output_9 <= -1.0903897285461426) ? ( (scaler_output_13 <= 0.035139329731464386) ? ( 416 ) : ( 417 ) ) : ( (scaler_output_2 <= 0.9449898302555084) ? ( 419 ) : ( (scaler_output_13 <= -1.2774259746074677) ? ( 421 ) : ( 422 ) ) ) ) : ( (scaler_output_2 <= 0.8862636983394623) ? ( (scaler_output_7 <= -1.0164392292499542) ? ( (scaler_output_9 <= -1.081074595451355) ? ( 426 ) : ( 427 ) ) : ( 428 ) ) : ( (scaler_output_9 <= -0.9734731316566467) ? ( (scaler_output_9 <= -1.0223177671432495) ? ( (scaler_output_14 <= 2.347036838531494) ? ( 432 ) : ( 433 ) ) : ( 434 ) ) : ( (scaler_output_6 <= 1.4819716215133667) ? ( 436 ) : ( 437 ) ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.5457322597503662) ? ( (scaler_output_11 <= -0.8705199658870697) ? ( (scaler_output_6 <= -0.687371015548706) ? ( (scaler_output_12 <= 0.04192444495856762) ? ( 442 ) : ( 443 ) ) : ( 444 ) ) : ( (scaler_output_11 <= -0.36694446206092834) ? ( (scaler_output_2 <= -0.3388393819332123) ? ( (scaler_output_10 <= -0.9233116209506989) ? ( 448 ) : ( (scaler_output_6 <= -0.24248626828193665) ? ( 450 ) : ( 451 ) ) ) : ( 452 ) ) : ( 453 ) ) ) : ( (scaler_output_10 <= -0.4077770560979843) ? ( (scaler_output_7 <= 2.161843180656433) ? ( (scaler_output_7 <= 1.7822622060775757) ? ( (scaler_output_13 <= 0.33029554784297943) ? ( 458 ) : ( 459 ) ) : ( (scaler_output_13 <= 0.26267050951719284) ? ( 461 ) : ( 462 ) ) ) : ( (scaler_output_14 <= -0.9921380281448364) ? ( 464 ) : ( (scaler_output_9 <= -0.6997282803058624) ? ( 466 ) : ( 467 ) ) ) ) : ( (scaler_output_7 <= 2.6207395792007446) ? ( 469 ) : ( (scaler_output_13 <= 0.2773979902267456) ? ( 471 ) : ( (scaler_output_8 <= 0.2828260213136673) ? ( (scaler_output_3 <= -0.04605083167552948) ? ( 474 ) : ( 475 ) ) : ( 476 ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_7
		
	
		namespace EXT_SubModel_8 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {27. }} ,
					{ 9 ,  {24.6 }} ,
					{ 11 ,  {25.2 }} ,
					{ 12 ,  {25. }} ,
					{ 13 ,  {29.1 }} ,
					{ 17 ,  {23.2 }} ,
					{ 19 ,  {22.3 }} ,
					{ 20 ,  {21.9 }} ,
					{ 26 ,  {25.3 }} ,
					{ 27 ,  {25. }} ,
					{ 29 ,  {24.8 }} ,
					{ 30 ,  {24.7 }} ,
					{ 34 ,  {24.2 }} ,
					{ 35 ,  {24.1 }} ,
					{ 36 ,  {23.7 }} ,
					{ 38 ,  {24.7 }} ,
					{ 39 ,  {24.4 }} ,
					{ 40 ,  {22.9 }} ,
					{ 43 ,  {23.1 }} ,
					{ 44 ,  {22.6 }} ,
					{ 45 ,  {23.8 }} ,
					{ 47 ,  {20.7 }} ,
					{ 50 ,  {23.1 }} ,
					{ 51 ,  {22.9 }} ,
					{ 53 ,  {22.2 }} ,
					{ 54 ,  {22.2 }} ,
					{ 60 ,  {30.8 }} ,
					{ 61 ,  {30.1 }} ,
					{ 63 ,  {35.1 }} ,
					{ 66 ,  {32.5 }} ,
					{ 67 ,  {32.4 }} ,
					{ 68 ,  {32. }} ,
					{ 70 ,  {23.9 }} ,
					{ 73 ,  {28.6 }} ,
					{ 74 ,  {28.4 }} ,
					{ 77 ,  {29.4 }} ,
					{ 79 ,  {29.9 }} ,
					{ 80 ,  {30.1 }} ,
					{ 81 ,  {31.2 }} ,
					{ 84 ,  {28.5 }} ,
					{ 86 ,  {28.2 }} ,
					{ 88 ,  {28. }} ,
					{ 89 ,  {27.9 }} ,
					{ 91 ,  {26.6 }} ,
					{ 92 ,  {26.2 }} ,
					{ 96 ,  {22.8 }} ,
					{ 97 ,  {22. }} ,
					{ 98 ,  {24. }} ,
					{ 99 ,  {26.5 }} ,
					{ 101 ,  {50. }} ,
					{ 107 ,  {15.3 }} ,
					{ 108 ,  {16.1 }} ,
					{ 113 ,  {22.2 }} ,
					{ 114 ,  {22.6 }} ,
					{ 116 ,  {22.8 }} ,
					{ 118 ,  {23.1 }} ,
					{ 119 ,  {23.2 }} ,
					{ 125 ,  {19.6 }} ,
					{ 126 ,  {19.2 }} ,
					{ 128 ,  {20.7 }} ,
					{ 129 ,  {20.3 }} ,
					{ 131 ,  {21.5 }} ,
					{ 132 ,  {21.2 }} ,
					{ 134 ,  {23.8 }} ,
					{ 135 ,  {22.7 }} ,
					{ 136 ,  {25. }} ,
					{ 139 ,  {17.4 }} ,
					{ 143 ,  {21.7 }} ,
					{ 145 ,  {20.5 }} ,
					{ 148 ,  {20. }} ,
					{ 149 ,  {20.1 }} ,
					{ 150 ,  {19.3 }} ,
					{ 152 ,  {19.3 }} ,
					{ 154 ,  {18.9 }} ,
					{ 155 ,  {18.6 }} ,
					{ 158 ,  {22. }} ,
					{ 159 ,  {22.5 }} ,
					{ 162 ,  {21.1 }} ,
					{ 163 ,  {20.9 }} ,
					{ 167 ,  {20.3 }} ,
					{ 168 ,  {20.5 }} ,
					{ 169 ,  {20.8 }} ,
					{ 170 ,  {20. }} ,
					{ 172 ,  {21. }} ,
					{ 173 ,  {24.3 }} ,
					{ 176 ,  {22.9 }} ,
					{ 177 ,  {23. }} ,
					{ 179 ,  {24.5 }} ,
					{ 180 ,  {23.9 }} ,
					{ 182 ,  {27.9 }} ,
					{ 185 ,  {15. }} ,
					{ 186 ,  {16.1 }} ,
					{ 191 ,  {21.1 }} ,
					{ 194 ,  {18.5 }} ,
					{ 195 ,  {18.2 }} ,
					{ 197 ,  {18.7 }} ,
					{ 198 ,  {19. }} ,
					{ 202 ,  {21.7 }} ,
					{ 203 ,  {21.8 }} ,
					{ 205 ,  {20.1 }} ,
					{ 207 ,  {20.4 }} ,
					{ 208 ,  {20.6 }} ,
					{ 211 ,  {23. }} ,
					{ 212 ,  {22.2 }} ,
					{ 214 ,  {21.2 }} ,
					{ 215 ,  {21.4 }} ,
					{ 217 ,  {11.9 }} ,
					{ 221 ,  {18.2 }} ,
					{ 223 ,  {18.5 }} ,
					{ 224 ,  {18.4 }} ,
					{ 226 ,  {17.7 }} ,
					{ 227 ,  {17.5 }} ,
					{ 229 ,  {16.8 }} ,
					{ 232 ,  {20.6 }} ,
					{ 235 ,  {20.2 }} ,
					{ 236 ,  {20.1 }} ,
					{ 237 ,  {19.8 }} ,
					{ 240 ,  {18.7 }} ,
					{ 241 ,  {19.1 }} ,
					{ 244 ,  {19.5 }} ,
					{ 245 ,  {19.6 }} ,
					{ 246 ,  {19.2 }} ,
					{ 249 ,  {20.8 }} ,
					{ 251 ,  {21.9 }} ,
					{ 252 ,  {21.7 }} ,
					{ 254 ,  {22.6 }} ,
					{ 255 ,  {22.7 }} ,
					{ 259 ,  {24.8 }} ,
					{ 260 ,  {25.1 }} ,
					{ 262 ,  {29. }} ,
					{ 263 ,  {27.5 }} ,
					{ 266 ,  {22. }} ,
					{ 267 ,  {22.8 }} ,
					{ 269 ,  {24.4 }} ,
					{ 271 ,  {23.8 }} ,
					{ 272 ,  {23.7 }} ,
					{ 276 ,  {27.1 }} ,
					{ 277 ,  {20.4 }} ,
					{ 282 ,  {22.4 }} ,
					{ 283 ,  {23.7 }} ,
					{ 286 ,  {19.4 }} ,
					{ 287 ,  {19.1 }} ,
					{ 288 ,  {19.8 }} ,
					{ 292 ,  {16.6 }} ,
					{ 295 ,  {14.4 }} ,
					{ 297 ,  {13.9 }} ,
					{ 298 ,  {13.5 }} ,
					{ 300 ,  {15. }} ,
					{ 301 ,  {15.2 }} ,
					{ 306 ,  {17.4 }} ,
					{ 307 ,  {18. }} ,
					{ 309 ,  {17.5 }} ,
					{ 311 ,  {18.3 }} ,
					{ 312 ,  {18.1 }} ,
					{ 314 ,  {18.7 }} ,
					{ 315 ,  {19. }} ,
					{ 318 ,  {13.8 }} ,
					{ 320 ,  {14.5 }} ,
					{ 321 ,  {14.6 }} ,
					{ 327 ,  {17.2 }} ,
					{ 328 ,  {17.3 }} ,
					{ 329 ,  {17.8 }} ,
					{ 330 ,  {17.9 }} ,
					{ 332 ,  {17.2 }} ,
					{ 333 ,  {16.7 }} ,
					{ 334 ,  {14. }} ,
					{ 337 ,  {19.3 }} ,
					{ 338 ,  {20. }} ,
					{ 339 ,  {21.7 }} ,
					{ 340 ,  {27.5 }} ,
					{ 346 ,  {13.5 }} ,
					{ 347 ,  {14.1 }} ,
					{ 350 ,  {14.1 }} ,
					{ 352 ,  {14.9 }} ,
					{ 353 ,  {15.2 }} ,
					{ 354 ,  {16.1 }} ,
					{ 357 ,  {12.7 }} ,
					{ 358 ,  {12.5 }} ,
					{ 359 ,  {13. }} ,
					{ 362 ,  {13.1 }} ,
					{ 363 ,  {15.6 }} ,
					{ 366 ,  {19.4 }} ,
					{ 367 ,  {18.4 }} ,
					{ 369 ,  {17.8 }} ,
					{ 371 ,  {17.1 }} ,
					{ 372 ,  {16.7 }} ,
					{ 375 ,  {10.2 }} ,
					{ 379 ,  {13.8 }} ,
					{ 380 ,  {13.9 }} ,
					{ 381 ,  {13.1 }} ,
					{ 383 ,  {13.8 }} ,
					{ 384 ,  {15.6 }} ,
					{ 388 ,  {6.3 }} ,
					{ 390 ,  {8.4 }} ,
					{ 391 ,  {7.5 }} ,
					{ 394 ,  {8.5 }} ,
					{ 397 ,  {9.5 }} ,
					{ 399 ,  {12.8 }} ,
					{ 401 ,  {12.3 }} ,
					{ 403 ,  {11.3 }} ,
					{ 405 ,  {11.8 }} ,
					{ 406 ,  {12.1 }} ,
					{ 409 ,  {9.7 }} ,
					{ 410 ,  {10.2 }} ,
					{ 411 ,  {10.8 }} ,
					{ 412 ,  {15.4 }} ,
					{ 415 ,  {5. }} ,
					{ 416 ,  {5.6 }} ,
					{ 418 ,  {10.4 }} ,
					{ 420 ,  {7. }} ,
					{ 422 ,  {8.3 }} ,
					{ 423 ,  {8.7 }} ,
					{ 432 ,  {34.9 }} ,
					{ 433 ,  {35.4 }} ,
					{ 434 ,  {36.1 }} ,
					{ 437 ,  {33.4 }} ,
					{ 439 ,  {36.2 }} ,
					{ 440 ,  {34.7 }} ,
					{ 441 ,  {33.4 }} ,
					{ 443 ,  {34.9 }} ,
					{ 445 ,  {32.2 }} ,
					{ 447 ,  {32.9 }} ,
					{ 448 ,  {33.3 }} ,
					{ 450 ,  {37.9 }} ,
					{ 452 ,  {37. }} ,
					{ 453 ,  {37.3 }} ,
					{ 454 ,  {29.6 }} ,
					{ 459 ,  {23.6 }} ,
					{ 460 ,  {23.9 }} ,
					{ 461 ,  {26.7 }} ,
					{ 463 ,  {31.5 }} ,
					{ 465 ,  {31. }} ,
					{ 466 ,  {30.7 }} ,
					{ 467 ,  {10.4 }} ,
					{ 472 ,  {48.8 }} ,
					{ 473 ,  {50. }} ,
					{ 478 ,  {46.7 }} ,
					{ 479 ,  {46. }} ,
					{ 481 ,  {44.8 }} ,
					{ 482 ,  {45.4 }} ,
					{ 484 ,  {50. }} ,
					{ 485 ,  {50. }} ,
					{ 486 ,  {37.6 }} ,
					{ 489 ,  {39.8 }} ,
					{ 490 ,  {38.7 }} ,
					{ 491 ,  {42.3 }} ,
					{ 492 ,  {21.9 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 0.885006457567215) ? ( (scaler_output_14 <= 0.33111555874347687) ? ( (scaler_output_14 <= -0.6894010305404663) ? ( (scaler_output_7 <= 0.324841246008873) ? ( (scaler_output_9 <= 0.3076174259185791) ? ( (scaler_output_14 <= -0.8003115952014923) ? ( (scaler_output_12 <= -1.2733837068080902) ? ( 7 ) : ( (scaler_output_12 <= -0.46573834493756294) ? ( 9 ) : ( (scaler_output_11 <= -0.938252329826355) ? ( 11 ) : ( 12 ) ) ) ) : ( 13 ) ) : ( (scaler_output_12 <= 0.5726628303527832) ? ( (scaler_output_6 <= -1.2424176335334778) ? ( (scaler_output_8 <= -1.2879345417022705) ? ( 17 ) : ( (scaler_output_2 <= -0.4182882606983185) ? ( 19 ) : ( 20 ) ) ) : ( (scaler_output_6 <= -0.8483769297599792) ? ( (scaler_output_8 <= -0.9001363813877106) ? ( (scaler_output_11 <= -0.67910236120224) ? ( (scaler_output_14 <= -0.8875054121017456) ? ( (scaler_output_11 <= -0.9883153736591339) ? ( 26 ) : ( 27 ) ) : ( (scaler_output_9 <= 0.8316521644592285) ? ( 29 ) : ( 30 ) ) ) : ( (scaler_output_9 <= 1.6223856806755066) ? ( (scaler_output_10 <= -0.5223402976989746) ? ( (scaler_output_14 <= -0.7745022177696228) ? ( 34 ) : ( 35 ) ) : ( 36 ) ) : ( (scaler_output_7 <= 0.1924128234386444) ? ( 38 ) : ( 39 ) ) ) ) : ( 40 ) ) : ( (scaler_output_7 <= 0.14425703138113022) ? ( (scaler_output_14 <= -0.7703168988227844) ? ( 43 ) : ( 44 ) ) : ( 45 ) ) ) ) : ( (scaler_output_2 <= -0.41865573823451996) ? ( 47 ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_9 <= 1.3497395068407059) ? ( 50 ) : ( 51 ) ) : ( (scaler_output_9 <= 1.443655014038086) ? ( 53 ) : ( 54 ) ) ) ) ) ) : ( (scaler_output_6 <= -0.3314632326364517) ? ( (scaler_output_12 <= -0.027302297297865152) ? ( (scaler_output_11 <= -0.8292915523052216) ? ( (scaler_output_13 <= 0.4179433137178421) ? ( (scaler_output_3 <= 2.9100024700164795) ? ( 60 ) : ( 61 ) ) : ( (scaler_output_8 <= -1.2559144496917725) ? ( 63 ) : ( (scaler_output_7 <= 0.7178775072097778) ? ( (scaler_output_7 <= 0.5117990374565125) ? ( 66 ) : ( 67 ) ) : ( 68 ) ) ) ) : ( (scaler_output_2 <= -0.4206736981868744) ? ( 70 ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_14 <= -0.8603009283542633) ? ( 73 ) : ( 74 ) ) : ( (scaler_output_9 <= 0.501061275601387) ? ( (scaler_output_14 <= -0.9070368707180023) ? ( 77 ) : ( (scaler_output_12 <= -0.6503430008888245) ? ( 79 ) : ( 80 ) ) ) : ( 81 ) ) ) ) ) : ( (scaler_output_2 <= -0.4175020754337311) ? ( (scaler_output_14 <= -1.2014032006263733) ? ( 84 ) : ( (scaler_output_11 <= -1.0148193538188934) ? ( 86 ) : ( (scaler_output_3 <= 1.6697003841400146) ? ( 88 ) : ( 89 ) ) ) ) : ( (scaler_output_13 <= 0.38214507699012756) ? ( 91 ) : ( 92 ) ) ) ) : ( (scaler_output_11 <= -0.3639995828270912) ? ( (scaler_output_3 <= -0.12873763591051102) ? ( (scaler_output_4 <= -0.010064005851745605) ? ( 96 ) : ( 97 ) ) : ( 98 ) ) : ( 99 ) ) ) ) : ( (scaler_output_9 <= -1.2479584217071533) ? ( 101 ) : ( (scaler_output_7 <= 0.3205922245979309) ? ( (scaler_output_12 <= 0.34190699458122253) ? ( (scaler_output_7 <= 0.03803101647645235) ? ( (scaler_output_7 <= -1.5454447269439697) ? ( (scaler_output_14 <= -0.03440098819555715) ? ( 107 ) : ( 108 ) ) : ( (scaler_output_9 <= 0.07347374223172665) ? ( (scaler_output_4 <= -0.7713125348091125) ? ( (scaler_output_14 <= -0.383873850107193) ? ( (scaler_output_2 <= -0.4144204258918762) ? ( 113 ) : ( 114 ) ) : ( (scaler_output_4 <= -1.022861897945404) ? ( 116 ) : ( (scaler_output_7 <= -0.7126327902078629) ? ( 118 ) : ( 119 ) ) ) ) : ( (scaler_output_9 <= 0.05331488326191902) ? ( (scaler_output_2 <= -0.20813008397817612) ? ( (scaler_output_7 <= -0.32242926955223083) ? ( (scaler_output_9 <= -0.42748817801475525) ? ( (scaler_output_13 <= 0.10673581808805466) ? ( 125 ) : ( 126 ) ) : ( (scaler_output_10 <= -0.6941851377487183) ? ( 128 ) : ( 129 ) ) ) : ( (scaler_output_10 <= -0.46505868434906006) ? ( 131 ) : ( 132 ) ) ) : ( (scaler_output_8 <= 0.6279308199882507) ? ( 134 ) : ( 135 ) ) ) : ( 136 ) ) ) : ( (scaler_output_2 <= -0.38423463702201843) ? ( (scaler_output_7 <= -0.9364156126976013) ? ( 139 ) : ( (scaler_output_12 <= -0.004226716235280037) ? ( (scaler_output_11 <= -0.6231495440006256) ? ( (scaler_output_12 <= -0.9272499978542328) ? ( 143 ) : ( (scaler_output_14 <= -0.39154691994190216) ? ( 145 ) : ( (scaler_output_8 <= -1.220336675643921) ? ( (scaler_output_11 <= -0.9942051470279694) ? ( 148 ) : ( 149 ) ) : ( 150 ) ) ) ) : ( (scaler_output_9 <= 0.9080122113227844) ? ( 152 ) : ( (scaler_output_3 <= 0.9978700950741768) ? ( 154 ) : ( 155 ) ) ) ) : ( (scaler_output_2 <= -0.4153091162443161) ? ( (scaler_output_6 <= -1.0602267682552338) ? ( 158 ) : ( 159 ) ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_9 <= 0.7851721495389938) ? ( 162 ) : ( 163 ) ) : ( (scaler_output_14 <= -0.2101837508380413) ? ( (scaler_output_14 <= -0.33713796734809875) ? ( (scaler_output_10 <= -0.4077770560979843) ? ( 167 ) : ( 168 ) ) : ( 169 ) ) : ( 170 ) ) ) ) ) ) : ( (scaler_output_11 <= -0.5230234265327454) ? ( 172 ) : ( 173 ) ) ) ) ) : ( (scaler_output_9 <= 0.19242054224014282) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 176 ) : ( 177 ) ) : ( (scaler_output_6 <= -0.9670128524303436) ? ( 179 ) : ( 180 ) ) ) ) : ( (scaler_output_9 <= -1.1802685856819153) ? ( 182 ) : ( (scaler_output_13 <= -1.670103445649147) ? ( (scaler_output_14 <= -0.21715925261378288) ? ( 185 ) : ( 186 ) ) : ( (scaler_output_6 <= 1.3675727248191833) ? ( (scaler_output_8 <= -0.0729521345347166) ? ( (scaler_output_4 <= -0.6891739666461945) ? ( (scaler_output_14 <= -0.6412700414657593) ? ( 191 ) : ( (scaler_output_13 <= 0.41342025995254517) ? ( (scaler_output_9 <= 2.0447902381420135) ? ( 194 ) : ( 195 ) ) : ( (scaler_output_14 <= -0.4340974986553192) ? ( 197 ) : ( 198 ) ) ) ) : ( (scaler_output_7 <= -0.33588454127311707) ? ( (scaler_output_8 <= -0.9517241716384888) ? ( (scaler_output_2 <= -0.23811153322458267) ? ( 202 ) : ( 203 ) ) : ( (scaler_output_7 <= -0.7182981967926025) ? ( 205 ) : ( (scaler_output_6 <= 0.05410351604223251) ? ( 207 ) : ( 208 ) ) ) ) : ( (scaler_output_6 <= 0.02868153154850006) ? ( (scaler_output_9 <= 0.28671813756227493) ? ( 211 ) : ( 212 ) ) : ( (scaler_output_2 <= 0.29533798061311245) ? ( 214 ) : ( 215 ) ) ) ) ) : ( (scaler_output_14 <= -0.5784904956817627) ? ( 217 ) : ( (scaler_output_13 <= 0.37067197263240814) ? ( (scaler_output_14 <= 0.15324013400822878) ? ( (scaler_output_14 <= -0.1557747982442379) ? ( 221 ) : ( (scaler_output_2 <= -0.35811665654182434) ? ( 223 ) : ( 224 ) ) ) : ( (scaler_output_12 <= 1.011098861694336) ? ( 226 ) : ( 227 ) ) ) : ( (scaler_output_12 <= 0.4803604930639267) ? ( 229 ) : ( (scaler_output_14 <= -0.022542626596987247) ? ( (scaler_output_10 <= -0.7514667809009552) ? ( 232 ) : ( (scaler_output_8 <= 0.9143322110176086) ? ( (scaler_output_8 <= 0.7862521111965179) ? ( 235 ) : ( 236 ) ) : ( 237 ) ) ) : ( (scaler_output_8 <= 0.4820617735385895) ? ( (scaler_output_2 <= -0.05912970006465912) ? ( 240 ) : ( 241 ) ) : ( (scaler_output_4 <= 1.3217542171478271) ? ( (scaler_output_8 <= 0.6492775082588196) ? ( 244 ) : ( 245 ) ) : ( 246 ) ) ) ) ) ) ) ) : ( (scaler_output_2 <= 0.0827306229621172) ? ( (scaler_output_14 <= -0.1250825747847557) ? ( 249 ) : ( (scaler_output_13 <= -0.051791369915008545) ? ( 251 ) : ( 252 ) ) ) : ( (scaler_output_13 <= 0.3828621506690979) ? ( 254 ) : ( 255 ) ) ) ) ) ) ) : ( (scaler_output_13 <= 0.3578750640153885) ? ( (scaler_output_7 <= 0.5372932702302933) ? ( (scaler_output_14 <= -0.4327024072408676) ? ( 259 ) : ( 260 ) ) : ( (scaler_output_8 <= 0.15118810534477234) ? ( 262 ) : ( 263 ) ) ) : ( (scaler_output_2 <= -0.4099264144897461) ? ( (scaler_output_4 <= -0.4302907809615135) ? ( 266 ) : ( 267 ) ) : ( (scaler_output_6 <= -0.47552113980054855) ? ( 269 ) : ( (scaler_output_10 <= 0.5087288022041321) ? ( 271 ) : ( 272 ) ) ) ) ) ) ) ) : ( (scaler_output_6 <= 0.909976989030838) ? ( (scaler_output_2 <= -0.4057367295026779) ? ( (scaler_output_11 <= -0.20203085243701935) ? ( 276 ) : ( 277 ) ) : ( (scaler_output_7 <= 0.6449356377124786) ? ( (scaler_output_8 <= 0.16897700726985931) ? ( (scaler_output_8 <= -0.35401687771081924) ? ( (scaler_output_14 <= 1.4178994446992874) ? ( 282 ) : ( 283 ) ) : ( (scaler_output_8 <= 0.12450474128127098) ? ( (scaler_output_14 <= 0.6331549882888794) ? ( 286 ) : ( 287 ) ) : ( 288 ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_4 <= -0.30341603606939316) ? ( (scaler_output_8 <= 0.6314885914325714) ? ( 292 ) : ( (scaler_output_7 <= -0.25515278428792953) ? ( (scaler_output_12 <= 0.4803604856133461) ? ( 295 ) : ( (scaler_output_2 <= -0.2708452492952347) ? ( 297 ) : ( 298 ) ) ) : ( (scaler_output_4 <= -0.43689121305942535) ? ( 300 ) : ( 301 ) ) ) ) : ( (scaler_output_14 <= 0.6652423143386841) ? ( (scaler_output_9 <= -0.6278347373008728) ? ( (scaler_output_9 <= -0.8508003056049347) ? ( (scaler_output_8 <= 1.0068345963954926) ? ( 306 ) : ( 307 ) ) : ( (scaler_output_14 <= 0.39110490679740906) ? ( 309 ) : ( (scaler_output_4 <= 0.728449709713459) ? ( 311 ) : ( 312 ) ) ) ) : ( (scaler_output_2 <= -0.17436893843114376) ? ( 314 ) : ( 315 ) ) ) : ( (scaler_output_14 <= 0.7824308276176453) ? ( (scaler_output_7 <= -0.6984693333506584) ? ( 318 ) : ( (scaler_output_6 <= 0.38035233318805695) ? ( 320 ) : ( 321 ) ) ) : ( (scaler_output_6 <= 0.5498322248458862) ? ( (scaler_output_7 <= -0.14184504747390747) ? ( (scaler_output_8 <= 1.106452465057373) ? ( (scaler_output_7 <= -0.5865779519081116) ? ( (scaler_output_9 <= -1.0128593444824219) ? ( 327 ) : ( 328 ) ) : ( 329 ) ) : ( 330 ) ) : ( (scaler_output_13 <= -1.5747885257005692) ? ( 332 ) : ( 333 ) ) ) : ( 334 ) ) ) ) ) : ( (scaler_output_7 <= -0.7296289578080177) ? ( (scaler_output_9 <= -0.023809462785720825) ? ( 337 ) : ( 338 ) ) : ( 339 ) ) ) ) : ( 340 ) ) ) : ( (scaler_output_14 <= 0.9896033704280853) ? ( (scaler_output_6 <= 1.3675727248191833) ? ( (scaler_output_14 <= 0.8696246445178986) ? ( (scaler_output_7 <= -0.08235846541356295) ? ( (scaler_output_14 <= 0.6847737431526184) ? ( 346 ) : ( 347 ) ) : ( (scaler_output_13 <= 0.1302887350320816) ? ( (scaler_output_2 <= 0.2128768488764763) ? ( 350 ) : ( (scaler_output_13 <= -0.4923468977212906) ? ( 352 ) : ( 353 ) ) ) : ( 354 ) ) ) : ( (scaler_output_7 <= 0.15842049568891525) ? ( (scaler_output_14 <= 0.9156629741191864) ? ( 357 ) : ( 358 ) ) : ( 359 ) ) ) : ( (scaler_output_13 <= -1.5750092267990112) ? ( (scaler_output_7 <= -1.202688843011856) ? ( 362 ) : ( 363 ) ) : ( (scaler_output_2 <= 0.4913441240787506) ? ( (scaler_output_12 <= -0.44266277551651) ? ( 366 ) : ( 367 ) ) : ( (scaler_output_7 <= 0.013953123241662979) ? ( 369 ) : ( (scaler_output_2 <= 0.8764550983905792) ? ( 371 ) : ( 372 ) ) ) ) ) ) : ( (scaler_output_9 <= -1.1453250050544739) ? ( (scaler_output_14 <= 1.3788366317749023) ? ( 375 ) : ( (scaler_output_4 <= 1.1523434519767761) ? ( (scaler_output_9 <= -1.172434389591217) ? ( (scaler_output_9 <= -1.2230464816093445) ? ( 379 ) : ( 380 ) ) : ( 381 ) ) : ( (scaler_output_2 <= -0.019403375685214996) ? ( 383 ) : ( 384 ) ) ) ) : ( (scaler_output_2 <= 1.4201207160949707) ? ( (scaler_output_8 <= 0.8716388642787933) ? ( (scaler_output_7 <= 0.025283873081207275) ? ( 388 ) : ( (scaler_output_9 <= -0.9616501033306122) ? ( 390 ) : ( 391 ) ) ) : ( (scaler_output_6 <= 2.1302322149276733) ? ( (scaler_output_14 <= 1.044709861278534) ? ( 394 ) : ( (scaler_output_2 <= 0.9663306772708893) ? ( (scaler_output_6 <= 1.1175898313522339) ? ( 397 ) : ( (scaler_output_8 <= 0.9427944719791412) ? ( 399 ) : ( (scaler_output_2 <= 0.6494675576686859) ? ( 401 ) : ( (scaler_output_9 <= -1.0557804703712463) ? ( 403 ) : ( (scaler_output_13 <= -1.6414758414030075) ? ( 405 ) : ( 406 ) ) ) ) ) ) : ( (scaler_output_6 <= 1.4057056903839111) ? ( (scaler_output_14 <= 2.1656737327575684) ? ( 409 ) : ( 410 ) ) : ( 411 ) ) ) ) : ( 412 ) ) ) : ( (scaler_output_9 <= -1.051743984222412) ? ( (scaler_output_14 <= 1.7087780833244324) ? ( 415 ) : ( 416 ) ) : ( (scaler_output_9 <= -1.0351678729057312) ? ( 418 ) : ( (scaler_output_9 <= -0.9725655317306519) ? ( 420 ) : ( (scaler_output_8 <= 1.0619801878929138) ? ( 422 ) : ( 423 ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.7220674753189087) ? ( (scaler_output_6 <= -0.5560240745544434) ? ( (scaler_output_9 <= 2.3797998428344727) ? ( (scaler_output_2 <= -0.4145510643720627) ? ( (scaler_output_11 <= -0.8086773455142975) ? ( (scaler_output_8 <= -0.8681163191795349) ? ( (scaler_output_14 <= -0.9426119029521942) ? ( (scaler_output_8 <= -1.7433305382728577) ? ( 432 ) : ( 433 ) ) : ( 434 ) ) : ( (scaler_output_6 <= -0.7085559964179993) ? ( (scaler_output_8 <= -0.6350816339254379) ? ( 437 ) : ( (scaler_output_8 <= -0.36291133612394333) ? ( 439 ) : ( 440 ) ) ) : ( 441 ) ) ) : ( (scaler_output_7 <= 1.0372636914253235) ? ( 443 ) : ( (scaler_output_9 <= 1.6663578152656555) ? ( 445 ) : ( (scaler_output_2 <= -0.4205505847930908) ? ( 447 ) : ( 448 ) ) ) ) ) : ( (scaler_output_3 <= 0.4293982982635498) ? ( 450 ) : ( (scaler_output_12 <= -0.5580406934022903) ? ( 452 ) : ( 453 ) ) ) ) : ( 454 ) ) : ( (scaler_output_4 <= 0.5913076847791672) ? ( (scaler_output_7 <= 1.0075204372406006) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_2 <= -0.4168340116739273) ? ( 459 ) : ( 460 ) ) : ( 461 ) ) : ( (scaler_output_14 <= -0.6468504443764687) ? ( 463 ) : ( (scaler_output_9 <= -0.8187706172466278) ? ( 465 ) : ( 466 ) ) ) ) : ( 467 ) ) ) : ( (scaler_output_6 <= 1.0879308879375458) ? ( (scaler_output_13 <= 0.4018368571996689) ? ( (scaler_output_12 <= -1.6656686067581177) ? ( (scaler_output_12 <= -2.173331320285797) ? ( 472 ) : ( 473 ) ) : ( (scaler_output_8 <= 0.6012474596500397) ? ( (scaler_output_14 <= -1.1623404026031494) ? ( (scaler_output_7 <= 2.059157967567444) ? ( (scaler_output_3 <= -0.08739423751831055) ? ( 478 ) : ( 479 ) ) : ( (scaler_output_9 <= -0.012081965804100037) ? ( 481 ) : ( 482 ) ) ) : ( (scaler_output_10 <= -0.46505866944789886) ? ( 484 ) : ( 485 ) ) ) : ( 486 ) ) ) : ( (scaler_output_11 <= -0.5524722784757614) ? ( (scaler_output_7 <= 2.291438937187195) ? ( 489 ) : ( 490 ) ) : ( 491 ) ) ) : ( 492 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_8
		
	
		namespace EXT_SubModel_9 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 9 ,  {25. }} ,
					{ 13 ,  {24.3 }} ,
					{ 14 ,  {24.1 }} ,
					{ 18 ,  {22.9 }} ,
					{ 19 ,  {23.5 }} ,
					{ 20 ,  {24.8 }} ,
					{ 23 ,  {23. }} ,
					{ 24 ,  {23.1 }} ,
					{ 27 ,  {21.9 }} ,
					{ 28 ,  {22.1 }} ,
					{ 30 ,  {22.6 }} ,
					{ 31 ,  {22.5 }} ,
					{ 34 ,  {25. }} ,
					{ 36 ,  {23.8 }} ,
					{ 38 ,  {24.2 }} ,
					{ 39 ,  {24.4 }} ,
					{ 41 ,  {23.7 }} ,
					{ 42 ,  {23.1 }} ,
					{ 45 ,  {22.9 }} ,
					{ 47 ,  {22.2 }} ,
					{ 48 ,  {22.2 }} ,
					{ 49 ,  {20.7 }} ,
					{ 50 ,  {27.5 }} ,
					{ 52 ,  {11.9 }} ,
					{ 55 ,  {29.6 }} ,
					{ 60 ,  {23.4 }} ,
					{ 61 ,  {23.9 }} ,
					{ 63 ,  {17.5 }} ,
					{ 66 ,  {19.4 }} ,
					{ 70 ,  {21.7 }} ,
					{ 71 ,  {20.9 }} ,
					{ 73 ,  {22.6 }} ,
					{ 75 ,  {22. }} ,
					{ 76 ,  {22.2 }} ,
					{ 80 ,  {22. }} ,
					{ 81 ,  {21.7 }} ,
					{ 82 ,  {22.6 }} ,
					{ 84 ,  {21.4 }} ,
					{ 87 ,  {20.3 }} ,
					{ 88 ,  {20.6 }} ,
					{ 90 ,  {20.9 }} ,
					{ 91 ,  {21. }} ,
					{ 93 ,  {19.6 }} ,
					{ 94 ,  {20.5 }} ,
					{ 96 ,  {25. }} ,
					{ 98 ,  {24. }} ,
					{ 100 ,  {24.4 }} ,
					{ 101 ,  {24.3 }} ,
					{ 104 ,  {21.1 }} ,
					{ 106 ,  {20.1 }} ,
					{ 107 ,  {20. }} ,
					{ 110 ,  {18.5 }} ,
					{ 111 ,  {18.7 }} ,
					{ 112 ,  {17.2 }} ,
					{ 114 ,  {27.9 }} ,
					{ 117 ,  {24.5 }} ,
					{ 122 ,  {19. }} ,
					{ 123 ,  {18.7 }} ,
					{ 124 ,  {19.5 }} ,
					{ 126 ,  {19.9 }} ,
					{ 128 ,  {20.3 }} ,
					{ 129 ,  {20.4 }} ,
					{ 133 ,  {18.5 }} ,
					{ 135 ,  {18.9 }} ,
					{ 136 ,  {19.2 }} ,
					{ 138 ,  {18.5 }} ,
					{ 140 ,  {18.2 }} ,
					{ 141 ,  {18.3 }} ,
					{ 143 ,  {18.4 }} ,
					{ 145 ,  {19.6 }} ,
					{ 147 ,  {19.3 }} ,
					{ 148 ,  {19.4 }} ,
					{ 152 ,  {19.6 }} ,
					{ 153 ,  {15.3 }} ,
					{ 158 ,  {20.8 }} ,
					{ 161 ,  {21.8 }} ,
					{ 162 ,  {21.9 }} ,
					{ 163 ,  {22.7 }} ,
					{ 167 ,  {21.5 }} ,
					{ 169 ,  {20.3 }} ,
					{ 170 ,  {20.6 }} ,
					{ 172 ,  {20.2 }} ,
					{ 173 ,  {19.6 }} ,
					{ 174 ,  {23. }} ,
					{ 175 ,  {23. }} ,
					{ 179 ,  {22.7 }} ,
					{ 180 ,  {23. }} ,
					{ 181 ,  {23.3 }} ,
					{ 182 ,  {21.7 }} ,
					{ 183 ,  {16.1 }} ,
					{ 188 ,  {35.1 }} ,
					{ 189 ,  {32.5 }} ,
					{ 193 ,  {30.8 }} ,
					{ 194 ,  {32.4 }} ,
					{ 197 ,  {29.1 }} ,
					{ 199 ,  {28.4 }} ,
					{ 200 ,  {28.6 }} ,
					{ 202 ,  {29.4 }} ,
					{ 204 ,  {29.8 }} ,
					{ 205 ,  {30.1 }} ,
					{ 208 ,  {27.9 }} ,
					{ 209 ,  {28. }} ,
					{ 211 ,  {26.2 }} ,
					{ 212 ,  {24.4 }} ,
					{ 215 ,  {24.8 }} ,
					{ 216 ,  {25. }} ,
					{ 217 ,  {22. }} ,
					{ 219 ,  {28.7 }} ,
					{ 223 ,  {22.8 }} ,
					{ 224 ,  {22.8 }} ,
					{ 225 ,  {22. }} ,
					{ 227 ,  {24. }} ,
					{ 229 ,  {23.7 }} ,
					{ 230 ,  {23.8 }} ,
					{ 236 ,  {19.4 }} ,
					{ 237 ,  {18. }} ,
					{ 238 ,  {15.6 }} ,
					{ 240 ,  {13.1 }} ,
					{ 243 ,  {17.8 }} ,
					{ 246 ,  {14.4 }} ,
					{ 247 ,  {14.6 }} ,
					{ 249 ,  {15.6 }} ,
					{ 250 ,  {15.7 }} ,
					{ 252 ,  {13.3 }} ,
					{ 254 ,  {13.8 }} ,
					{ 255 ,  {14. }} ,
					{ 261 ,  {16.8 }} ,
					{ 264 ,  {13.6 }} ,
					{ 265 ,  {14.2 }} ,
					{ 266 ,  {15.1 }} ,
					{ 269 ,  {12.1 }} ,
					{ 271 ,  {13.3 }} ,
					{ 272 ,  {12.7 }} ,
					{ 273 ,  {10.2 }} ,
					{ 274 ,  {17.2 }} ,
					{ 275 ,  {7.2 }} ,
					{ 279 ,  {13.9 }} ,
					{ 281 ,  {13.8 }} ,
					{ 282 ,  {13.8 }} ,
					{ 283 ,  {13.1 }} ,
					{ 285 ,  {17.9 }} ,
					{ 289 ,  {11.3 }} ,
					{ 291 ,  {10.4 }} ,
					{ 293 ,  {8.8 }} ,
					{ 296 ,  {7. }} ,
					{ 297 ,  {7. }} ,
					{ 298 ,  {7.4 }} ,
					{ 300 ,  {6.3 }} ,
					{ 302 ,  {5. }} ,
					{ 303 ,  {5.6 }} ,
					{ 306 ,  {12.8 }} ,
					{ 308 ,  {11. }} ,
					{ 309 ,  {11.8 }} ,
					{ 311 ,  {9.7 }} ,
					{ 314 ,  {8.4 }} ,
					{ 315 ,  {8.3 }} ,
					{ 316 ,  {8.7 }} ,
					{ 322 ,  {23.1 }} ,
					{ 323 ,  {23.7 }} ,
					{ 325 ,  {22.5 }} ,
					{ 326 ,  {22.4 }} ,
					{ 327 ,  {19.8 }} ,
					{ 332 ,  {17.5 }} ,
					{ 334 ,  {16.8 }} ,
					{ 336 ,  {16.5 }} ,
					{ 337 ,  {16.6 }} ,
					{ 340 ,  {18.3 }} ,
					{ 342 ,  {18.8 }} ,
					{ 343 ,  {18.7 }} ,
					{ 345 ,  {17.8 }} ,
					{ 346 ,  {17.4 }} ,
					{ 347 ,  {14.4 }} ,
					{ 349 ,  {21.7 }} ,
					{ 350 ,  {20. }} ,
					{ 355 ,  {13.8 }} ,
					{ 357 ,  {11.7 }} ,
					{ 358 ,  {12.7 }} ,
					{ 361 ,  {14.5 }} ,
					{ 362 ,  {14.9 }} ,
					{ 363 ,  {13. }} ,
					{ 365 ,  {13.9 }} ,
					{ 366 ,  {19. }} ,
					{ 372 ,  {19.1 }} ,
					{ 373 ,  {19.1 }} ,
					{ 374 ,  {18.9 }} ,
					{ 375 ,  {20. }} ,
					{ 376 ,  {23.2 }} ,
					{ 380 ,  {18.4 }} ,
					{ 382 ,  {18.1 }} ,
					{ 383 ,  {17.8 }} ,
					{ 384 ,  {17.1 }} ,
					{ 388 ,  {16. }} ,
					{ 391 ,  {16.6 }} ,
					{ 392 ,  {16.7 }} ,
					{ 393 ,  {16.1 }} ,
					{ 394 ,  {15.2 }} ,
					{ 396 ,  {12.6 }} ,
					{ 398 ,  {13.6 }} ,
					{ 399 ,  {14.6 }} ,
					{ 407 ,  {36.1 }} ,
					{ 409 ,  {35.4 }} ,
					{ 410 ,  {34.9 }} ,
					{ 411 ,  {33.4 }} ,
					{ 416 ,  {33.1 }} ,
					{ 417 ,  {33.3 }} ,
					{ 418 ,  {32.9 }} ,
					{ 419 ,  {34.9 }} ,
					{ 422 ,  {32.2 }} ,
					{ 424 ,  {30.3 }} ,
					{ 425 ,  {31.2 }} ,
					{ 426 ,  {34.6 }} ,
					{ 427 ,  {37. }} ,
					{ 429 ,  {29.6 }} ,
					{ 430 ,  {29. }} ,
					{ 435 ,  {30.1 }} ,
					{ 436 ,  {29.8 }} ,
					{ 438 ,  {28.2 }} ,
					{ 439 ,  {26.7 }} ,
					{ 442 ,  {24.8 }} ,
					{ 443 ,  {23.6 }} ,
					{ 444 ,  {22. }} ,
					{ 446 ,  {37.9 }} ,
					{ 448 ,  {31. }} ,
					{ 450 ,  {33.4 }} ,
					{ 451 ,  {33.8 }} ,
					{ 456 ,  {41.7 }} ,
					{ 459 ,  {46. }} ,
					{ 460 ,  {46.7 }} ,
					{ 462 ,  {45.4 }} ,
					{ 463 ,  {44.8 }} ,
					{ 465 ,  {50. }} ,
					{ 466 ,  {48.8 }} ,
					{ 473 ,  {43.5 }} ,
					{ 474 ,  {43.8 }} ,
					{ 475 ,  {43.1 }} ,
					{ 476 ,  {42.3 }} ,
					{ 477 ,  {39.8 }} ,
					{ 478 ,  {50. }} ,
					{ 480 ,  {37.6 }} ,
					{ 481 ,  {38.7 }} ,
					{ 482 ,  {21.9 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 0.7447880804538727) ? ( (scaler_output_14 <= 0.23345845937728882) ? ( (scaler_output_9 <= -1.2479584217071533) ? ( 3 ) : ( (scaler_output_7 <= 0.32271674275398254) ? ( (scaler_output_14 <= -0.6880059540271759) ? ( (scaler_output_6 <= 0.909976989030838) ? ( (scaler_output_12 <= 0.5726628303527832) ? ( (scaler_output_11 <= -0.7674489617347717) ? ( 9 ) : ( (scaler_output_7 <= 0.12088730931282043) ? ( (scaler_output_12 <= -1.6887441873550415) ? ( (scaler_output_13 <= 0.17044454999268055) ? ( 13 ) : ( 14 ) ) : ( (scaler_output_2 <= -0.41887009143829346) ? ( (scaler_output_7 <= -0.004459389252588153) ? ( (scaler_output_9 <= 1.0443711280822754) ? ( 18 ) : ( 19 ) ) : ( 20 ) ) : ( (scaler_output_11 <= -0.6496535241603851) ? ( (scaler_output_14 <= -0.8533254265785217) ? ( 23 ) : ( 24 ) ) : ( (scaler_output_11 <= -0.4081728756427765) ? ( (scaler_output_6 <= -0.7297410145401955) ? ( 27 ) : ( 28 ) ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( 30 ) : ( 31 ) ) ) ) ) ) : ( (scaler_output_3 <= 0.5741002112627029) ? ( (scaler_output_7 <= 0.16550222784280777) ? ( 34 ) : ( (scaler_output_11 <= -0.6467086374759674) ? ( 36 ) : ( (scaler_output_8 <= -2.065309762954712) ? ( 38 ) : ( 39 ) ) ) ) : ( (scaler_output_11 <= -0.47296033799648285) ? ( 41 ) : ( 42 ) ) ) ) ) : ( (scaler_output_14 <= -0.821238100528717) ? ( (scaler_output_6 <= -0.9585388600826263) ? ( 45 ) : ( (scaler_output_8 <= -0.5301270582713187) ? ( 47 ) : ( 48 ) ) ) : ( 49 ) ) ) : ( 50 ) ) : ( (scaler_output_14 <= -0.6468504667282104) ? ( 52 ) : ( (scaler_output_6 <= -0.35264822840690613) ? ( (scaler_output_11 <= -1.165008544921875) ? ( 55 ) : ( (scaler_output_14 <= -0.15158949419856071) ? ( (scaler_output_2 <= -0.399508461356163) ? ( (scaler_output_11 <= -0.867575079202652) ? ( (scaler_output_6 <= -0.9331168532371521) ? ( 60 ) : ( 61 ) ) : ( (scaler_output_2 <= -0.4200056195259094) ? ( 63 ) : ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_7 <= -0.6807650029659271) ? ( 66 ) : ( (scaler_output_12 <= -0.23498252034187317) ? ( (scaler_output_8 <= -0.7204683721065521) ? ( (scaler_output_9 <= 1.691842943429947) ? ( 70 ) : ( 71 ) ) : ( (scaler_output_9 <= -0.44083984196186066) ? ( 73 ) : ( (scaler_output_4 <= -0.9993937313556671) ? ( 75 ) : ( 76 ) ) ) ) : ( (scaler_output_8 <= -1.430245816707611) ? ( (scaler_output_14 <= -0.31411878764629364) ? ( (scaler_output_2 <= -0.4106288552284241) ? ( 80 ) : ( 81 ) ) : ( 82 ) ) : ( (scaler_output_10 <= -0.7514667510986328) ? ( 84 ) : ( (scaler_output_12 <= 0.18037793040275574) ? ( (scaler_output_13 <= 0.420315146446228) ? ( 87 ) : ( 88 ) ) : ( (scaler_output_6 <= -0.8483768999576569) ? ( 90 ) : ( 91 ) ) ) ) ) ) ) : ( (scaler_output_9 <= 1.7550185918807983) ? ( 93 ) : ( 94 ) ) ) ) ) : ( (scaler_output_2 <= -0.3974386155605316) ? ( 96 ) : ( (scaler_output_13 <= 0.2767360880970955) ? ( 98 ) : ( (scaler_output_11 <= -0.6025353372097015) ? ( 100 ) : ( 101 ) ) ) ) ) : ( (scaler_output_12 <= 0.1573023498058319) ? ( (scaler_output_11 <= -1.047213077545166) ? ( 104 ) : ( (scaler_output_6 <= -1.212758719921112) ? ( 106 ) : ( 107 ) ) ) : ( (scaler_output_11 <= -0.5082989782094955) ? ( (scaler_output_3 <= 0.015964269638061523) ? ( 110 ) : ( 111 ) ) : ( 112 ) ) ) ) ) : ( (scaler_output_9 <= -1.1376101970672607) ? ( 114 ) : ( (scaler_output_4 <= -0.0019968226552009583) ? ( (scaler_output_8 <= -0.8485485017299652) ? ( 117 ) : ( (scaler_output_14 <= -0.3503914326429367) ? ( (scaler_output_4 <= -0.6334370672702789) ? ( (scaler_output_9 <= 0.5741012692451477) ? ( (scaler_output_8 <= -0.5657048672437668) ? ( 122 ) : ( 123 ) ) : ( 124 ) ) : ( (scaler_output_13 <= 0.41424764692783356) ? ( 126 ) : ( (scaler_output_13 <= 0.4213080108165741) ? ( 128 ) : ( 129 ) ) ) ) : ( (scaler_output_8 <= 0.6439408361911774) ? ( (scaler_output_12 <= 0.04192444682121277) ? ( (scaler_output_9 <= -0.6295544505119324) ? ( 133 ) : ( (scaler_output_4 <= -0.29974914342164993) ? ( 135 ) : ( 136 ) ) ) : ( (scaler_output_6 <= -0.23401230573654175) ? ( 138 ) : ( (scaler_output_4 <= -0.30341603606939316) ? ( 140 ) : ( 141 ) ) ) ) : ( (scaler_output_13 <= 0.35142146050930023) ? ( 143 ) : ( (scaler_output_4 <= -0.38628798723220825) ? ( 145 ) : ( (scaler_output_6 <= -0.1874053254723549) ? ( 147 ) : ( 148 ) ) ) ) ) ) ) : ( (scaler_output_2 <= 0.34252622723579407) ? ( (scaler_output_9 <= -1.0536786317825317) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 152 ) : ( 153 ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_8 <= 1.065537929534912) ? ( (scaler_output_7 <= -0.6184457540512085) ? ( (scaler_output_14 <= -0.323884516954422) ? ( 158 ) : ( (scaler_output_8 <= 0.8449555039405823) ? ( (scaler_output_2 <= -0.016991693526506424) ? ( 161 ) : ( 162 ) ) : ( 163 ) ) ) : ( (scaler_output_2 <= 0.30359797179698944) ? ( (scaler_output_7 <= -0.17512919381260872) ? ( (scaler_output_12 <= -0.6964941769838333) ? ( 167 ) : ( (scaler_output_9 <= -0.7535170614719391) ? ( 169 ) : ( 170 ) ) ) : ( (scaler_output_13 <= 0.3992995470762253) ? ( 172 ) : ( 173 ) ) ) : ( 174 ) ) ) : ( 175 ) ) : ( (scaler_output_7 <= 0.12017913535237312) ? ( (scaler_output_14 <= -0.018357325345277786) ? ( (scaler_output_9 <= -0.3710959404706955) ? ( 179 ) : ( 180 ) ) : ( 181 ) ) : ( 182 ) ) ) ) : ( 183 ) ) ) ) ) ) ) : ( (scaler_output_6 <= -0.2806192710995674) ? ( (scaler_output_14 <= -0.47595055401325226) ? ( (scaler_output_11 <= -1.100221037864685) ? ( (scaler_output_12 <= -0.9503255635499954) ? ( 188 ) : ( 189 ) ) : ( (scaler_output_12 <= 0.04192444635555148) ? ( (scaler_output_14 <= -1.154667317867279) ? ( (scaler_output_8 <= -1.4409191012382507) ? ( 193 ) : ( 194 ) ) : ( (scaler_output_11 <= -0.6673228144645691) ? ( (scaler_output_6 <= -1.144966721534729) ? ( 197 ) : ( (scaler_output_7 <= 0.49267834424972534) ? ( 199 ) : ( 200 ) ) ) : ( (scaler_output_7 <= 0.3567090481519699) ? ( 202 ) : ( (scaler_output_13 <= 0.3473948538303375) ? ( 204 ) : ( 205 ) ) ) ) ) : ( (scaler_output_14 <= -0.934938907623291) ? ( (scaler_output_8 <= -1.401783525943756) ? ( 208 ) : ( 209 ) ) : ( (scaler_output_4 <= -0.6708394587039948) ? ( 211 ) : ( 212 ) ) ) ) ) : ( (scaler_output_13 <= 0.411324217915535) ? ( (scaler_output_6 <= -1.0602267682552338) ? ( 215 ) : ( 216 ) ) : ( 217 ) ) ) : ( (scaler_output_13 <= 0.38109704852104187) ? ( 219 ) : ( (scaler_output_9 <= -0.2365761622786522) ? ( (scaler_output_4 <= -0.0019968226552009583) ? ( (scaler_output_11 <= -0.22264505922794342) ? ( 223 ) : ( 224 ) ) : ( 225 ) ) : ( (scaler_output_2 <= -0.40070024132728577) ? ( 227 ) : ( (scaler_output_13 <= 0.39714834094047546) ? ( 229 ) : ( 230 ) ) ) ) ) ) ) ) : ( (scaler_output_9 <= -0.8687617182731628) ? ( (scaler_output_11 <= 0.8581281453371048) ? ( (scaler_output_14 <= 0.465742826461792) ? ( (scaler_output_2 <= -0.0689339404925704) ? ( (scaler_output_8 <= 1.0957791209220886) ? ( 236 ) : ( 237 ) ) : ( 238 ) ) : ( (scaler_output_13 <= -2.5310263633728027) ? ( 240 ) : ( (scaler_output_7 <= -0.7884073853492737) ? ( (scaler_output_8 <= 0.9552467465400696) ? ( 243 ) : ( (scaler_output_7 <= -1.4951644539833069) ? ( (scaler_output_6 <= 1.6387405395507812) ? ( 246 ) : ( 247 ) ) : ( (scaler_output_12 <= -0.6964941769838333) ? ( 249 ) : ( 250 ) ) ) ) : ( (scaler_output_7 <= -0.43290431797504425) ? ( 252 ) : ( (scaler_output_7 <= -0.20841334015130997) ? ( 254 ) : ( 255 ) ) ) ) ) ) : ( (scaler_output_14 <= 1.2211901545524597) ? ( (scaler_output_2 <= 1.343626618385315) ? ( (scaler_output_2 <= 1.288855791091919) ? ( (scaler_output_2 <= 0.614395260810852) ? ( (scaler_output_8 <= 0.864523321390152) ? ( 261 ) : ( (scaler_output_13 <= 0.37387120723724365) ? ( (scaler_output_2 <= 0.021317854523658752) ? ( 264 ) : ( 265 ) ) : ( 266 ) ) ) : ( (scaler_output_9 <= -0.921953409910202) ? ( (scaler_output_13 <= 0.31027279794216156) ? ( 269 ) : ( (scaler_output_9 <= -1.0747212171554565) ? ( 271 ) : ( 272 ) ) ) : ( 273 ) ) ) : ( 274 ) ) : ( 275 ) ) : ( (scaler_output_9 <= -1.1532070636749268) ? ( (scaler_output_9 <= -1.172434389591217) ? ( (scaler_output_8 <= 1.0246234834194183) ? ( 279 ) : ( (scaler_output_9 <= -1.2727031707763672) ? ( 281 ) : ( 282 ) ) ) : ( 283 ) ) : ( (scaler_output_6 <= 0.4142483025789261) ? ( 285 ) : ( (scaler_output_9 <= -0.982692688703537) ? ( (scaler_output_7 <= -0.9767815172672272) ? ( (scaler_output_14 <= 1.556712031364441) ? ( 289 ) : ( (scaler_output_8 <= 0.7631265223026276) ? ( 291 ) : ( (scaler_output_7 <= -2.6282418966293335) ? ( 293 ) : ( (scaler_output_13 <= 0.1334328055381775) ? ( (scaler_output_10 <= 0.5087288022041321) ? ( 296 ) : ( 297 ) ) : ( 298 ) ) ) ) ) : ( (scaler_output_2 <= 1.7608287632465363) ? ( 300 ) : ( (scaler_output_7 <= -0.6573952883481979) ? ( 302 ) : ( 303 ) ) ) ) : ( (scaler_output_2 <= 0.9663306772708893) ? ( (scaler_output_9 <= -0.9283784627914429) ? ( 306 ) : ( (scaler_output_2 <= 0.7031765729188919) ? ( 308 ) : ( 309 ) ) ) : ( (scaler_output_9 <= -0.9734731316566467) ? ( 311 ) : ( (scaler_output_6 <= 1.4819716215133667) ? ( (scaler_output_8 <= 0.6439408361911774) ? ( 314 ) : ( 315 ) ) : ( 316 ) ) ) ) ) ) ) ) ) : ( (scaler_output_12 <= 0.4803604930639267) ? ( (scaler_output_8 <= 0.18676591664552689) ? ( (scaler_output_13 <= 0.4050360918045044) ? ( (scaler_output_8 <= -0.9446086287498474) ? ( (scaler_output_9 <= -0.2994173429906368) ? ( 322 ) : ( 323 ) ) : ( (scaler_output_13 <= 0.35086987912654877) ? ( 325 ) : ( 326 ) ) ) : ( 327 ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_14 <= 2.475386142730713) ? ( (scaler_output_4 <= -0.17434114962816238) ? ( (scaler_output_9 <= -0.6548246741294861) ? ( 332 ) : ( (scaler_output_9 <= 0.13086915016174316) ? ( 334 ) : ( (scaler_output_12 <= -0.8580232486128807) ? ( 336 ) : ( 337 ) ) ) ) : ( (scaler_output_2 <= -0.3903966695070267) ? ( (scaler_output_13 <= 0.04153778403997421) ? ( 340 ) : ( (scaler_output_9 <= -0.7369409799575806) ? ( 342 ) : ( 343 ) ) ) : ( (scaler_output_2 <= -0.3288201689720154) ? ( 345 ) : ( 346 ) ) ) ) : ( 347 ) ) : ( (scaler_output_13 <= 0.4157921075820923) ? ( 349 ) : ( 350 ) ) ) ) : ( (scaler_output_13 <= 0.02515554055571556) ? ( (scaler_output_9 <= -0.4741353839635849) ? ( (scaler_output_7 <= -0.22753402136731893) ? ( (scaler_output_7 <= -1.137536883354187) ? ( 355 ) : ( (scaler_output_7 <= -0.7487496882677078) ? ( 357 ) : ( 358 ) ) ) : ( (scaler_output_14 <= 0.8905511796474457) ? ( (scaler_output_6 <= 0.7998150736093521) ? ( 361 ) : ( 362 ) ) : ( 363 ) ) ) : ( (scaler_output_2 <= -0.13572066091001034) ? ( 365 ) : ( 366 ) ) ) : ( (scaler_output_8 <= 0.6937497854232788) ? ( (scaler_output_14 <= 0.8117279410362244) ? ( (scaler_output_8 <= 0.5069662630558014) ? ( (scaler_output_12 <= 1.0341744422912598) ? ( (scaler_output_13 <= 0.24634342640638351) ? ( 372 ) : ( 373 ) ) : ( 374 ) ) : ( 375 ) ) : ( 376 ) ) : ( (scaler_output_9 <= -0.79942387342453) ? ( (scaler_output_7 <= 0.10105845518410206) ? ( (scaler_output_14 <= 0.5787460505962372) ? ( 380 ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( 382 ) : ( 383 ) ) ) : ( 384 ) ) : ( (scaler_output_8 <= 0.9694778323173523) ? ( (scaler_output_14 <= 0.847303032875061) ? ( (scaler_output_2 <= -0.37144623696804047) ? ( 388 ) : ( (scaler_output_6 <= 0.926925003528595) ? ( (scaler_output_7 <= -0.21337056159973145) ? ( 391 ) : ( 392 ) ) : ( 393 ) ) ) : ( 394 ) ) : ( (scaler_output_8 <= 1.024623453617096) ? ( 396 ) : ( (scaler_output_13 <= 0.21793650835752487) ? ( 398 ) : ( 399 ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.622923195362091) ? ( (scaler_output_8 <= -0.7560462057590485) ? ( (scaler_output_9 <= 1.872938334941864) ? ( (scaler_output_2 <= -0.4146723002195358) ? ( (scaler_output_11 <= -0.8999688029289246) ? ( (scaler_output_12 <= 0.06500002695247531) ? ( (scaler_output_9 <= 0.3886111415922642) ? ( 407 ) : ( (scaler_output_9 <= 0.7180078029632568) ? ( 409 ) : ( 410 ) ) ) : ( 411 ) ) : ( (scaler_output_14 <= -1.121882438659668) ? ( (scaler_output_14 <= -1.1330432295799255) ? ( (scaler_output_9 <= 1.7490234971046448) ? ( (scaler_output_9 <= 1.0824914276599884) ? ( 416 ) : ( 417 ) ) : ( 418 ) ) : ( 419 ) ) : ( (scaler_output_7 <= 1.2624629139900208) ? ( (scaler_output_6 <= -1.2890246510505676) ? ( 422 ) : ( (scaler_output_11 <= -0.33160582184791565) ? ( 424 ) : ( 425 ) ) ) : ( 426 ) ) ) ) : ( 427 ) ) : ( (scaler_output_14 <= -1.1846619844436646) ? ( 429 ) : ( 430 ) ) ) : ( (scaler_output_7 <= 1.1073728799819946) ? ( (scaler_output_9 <= -0.24727660417556763) ? ( (scaler_output_9 <= -0.5362361371517181) ? ( (scaler_output_10 <= 0.5660104155540466) ? ( 435 ) : ( 436 ) ) : ( (scaler_output_4 <= -0.9964601993560791) ? ( 438 ) : ( 439 ) ) ) : ( (scaler_output_10 <= -0.46505868434906006) ? ( (scaler_output_12 <= -0.9734011441469193) ? ( 442 ) : ( 443 ) ) : ( 444 ) ) ) : ( (scaler_output_3 <= -0.08739423751831055) ? ( 446 ) : ( (scaler_output_9 <= -0.8237386643886566) ? ( 448 ) : ( (scaler_output_2 <= -0.38572515547275543) ? ( 450 ) : ( 451 ) ) ) ) ) ) : ( (scaler_output_11 <= 0.7580020185559988) ? ( (scaler_output_13 <= 0.31953951716423035) ? ( (scaler_output_8 <= 0.4553784132003784) ? ( (scaler_output_14 <= -1.3792786598205566) ? ( 456 ) : ( (scaler_output_8 <= -0.38247911259531975) ? ( (scaler_output_10 <= -0.35049544274806976) ? ( 459 ) : ( 460 ) ) : ( (scaler_output_6 <= -0.6835577189922333) ? ( 462 ) : ( 463 ) ) ) ) : ( (scaler_output_14 <= -1.0263180136680603) ? ( 465 ) : ( 466 ) ) ) : ( (scaler_output_7 <= 2.4614005088806152) ? ( (scaler_output_3 <= 3.1683987379074097) ? ( (scaler_output_14 <= -0.7277663350105286) ? ( (scaler_output_11 <= -0.5524722784757614) ? ( (scaler_output_6 <= 0.48204025626182556) ? ( (scaler_output_12 <= -1.3426103740930557) ? ( 473 ) : ( 474 ) ) : ( 475 ) ) : ( 476 ) ) : ( 477 ) ) : ( 478 ) ) : ( (scaler_output_14 <= -1.2495341897010803) ? ( 480 ) : ( 481 ) ) ) ) : ( 482 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_9
		
	
		namespace EXT_SubModel_10 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 10 ,  {20.7 }} ,
					{ 11 ,  {22.2 }} ,
					{ 14 ,  {23.4 }} ,
					{ 15 ,  {24.2 }} ,
					{ 18 ,  {22.8 }} ,
					{ 20 ,  {22.6 }} ,
					{ 21 ,  {22.5 }} ,
					{ 24 ,  {23.1 }} ,
					{ 25 ,  {23.1 }} ,
					{ 26 ,  {22.9 }} ,
					{ 30 ,  {23.2 }} ,
					{ 31 ,  {22.1 }} ,
					{ 36 ,  {24.8 }} ,
					{ 37 ,  {25. }} ,
					{ 38 ,  {23. }} ,
					{ 40 ,  {25. }} ,
					{ 43 ,  {24.6 }} ,
					{ 44 ,  {24.7 }} ,
					{ 45 ,  {24.4 }} ,
					{ 46 ,  {22.2 }} ,
					{ 47 ,  {29.1 }} ,
					{ 49 ,  {27. }} ,
					{ 50 ,  {27.5 }} ,
					{ 55 ,  {22.3 }} ,
					{ 56 ,  {22. }} ,
					{ 58 ,  {20.9 }} ,
					{ 59 ,  {20.5 }} ,
					{ 61 ,  {22.6 }} ,
					{ 63 ,  {24.4 }} ,
					{ 65 ,  {23.4 }} ,
					{ 66 ,  {23.6 }} ,
					{ 72 ,  {20.3 }} ,
					{ 73 ,  {20.4 }} ,
					{ 74 ,  {19.9 }} ,
					{ 76 ,  {21.1 }} ,
					{ 77 ,  {20.9 }} ,
					{ 79 ,  {18.7 }} ,
					{ 80 ,  {19.6 }} ,
					{ 81 ,  {18.2 }} ,
					{ 88 ,  {29.1 }} ,
					{ 90 ,  {29.8 }} ,
					{ 91 ,  {30.1 }} ,
					{ 92 ,  {30.8 }} ,
					{ 94 ,  {28.6 }} ,
					{ 96 ,  {27.9 }} ,
					{ 97 ,  {28. }} ,
					{ 99 ,  {24.8 }} ,
					{ 100 ,  {26.2 }} ,
					{ 104 ,  {34.9 }} ,
					{ 106 ,  {32.4 }} ,
					{ 108 ,  {33.1 }} ,
					{ 109 ,  {32.9 }} ,
					{ 112 ,  {34.9 }} ,
					{ 113 ,  {35.1 }} ,
					{ 114 ,  {35.4 }} ,
					{ 116 ,  {29.6 }} ,
					{ 117 ,  {29. }} ,
					{ 122 ,  {31.6 }} ,
					{ 123 ,  {32. }} ,
					{ 126 ,  {32.5 }} ,
					{ 129 ,  {27.1 }} ,
					{ 131 ,  {26.6 }} ,
					{ 132 ,  {26.5 }} ,
					{ 134 ,  {28.2 }} ,
					{ 135 ,  {29. }} ,
					{ 137 ,  {24.8 }} ,
					{ 138 ,  {23.6 }} ,
					{ 141 ,  {25.1 }} ,
					{ 142 ,  {25. }} ,
					{ 143 ,  {22. }} ,
					{ 146 ,  {23.9 }} ,
					{ 148 ,  {22. }} ,
					{ 149 ,  {22.8 }} ,
					{ 152 ,  {23.8 }} ,
					{ 153 ,  {24. }} ,
					{ 154 ,  {25. }} ,
					{ 160 ,  {37.9 }} ,
					{ 161 ,  {37.3 }} ,
					{ 163 ,  {33.8 }} ,
					{ 166 ,  {36. }} ,
					{ 167 ,  {36.1 }} ,
					{ 168 ,  {35.4 }} ,
					{ 169 ,  {33.4 }} ,
					{ 172 ,  {33.3 }} ,
					{ 173 ,  {34.6 }} ,
					{ 175 ,  {32.7 }} ,
					{ 176 ,  {31.5 }} ,
					{ 180 ,  {43.5 }} ,
					{ 181 ,  {50. }} ,
					{ 185 ,  {41.7 }} ,
					{ 187 ,  {44. }} ,
					{ 188 ,  {43.8 }} ,
					{ 190 ,  {46.7 }} ,
					{ 192 ,  {45.4 }} ,
					{ 193 ,  {44.8 }} ,
					{ 195 ,  {37.6 }} ,
					{ 196 ,  {39.8 }} ,
					{ 197 ,  {21.9 }} ,
					{ 201 ,  {27.9 }} ,
					{ 205 ,  {16.1 }} ,
					{ 206 ,  {15. }} ,
					{ 210 ,  {19.6 }} ,
					{ 211 ,  {20.1 }} ,
					{ 212 ,  {20.8 }} ,
					{ 214 ,  {17.4 }} ,
					{ 215 ,  {16.8 }} ,
					{ 220 ,  {21.1 }} ,
					{ 221 ,  {21.4 }} ,
					{ 225 ,  {22.6 }} ,
					{ 226 ,  {22.5 }} ,
					{ 227 ,  {22.4 }} ,
					{ 229 ,  {24.4 }} ,
					{ 231 ,  {22.8 }} ,
					{ 232 ,  {23.1 }} ,
					{ 236 ,  {22.8 }} ,
					{ 241 ,  {20.1 }} ,
					{ 242 ,  {20. }} ,
					{ 243 ,  {20.4 }} ,
					{ 244 ,  {20.8 }} ,
					{ 247 ,  {19.4 }} ,
					{ 248 ,  {19.3 }} ,
					{ 250 ,  {19.2 }} ,
					{ 251 ,  {19.2 }} ,
					{ 255 ,  {21.8 }} ,
					{ 256 ,  {23. }} ,
					{ 264 ,  {20.8 }} ,
					{ 266 ,  {20.6 }} ,
					{ 267 ,  {20.6 }} ,
					{ 268 ,  {20.2 }} ,
					{ 270 ,  {21. }} ,
					{ 271 ,  {21.2 }} ,
					{ 272 ,  {21.4 }} ,
					{ 273 ,  {21.7 }} ,
					{ 274 ,  {19.6 }} ,
					{ 276 ,  {19.6 }} ,
					{ 277 ,  {19.5 }} ,
					{ 278 ,  {23. }} ,
					{ 281 ,  {16.8 }} ,
					{ 283 ,  {18.3 }} ,
					{ 285 ,  {17.7 }} ,
					{ 286 ,  {17.5 }} ,
					{ 288 ,  {20. }} ,
					{ 289 ,  {20.1 }} ,
					{ 294 ,  {21.7 }} ,
					{ 295 ,  {21.2 }} ,
					{ 297 ,  {22.2 }} ,
					{ 298 ,  {22. }} ,
					{ 300 ,  {19.4 }} ,
					{ 301 ,  {20.1 }} ,
					{ 305 ,  {17.1 }} ,
					{ 307 ,  {19.3 }} ,
					{ 309 ,  {18.2 }} ,
					{ 311 ,  {18.7 }} ,
					{ 313 ,  {18.4 }} ,
					{ 314 ,  {18.5 }} ,
					{ 315 ,  {16. }} ,
					{ 319 ,  {19.3 }} ,
					{ 320 ,  {19.5 }} ,
					{ 322 ,  {19. }} ,
					{ 323 ,  {18.9 }} ,
					{ 324 ,  {22.2 }} ,
					{ 328 ,  {30.7 }} ,
					{ 329 ,  {31. }} ,
					{ 330 ,  {29.8 }} ,
					{ 331 ,  {26.7 }} ,
					{ 338 ,  {16.6 }} ,
					{ 339 ,  {15.6 }} ,
					{ 342 ,  {19.4 }} ,
					{ 343 ,  {20.4 }} ,
					{ 344 ,  {18.3 }} ,
					{ 347 ,  {19. }} ,
					{ 350 ,  {15.4 }} ,
					{ 351 ,  {15.6 }} ,
					{ 354 ,  {12.7 }} ,
					{ 356 ,  {13.1 }} ,
					{ 357 ,  {13.5 }} ,
					{ 359 ,  {13.6 }} ,
					{ 360 ,  {13.9 }} ,
					{ 362 ,  {13.8 }} ,
					{ 365 ,  {17.3 }} ,
					{ 366 ,  {15.7 }} ,
					{ 367 ,  {17.8 }} ,
					{ 368 ,  {7. }} ,
					{ 372 ,  {27.1 }} ,
					{ 374 ,  {19.5 }} ,
					{ 375 ,  {20.5 }} ,
					{ 379 ,  {22.5 }} ,
					{ 381 ,  {23.1 }} ,
					{ 382 ,  {23.2 }} ,
					{ 384 ,  {19.4 }} ,
					{ 385 ,  {19.8 }} ,
					{ 390 ,  {18. }} ,
					{ 391 ,  {18.1 }} ,
					{ 393 ,  {18.7 }} ,
					{ 394 ,  {18.4 }} ,
					{ 397 ,  {15.2 }} ,
					{ 398 ,  {15. }} ,
					{ 400 ,  {16.6 }} ,
					{ 401 ,  {16.7 }} ,
					{ 403 ,  {19.3 }} ,
					{ 404 ,  {21.7 }} ,
					{ 407 ,  {13.4 }} ,
					{ 409 ,  {14. }} ,
					{ 411 ,  {14.4 }} ,
					{ 412 ,  {14.6 }} ,
					{ 413 ,  {16.5 }} ,
					{ 418 ,  {16.3 }} ,
					{ 420 ,  {17.2 }} ,
					{ 421 ,  {17.9 }} ,
					{ 424 ,  {10.2 }} ,
					{ 425 ,  {11.7 }} ,
					{ 427 ,  {14.6 }} ,
					{ 429 ,  {13.3 }} ,
					{ 430 ,  {13.8 }} ,
					{ 431 ,  {27.5 }} ,
					{ 437 ,  {14.9 }} ,
					{ 438 ,  {13.4 }} ,
					{ 440 ,  {17.8 }} ,
					{ 441 ,  {17.1 }} ,
					{ 444 ,  {15.1 }} ,
					{ 445 ,  {14.1 }} ,
					{ 448 ,  {12.5 }} ,
					{ 449 ,  {12.6 }} ,
					{ 450 ,  {13.1 }} ,
					{ 452 ,  {8.5 }} ,
					{ 454 ,  {12.8 }} ,
					{ 456 ,  {12.3 }} ,
					{ 458 ,  {11.8 }} ,
					{ 459 ,  {11.3 }} ,
					{ 463 ,  {10.4 }} ,
					{ 464 ,  {11.7 }} ,
					{ 466 ,  {5. }} ,
					{ 470 ,  {8.8 }} ,
					{ 473 ,  {7.4 }} ,
					{ 474 ,  {7.5 }} ,
					{ 475 ,  {8.4 }} ,
					{ 476 ,  {10.4 }} ,
					{ 479 ,  {8.3 }} ,
					{ 480 ,  {8.7 }} ,
					{ 483 ,  {10.8 }} ,
					{ 485 ,  {10.5 }} ,
					{ 486 ,  {10.2 }} ,
					{ 487 ,  {9.6 }} ,
					{ 488 ,  {13.8 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_14 <= -0.42014649510383606) ? ( (scaler_output_7 <= 1.193061888217926) ? ( (scaler_output_9 <= -1.1153733730316162) ? ( 3 ) : ( (scaler_output_7 <= 0.34608645737171173) ? ( (scaler_output_14 <= -0.7054446935653687) ? ( (scaler_output_4 <= 0.8193888962268829) ? ( (scaler_output_13 <= 0.39312173426151276) ? ( (scaler_output_11 <= -0.9029136896133423) ? ( (scaler_output_7 <= 0.019618507008999586) ? ( 10 ) : ( 11 ) ) : ( (scaler_output_8 <= -2.157811999320984) ? ( (scaler_output_7 <= 0.04511274769902229) ? ( 14 ) : ( 15 ) ) : ( (scaler_output_8 <= -1.563662588596344) ? ( (scaler_output_11 <= -0.43762174248695374) ? ( 18 ) : ( (scaler_output_9 <= 1.2904333472251892) ? ( 20 ) : ( 21 ) ) ) : ( (scaler_output_14 <= -0.7786875367164612) ? ( (scaler_output_3 <= 1.2562663555145264) ? ( 24 ) : ( 25 ) ) : ( 26 ) ) ) ) ) : ( (scaler_output_14 <= -0.7619463205337524) ? ( (scaler_output_7 <= -0.12626522034406662) ? ( (scaler_output_11 <= -0.6319842040538788) ? ( 30 ) : ( 31 ) ) : ( (scaler_output_12 <= 0.5726628303527832) ? ( (scaler_output_7 <= 0.020326681435108185) ? ( (scaler_output_11 <= -0.7173858880996704) ? ( (scaler_output_6 <= -0.9246428608894348) ? ( 36 ) : ( 37 ) ) : ( 38 ) ) : ( (scaler_output_11 <= -0.6732125878334045) ? ( 40 ) : ( (scaler_output_4 <= -0.884253054857254) ? ( (scaler_output_11 <= -0.5966455638408661) ? ( 43 ) : ( 44 ) ) : ( 45 ) ) ) ) : ( 46 ) ) ) : ( 47 ) ) ) : ( (scaler_output_2 <= -0.059863388538360596) ? ( 49 ) : ( 50 ) ) ) : ( (scaler_output_12 <= 0.11115118861198425) ? ( (scaler_output_2 <= -0.41837263107299805) ? ( (scaler_output_14 <= -0.5422178655862808) ? ( (scaler_output_7 <= 0.08618680853396654) ? ( 55 ) : ( 56 ) ) : ( (scaler_output_12 <= -0.8349476456642151) ? ( 58 ) : ( 59 ) ) ) : ( (scaler_output_10 <= -0.8087483644485474) ? ( 61 ) : ( (scaler_output_11 <= -1.0177642405033112) ? ( 63 ) : ( (scaler_output_2 <= -0.4153197407722473) ? ( 65 ) : ( 66 ) ) ) ) ) : ( (scaler_output_3 <= 1.6697003841400146) ? ( (scaler_output_14 <= -0.48362359404563904) ? ( (scaler_output_9 <= 0.7324820160865784) ? ( (scaler_output_12 <= 0.872645378112793) ? ( (scaler_output_9 <= 0.37834061682224274) ? ( 72 ) : ( 73 ) ) : ( 74 ) ) : ( (scaler_output_4 <= -0.7852467596530914) ? ( 76 ) : ( 77 ) ) ) : ( (scaler_output_2 <= -0.41386985778808594) ? ( 79 ) : ( 80 ) ) ) : ( 81 ) ) ) ) : ( (scaler_output_8 <= -1.0335531830787659) ? ( (scaler_output_7 <= 0.628647655248642) ? ( (scaler_output_14 <= -0.8665789067745209) ? ( (scaler_output_4 <= -1.0023272633552551) ? ( (scaler_output_12 <= -0.35036044009029865) ? ( (scaler_output_6 <= -1.2593656182289124) ? ( 88 ) : ( (scaler_output_13 <= 0.27877695858478546) ? ( 90 ) : ( 91 ) ) ) : ( 92 ) ) : ( (scaler_output_12 <= -0.4195872098207474) ? ( 94 ) : ( (scaler_output_8 <= -1.401783525943756) ? ( 96 ) : ( 97 ) ) ) ) : ( (scaler_output_6 <= -1.1534407138824463) ? ( 99 ) : ( 100 ) ) ) : ( (scaler_output_9 <= 1.872938334941864) ? ( (scaler_output_14 <= -1.1330432295799255) ? ( (scaler_output_11 <= -0.8999688029289246) ? ( 104 ) : ( (scaler_output_7 <= 0.6980486512184143) ? ( 106 ) : ( (scaler_output_9 <= 1.164751023054123) ? ( 108 ) : ( 109 ) ) ) ) : ( (scaler_output_8 <= -1.1794221997261047) ? ( (scaler_output_6 <= -1.1114944219589233) ? ( 112 ) : ( 113 ) ) : ( 114 ) ) ) : ( (scaler_output_11 <= -0.3639995753765106) ? ( 116 ) : ( 117 ) ) ) ) : ( (scaler_output_6 <= -0.2382492944598198) ? ( (scaler_output_14 <= -0.537334993481636) ? ( (scaler_output_8 <= -0.8396540582180023) ? ( (scaler_output_11 <= -0.4641256835311651) ? ( 122 ) : ( 123 ) ) : ( (scaler_output_7 <= 0.7943602204322815) ? ( (scaler_output_11 <= -1.1679534316062927) ? ( 126 ) : ( (scaler_output_10 <= -0.4077770560979843) ? ( (scaler_output_8 <= -0.508780375123024) ? ( 129 ) : ( (scaler_output_6 <= -0.5899200737476349) ? ( 131 ) : ( 132 ) ) ) : ( (scaler_output_10 <= -0.23593220114707947) ? ( 134 ) : ( 135 ) ) ) ) : ( (scaler_output_2 <= -0.41787080466747284) ? ( 137 ) : ( 138 ) ) ) ) : ( (scaler_output_3 <= 0.7188021242618561) ? ( (scaler_output_13 <= 0.3710580915212631) ? ( 141 ) : ( 142 ) ) : ( 143 ) ) ) : ( (scaler_output_9 <= -0.21773097664117813) ? ( (scaler_output_2 <= -0.4135223925113678) ? ( 146 ) : ( (scaler_output_13 <= 0.4059186279773712) ? ( 148 ) : ( 149 ) ) ) : ( (scaler_output_2 <= -0.042925313115119934) ? ( (scaler_output_13 <= 0.41827426850795746) ? ( 152 ) : ( 153 ) ) : ( 154 ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.611592411994934) ? ( (scaler_output_11 <= -0.7762836217880249) ? ( (scaler_output_7 <= 1.5259034037590027) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_9 <= 0.042423367500305176) ? ( 160 ) : ( 161 ) ) : ( (scaler_output_7 <= 1.3035369515419006) ? ( 163 ) : ( (scaler_output_13 <= 0.4018368721008301) ? ( (scaler_output_9 <= -0.4115569554269314) ? ( 166 ) : ( 167 ) ) : ( 168 ) ) ) ) : ( 169 ) ) : ( (scaler_output_8 <= -0.8556640446186066) ? ( (scaler_output_14 <= -1.015157163143158) ? ( 172 ) : ( 173 ) ) : ( (scaler_output_11 <= -0.6496535241603851) ? ( 175 ) : ( 176 ) ) ) ) : ( (scaler_output_10 <= 0.7378552705049515) ? ( (scaler_output_12 <= -1.6656686067581177) ? ( (scaler_output_7 <= 1.671787142753601) ? ( 180 ) : ( 181 ) ) : ( (scaler_output_8 <= 0.46071508526802063) ? ( (scaler_output_14 <= -1.2502317428588867) ? ( (scaler_output_14 <= -1.3723031282424927) ? ( 185 ) : ( (scaler_output_11 <= -0.8587404191493988) ? ( 187 ) : ( 188 ) ) ) : ( (scaler_output_7 <= 2.059157967567444) ? ( 190 ) : ( (scaler_output_4 <= -0.9121215343475342) ? ( 192 ) : ( 193 ) ) ) ) : ( (scaler_output_13 <= 0.3650457561016083) ? ( 195 ) : ( 196 ) ) ) ) : ( 197 ) ) ) ) : ( (scaler_output_14 <= 0.30321352183818817) ? ( (scaler_output_7 <= 0.885006457567215) ? ( (scaler_output_9 <= -1.1802685856819153) ? ( 201 ) : ( (scaler_output_13 <= 0.0386695172637701) ? ( (scaler_output_14 <= 0.022100614558439702) ? ( (scaler_output_8 <= 0.6955287009477615) ? ( 205 ) : ( 206 ) ) : ( (scaler_output_14 <= 0.22857560962438583) ? ( (scaler_output_12 <= 0.36498258635401726) ? ( (scaler_output_7 <= -0.6828895136713982) ? ( 210 ) : ( 211 ) ) : ( 212 ) ) : ( (scaler_output_11 <= 0.7580020185559988) ? ( 214 ) : ( 215 ) ) ) ) : ( (scaler_output_9 <= 0.2971319556236267) ? ( (scaler_output_11 <= -0.6231495440006256) ? ( (scaler_output_13 <= 0.36989976465702057) ? ( (scaler_output_7 <= -0.4102427586913109) ? ( 220 ) : ( 221 ) ) : ( (scaler_output_2 <= -0.41019387543201447) ? ( (scaler_output_8 <= 0.037339093163609505) ? ( (scaler_output_9 <= -0.12195251882076263) ? ( 225 ) : ( 226 ) ) : ( 227 ) ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( 229 ) : ( (scaler_output_12 <= -1.6656685173511505) ? ( 231 ) : ( 232 ) ) ) ) ) : ( (scaler_output_14 <= 0.20485888421535492) ? ( (scaler_output_2 <= -0.37320174276828766) ? ( (scaler_output_14 <= -0.33644041419029236) ? ( 236 ) : ( (scaler_output_2 <= -0.4060085862874985) ? ( (scaler_output_9 <= 0.12014483660459518) ? ( (scaler_output_14 <= 0.1525425836443901) ? ( (scaler_output_9 <= -0.2786135897040367) ? ( 241 ) : ( 242 ) ) : ( 243 ) ) : ( 244 ) ) : ( (scaler_output_11 <= 0.012945838272571564) ? ( (scaler_output_14 <= -0.006498962640762329) ? ( 247 ) : ( 248 ) ) : ( (scaler_output_4 <= 0.728449709713459) ? ( 250 ) : ( 251 ) ) ) ) ) : ( (scaler_output_8 <= 1.065537929534912) ? ( (scaler_output_6 <= -0.16198334842920303) ? ( (scaler_output_7 <= -0.42086536809802055) ? ( 255 ) : ( 256 ) ) : ( (scaler_output_14 <= 0.13370871916413307) ? ( (scaler_output_12 <= 1.2418546676635742) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_2 <= 0.429545134305954) ? ( (scaler_output_9 <= 0.01815630868077278) ? ( (scaler_output_7 <= -0.12768156826496124) ? ( (scaler_output_7 <= -0.9668670892715454) ? ( 264 ) : ( (scaler_output_7 <= -0.5823289155960083) ? ( 266 ) : ( 267 ) ) ) : ( 268 ) ) : ( (scaler_output_6 <= 0.07952550053596497) ? ( 270 ) : ( 271 ) ) ) : ( 272 ) ) : ( 273 ) ) : ( 274 ) ) : ( (scaler_output_4 <= 0.3133566379547119) ? ( 276 ) : ( 277 ) ) ) ) : ( 278 ) ) ) : ( (scaler_output_2 <= 0.23167351447045803) ? ( (scaler_output_9 <= -0.6148891150951385) ? ( 281 ) : ( (scaler_output_7 <= -0.5766635090112686) ? ( 283 ) : ( (scaler_output_14 <= 0.28368210792541504) ? ( 285 ) : ( 286 ) ) ) ) : ( (scaler_output_9 <= -0.5012208819389343) ? ( 288 ) : ( 289 ) ) ) ) ) : ( (scaler_output_6 <= -0.9886215627193451) ? ( (scaler_output_13 <= 0.3812073618173599) ? ( (scaler_output_9 <= 0.9515066146850586) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( 294 ) : ( 295 ) ) : ( (scaler_output_14 <= -0.1850719228386879) ? ( 297 ) : ( 298 ) ) ) : ( (scaler_output_4 <= -1.0023272335529327) ? ( 300 ) : ( 301 ) ) ) : ( (scaler_output_13 <= 0.41507503390312195) ? ( (scaler_output_14 <= 0.16300585120916367) ? ( (scaler_output_10 <= -0.8087483942508698) ? ( 305 ) : ( (scaler_output_12 <= -0.07345345616340637) ? ( 307 ) : ( (scaler_output_14 <= -0.30923594534397125) ? ( 309 ) : ( (scaler_output_6 <= -0.687371015548706) ? ( 311 ) : ( (scaler_output_9 <= 0.3668997436761856) ? ( 313 ) : ( 314 ) ) ) ) ) ) : ( 315 ) ) : ( (scaler_output_7 <= -0.35854609310626984) ? ( (scaler_output_7 <= -0.527091383934021) ? ( (scaler_output_9 <= 0.6429375410079956) ? ( 319 ) : ( 320 ) ) : ( (scaler_output_6 <= -0.29333026707172394) ? ( 322 ) : ( 323 ) ) ) : ( 324 ) ) ) ) ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_9 <= -0.7103092968463898) ? ( (scaler_output_7 <= 1.234135925769806) ? ( 328 ) : ( 329 ) ) : ( 330 ) ) : ( 331 ) ) ) : ( (scaler_output_2 <= 0.29692724347114563) ? ( (scaler_output_13 <= 0.21076582372188568) ? ( (scaler_output_4 <= 2.304483413696289) ? ( (scaler_output_14 <= 0.465742826461792) ? ( (scaler_output_14 <= 0.358320027589798) ? ( (scaler_output_14 <= 0.3192571848630905) ? ( 338 ) : ( 339 ) ) : ( (scaler_output_7 <= -0.5653327703475952) ? ( (scaler_output_7 <= -0.7204227447509766) ? ( 342 ) : ( 343 ) ) : ( 344 ) ) ) : ( (scaler_output_14 <= 1.507185935974121) ? ( (scaler_output_8 <= 0.6172574758529663) ? ( 347 ) : ( (scaler_output_9 <= -1.0455816388130188) ? ( (scaler_output_7 <= -0.9725324809551239) ? ( 350 ) : ( 351 ) ) : ( (scaler_output_9 <= -0.013037372380495071) ? ( (scaler_output_8 <= 0.8218299150466919) ? ( 354 ) : ( (scaler_output_14 <= 0.9372870624065399) ? ( 356 ) : ( 357 ) ) ) : ( (scaler_output_9 <= 0.14637045422568917) ? ( 359 ) : ( 360 ) ) ) ) ) : ( (scaler_output_13 <= -1.0306994668208063) ? ( 362 ) : ( (scaler_output_10 <= -0.6941851377487183) ? ( (scaler_output_14 <= 1.912462830543518) ? ( 365 ) : ( 366 ) ) : ( 367 ) ) ) ) ) : ( 368 ) ) : ( (scaler_output_14 <= 1.596472442150116) ? ( (scaler_output_2 <= -0.4057067334651947) ? ( (scaler_output_12 <= -0.5811162739992142) ? ( 372 ) : ( (scaler_output_7 <= -0.5568346679210663) ? ( 374 ) : ( 375 ) ) ) : ( (scaler_output_8 <= 0.5745640993118286) ? ( (scaler_output_13 <= 0.4050360918045044) ? ( (scaler_output_10 <= -0.5223402976989746) ? ( 379 ) : ( (scaler_output_8 <= -0.4340669810771942) ? ( 381 ) : ( 382 ) ) ) : ( (scaler_output_4 <= -0.3782208114862442) ? ( 384 ) : ( 385 ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_14 <= 0.6903541088104248) ? ( (scaler_output_10 <= -0.5223402976989746) ? ( (scaler_output_9 <= -0.8876785933971405) ? ( 390 ) : ( 391 ) ) : ( (scaler_output_6 <= 0.7574450634419918) ? ( 393 ) : ( 394 ) ) ) : ( (scaler_output_2 <= -0.3957856297492981) ? ( (scaler_output_8 <= 0.9125533401966095) ? ( 397 ) : ( 398 ) ) : ( (scaler_output_2 <= -0.10540050268173218) ? ( 400 ) : ( 401 ) ) ) ) : ( (scaler_output_7 <= -0.8740963339805603) ? ( 403 ) : ( 404 ) ) ) ) ) : ( (scaler_output_9 <= 0.012973308563232422) ? ( (scaler_output_9 <= -1.165268898010254) ? ( 407 ) : ( (scaler_output_13 <= 0.34767064452171326) ? ( 409 ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( 411 ) : ( 412 ) ) ) ) : ( 413 ) ) ) ) : ( (scaler_output_6 <= 0.7362601161003113) ? ( (scaler_output_7 <= 0.31067777425050735) ? ( (scaler_output_9 <= -0.9679795801639557) ? ( (scaler_output_14 <= 1.4806789755821228) ? ( 418 ) : ( (scaler_output_2 <= 1.2141359150409698) ? ( 420 ) : ( 421 ) ) ) : ( (scaler_output_13 <= -2.147615611553192) ? ( (scaler_output_14 <= 0.5299174934625626) ? ( 424 ) : ( 425 ) ) : ( (scaler_output_9 <= -0.7794083058834076) ? ( 427 ) : ( (scaler_output_2 <= 0.4788188487291336) ? ( 429 ) : ( 430 ) ) ) ) ) : ( 431 ) ) : ( (scaler_output_2 <= 0.919853001832962) ? ( (scaler_output_14 <= 0.9896033704280853) ? ( (scaler_output_13 <= 0.3183811902999878) ? ( (scaler_output_8 <= 0.989045649766922) ? ( (scaler_output_7 <= 0.6222741007804871) ? ( 437 ) : ( 438 ) ) : ( (scaler_output_2 <= 0.7449377179145813) ? ( 440 ) : ( 441 ) ) ) : ( (scaler_output_7 <= -0.11493444442749023) ? ( (scaler_output_13 <= 0.411324217915535) ? ( 444 ) : ( 445 ) ) : ( (scaler_output_7 <= 0.19666185975074768) ? ( (scaler_output_8 <= 1.01217120885849) ? ( 448 ) : ( 449 ) ) : ( 450 ) ) ) ) : ( (scaler_output_14 <= 1.2239803671836853) ? ( 452 ) : ( (scaler_output_8 <= 0.9427944719791412) ? ( 454 ) : ( (scaler_output_9 <= -1.081074595451355) ? ( 456 ) : ( (scaler_output_8 <= 1.0513068437576294) ? ( 458 ) : ( 459 ) ) ) ) ) ) : ( (scaler_output_14 <= 3.2601306438446045) ? ( (scaler_output_14 <= 0.6980271637439728) ? ( (scaler_output_8 <= 0.9107744693756104) ? ( 463 ) : ( 464 ) ) : ( (scaler_output_9 <= -1.14045250415802) ? ( 466 ) : ( (scaler_output_8 <= 0.8680810630321503) ? ( (scaler_output_2 <= 2.609204053878784) ? ( (scaler_output_7 <= -2.2876105308532715) ? ( 470 ) : ( (scaler_output_14 <= 2.8429954051971436) ? ( (scaler_output_8 <= 0.7933676838874817) ? ( 473 ) : ( 474 ) ) : ( 475 ) ) ) : ( 476 ) ) : ( (scaler_output_13 <= -3.7505383491516113) ? ( (scaler_output_8 <= 1.0619801878929138) ? ( 479 ) : ( 480 ) ) : ( (scaler_output_7 <= -0.20062343031167984) ? ( (scaler_output_14 <= 1.8706097602844238) ? ( 483 ) : ( (scaler_output_14 <= 2.347036838531494) ? ( 485 ) : ( 486 ) ) ) : ( 487 ) ) ) ) ) ) : ( 488 ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_10
		
	
		namespace EXT_SubModel_11 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 3 ,  {50. }} ,
					{ 10 ,  {27. }} ,
					{ 14 ,  {25.3 }} ,
					{ 15 ,  {25. }} ,
					{ 19 ,  {24.6 }} ,
					{ 21 ,  {24.8 }} ,
					{ 22 ,  {24.7 }} ,
					{ 23 ,  {25. }} ,
					{ 24 ,  {23. }} ,
					{ 27 ,  {24.3 }} ,
					{ 30 ,  {23.4 }} ,
					{ 31 ,  {23.7 }} ,
					{ 32 ,  {24.2 }} ,
					{ 35 ,  {23.1 }} ,
					{ 36 ,  {22.8 }} ,
					{ 37 ,  {22.1 }} ,
					{ 38 ,  {27.5 }} ,
					{ 39 ,  {29.1 }} ,
					{ 42 ,  {23.7 }} ,
					{ 43 ,  {24.4 }} ,
					{ 47 ,  {22.5 }} ,
					{ 49 ,  {22.2 }} ,
					{ 50 ,  {21.9 }} ,
					{ 52 ,  {22.9 }} ,
					{ 53 ,  {23.1 }} ,
					{ 54 ,  {20.7 }} ,
					{ 56 ,  {27.9 }} ,
					{ 59 ,  {11.9 }} ,
					{ 60 ,  {18.6 }} ,
					{ 65 ,  {16.1 }} ,
					{ 66 ,  {17.2 }} ,
					{ 67 ,  {15. }} ,
					{ 70 ,  {21.9 }} ,
					{ 73 ,  {19.6 }} ,
					{ 74 ,  {20.1 }} ,
					{ 75 ,  {20.8 }} ,
					{ 77 ,  {16.8 }} ,
					{ 78 ,  {17.4 }} ,
					{ 84 ,  {21.1 }} ,
					{ 86 ,  {19.3 }} ,
					{ 87 ,  {20. }} ,
					{ 92 ,  {22.9 }} ,
					{ 93 ,  {22.8 }} ,
					{ 94 ,  {22.5 }} ,
					{ 95 ,  {23.4 }} ,
					{ 98 ,  {22. }} ,
					{ 99 ,  {21.4 }} ,
					{ 101 ,  {20.5 }} ,
					{ 102 ,  {20.6 }} ,
					{ 106 ,  {22.6 }} ,
					{ 107 ,  {23.1 }} ,
					{ 108 ,  {21. }} ,
					{ 110 ,  {25. }} ,
					{ 112 ,  {24.7 }} ,
					{ 113 ,  {24.4 }} ,
					{ 115 ,  {16.2 }} ,
					{ 117 ,  {17.5 }} ,
					{ 122 ,  {20.1 }} ,
					{ 123 ,  {19.4 }} ,
					{ 126 ,  {21.7 }} ,
					{ 127 ,  {22.9 }} ,
					{ 129 ,  {19.3 }} ,
					{ 131 ,  {22. }} ,
					{ 134 ,  {20.9 }} ,
					{ 136 ,  {20.3 }} ,
					{ 137 ,  {20.5 }} ,
					{ 138 ,  {21.2 }} ,
					{ 141 ,  {22.7 }} ,
					{ 142 ,  {24.3 }} ,
					{ 144 ,  {21. }} ,
					{ 145 ,  {21.5 }} ,
					{ 146 ,  {24.5 }} ,
					{ 153 ,  {20.8 }} ,
					{ 154 ,  {20.6 }} ,
					{ 156 ,  {21.4 }} ,
					{ 157 ,  {21.2 }} ,
					{ 159 ,  {22.6 }} ,
					{ 161 ,  {21.8 }} ,
					{ 162 ,  {21.7 }} ,
					{ 163 ,  {23. }} ,
					{ 167 ,  {19.3 }} ,
					{ 168 ,  {19.6 }} ,
					{ 171 ,  {20.6 }} ,
					{ 172 ,  {20.2 }} ,
					{ 175 ,  {20.1 }} ,
					{ 176 ,  {20. }} ,
					{ 178 ,  {19.6 }} ,
					{ 179 ,  {19.5 }} ,
					{ 180 ,  {22.7 }} ,
					{ 184 ,  {21.1 }} ,
					{ 188 ,  {18.5 }} ,
					{ 189 ,  {18.2 }} ,
					{ 191 ,  {19. }} ,
					{ 192 ,  {18.7 }} ,
					{ 193 ,  {19.6 }} ,
					{ 194 ,  {22.2 }} ,
					{ 195 ,  {16. }} ,
					{ 200 ,  {35.4 }} ,
					{ 201 ,  {35.1 }} ,
					{ 202 ,  {37. }} ,
					{ 204 ,  {30.1 }} ,
					{ 206 ,  {31.6 }} ,
					{ 207 ,  {32. }} ,
					{ 212 ,  {30.8 }} ,
					{ 214 ,  {32.5 }} ,
					{ 215 ,  {32. }} ,
					{ 220 ,  {29.6 }} ,
					{ 221 ,  {29.4 }} ,
					{ 222 ,  {29.1 }} ,
					{ 223 ,  {28. }} ,
					{ 224 ,  {31.2 }} ,
					{ 228 ,  {30.1 }} ,
					{ 229 ,  {29.9 }} ,
					{ 232 ,  {28.4 }} ,
					{ 233 ,  {29. }} ,
					{ 235 ,  {27.5 }} ,
					{ 237 ,  {26.7 }} ,
					{ 238 ,  {26.5 }} ,
					{ 242 ,  {26.6 }} ,
					{ 243 ,  {27.1 }} ,
					{ 244 ,  {24.4 }} ,
					{ 246 ,  {22. }} ,
					{ 249 ,  {26.2 }} ,
					{ 251 ,  {25.1 }} ,
					{ 252 ,  {25. }} ,
					{ 253 ,  {23.9 }} ,
					{ 256 ,  {21. }} ,
					{ 260 ,  {22.4 }} ,
					{ 261 ,  {22. }} ,
					{ 262 ,  {23.7 }} ,
					{ 264 ,  {22.8 }} ,
					{ 266 ,  {24. }} ,
					{ 268 ,  {23.8 }} ,
					{ 269 ,  {23.9 }} ,
					{ 270 ,  {29.8 }} ,
					{ 276 ,  {23.7 }} ,
					{ 277 ,  {21.7 }} ,
					{ 280 ,  {15. }} ,
					{ 282 ,  {13.1 }} ,
					{ 284 ,  {13.5 }} ,
					{ 285 ,  {13.6 }} ,
					{ 287 ,  {11.7 }} ,
					{ 291 ,  {14.5 }} ,
					{ 294 ,  {18.3 }} ,
					{ 295 ,  {19.1 }} ,
					{ 297 ,  {17.9 }} ,
					{ 298 ,  {17.2 }} ,
					{ 300 ,  {15.7 }} ,
					{ 301 ,  {13.8 }} ,
					{ 304 ,  {20.5 }} ,
					{ 306 ,  {18.8 }} ,
					{ 307 ,  {19.1 }} ,
					{ 309 ,  {17.3 }} ,
					{ 310 ,  {17.8 }} ,
					{ 311 ,  {27.5 }} ,
					{ 315 ,  {14.4 }} ,
					{ 316 ,  {17.5 }} ,
					{ 319 ,  {19.5 }} ,
					{ 320 ,  {19.4 }} ,
					{ 322 ,  {23.1 }} ,
					{ 324 ,  {21.7 }} ,
					{ 325 ,  {21.7 }} ,
					{ 326 ,  {27.1 }} ,
					{ 332 ,  {15.2 }} ,
					{ 335 ,  {17.4 }} ,
					{ 337 ,  {18. }} ,
					{ 338 ,  {18.1 }} ,
					{ 339 ,  {19.4 }} ,
					{ 341 ,  {13.1 }} ,
					{ 346 ,  {15.6 }} ,
					{ 347 ,  {15.1 }} ,
					{ 349 ,  {13.5 }} ,
					{ 351 ,  {14.2 }} ,
					{ 352 ,  {14.1 }} ,
					{ 355 ,  {14.1 }} ,
					{ 358 ,  {14.9 }} ,
					{ 359 ,  {14.9 }} ,
					{ 360 ,  {15.2 }} ,
					{ 362 ,  {17.8 }} ,
					{ 364 ,  {16.7 }} ,
					{ 365 ,  {16.1 }} ,
					{ 366 ,  {18.4 }} ,
					{ 367 ,  {23.2 }} ,
					{ 371 ,  {14. }} ,
					{ 372 ,  {17.8 }} ,
					{ 375 ,  {14.4 }} ,
					{ 377 ,  {13.8 }} ,
					{ 378 ,  {13.3 }} ,
					{ 380 ,  {13.4 }} ,
					{ 383 ,  {12.3 }} ,
					{ 384 ,  {12.5 }} ,
					{ 385 ,  {11.8 }} ,
					{ 387 ,  {7. }} ,
					{ 388 ,  {11. }} ,
					{ 393 ,  {8.8 }} ,
					{ 394 ,  {7. }} ,
					{ 396 ,  {12.8 }} ,
					{ 399 ,  {10.4 }} ,
					{ 400 ,  {10.5 }} ,
					{ 401 ,  {10.2 }} ,
					{ 403 ,  {5. }} ,
					{ 404 ,  {6.3 }} ,
					{ 408 ,  {8.3 }} ,
					{ 409 ,  {9.5 }} ,
					{ 411 ,  {11.8 }} ,
					{ 412 ,  {9.6 }} ,
					{ 417 ,  {13.9 }} ,
					{ 418 ,  {14.6 }} ,
					{ 420 ,  {13.3 }} ,
					{ 421 ,  {13.1 }} ,
					{ 424 ,  {12.7 }} ,
					{ 425 ,  {12.1 }} ,
					{ 427 ,  {11.7 }} ,
					{ 428 ,  {10.8 }} ,
					{ 429 ,  {10.4 }} ,
					{ 436 ,  {35.4 }} ,
					{ 438 ,  {34.9 }} ,
					{ 439 ,  {34.7 }} ,
					{ 442 ,  {36.2 }} ,
					{ 443 ,  {36.1 }} ,
					{ 445 ,  {37.3 }} ,
					{ 446 ,  {37.9 }} ,
					{ 447 ,  {33.4 }} ,
					{ 451 ,  {30.3 }} ,
					{ 452 ,  {30.7 }} ,
					{ 453 ,  {29. }} ,
					{ 457 ,  {32.7 }} ,
					{ 459 ,  {33.8 }} ,
					{ 460 ,  {34.6 }} ,
					{ 463 ,  {31.7 }} ,
					{ 464 ,  {31.5 }} ,
					{ 465 ,  {31. }} ,
					{ 466 ,  {36. }} ,
					{ 467 ,  {17.8 }} ,
					{ 472 ,  {50. }} ,
					{ 475 ,  {41.7 }} ,
					{ 478 ,  {46. }} ,
					{ 479 ,  {46.7 }} ,
					{ 481 ,  {44. }} ,
					{ 483 ,  {45.4 }} ,
					{ 484 ,  {44.8 }} ,
					{ 487 ,  {43.1 }} ,
					{ 488 ,  {43.8 }} ,
					{ 490 ,  {38.7 }} ,
					{ 492 ,  {42.8 }} ,
					{ 493 ,  {42.3 }} ,
					{ 494 ,  {50. }} ,
					{ 495 ,  {50. }} ,
					{ 496 ,  {21.9 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 0.9883997440338135) ? ( (scaler_output_14 <= 0.3157694339752197) ? ( (scaler_output_9 <= -1.2385239005088806) ? ( 3 ) : ( (scaler_output_7 <= 0.32271674275398254) ? ( (scaler_output_14 <= -0.6921912431716919) ? ( (scaler_output_9 <= 1.1963029503822327) ? ( (scaler_output_7 <= 0.2582729607820511) ? ( (scaler_output_11 <= 0.7580020185559988) ? ( (scaler_output_13 <= -0.1321029793471098) ? ( 10 ) : ( (scaler_output_11 <= -0.6349290609359741) ? ( (scaler_output_14 <= -0.9056417346000671) ? ( (scaler_output_8 <= -1.583230346441269) ? ( 14 ) : ( 15 ) ) : ( (scaler_output_12 <= 0.4111337512731552) ? ( (scaler_output_3 <= 0.5947719216346741) ? ( (scaler_output_9 <= 0.2576024532318115) ? ( 19 ) : ( (scaler_output_6 <= -0.9924348294734955) ? ( 21 ) : ( 22 ) ) ) : ( 23 ) ) : ( 24 ) ) ) : ( (scaler_output_13 <= 0.2968691438436508) ? ( (scaler_output_12 <= -1.2733837068080902) ? ( 27 ) : ( (scaler_output_13 <= 0.2558307871222496) ? ( (scaler_output_3 <= 0.1193227767944336) ? ( 30 ) : ( 31 ) ) : ( 32 ) ) ) : ( (scaler_output_13 <= 0.3919082283973694) ? ( (scaler_output_7 <= -0.4236980527639389) ? ( 35 ) : ( 36 ) ) : ( 37 ) ) ) ) ) : ( 38 ) ) : ( 39 ) ) : ( (scaler_output_8 <= -1.8251595497131348) ? ( (scaler_output_13 <= 0.2991306632757187) ? ( 42 ) : ( 43 ) ) : ( (scaler_output_14 <= -0.821238100528717) ? ( (scaler_output_7 <= 0.2462339997291565) ? ( (scaler_output_13 <= 0.22720322385430336) ? ( 47 ) : ( (scaler_output_11 <= -0.6260944306850433) ? ( 49 ) : ( 50 ) ) ) : ( (scaler_output_10 <= -0.8087483942508698) ? ( 52 ) : ( 53 ) ) ) : ( 54 ) ) ) ) : ( (scaler_output_9 <= -1.1802685856819153) ? ( 56 ) : ( (scaler_output_14 <= -0.6531284153461456) ? ( (scaler_output_10 <= -0.8087483942508698) ? ( 59 ) : ( 60 ) ) : ( (scaler_output_13 <= 0.10248856619000435) ? ( (scaler_output_14 <= 0.02419326640665531) ? ( (scaler_output_12 <= 0.5034360736608505) ? ( (scaler_output_12 <= 0.08807560754939914) ? ( 65 ) : ( 66 ) ) : ( 67 ) ) : ( (scaler_output_14 <= 0.22857560962438583) ? ( (scaler_output_7 <= -1.580145239830017) ? ( 70 ) : ( (scaler_output_11 <= 0.7580020185559988) ? ( (scaler_output_9 <= 0.7263674736022949) ? ( 73 ) : ( 74 ) ) : ( 75 ) ) ) : ( (scaler_output_9 <= -0.7903714776039124) ? ( 77 ) : ( 78 ) ) ) ) : ( (scaler_output_12 <= 0.45728491246700287) ? ( (scaler_output_11 <= -0.6349290609359741) ? ( (scaler_output_11 <= -0.7615591883659363) ? ( (scaler_output_11 <= -0.9883153736591339) ? ( (scaler_output_11 <= -1.047213077545166) ? ( 84 ) : ( (scaler_output_2 <= -0.4016839265823364) ? ( 86 ) : ( 87 ) ) ) : ( (scaler_output_8 <= -0.17612779885530472) ? ( (scaler_output_9 <= 0.8603857010602951) ? ( (scaler_output_13 <= 0.4095039814710617) ? ( (scaler_output_2 <= -0.3739441782236099) ? ( 92 ) : ( 93 ) ) : ( 94 ) ) : ( 95 ) ) : ( (scaler_output_10 <= -0.7514667510986328) ? ( (scaler_output_12 <= -0.23498252034187317) ? ( 98 ) : ( 99 ) ) : ( (scaler_output_11 <= -0.8793546259403229) ? ( 101 ) : ( 102 ) ) ) ) ) : ( (scaler_output_7 <= -0.5249668657779694) ? ( (scaler_output_12 <= 0.2265290915966034) ? ( (scaler_output_14 <= 0.021403059363365173) ? ( 106 ) : ( 107 ) ) : ( 108 ) ) : ( (scaler_output_14 <= -0.39433713257312775) ? ( 110 ) : ( (scaler_output_9 <= 0.10672152601182461) ? ( 112 ) : ( 113 ) ) ) ) ) : ( (scaler_output_7 <= -0.8231078684329987) ? ( 115 ) : ( (scaler_output_10 <= -0.6941851377487183) ? ( 117 ) : ( (scaler_output_7 <= 0.04298822954297066) ? ( (scaler_output_2 <= -0.3865763247013092) ? ( (scaler_output_11 <= -0.5966455936431885) ? ( (scaler_output_13 <= 0.4090626984834671) ? ( 122 ) : ( 123 ) ) : ( (scaler_output_11 <= -0.5024092197418213) ? ( (scaler_output_14 <= -0.20530088897794485) ? ( 126 ) : ( 127 ) ) : ( (scaler_output_7 <= -0.7034265697002411) ? ( 129 ) : ( (scaler_output_14 <= -0.5833733677864075) ? ( 131 ) : ( (scaler_output_14 <= -0.2136715017259121) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( 134 ) : ( (scaler_output_9 <= 1.1747588068246841) ? ( 136 ) : ( 137 ) ) ) : ( 138 ) ) ) ) ) ) : ( (scaler_output_14 <= -0.061605460941791534) ? ( (scaler_output_9 <= 0.6778095364570618) ? ( 141 ) : ( 142 ) ) : ( (scaler_output_14 <= 0.10999199748039246) ? ( 144 ) : ( 145 ) ) ) ) : ( 146 ) ) ) ) ) : ( (scaler_output_9 <= 0.21986429393291473) ? ( (scaler_output_13 <= 0.3891502767801285) ? ( (scaler_output_8 <= 1.0388545989990234) ? ( (scaler_output_13 <= 0.34529881179332733) ? ( (scaler_output_7 <= -0.35288072004914284) ? ( (scaler_output_7 <= -0.9668670892715454) ? ( 153 ) : ( 154 ) ) : ( (scaler_output_7 <= -0.04057623539119959) ? ( 156 ) : ( 157 ) ) ) : ( (scaler_output_13 <= 0.36030207574367523) ? ( 159 ) : ( (scaler_output_14 <= -0.1278727799654007) ? ( 161 ) : ( 162 ) ) ) ) : ( 163 ) ) : ( (scaler_output_6 <= 1.5878965854644775) ? ( (scaler_output_6 <= -0.013688437640666962) ? ( (scaler_output_2 <= -0.15856266021728516) ? ( 167 ) : ( 168 ) ) : ( (scaler_output_14 <= -0.18855967558920383) ? ( (scaler_output_10 <= 0.33688393235206604) ? ( 171 ) : ( 172 ) ) : ( (scaler_output_7 <= -0.14184503629803658) ? ( (scaler_output_7 <= -0.37837496399879456) ? ( 175 ) : ( 176 ) ) : ( (scaler_output_14 <= 0.06953405402600765) ? ( 178 ) : ( 179 ) ) ) ) ) : ( 180 ) ) ) : ( (scaler_output_8 <= 0.7506742775440216) ? ( (scaler_output_14 <= -0.050444651395082474) ? ( (scaler_output_14 <= -0.6412700414657593) ? ( 184 ) : ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_13 <= 0.41342025995254517) ? ( (scaler_output_11 <= -0.640818864107132) ? ( 188 ) : ( 189 ) ) : ( (scaler_output_8 <= -0.5657048672437668) ? ( 191 ) : ( 192 ) ) ) : ( 193 ) ) ) : ( 194 ) ) : ( 195 ) ) ) ) ) ) ) ) : ( (scaler_output_12 <= -1.4579883813858032) ? ( (scaler_output_8 <= -1.0317742824554443) ? ( (scaler_output_9 <= 0.975654274225235) ? ( (scaler_output_13 <= 0.39918921887874603) ? ( 200 ) : ( 201 ) ) : ( 202 ) ) : ( (scaler_output_12 <= -2.0118022561073303) ? ( 204 ) : ( (scaler_output_12 <= -1.5041395425796509) ? ( 206 ) : ( 207 ) ) ) ) : ( (scaler_output_6 <= -0.2382492944598198) ? ( (scaler_output_14 <= -0.9544702768325806) ? ( (scaler_output_11 <= -0.8616853058338165) ? ( (scaler_output_6 <= -0.9881978332996368) ? ( 212 ) : ( (scaler_output_10 <= -0.6941851377487183) ? ( 214 ) : ( 215 ) ) ) : ( (scaler_output_11 <= -0.3286609351634979) ? ( (scaler_output_8 <= -1.2292311191558838) ? ( (scaler_output_3 <= 1.1942512542009354) ? ( (scaler_output_14 <= -1.1435065269470215) ? ( 220 ) : ( 221 ) ) : ( 222 ) ) : ( 223 ) ) : ( 224 ) ) ) : ( (scaler_output_9 <= -0.016787303611636162) ? ( (scaler_output_14 <= -0.6963765323162079) ? ( (scaler_output_6 <= -0.38654419779777527) ? ( 228 ) : ( 229 ) ) : ( (scaler_output_8 <= 0.037339095026254654) ? ( (scaler_output_8 <= -0.19747447967529297) ? ( 232 ) : ( 233 ) ) : ( (scaler_output_13 <= 0.36035722494125366) ? ( 235 ) : ( (scaler_output_4 <= -0.5285637378692627) ? ( 237 ) : ( 238 ) ) ) ) ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_14 <= -0.7068398296833038) ? ( (scaler_output_13 <= 0.37723591923713684) ? ( 242 ) : ( 243 ) ) : ( 244 ) ) : ( (scaler_output_12 <= -0.6503430008888245) ? ( 246 ) : ( (scaler_output_11 <= -0.3286609351634979) ? ( (scaler_output_8 <= -1.3306279182434082) ? ( 249 ) : ( (scaler_output_12 <= 0.0650000274181366) ? ( 251 ) : ( 252 ) ) ) : ( 253 ) ) ) ) ) ) : ( (scaler_output_6 <= 0.3337453603744507) ? ( (scaler_output_13 <= 0.3059152364730835) ? ( 256 ) : ( (scaler_output_13 <= 0.39924438297748566) ? ( (scaler_output_11 <= 0.3751668334007263) ? ( (scaler_output_7 <= 0.5585384964942932) ? ( 260 ) : ( 261 ) ) : ( 262 ) ) : ( (scaler_output_14 <= -1.0974681377410889) ? ( 264 ) : ( (scaler_output_6 <= -0.11113937944173813) ? ( 266 ) : ( (scaler_output_8 <= 0.7577898502349854) ? ( 268 ) : ( 269 ) ) ) ) ) ) : ( 270 ) ) ) ) ) ) : ( (scaler_output_6 <= 0.4142483025789261) ? ( (scaler_output_13 <= 0.38065578043460846) ? ( (scaler_output_7 <= 0.6449356377124786) ? ( (scaler_output_8 <= -0.46430813148617744) ? ( (scaler_output_3 <= -0.24243199080228806) ? ( 276 ) : ( 277 ) ) : ( (scaler_output_6 <= -0.11113937944173813) ? ( (scaler_output_12 <= -0.14268022775650024) ? ( 280 ) : ( (scaler_output_2 <= -0.2739606350660324) ? ( 282 ) : ( (scaler_output_8 <= 1.0548646450042725) ? ( 284 ) : ( 285 ) ) ) ) : ( (scaler_output_13 <= -3.774642825126648) ? ( 287 ) : ( (scaler_output_13 <= 0.062167280819267035) ? ( (scaler_output_13 <= -0.10628853365778923) ? ( (scaler_output_8 <= 0.6866342127323151) ? ( 291 ) : ( (scaler_output_8 <= 1.0086134374141693) ? ( (scaler_output_12 <= 0.27268026769161224) ? ( 294 ) : ( 295 ) ) : ( (scaler_output_7 <= -1.6665424406528473) ? ( 297 ) : ( 298 ) ) ) ) : ( (scaler_output_2 <= 0.10348716378211975) ? ( 300 ) : ( 301 ) ) ) : ( (scaler_output_14 <= 0.7817332744598389) ? ( (scaler_output_2 <= -0.4122018665075302) ? ( 304 ) : ( (scaler_output_10 <= 0.394165575504303) ? ( 306 ) : ( 307 ) ) ) : ( (scaler_output_10 <= -0.7514667510986328) ? ( 309 ) : ( 310 ) ) ) ) ) ) ) : ( 311 ) ) : ( (scaler_output_7 <= -0.1857517883181572) ? ( (scaler_output_7 <= -1.0107738375663757) ? ( (scaler_output_11 <= -0.552472248673439) ? ( 315 ) : ( 316 ) ) : ( (scaler_output_14 <= 0.5919995009899139) ? ( (scaler_output_13 <= 0.4092281758785248) ? ( 319 ) : ( 320 ) ) : ( (scaler_output_8 <= -0.27752459049224854) ? ( 322 ) : ( (scaler_output_4 <= -0.3796875774860382) ? ( 324 ) : ( 325 ) ) ) ) ) : ( 326 ) ) ) : ( (scaler_output_2 <= 0.7424904108047485) ? ( (scaler_output_14 <= 0.8982242047786713) ? ( (scaler_output_14 <= 0.8500932157039642) ? ( (scaler_output_2 <= -0.136949323117733) ? ( (scaler_output_6 <= 0.5286472290754318) ? ( 332 ) : ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_8 <= 0.9961612522602081) ? ( 335 ) : ( (scaler_output_2 <= -0.3689720630645752) ? ( 337 ) : ( 338 ) ) ) : ( 339 ) ) ) : ( (scaler_output_9 <= -0.9930826425552368) ? ( 341 ) : ( (scaler_output_8 <= 1.1206836104393005) ? ( (scaler_output_7 <= -0.1425532065331936) ? ( (scaler_output_2 <= 0.4498104453086853) ? ( (scaler_output_13 <= -1.2924844771623611) ? ( 346 ) : ( 347 ) ) : ( (scaler_output_8 <= 0.7097598165273666) ? ( 349 ) : ( (scaler_output_7 <= -0.2884369269013405) ? ( 351 ) : ( 352 ) ) ) ) : ( (scaler_output_13 <= 0.089691661298275) ? ( (scaler_output_13 <= -2.1712236404418945) ? ( 355 ) : ( (scaler_output_7 <= 0.2816426735371351) ? ( (scaler_output_6 <= 1.4607866406440735) ? ( 358 ) : ( 359 ) ) : ( 360 ) ) ) : ( (scaler_output_9 <= -0.7672270238399506) ? ( 362 ) : ( (scaler_output_9 <= -0.7084701657295227) ? ( 364 ) : ( 365 ) ) ) ) ) : ( 366 ) ) ) ) : ( 367 ) ) : ( (scaler_output_9 <= -1.0049534142017365) ? ( (scaler_output_8 <= 0.9623622894287109) ? ( (scaler_output_8 <= 0.9196689128875732) ? ( 371 ) : ( 372 ) ) : ( (scaler_output_2 <= -0.10175077989697456) ? ( (scaler_output_7 <= -1.2196849882602692) ? ( 375 ) : ( (scaler_output_11 <= 0.08362310193479061) ? ( 377 ) : ( 378 ) ) ) : ( (scaler_output_9 <= -1.1876012682914734) ? ( 380 ) : ( (scaler_output_14 <= 1.9947738647460938) ? ( (scaler_output_7 <= -0.47681108862161636) ? ( 383 ) : ( 384 ) ) : ( 385 ) ) ) ) ) : ( (scaler_output_9 <= -0.9431393146514893) ? ( 387 ) : ( 388 ) ) ) ) : ( (scaler_output_7 <= -0.6319010555744171) ? ( (scaler_output_7 <= -0.9123377203941345) ? ( (scaler_output_7 <= -2.4271206855773926) ? ( (scaler_output_2 <= 3.68995201587677) ? ( 393 ) : ( 394 ) ) : ( (scaler_output_14 <= 1.6927343606948853) ? ( 396 ) : ( (scaler_output_14 <= 2.347036838531494) ? ( (scaler_output_6 <= 1.1472488641738892) ? ( 399 ) : ( 400 ) ) : ( 401 ) ) ) ) : ( (scaler_output_14 <= 1.9319942593574524) ? ( 403 ) : ( 404 ) ) ) : ( (scaler_output_13 <= -3.0635870695114136) ? ( (scaler_output_7 <= 0.17045944556593895) ? ( (scaler_output_8 <= 0.9837089776992798) ? ( 408 ) : ( 409 ) ) : ( (scaler_output_2 <= 1.143998235464096) ? ( 411 ) : ( 412 ) ) ) : ( (scaler_output_7 <= 0.8241035342216492) ? ( (scaler_output_6 <= 1.0836938619613647) ? ( (scaler_output_13 <= 0.33007490634918213) ? ( (scaler_output_13 <= 0.14319596253335476) ? ( 417 ) : ( 418 ) ) : ( (scaler_output_2 <= 1.6676510274410248) ? ( 420 ) : ( 421 ) ) ) : ( (scaler_output_6 <= 1.2616477608680725) ? ( (scaler_output_14 <= 0.795684278011322) ? ( 424 ) : ( 425 ) ) : ( (scaler_output_13 <= -2.071826934814453) ? ( 427 ) : ( 428 ) ) ) ) : ( 429 ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.611592411994934) ? ( (scaler_output_11 <= 0.6254821419715881) ? ( (scaler_output_11 <= -0.8705199658870697) ? ( (scaler_output_7 <= 1.466416835784912) ? ( (scaler_output_2 <= -0.41862261295318604) ? ( (scaler_output_6 <= -1.1746256947517395) ? ( 436 ) : ( (scaler_output_7 <= 1.1406570672988892) ? ( 438 ) : ( 439 ) ) ) : ( (scaler_output_4 <= -1.2707443237304688) ? ( (scaler_output_10 <= -0.5223402827978134) ? ( 442 ) : ( 443 ) ) : ( (scaler_output_14 <= -1.176988959312439) ? ( 445 ) : ( 446 ) ) ) ) : ( 447 ) ) : ( (scaler_output_7 <= 1.2121825814247131) ? ( (scaler_output_12 <= -2.081028997898102) ? ( (scaler_output_14 <= -0.1292678713798523) ? ( 451 ) : ( 452 ) ) : ( 453 ) ) : ( (scaler_output_8 <= 1.0459701716899872) ? ( (scaler_output_7 <= 1.4182610511779785) ? ( (scaler_output_2 <= -0.42100055515766144) ? ( 457 ) : ( (scaler_output_7 <= 1.3304475545883179) ? ( 459 ) : ( 460 ) ) ) : ( (scaler_output_6 <= 0.1939244419336319) ? ( (scaler_output_13 <= 0.2727646231651306) ? ( 463 ) : ( 464 ) ) : ( 465 ) ) ) : ( 466 ) ) ) ) : ( 467 ) ) : ( (scaler_output_2 <= -0.08141547301784158) ? ( (scaler_output_2 <= -0.3520721197128296) ? ( (scaler_output_7 <= 3.1610758304595947) ? ( (scaler_output_2 <= -0.42226921021938324) ? ( 472 ) : ( (scaler_output_13 <= 0.32500027120113373) ? ( (scaler_output_14 <= -1.3792786598205566) ? ( 475 ) : ( (scaler_output_13 <= 0.2526315748691559) ? ( (scaler_output_14 <= -1.2781338095664978) ? ( 478 ) : ( 479 ) ) : ( (scaler_output_6 <= -1.149627447128296) ? ( 481 ) : ( (scaler_output_12 <= -1.042627900838852) ? ( 483 ) : ( 484 ) ) ) ) ) : ( (scaler_output_13 <= 0.39797572791576385) ? ( (scaler_output_13 <= 0.35930922627449036) ? ( 487 ) : ( 488 ) ) : ( (scaler_output_11 <= -0.6054802238941193) ? ( 490 ) : ( (scaler_output_11 <= -0.3934484273195267) ? ( 492 ) : ( 493 ) ) ) ) ) ) : ( 494 ) ) : ( 495 ) ) : ( 496 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_11
		
	
		namespace EXT_SubModel_12 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {50. }} ,
					{ 10 ,  {24.6 }} ,
					{ 12 ,  {25.3 }} ,
					{ 13 ,  {25. }} ,
					{ 16 ,  {24.7 }} ,
					{ 17 ,  {24.1 }} ,
					{ 20 ,  {23.4 }} ,
					{ 22 ,  {22.9 }} ,
					{ 23 ,  {23.1 }} ,
					{ 26 ,  {23.7 }} ,
					{ 27 ,  {23.8 }} ,
					{ 28 ,  {24.2 }} ,
					{ 30 ,  {27. }} ,
					{ 31 ,  {27.5 }} ,
					{ 34 ,  {23.5 }} ,
					{ 35 ,  {24.7 }} ,
					{ 37 ,  {20.7 }} ,
					{ 39 ,  {21.9 }} ,
					{ 42 ,  {22.3 }} ,
					{ 43 ,  {22.2 }} ,
					{ 44 ,  {22.5 }} ,
					{ 46 ,  {27.9 }} ,
					{ 51 ,  {16.1 }} ,
					{ 52 ,  {17.2 }} ,
					{ 55 ,  {22.8 }} ,
					{ 56 ,  {22. }} ,
					{ 59 ,  {19.3 }} ,
					{ 61 ,  {18.2 }} ,
					{ 63 ,  {17.1 }} ,
					{ 64 ,  {17.4 }} ,
					{ 67 ,  {18.6 }} ,
					{ 68 ,  {19.4 }} ,
					{ 72 ,  {21.8 }} ,
					{ 77 ,  {21. }} ,
					{ 78 ,  {21.1 }} ,
					{ 79 ,  {20.9 }} ,
					{ 81 ,  {20.3 }} ,
					{ 82 ,  {20.6 }} ,
					{ 83 ,  {20. }} ,
					{ 86 ,  {22.6 }} ,
					{ 87 ,  {22. }} ,
					{ 88 ,  {20.9 }} ,
					{ 90 ,  {18.2 }} ,
					{ 94 ,  {20.4 }} ,
					{ 95 ,  {19.9 }} ,
					{ 97 ,  {19.3 }} ,
					{ 99 ,  {19.5 }} ,
					{ 100 ,  {19.6 }} ,
					{ 102 ,  {20.7 }} ,
					{ 103 ,  {20.1 }} ,
					{ 105 ,  {29.6 }} ,
					{ 111 ,  {20.1 }} ,
					{ 112 ,  {20.5 }} ,
					{ 113 ,  {21.1 }} ,
					{ 115 ,  {22. }} ,
					{ 116 ,  {22.9 }} ,
					{ 117 ,  {17.5 }} ,
					{ 121 ,  {23.4 }} ,
					{ 122 ,  {22.2 }} ,
					{ 124 ,  {25. }} ,
					{ 126 ,  {23.9 }} ,
					{ 127 ,  {24.3 }} ,
					{ 132 ,  {22.5 }} ,
					{ 133 ,  {22.9 }} ,
					{ 134 ,  {21.7 }} ,
					{ 138 ,  {21.7 }} ,
					{ 139 ,  {21.4 }} ,
					{ 141 ,  {21.2 }} ,
					{ 142 ,  {21.4 }} ,
					{ 143 ,  {22.2 }} ,
					{ 144 ,  {24.4 }} ,
					{ 146 ,  {11.9 }} ,
					{ 150 ,  {15. }} ,
					{ 151 ,  {15.3 }} ,
					{ 152 ,  {16.8 }} ,
					{ 155 ,  {16.1 }} ,
					{ 159 ,  {16.2 }} ,
					{ 163 ,  {19.2 }} ,
					{ 164 ,  {19.4 }} ,
					{ 165 ,  {18.9 }} ,
					{ 168 ,  {18.5 }} ,
					{ 170 ,  {18.2 }} ,
					{ 171 ,  {18.3 }} ,
					{ 172 ,  {19.6 }} ,
					{ 174 ,  {23.8 }} ,
					{ 176 ,  {20.8 }} ,
					{ 177 ,  {20.3 }} ,
					{ 180 ,  {19.2 }} ,
					{ 181 ,  {19.6 }} ,
					{ 184 ,  {20.6 }} ,
					{ 188 ,  {22.6 }} ,
					{ 189 ,  {22.7 }} ,
					{ 190 ,  {22. }} ,
					{ 192 ,  {23.6 }} ,
					{ 193 ,  {23. }} ,
					{ 196 ,  {21.6 }} ,
					{ 197 ,  {23. }} ,
					{ 200 ,  {20. }} ,
					{ 201 ,  {19.6 }} ,
					{ 203 ,  {20.5 }} ,
					{ 204 ,  {20.6 }} ,
					{ 207 ,  {16. }} ,
					{ 209 ,  {16.8 }} ,
					{ 212 ,  {17.5 }} ,
					{ 213 ,  {17.4 }} ,
					{ 214 ,  {17.7 }} ,
					{ 216 ,  {19.1 }} ,
					{ 217 ,  {20. }} ,
					{ 222 ,  {28.5 }} ,
					{ 223 ,  {29.6 }} ,
					{ 226 ,  {29.8 }} ,
					{ 228 ,  {30.8 }} ,
					{ 230 ,  {31.2 }} ,
					{ 231 ,  {31.6 }} ,
					{ 232 ,  {33.1 }} ,
					{ 235 ,  {34.9 }} ,
					{ 236 ,  {34.9 }} ,
					{ 237 ,  {33.4 }} ,
					{ 242 ,  {30.7 }} ,
					{ 243 ,  {32.5 }} ,
					{ 244 ,  {29.1 }} ,
					{ 247 ,  {26.6 }} ,
					{ 249 ,  {27.9 }} ,
					{ 250 ,  {28.2 }} ,
					{ 251 ,  {24.4 }} ,
					{ 258 ,  {29.4 }} ,
					{ 260 ,  {28.7 }} ,
					{ 261 ,  {28.6 }} ,
					{ 264 ,  {28.4 }} ,
					{ 265 ,  {29. }} ,
					{ 270 ,  {26.5 }} ,
					{ 271 ,  {26.7 }} ,
					{ 272 ,  {26.2 }} ,
					{ 273 ,  {25.1 }} ,
					{ 275 ,  {23.6 }} ,
					{ 276 ,  {24.4 }} ,
					{ 278 ,  {29.8 }} ,
					{ 279 ,  {30.1 }} ,
					{ 282 ,  {23.7 }} ,
					{ 283 ,  {25. }} ,
					{ 284 ,  {20.2 }} ,
					{ 286 ,  {26.4 }} ,
					{ 288 ,  {22. }} ,
					{ 291 ,  {22.9 }} ,
					{ 292 ,  {23.1 }} ,
					{ 293 ,  {23.9 }} ,
					{ 297 ,  {22.4 }} ,
					{ 298 ,  {21. }} ,
					{ 299 ,  {23.9 }} ,
					{ 300 ,  {18.4 }} ,
					{ 307 ,  {20.4 }} ,
					{ 308 ,  {21.7 }} ,
					{ 310 ,  {22.5 }} ,
					{ 312 ,  {23.1 }} ,
					{ 313 ,  {23.2 }} ,
					{ 315 ,  {19.8 }} ,
					{ 316 ,  {17.5 }} ,
					{ 320 ,  {13.6 }} ,
					{ 321 ,  {13.1 }} ,
					{ 322 ,  {15.4 }} ,
					{ 325 ,  {15.2 }} ,
					{ 326 ,  {13.5 }} ,
					{ 329 ,  {21.7 }} ,
					{ 334 ,  {17.8 }} ,
					{ 335 ,  {17.4 }} ,
					{ 336 ,  {19. }} ,
					{ 338 ,  {16.7 }} ,
					{ 340 ,  {15.6 }} ,
					{ 341 ,  {16.1 }} ,
					{ 345 ,  {18.8 }} ,
					{ 346 ,  {18.7 }} ,
					{ 348 ,  {19.4 }} ,
					{ 349 ,  {19.1 }} ,
					{ 351 ,  {18.4 }} ,
					{ 352 ,  {18. }} ,
					{ 353 ,  {13.6 }} ,
					{ 359 ,  {15.1 }} ,
					{ 361 ,  {11.7 }} ,
					{ 363 ,  {14.5 }} ,
					{ 365 ,  {12.5 }} ,
					{ 367 ,  {13.3 }} ,
					{ 368 ,  {13.1 }} ,
					{ 369 ,  {8.5 }} ,
					{ 372 ,  {10.2 }} ,
					{ 373 ,  {10.4 }} ,
					{ 374 ,  {9.6 }} ,
					{ 379 ,  {13.5 }} ,
					{ 380 ,  {13.4 }} ,
					{ 381 ,  {13.8 }} ,
					{ 382 ,  {14.9 }} ,
					{ 385 ,  {19.1 }} ,
					{ 386 ,  {17.8 }} ,
					{ 388 ,  {14.6 }} ,
					{ 389 ,  {17.1 }} ,
					{ 391 ,  {27.5 }} ,
					{ 393 ,  {17.2 }} ,
					{ 394 ,  {16.7 }} ,
					{ 398 ,  {17.3 }} ,
					{ 399 ,  {19.3 }} ,
					{ 402 ,  {11.8 }} ,
					{ 403 ,  {13.4 }} ,
					{ 406 ,  {15.7 }} ,
					{ 407 ,  {15.6 }} ,
					{ 409 ,  {13.8 }} ,
					{ 411 ,  {14.4 }} ,
					{ 412 ,  {14.6 }} ,
					{ 415 ,  {7. }} ,
					{ 417 ,  {17.9 }} ,
					{ 419 ,  {10.2 }} ,
					{ 421 ,  {13.8 }} ,
					{ 423 ,  {13.1 }} ,
					{ 424 ,  {13.3 }} ,
					{ 427 ,  {8.3 }} ,
					{ 430 ,  {5. }} ,
					{ 431 ,  {5.6 }} ,
					{ 432 ,  {6.3 }} ,
					{ 435 ,  {12.8 }} ,
					{ 437 ,  {11.3 }} ,
					{ 438 ,  {10.8 }} ,
					{ 441 ,  {8.4 }} ,
					{ 442 ,  {8.7 }} ,
					{ 444 ,  {9.7 }} ,
					{ 445 ,  {10.2 }} ,
					{ 451 ,  {36.2 }} ,
					{ 452 ,  {37.3 }} ,
					{ 455 ,  {33.4 }} ,
					{ 456 ,  {33.8 }} ,
					{ 457 ,  {36. }} ,
					{ 460 ,  {32.2 }} ,
					{ 462 ,  {31.5 }} ,
					{ 463 ,  {31.7 }} ,
					{ 465 ,  {32.7 }} ,
					{ 466 ,  {33.3 }} ,
					{ 467 ,  {17.8 }} ,
					{ 474 ,  {50. }} ,
					{ 475 ,  {48.8 }} ,
					{ 477 ,  {50. }} ,
					{ 478 ,  {43.1 }} ,
					{ 481 ,  {45.4 }} ,
					{ 482 ,  {44.8 }} ,
					{ 483 ,  {50. }} ,
					{ 485 ,  {44. }} ,
					{ 486 ,  {42.3 }} ,
					{ 489 ,  {43.8 }} ,
					{ 490 ,  {42.8 }} ,
					{ 492 ,  {39.8 }} ,
					{ 493 ,  {38.7 }} ,
					{ 494 ,  {21.9 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 1.0981666445732117) ? ( (scaler_output_14 <= 0.33111555874347687) ? ( (scaler_output_7 <= 0.2582729607820511) ? ( (scaler_output_9 <= -1.2385239005088806) ? ( 4 ) : ( (scaler_output_14 <= -0.6880059242248535) ? ( (scaler_output_9 <= 1.215434730052948) ? ( (scaler_output_4 <= 0.5091691128909588) ? ( (scaler_output_14 <= -0.8791348040103912) ? ( (scaler_output_4 <= -0.8072481453418732) ? ( 10 ) : ( (scaler_output_14 <= -0.9293584525585175) ? ( 12 ) : ( 13 ) ) ) : ( (scaler_output_10 <= -0.6941851377487183) ? ( (scaler_output_11 <= -0.6791023463010788) ? ( 16 ) : ( 17 ) ) : ( (scaler_output_7 <= 0.04511274769902229) ? ( (scaler_output_8 <= -1.7824661135673523) ? ( 20 ) : ( (scaler_output_12 <= 0.7341918796300888) ? ( 22 ) : ( 23 ) ) ) : ( (scaler_output_4 <= -0.2770143635571003) ? ( (scaler_output_8 <= -1.1545177400112152) ? ( 26 ) : ( 27 ) ) : ( 28 ) ) ) ) ) : ( (scaler_output_6 <= 0.909976989030838) ? ( 30 ) : ( 31 ) ) ) : ( (scaler_output_2 <= -0.4195925444364548) ? ( (scaler_output_12 <= -0.7887965142726898) ? ( 34 ) : ( 35 ) ) : ( (scaler_output_2 <= -0.41896383464336395) ? ( 37 ) : ( (scaler_output_10 <= -0.7514667809009552) ? ( 39 ) : ( (scaler_output_9 <= 1.792637288570404) ? ( (scaler_output_2 <= -0.4181232750415802) ? ( 42 ) : ( 43 ) ) : ( 44 ) ) ) ) ) ) : ( (scaler_output_9 <= -1.1802685856819153) ? ( 46 ) : ( (scaler_output_8 <= 0.08181136101484299) ? ( (scaler_output_7 <= -0.48743367195129395) ? ( (scaler_output_13 <= 0.10248856619000435) ? ( (scaler_output_13 <= -0.009374037384986877) ? ( 51 ) : ( 52 ) ) : ( (scaler_output_9 <= -0.6264494061470032) ? ( (scaler_output_14 <= -0.030215680599212646) ? ( 55 ) : ( 56 ) ) : ( (scaler_output_7 <= -0.8351468145847321) ? ( (scaler_output_11 <= -0.8086773455142975) ? ( 59 ) : ( (scaler_output_13 <= 0.3312883973121643) ? ( 61 ) : ( (scaler_output_8 <= -1.2541356086730957) ? ( 63 ) : ( 64 ) ) ) ) : ( (scaler_output_4 <= -1.0969332456588745) ? ( (scaler_output_13 <= 0.3997408151626587) ? ( 67 ) : ( 68 ) ) : ( (scaler_output_8 <= -0.8414329290390015) ? ( (scaler_output_7 <= -0.5979087054729462) ? ( (scaler_output_7 <= -0.7437924444675446) ? ( 72 ) : ( (scaler_output_14 <= 0.1560303382575512) ? ( (scaler_output_4 <= -0.1596735417842865) ? ( (scaler_output_7 <= -0.6134885251522064) ? ( (scaler_output_2 <= -0.4004640132188797) ? ( 77 ) : ( 78 ) ) : ( 79 ) ) : ( (scaler_output_14 <= -0.19623273238539696) ? ( 81 ) : ( 82 ) ) ) : ( 83 ) ) ) : ( (scaler_output_8 <= -1.430245816707611) ? ( (scaler_output_3 <= -0.24243199080228806) ? ( 86 ) : ( 87 ) ) : ( 88 ) ) ) : ( (scaler_output_13 <= 0.361460417509079) ? ( 90 ) : ( (scaler_output_14 <= 0.13998667150735855) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_14 <= -0.594534158706665) ? ( 94 ) : ( 95 ) ) : ( (scaler_output_7 <= -0.7069674432277679) ? ( 97 ) : ( (scaler_output_10 <= -0.35049544274806976) ? ( 99 ) : ( 100 ) ) ) ) : ( (scaler_output_12 <= 0.45728491246700287) ? ( 102 ) : ( 103 ) ) ) ) ) ) ) ) ) : ( (scaler_output_11 <= -1.1620636582374573) ? ( 105 ) : ( (scaler_output_2 <= -0.4183451384305954) ? ( (scaler_output_11 <= -0.4700154513120651) ? ( (scaler_output_11 <= -0.8793546259403229) ? ( (scaler_output_13 <= 0.40878690779209137) ? ( (scaler_output_10 <= -0.8087483942508698) ? ( 111 ) : ( 112 ) ) : ( 113 ) ) : ( (scaler_output_4 <= -0.3430185616016388) ? ( 115 ) : ( 116 ) ) ) : ( 117 ) ) : ( (scaler_output_14 <= -0.40131261944770813) ? ( (scaler_output_14 <= -0.5338472574949265) ? ( (scaler_output_7 <= -0.3394254148006439) ? ( 121 ) : ( 122 ) ) : ( (scaler_output_9 <= 0.2591788414865732) ? ( 124 ) : ( (scaler_output_10 <= -0.5223402827978134) ? ( 126 ) : ( 127 ) ) ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_2 <= -0.4119056314229965) ? ( (scaler_output_13 <= 0.41992904245853424) ? ( (scaler_output_11 <= -0.7468347549438477) ? ( 132 ) : ( 133 ) ) : ( 134 ) ) : ( (scaler_output_9 <= 0.7317177355289459) ? ( (scaler_output_11 <= 0.7020491883158684) ? ( (scaler_output_8 <= -0.208147831261158) ? ( 138 ) : ( 139 ) ) : ( (scaler_output_13 <= 0.3792767971754074) ? ( 141 ) : ( 142 ) ) ) : ( 143 ) ) ) : ( 144 ) ) ) ) ) ) : ( (scaler_output_14 <= -0.6398749649524689) ? ( 146 ) : ( (scaler_output_9 <= -0.9037531018257141) ? ( (scaler_output_14 <= 0.10510913655161858) ? ( (scaler_output_6 <= 1.5243416130542755) ? ( 150 ) : ( 151 ) ) : ( 152 ) ) : ( (scaler_output_14 <= 0.23345845937728882) ? ( (scaler_output_13 <= -2.157819986343384) ? ( 155 ) : ( (scaler_output_7 <= -0.2763979882001877) ? ( (scaler_output_4 <= 0.45049870759248734) ? ( (scaler_output_7 <= -0.8393958508968353) ? ( 159 ) : ( (scaler_output_2 <= -0.3910416066646576) ? ( (scaler_output_14 <= -0.018357321619987488) ? ( (scaler_output_14 <= -0.22552987188100815) ? ( 163 ) : ( 164 ) ) : ( 165 ) ) : ( (scaler_output_8 <= 0.6759608685970306) ? ( (scaler_output_11 <= -0.640818864107132) ? ( 168 ) : ( (scaler_output_13 <= 0.33183999359607697) ? ( 170 ) : ( 171 ) ) ) : ( 172 ) ) ) ) : ( (scaler_output_12 <= -0.6964941769838333) ? ( 174 ) : ( (scaler_output_14 <= 0.21741479635238647) ? ( 176 ) : ( 177 ) ) ) ) : ( (scaler_output_9 <= -0.735937774181366) ? ( (scaler_output_2 <= -0.3283633291721344) ? ( 180 ) : ( 181 ) ) : ( (scaler_output_9 <= -0.34592124819755554) ? ( (scaler_output_9 <= -0.7224667072296143) ? ( 184 ) : ( (scaler_output_8 <= 0.5656696557998657) ? ( (scaler_output_9 <= -0.43587179481983185) ? ( (scaler_output_13 <= 0.3828621506690979) ? ( 188 ) : ( 189 ) ) : ( 190 ) ) : ( (scaler_output_4 <= 0.2913551926612854) ? ( 192 ) : ( 193 ) ) ) ) : ( (scaler_output_12 <= -0.1888313628733158) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 196 ) : ( 197 ) ) : ( (scaler_output_3 <= -0.04605083167552948) ? ( (scaler_output_4 <= 0.657311886548996) ? ( 200 ) : ( 201 ) ) : ( (scaler_output_14 <= -0.31481634080410004) ? ( 203 ) : ( 204 ) ) ) ) ) ) ) ) : ( (scaler_output_2 <= 0.16234011016786098) ? ( (scaler_output_2 <= -0.39941471815109253) ? ( 207 ) : ( (scaler_output_8 <= 0.45715731382369995) ? ( 209 ) : ( (scaler_output_13 <= 0.33879002928733826) ? ( (scaler_output_11 <= -0.2992120925337076) ? ( 212 ) : ( 213 ) ) : ( 214 ) ) ) ) : ( (scaler_output_6 <= 0.7955780699849129) ? ( 216 ) : ( 217 ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_14 <= -1.1121167540550232) ? ( (scaler_output_7 <= 0.9444929957389832) ? ( (scaler_output_14 <= -1.2397685050964355) ? ( (scaler_output_11 <= -0.6967716813087463) ? ( 222 ) : ( 223 ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_3 <= 1.5663418769836426) ? ( 226 ) : ( (scaler_output_9 <= 1.0095708072185516) ? ( 228 ) : ( (scaler_output_9 <= 1.7078936696052551) ? ( 230 ) : ( 231 ) ) ) ) : ( 232 ) ) ) : ( (scaler_output_12 <= 0.04192444495856762) ? ( (scaler_output_2 <= -0.4201006293296814) ? ( 235 ) : ( 236 ) ) : ( 237 ) ) ) : ( (scaler_output_11 <= -0.817512035369873) ? ( (scaler_output_12 <= -0.2580581083893776) ? ( (scaler_output_9 <= -0.1558213159441948) ? ( (scaler_output_8 <= 0.7915887832641602) ? ( 242 ) : ( 243 ) ) : ( 244 ) ) : ( (scaler_output_14 <= -0.6970741152763367) ? ( (scaler_output_13 <= 0.399575337767601) ? ( 247 ) : ( (scaler_output_10 <= -0.46505866944789886) ? ( 249 ) : ( 250 ) ) ) : ( 251 ) ) ) : ( (scaler_output_12 <= 1.1726279258728027) ? ( (scaler_output_3 <= 0.5741002112627029) ? ( (scaler_output_2 <= 0.2229735627770424) ? ( (scaler_output_2 <= -0.3532188981771469) ? ( (scaler_output_12 <= -0.6503430008888245) ? ( (scaler_output_13 <= 0.36945848166942596) ? ( 258 ) : ( (scaler_output_13 <= 0.40222297608852386) ? ( 260 ) : ( 261 ) ) ) : ( (scaler_output_13 <= 0.1759052937850356) ? ( (scaler_output_9 <= -0.1176532432436943) ? ( 264 ) : ( 265 ) ) : ( (scaler_output_13 <= 0.41424764692783356) ? ( (scaler_output_2 <= -0.36925578117370605) ? ( (scaler_output_3 <= -0.04605083167552948) ? ( (scaler_output_10 <= -0.35049544274806976) ? ( 270 ) : ( 271 ) ) : ( 272 ) ) : ( 273 ) ) : ( (scaler_output_3 <= -0.04605083167552948) ? ( 275 ) : ( 276 ) ) ) ) ) : ( (scaler_output_8 <= 0.22590150916948915) ? ( 278 ) : ( 279 ) ) ) : ( (scaler_output_6 <= 0.5794912055134773) ? ( (scaler_output_8 <= 0.2881626784801483) ? ( 282 ) : ( 283 ) ) : ( 284 ) ) ) : ( (scaler_output_13 <= 0.3204772174358368) ? ( 286 ) : ( (scaler_output_12 <= -0.6041918247938156) ? ( 288 ) : ( (scaler_output_11 <= -0.2668183296918869) ? ( (scaler_output_4 <= -1.2150074243545532) ? ( 291 ) : ( 292 ) ) : ( 293 ) ) ) ) ) : ( (scaler_output_9 <= 0.2517506405711174) ? ( (scaler_output_13 <= 0.3978654146194458) ? ( (scaler_output_8 <= 0.3682127706706524) ? ( 297 ) : ( 298 ) ) : ( 299 ) ) : ( 300 ) ) ) ) ) ) : ( (scaler_output_14 <= 1.2539750337600708) ? ( (scaler_output_2 <= 0.29692724347114563) ? ( (scaler_output_8 <= 0.522976279258728) ? ( (scaler_output_13 <= 0.39880311489105225) ? ( (scaler_output_12 <= -0.0965290367603302) ? ( (scaler_output_13 <= 0.06823477894067764) ? ( 307 ) : ( 308 ) ) : ( (scaler_output_11 <= -0.4228972941637039) ? ( 310 ) : ( (scaler_output_7 <= -0.6212784498929977) ? ( 312 ) : ( 313 ) ) ) ) : ( (scaler_output_11 <= -0.34338538348674774) ? ( 315 ) : ( 316 ) ) ) : ( (scaler_output_7 <= -0.915170431137085) ? ( (scaler_output_2 <= -0.10040276125073433) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( 320 ) : ( 321 ) ) : ( 322 ) ) : ( (scaler_output_4 <= -0.28801505267620087) ? ( (scaler_output_2 <= -0.24635151028633118) ? ( 325 ) : ( 326 ) ) : ( (scaler_output_11 <= 1.6650269031524658) ? ( (scaler_output_6 <= -0.3187522366642952) ? ( 329 ) : ( (scaler_output_8 <= 0.9321211278438568) ? ( (scaler_output_7 <= -0.3500480204820633) ? ( (scaler_output_7 <= -0.4987644553184509) ? ( (scaler_output_7 <= -0.5256750583648682) ? ( 334 ) : ( 335 ) ) : ( 336 ) ) : ( (scaler_output_6 <= 0.926925003528595) ? ( 338 ) : ( (scaler_output_2 <= 0.11486376915127039) ? ( 340 ) : ( 341 ) ) ) ) : ( (scaler_output_8 <= 1.0957791209220886) ? ( (scaler_output_6 <= 0.24053140729665756) ? ( (scaler_output_11 <= -0.5642518252134323) ? ( 345 ) : ( 346 ) ) : ( (scaler_output_11 <= 0.7580020185559988) ? ( 348 ) : ( 349 ) ) ) : ( (scaler_output_7 <= 0.03661466762423515) ? ( 351 ) : ( 352 ) ) ) ) ) : ( 353 ) ) ) ) ) : ( (scaler_output_8 <= 1.1242413520812988) ? ( (scaler_output_9 <= -0.8386189639568329) ? ( (scaler_output_2 <= 0.9551434218883514) ? ( (scaler_output_8 <= 1.10289466381073) ? ( (scaler_output_14 <= 0.6261794567108154) ? ( 359 ) : ( (scaler_output_8 <= 0.3735494427382946) ? ( 361 ) : ( (scaler_output_6 <= 0.6218611747026443) ? ( 363 ) : ( (scaler_output_7 <= 0.19666185975074768) ? ( 365 ) : ( (scaler_output_6 <= 1.0836938619613647) ? ( 367 ) : ( 368 ) ) ) ) ) ) : ( 369 ) ) : ( (scaler_output_6 <= 1.2828327417373657) ? ( (scaler_output_13 <= -1.6283480823040009) ? ( 372 ) : ( 373 ) ) : ( 374 ) ) ) : ( (scaler_output_2 <= 0.6497200429439545) ? ( (scaler_output_9 <= -0.4961811453104019) ? ( (scaler_output_13 <= -1.989474531263113) ? ( (scaler_output_7 <= 0.06140074133872986) ? ( 379 ) : ( 380 ) ) : ( 381 ) ) : ( 382 ) ) : ( (scaler_output_13 <= 0.2243349626660347) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 385 ) : ( 386 ) ) : ( (scaler_output_13 <= 0.269730880856514) ? ( 388 ) : ( 389 ) ) ) ) ) : ( (scaler_output_9 <= -1.1098558902740479) ? ( 391 ) : ( (scaler_output_6 <= 0.8760810196399689) ? ( 393 ) : ( 394 ) ) ) ) ) : ( (scaler_output_11 <= 0.8581281453371048) ? ( (scaler_output_2 <= -0.3764764815568924) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 398 ) : ( 399 ) ) : ( (scaler_output_9 <= -1.1660571098327637) ? ( (scaler_output_2 <= -0.04289844399318099) ? ( 402 ) : ( 403 ) ) : ( (scaler_output_14 <= 2.0791773796081543) ? ( (scaler_output_8 <= 1.0655379891395569) ? ( 406 ) : ( 407 ) ) : ( (scaler_output_9 <= -1.1419811248779297) ? ( 409 ) : ( (scaler_output_2 <= -0.17435893416404724) ? ( 411 ) : ( 412 ) ) ) ) ) ) : ( (scaler_output_6 <= 1.0243759155273438) ? ( (scaler_output_12 <= 0.8034186363220215) ? ( 415 ) : ( (scaler_output_13 <= -2.124779760837555) ? ( 417 ) : ( (scaler_output_14 <= 1.4102264046669006) ? ( 419 ) : ( (scaler_output_9 <= -1.2132059335708618) ? ( 421 ) : ( (scaler_output_8 <= 1.0299601554870605) ? ( 423 ) : ( 424 ) ) ) ) ) ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( (scaler_output_6 <= 1.1175898313522339) ? ( 427 ) : ( (scaler_output_14 <= 2.1963659524917603) ? ( (scaler_output_13 <= 0.3591437339782715) ? ( 430 ) : ( 431 ) ) : ( 432 ) ) ) : ( (scaler_output_14 <= 1.689246654510498) ? ( (scaler_output_8 <= 0.9748145043849945) ? ( 435 ) : ( (scaler_output_2 <= 0.9500581324100494) ? ( 437 ) : ( 438 ) ) ) : ( (scaler_output_13 <= -1.5162648186087608) ? ( (scaler_output_2 <= 1.3791488409042358) ? ( 441 ) : ( 442 ) ) : ( (scaler_output_2 <= 1.1951817870140076) ? ( 444 ) : ( 445 ) ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.611592411994934) ? ( (scaler_output_12 <= 0.5957383960485458) ? ( (scaler_output_11 <= -0.7762836217880249) ? ( (scaler_output_8 <= -0.1707911342382431) ? ( (scaler_output_11 <= -1.0148193538188934) ? ( 451 ) : ( 452 ) ) : ( (scaler_output_2 <= -0.34894798696041107) ? ( (scaler_output_14 <= -0.6412700563669205) ? ( 455 ) : ( 456 ) ) : ( 457 ) ) ) : ( (scaler_output_13 <= 0.4010094702243805) ? ( (scaler_output_7 <= 1.3084941506385803) ? ( 460 ) : ( (scaler_output_14 <= -1.0653808116912842) ? ( 462 ) : ( 463 ) ) ) : ( (scaler_output_7 <= 1.366564393043518) ? ( 465 ) : ( 466 ) ) ) ) : ( 467 ) ) : ( (scaler_output_12 <= 0.572662815451622) ? ( (scaler_output_12 <= -0.37343601882457733) ? ( (scaler_output_9 <= 1.0784786939620972) ? ( (scaler_output_12 <= -1.6656686067581177) ? ( (scaler_output_14 <= -0.8428621888160706) ? ( (scaler_output_14 <= -0.9921380281448364) ? ( 474 ) : ( 475 ) ) : ( (scaler_output_13 <= 0.3097212165594101) ? ( 477 ) : ( 478 ) ) ) : ( (scaler_output_2 <= -0.37153124809265137) ? ( (scaler_output_12 <= -1.042627900838852) ? ( 481 ) : ( 482 ) ) : ( 483 ) ) ) : ( (scaler_output_13 <= 0.3583163470029831) ? ( 485 ) : ( 486 ) ) ) : ( (scaler_output_14 <= -1.2188419699668884) ? ( (scaler_output_2 <= -0.39599499106407166) ? ( 489 ) : ( 490 ) ) : ( (scaler_output_2 <= -0.41249994933605194) ? ( 492 ) : ( 493 ) ) ) ) : ( 494 ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_12
		
	
		namespace EXT_SubModel_13 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 4 ,  {50. }} ,
					{ 11 ,  {25.3 }} ,
					{ 12 ,  {25. }} ,
					{ 16 ,  {24.8 }} ,
					{ 18 ,  {24.6 }} ,
					{ 19 ,  {24.7 }} ,
					{ 21 ,  {25.2 }} ,
					{ 22 ,  {25. }} ,
					{ 23 ,  {23. }} ,
					{ 24 ,  {22.9 }} ,
					{ 27 ,  {23.7 }} ,
					{ 28 ,  {24.3 }} ,
					{ 30 ,  {23.1 }} ,
					{ 31 ,  {22.6 }} ,
					{ 33 ,  {24.7 }} ,
					{ 36 ,  {22.5 }} ,
					{ 39 ,  {23.2 }} ,
					{ 40 ,  {23.1 }} ,
					{ 41 ,  {23.7 }} ,
					{ 44 ,  {22.2 }} ,
					{ 45 ,  {21.9 }} ,
					{ 46 ,  {20.7 }} ,
					{ 55 ,  {22.5 }} ,
					{ 56 ,  {22.6 }} ,
					{ 58 ,  {23.2 }} ,
					{ 59 ,  {22.9 }} ,
					{ 62 ,  {25. }} ,
					{ 63 ,  {24.7 }} ,
					{ 65 ,  {24.5 }} ,
					{ 66 ,  {24.4 }} ,
					{ 69 ,  {21.7 }} ,
					{ 71 ,  {20.7 }} ,
					{ 72 ,  {21. }} ,
					{ 73 ,  {23.3 }} ,
					{ 74 ,  {29.6 }} ,
					{ 79 ,  {20.8 }} ,
					{ 80 ,  {20.6 }} ,
					{ 81 ,  {21.2 }} ,
					{ 82 ,  {19.3 }} ,
					{ 84 ,  {23. }} ,
					{ 85 ,  {21.4 }} ,
					{ 89 ,  {17.1 }} ,
					{ 90 ,  {17.4 }} ,
					{ 91 ,  {18.7 }} ,
					{ 97 ,  {19. }} ,
					{ 98 ,  {18.7 }} ,
					{ 101 ,  {19.6 }} ,
					{ 102 ,  {19.5 }} ,
					{ 104 ,  {19.3 }} ,
					{ 105 ,  {19.4 }} ,
					{ 106 ,  {17.5 }} ,
					{ 110 ,  {22. }} ,
					{ 111 ,  {22.2 }} ,
					{ 112 ,  {21.1 }} ,
					{ 114 ,  {20.1 }} ,
					{ 115 ,  {20.1 }} ,
					{ 119 ,  {21.1 }} ,
					{ 120 ,  {21.2 }} ,
					{ 123 ,  {20.4 }} ,
					{ 124 ,  {20.4 }} ,
					{ 126 ,  {19.9 }} ,
					{ 127 ,  {20. }} ,
					{ 130 ,  {24.3 }} ,
					{ 131 ,  {22.9 }} ,
					{ 134 ,  {22. }} ,
					{ 135 ,  {20.9 }} ,
					{ 136 ,  {22.2 }} ,
					{ 138 ,  {27.9 }} ,
					{ 140 ,  {11.9 }} ,
					{ 142 ,  {16.1 }} ,
					{ 146 ,  {15.3 }} ,
					{ 147 ,  {19.6 }} ,
					{ 150 ,  {21.5 }} ,
					{ 152 ,  {23.6 }} ,
					{ 153 ,  {23. }} ,
					{ 159 ,  {20.8 }} ,
					{ 161 ,  {20.4 }} ,
					{ 162 ,  {20.3 }} ,
					{ 164 ,  {21.2 }} ,
					{ 165 ,  {21.4 }} ,
					{ 167 ,  {18.5 }} ,
					{ 168 ,  {20.2 }} ,
					{ 173 ,  {20.1 }} ,
					{ 174 ,  {19.8 }} ,
					{ 176 ,  {19.4 }} ,
					{ 177 ,  {19.5 }} ,
					{ 179 ,  {20.3 }} ,
					{ 180 ,  {20.6 }} ,
					{ 181 ,  {18.3 }} ,
					{ 183 ,  {20.8 }} ,
					{ 185 ,  {22.6 }} ,
					{ 187 ,  {21.7 }} ,
					{ 188 ,  {21.9 }} ,
					{ 192 ,  {20.5 }} ,
					{ 193 ,  {20. }} ,
					{ 197 ,  {18.2 }} ,
					{ 199 ,  {18.4 }} ,
					{ 200 ,  {18.5 }} ,
					{ 201 ,  {18.9 }} ,
					{ 202 ,  {19.6 }} ,
					{ 203 ,  {16.2 }} ,
					{ 205 ,  {50. }} ,
					{ 213 ,  {29.1 }} ,
					{ 214 ,  {28.5 }} ,
					{ 216 ,  {30.8 }} ,
					{ 217 ,  {29.8 }} ,
					{ 219 ,  {31.6 }} ,
					{ 220 ,  {31.2 }} ,
					{ 222 ,  {33.1 }} ,
					{ 223 ,  {32.4 }} ,
					{ 226 ,  {24.8 }} ,
					{ 227 ,  {26.6 }} ,
					{ 229 ,  {28.6 }} ,
					{ 231 ,  {28. }} ,
					{ 232 ,  {27.9 }} ,
					{ 233 ,  {37. }} ,
					{ 237 ,  {26.6 }} ,
					{ 239 ,  {28.4 }} ,
					{ 240 ,  {28.2 }} ,
					{ 242 ,  {32.5 }} ,
					{ 243 ,  {30.1 }} ,
					{ 246 ,  {29.8 }} ,
					{ 247 ,  {28.4 }} ,
					{ 252 ,  {24. }} ,
					{ 254 ,  {25.1 }} ,
					{ 255 ,  {24.8 }} ,
					{ 257 ,  {30.1 }} ,
					{ 258 ,  {28.7 }} ,
					{ 260 ,  {22.8 }} ,
					{ 263 ,  {23.6 }} ,
					{ 266 ,  {23.9 }} ,
					{ 267 ,  {23.9 }} ,
					{ 269 ,  {23.8 }} ,
					{ 270 ,  {23.7 }} ,
					{ 271 ,  {25. }} ,
					{ 273 ,  {21. }} ,
					{ 275 ,  {22. }} ,
					{ 276 ,  {22.8 }} ,
					{ 281 ,  {23.7 }} ,
					{ 283 ,  {22.4 }} ,
					{ 284 ,  {22. }} ,
					{ 286 ,  {20.1 }} ,
					{ 287 ,  {18.9 }} ,
					{ 292 ,  {14.5 }} ,
					{ 294 ,  {17.2 }} ,
					{ 295 ,  {16.3 }} ,
					{ 297 ,  {11.7 }} ,
					{ 298 ,  {13.3 }} ,
					{ 302 ,  {13.1 }} ,
					{ 307 ,  {16.5 }} ,
					{ 308 ,  {16.6 }} ,
					{ 309 ,  {16. }} ,
					{ 310 ,  {17.5 }} ,
					{ 312 ,  {14.4 }} ,
					{ 314 ,  {15.6 }} ,
					{ 315 ,  {15.2 }} ,
					{ 321 ,  {18.8 }} ,
					{ 322 ,  {19.5 }} ,
					{ 324 ,  {17.3 }} ,
					{ 325 ,  {18.3 }} ,
					{ 329 ,  {19.8 }} ,
					{ 330 ,  {20. }} ,
					{ 331 ,  {20.4 }} ,
					{ 332 ,  {19.1 }} ,
					{ 333 ,  {22.5 }} ,
					{ 335 ,  {13.8 }} ,
					{ 338 ,  {16.8 }} ,
					{ 339 ,  {17.2 }} ,
					{ 340 ,  {19.1 }} ,
					{ 341 ,  {27.1 }} ,
					{ 342 ,  {27.5 }} ,
					{ 349 ,  {16.8 }} ,
					{ 350 ,  {16.7 }} ,
					{ 351 ,  {20. }} ,
					{ 357 ,  {13.1 }} ,
					{ 358 ,  {12.5 }} ,
					{ 362 ,  {16.1 }} ,
					{ 364 ,  {15.2 }} ,
					{ 365 ,  {14.9 }} ,
					{ 366 ,  {13.6 }} ,
					{ 370 ,  {13.4 }} ,
					{ 371 ,  {13.5 }} ,
					{ 373 ,  {14.9 }} ,
					{ 376 ,  {14.2 }} ,
					{ 377 ,  {14.1 }} ,
					{ 378 ,  {14.6 }} ,
					{ 379 ,  {12.6 }} ,
					{ 380 ,  {17.1 }} ,
					{ 381 ,  {17.8 }} ,
					{ 382 ,  {19. }} ,
					{ 384 ,  {17.4 }} ,
					{ 385 ,  {18.1 }} ,
					{ 387 ,  {10.4 }} ,
					{ 389 ,  {12.7 }} ,
					{ 390 ,  {11.7 }} ,
					{ 393 ,  {17.8 }} ,
					{ 395 ,  {13.3 }} ,
					{ 398 ,  {14.4 }} ,
					{ 399 ,  {14.6 }} ,
					{ 400 ,  {15.6 }} ,
					{ 403 ,  {13.9 }} ,
					{ 405 ,  {13.8 }} ,
					{ 406 ,  {13.8 }} ,
					{ 413 ,  {7. }} ,
					{ 414 ,  {7.5 }} ,
					{ 415 ,  {6.3 }} ,
					{ 417 ,  {9.7 }} ,
					{ 418 ,  {8.5 }} ,
					{ 421 ,  {9.5 }} ,
					{ 422 ,  {11. }} ,
					{ 424 ,  {11.8 }} ,
					{ 425 ,  {13.4 }} ,
					{ 427 ,  {12.3 }} ,
					{ 429 ,  {12.1 }} ,
					{ 430 ,  {11.3 }} ,
					{ 433 ,  {8.3 }} ,
					{ 435 ,  {10.2 }} ,
					{ 436 ,  {10.4 }} ,
					{ 441 ,  {7. }} ,
					{ 442 ,  {5.6 }} ,
					{ 443 ,  {7.2 }} ,
					{ 444 ,  {5. }} ,
					{ 446 ,  {10.2 }} ,
					{ 448 ,  {7.4 }} ,
					{ 450 ,  {8.4 }} ,
					{ 451 ,  {8.7 }} ,
					{ 456 ,  {29. }} ,
					{ 459 ,  {30.3 }} ,
					{ 460 ,  {30.7 }} ,
					{ 461 ,  {31.7 }} ,
					{ 465 ,  {35.4 }} ,
					{ 467 ,  {34.7 }} ,
					{ 468 ,  {34.9 }} ,
					{ 469 ,  {37.3 }} ,
					{ 472 ,  {34.6 }} ,
					{ 473 ,  {33.3 }} ,
					{ 475 ,  {32.2 }} ,
					{ 477 ,  {32.9 }} ,
					{ 478 ,  {32.7 }} ,
					{ 479 ,  {17.8 }} ,
					{ 484 ,  {46. }} ,
					{ 485 ,  {50. }} ,
					{ 488 ,  {43.1 }} ,
					{ 489 ,  {43.5 }} ,
					{ 490 ,  {42.3 }} ,
					{ 491 ,  {50. }} ,
					{ 495 ,  {42.8 }} ,
					{ 498 ,  {43.8 }} ,
					{ 499 ,  {44. }} ,
					{ 500 ,  {44.8 }} ,
					{ 501 ,  {38.7 }} ,
					{ 503 ,  {39.8 }} ,
					{ 504 ,  {37.6 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 1.0075204372406006) ? ( (scaler_output_14 <= 0.23345845937728882) ? ( (scaler_output_7 <= 0.33546385169029236) ? ( (scaler_output_9 <= -1.2479584217071533) ? ( 4 ) : ( (scaler_output_14 <= -0.7005618512630463) ? ( (scaler_output_9 <= 1.1963029503822327) ? ( (scaler_output_11 <= -0.6349290609359741) ? ( (scaler_output_14 <= -0.7186981737613678) ? ( (scaler_output_14 <= -0.9056417346000671) ? ( (scaler_output_2 <= -0.39400888979434967) ? ( 11 ) : ( 12 ) ) : ( (scaler_output_12 <= 0.4111337512731552) ? ( (scaler_output_4 <= -0.5938345491886139) ? ( (scaler_output_2 <= -0.4184913635253906) ? ( 16 ) : ( (scaler_output_9 <= 0.33408188819885254) ? ( 18 ) : ( 19 ) ) ) : ( (scaler_output_11 <= -0.938252329826355) ? ( 21 ) : ( 22 ) ) ) : ( 23 ) ) ) : ( 24 ) ) : ( (scaler_output_12 <= -0.7657209038734436) ? ( (scaler_output_6 <= -0.318752259016037) ? ( 27 ) : ( 28 ) ) : ( (scaler_output_14 <= -0.7905458807945251) ? ( 30 ) : ( 31 ) ) ) ) : ( (scaler_output_4 <= -1.3924854397773743) ? ( 33 ) : ( (scaler_output_8 <= -1.2879345417022705) ? ( (scaler_output_4 <= -1.1424028277397156) ? ( 36 ) : ( (scaler_output_2 <= -0.4137767404317856) ? ( (scaler_output_3 <= 2.341530680656433) ? ( 39 ) : ( 40 ) ) : ( 41 ) ) ) : ( (scaler_output_14 <= -0.821238100528717) ? ( (scaler_output_3 <= 1.6697003841400146) ? ( 44 ) : ( 45 ) ) : ( 46 ) ) ) ) ) : ( (scaler_output_8 <= 0.04623354785144329) ? ( (scaler_output_9 <= 0.2905636131763458) ? ( (scaler_output_11 <= -0.06656608544290066) ? ( (scaler_output_8 <= -0.09607771411538124) ? ( (scaler_output_8 <= -0.49277034401893616) ? ( (scaler_output_2 <= -0.4047030657529831) ? ( (scaler_output_7 <= -0.3989119827747345) ? ( (scaler_output_12 <= 0.0650000274181366) ? ( 55 ) : ( 56 ) ) : ( (scaler_output_8 <= -0.6208504736423492) ? ( 58 ) : ( 59 ) ) ) : ( (scaler_output_8 <= -0.9019152224063873) ? ( (scaler_output_12 <= 0.2265290915966034) ? ( 62 ) : ( 63 ) ) : ( (scaler_output_8 <= -0.7222472727298737) ? ( 65 ) : ( 66 ) ) ) ) : ( (scaler_output_6 <= -0.060295410454273224) ? ( (scaler_output_8 <= -0.4002680331468582) ? ( 69 ) : ( (scaler_output_13 <= 0.39058440923690796) ? ( 71 ) : ( 72 ) ) ) : ( 73 ) ) ) : ( 74 ) ) : ( (scaler_output_2 <= 0.2420102208852768) ? ( (scaler_output_14 <= 0.11836260184645653) ? ( (scaler_output_7 <= -0.10360366571694613) ? ( (scaler_output_11 <= 0.7432775888592005) ? ( 79 ) : ( 80 ) ) : ( 81 ) ) : ( 82 ) ) : ( (scaler_output_14 <= -0.09020503982901573) ? ( 84 ) : ( 85 ) ) ) ) : ( (scaler_output_7 <= -0.758664071559906) ? ( (scaler_output_8 <= -0.5817149002104998) ? ( (scaler_output_4 <= -0.721442699432373) ? ( 89 ) : ( 90 ) ) : ( 91 ) ) : ( (scaler_output_4 <= -0.8006477355957031) ? ( (scaler_output_7 <= -0.3875812143087387) ? ( (scaler_output_9 <= 1.7450107336044312) ? ( (scaler_output_9 <= 0.5701602697372437) ? ( (scaler_output_2 <= -0.4168889969587326) ? ( 97 ) : ( 98 ) ) : ( (scaler_output_14 <= -0.3824787586927414) ? ( (scaler_output_4 <= -0.854184478521347) ? ( 101 ) : ( 102 ) ) : ( (scaler_output_9 <= 0.9999213218688965) ? ( 104 ) : ( 105 ) ) ) ) : ( 106 ) ) : ( (scaler_output_14 <= -0.11392176151275635) ? ( (scaler_output_13 <= 0.41292382776737213) ? ( (scaler_output_10 <= -0.6941851675510406) ? ( 110 ) : ( 111 ) ) : ( 112 ) ) : ( (scaler_output_14 <= 0.005359398201107979) ? ( 114 ) : ( 115 ) ) ) ) : ( (scaler_output_9 <= 0.6870768368244171) ? ( (scaler_output_13 <= 0.37238191068172455) ? ( (scaler_output_8 <= -0.7097950279712677) ? ( 119 ) : ( 120 ) ) : ( (scaler_output_14 <= -0.594534158706665) ? ( (scaler_output_8 <= -0.4269513934850693) ? ( 123 ) : ( 124 ) ) : ( (scaler_output_14 <= -0.1836768314242363) ? ( 126 ) : ( 127 ) ) ) ) : ( (scaler_output_13 <= 0.4139718562364578) ? ( (scaler_output_4 <= -0.6041018813848495) ? ( 130 ) : ( 131 ) ) : ( (scaler_output_14 <= -0.25622210651636124) ? ( (scaler_output_8 <= -1.4462558031082153) ? ( 134 ) : ( 135 ) ) : ( 136 ) ) ) ) ) ) ) : ( (scaler_output_9 <= -1.1376101970672607) ? ( 138 ) : ( (scaler_output_14 <= -0.5812807083129883) ? ( 140 ) : ( (scaler_output_13 <= -1.8051328659057617) ? ( 142 ) : ( (scaler_output_9 <= -0.05450156005099416) ? ( (scaler_output_9 <= -1.0536786317825317) ? ( (scaler_output_14 <= 0.010242253541946411) ? ( 146 ) : ( 147 ) ) : ( (scaler_output_12 <= -0.558040663599968) ? ( (scaler_output_13 <= 0.2745848819613457) ? ( 150 ) : ( (scaler_output_4 <= -0.2953488528728485) ? ( 152 ) : ( 153 ) ) ) : ( (scaler_output_6 <= 1.3675727248191833) ? ( (scaler_output_13 <= 0.39880311489105225) ? ( (scaler_output_7 <= -0.08165029436349869) ? ( (scaler_output_7 <= -0.21832776814699173) ? ( (scaler_output_9 <= -0.851755678653717) ? ( 159 ) : ( (scaler_output_9 <= -0.7929510474205017) ? ( 161 ) : ( 162 ) ) ) : ( (scaler_output_12 <= -0.23498252034187317) ? ( 164 ) : ( 165 ) ) ) : ( (scaler_output_8 <= 0.6830764412879944) ? ( 167 ) : ( 168 ) ) ) : ( (scaler_output_14 <= 0.19788337498903275) ? ( (scaler_output_9 <= -0.40680384635925293) ? ( (scaler_output_2 <= -0.3998134434223175) ? ( (scaler_output_9 <= -0.7396877110004425) ? ( 173 ) : ( 174 ) ) : ( (scaler_output_7 <= -0.18291908875107765) ? ( 176 ) : ( 177 ) ) ) : ( (scaler_output_8 <= 0.325519397854805) ? ( 179 ) : ( 180 ) ) ) : ( 181 ) ) ) : ( (scaler_output_14 <= -0.16693561524152756) ? ( 183 ) : ( (scaler_output_8 <= 0.6510564088821411) ? ( 185 ) : ( (scaler_output_8 <= 0.8307243883609772) ? ( 187 ) : ( 188 ) ) ) ) ) ) ) : ( (scaler_output_6 <= -0.11113937944173813) ? ( (scaler_output_13 <= 0.21732975542545319) ? ( (scaler_output_4 <= -0.24034535884857178) ? ( 192 ) : ( 193 ) ) : ( (scaler_output_2 <= -0.32261189818382263) ? ( (scaler_output_13 <= 0.39312173426151276) ? ( (scaler_output_14 <= -0.1557747982442379) ? ( 197 ) : ( (scaler_output_13 <= 0.3436992019414902) ? ( 199 ) : ( 200 ) ) ) : ( 201 ) ) : ( 202 ) ) ) : ( 203 ) ) ) ) ) ) ) ) ) : ( (scaler_output_9 <= -1.020430862903595) ? ( 205 ) : ( (scaler_output_8 <= -0.921483039855957) ? ( (scaler_output_7 <= 0.9147497415542603) ? ( (scaler_output_14 <= -1.1121167540550232) ? ( (scaler_output_4 <= -0.7779129445552826) ? ( (scaler_output_9 <= 1.2050687074661255) ? ( (scaler_output_6 <= -1.1407297253608704) ? ( (scaler_output_7 <= 0.6137760281562805) ? ( 213 ) : ( 214 ) ) : ( (scaler_output_11 <= -0.475905230268836) ? ( 216 ) : ( 217 ) ) ) : ( (scaler_output_2 <= -0.4213680177927017) ? ( 219 ) : ( 220 ) ) ) : ( (scaler_output_8 <= -1.3377434611320496) ? ( 222 ) : ( 223 ) ) ) : ( (scaler_output_13 <= 0.3860613703727722) ? ( (scaler_output_7 <= 0.5217134654521942) ? ( 226 ) : ( 227 ) ) : ( (scaler_output_3 <= 0.015964269638061523) ? ( 229 ) : ( (scaler_output_12 <= 0.3188314139842987) ? ( 231 ) : ( 232 ) ) ) ) ) : ( 233 ) ) : ( (scaler_output_11 <= -0.817512035369873) ? ( (scaler_output_8 <= 0.537207406014204) ? ( (scaler_output_6 <= -0.7932959496974945) ? ( 237 ) : ( (scaler_output_8 <= -0.12987663224339485) ? ( 239 ) : ( 240 ) ) ) : ( (scaler_output_3 <= -0.08739423751831055) ? ( 242 ) : ( 243 ) ) ) : ( (scaler_output_13 <= 0.21043486893177032) ? ( (scaler_output_9 <= -0.3849252909421921) ? ( 246 ) : ( 247 ) ) : ( (scaler_output_14 <= -0.3768983483314514) ? ( (scaler_output_12 <= -0.419587180018425) ? ( (scaler_output_8 <= 0.3842227905988693) ? ( (scaler_output_2 <= -0.4210130572319031) ? ( 252 ) : ( (scaler_output_7 <= 0.6399784237146378) ? ( 254 ) : ( 255 ) ) ) : ( (scaler_output_9 <= -0.22606680542230606) ? ( 257 ) : ( 258 ) ) ) : ( (scaler_output_14 <= -1.0611955225467682) ? ( 260 ) : ( (scaler_output_9 <= 1.4506055116653442) ? ( (scaler_output_4 <= -1.0837324261665344) ? ( 263 ) : ( (scaler_output_14 <= -0.720790833234787) ? ( (scaler_output_8 <= 0.20811261236667633) ? ( 266 ) : ( 267 ) ) : ( (scaler_output_7 <= 0.5089663416147232) ? ( 269 ) : ( 270 ) ) ) ) : ( 271 ) ) ) ) : ( (scaler_output_13 <= 0.30183345079421997) ? ( 273 ) : ( (scaler_output_4 <= -0.5153628811240196) ? ( 275 ) : ( 276 ) ) ) ) ) ) ) ) ) : ( (scaler_output_6 <= 0.4142483025789261) ? ( (scaler_output_8 <= 0.08181136101484299) ? ( (scaler_output_13 <= 0.39207370579242706) ? ( (scaler_output_13 <= 0.1176021471619606) ? ( 281 ) : ( (scaler_output_4 <= 1.046736627817154) ? ( 283 ) : ( 284 ) ) ) : ( (scaler_output_3 <= 1.0495493412017822) ? ( 286 ) : ( 287 ) ) ) : ( (scaler_output_7 <= 0.6449356377124786) ? ( (scaler_output_13 <= -0.5480575561523438) ? ( (scaler_output_9 <= -0.8415806889533997) ? ( (scaler_output_8 <= 0.8965433537960052) ? ( 292 ) : ( (scaler_output_13 <= -2.596555233001709) ? ( 294 ) : ( 295 ) ) ) : ( (scaler_output_7 <= -0.6170294284820557) ? ( 297 ) : ( 298 ) ) ) : ( (scaler_output_7 <= -0.20133160799741745) ? ( (scaler_output_4 <= -0.38628798723220825) ? ( (scaler_output_13 <= 0.11081758351065218) ? ( 302 ) : ( (scaler_output_13 <= 0.38782645761966705) ? ( (scaler_output_4 <= -0.43689121305942535) ? ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_13 <= 0.34535396099090576) ? ( 307 ) : ( 308 ) ) : ( 309 ) ) : ( 310 ) ) : ( (scaler_output_12 <= 0.4803604856133461) ? ( 312 ) : ( (scaler_output_14 <= 0.6812859773635864) ? ( 314 ) : ( 315 ) ) ) ) ) : ( (scaler_output_6 <= 0.24900539964437485) ? ( (scaler_output_9 <= 0.17840010672807693) ? ( (scaler_output_9 <= -0.6446735858917236) ? ( (scaler_output_2 <= -0.4064822942018509) ? ( (scaler_output_13 <= 0.31258947402238846) ? ( 321 ) : ( 322 ) ) : ( (scaler_output_7 <= -0.5766635239124298) ? ( 324 ) : ( 325 ) ) ) : ( (scaler_output_2 <= -0.041231706738471985) ? ( (scaler_output_6 <= -0.07300640270113945) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 329 ) : ( 330 ) ) : ( 331 ) ) : ( 332 ) ) ) : ( 333 ) ) : ( (scaler_output_7 <= -1.100711852312088) ? ( 335 ) : ( (scaler_output_9 <= -0.6212902665138245) ? ( (scaler_output_10 <= 0.6232920289039612) ? ( 338 ) : ( 339 ) ) : ( 340 ) ) ) ) ) : ( 341 ) ) ) : ( 342 ) ) ) : ( (scaler_output_14 <= 0.9896033704280853) ? ( (scaler_output_2 <= 1.1036638021469116) ? ( (scaler_output_12 <= 1.0572500228881836) ? ( (scaler_output_14 <= 0.3813391923904419) ? ( (scaler_output_9 <= -0.7207231223583221) ? ( (scaler_output_7 <= -0.2721489369869232) ? ( 349 ) : ( 350 ) ) : ( 351 ) ) : ( (scaler_output_9 <= -0.4741353839635849) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_14 <= 0.9512380659580231) ? ( (scaler_output_9 <= -0.9750734269618988) ? ( (scaler_output_7 <= -0.6524380818009377) ? ( 357 ) : ( 358 ) ) : ( (scaler_output_2 <= 0.38863080739974976) ? ( (scaler_output_14 <= 0.7587140798568726) ? ( (scaler_output_14 <= 0.684076189994812) ? ( 362 ) : ( (scaler_output_7 <= -0.5688735861331224) ? ( 364 ) : ( 365 ) ) ) : ( 366 ) ) : ( (scaler_output_6 <= 1.4819716215133667) ? ( (scaler_output_13 <= -3.897426962852478) ? ( (scaler_output_9 <= -0.605932280421257) ? ( 370 ) : ( 371 ) ) : ( (scaler_output_13 <= -0.6871135830879211) ? ( 373 ) : ( (scaler_output_2 <= 0.798367977142334) ? ( (scaler_output_14 <= 0.5982774496078491) ? ( 376 ) : ( 377 ) ) : ( 378 ) ) ) ) : ( 379 ) ) ) ) : ( 380 ) ) : ( 381 ) ) : ( 382 ) ) ) : ( (scaler_output_2 <= -0.3691464215517044) ? ( 384 ) : ( 385 ) ) ) : ( (scaler_output_9 <= -1.06074857711792) ? ( 387 ) : ( (scaler_output_9 <= -0.8683079183101654) ? ( 389 ) : ( 390 ) ) ) ) : ( (scaler_output_11 <= 0.8581281453371048) ? ( (scaler_output_8 <= 0.9570256173610687) ? ( 393 ) : ( (scaler_output_2 <= -0.3067749887704849) ? ( 395 ) : ( (scaler_output_7 <= -1.4951644539833069) ? ( (scaler_output_2 <= -0.17435893416404724) ? ( 398 ) : ( 399 ) ) : ( 400 ) ) ) ) : ( (scaler_output_9 <= -1.172434389591217) ? ( (scaler_output_8 <= 1.0246234834194183) ? ( 403 ) : ( (scaler_output_2 <= 1.4260827004909515) ? ( 405 ) : ( 406 ) ) ) : ( (scaler_output_2 <= 1.037606418132782) ? ( (scaler_output_8 <= 1.1242413520812988) ? ( (scaler_output_9 <= -0.9278290867805481) ? ( (scaler_output_13 <= 0.11247235536575317) ? ( (scaler_output_6 <= 1.1175898313522339) ? ( (scaler_output_2 <= 0.264376625418663) ? ( 413 ) : ( 414 ) ) : ( 415 ) ) : ( (scaler_output_7 <= -1.2855451107025146) ? ( 417 ) : ( 418 ) ) ) : ( (scaler_output_6 <= 1.3167287111282349) ? ( (scaler_output_13 <= -3.0850991010665894) ? ( 421 ) : ( 422 ) ) : ( (scaler_output_13 <= -3.110141396522522) ? ( 424 ) : ( 425 ) ) ) ) : ( (scaler_output_2 <= 0.6494675576686859) ? ( 427 ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( 429 ) : ( 430 ) ) ) ) : ( (scaler_output_6 <= 1.1175898313522339) ? ( (scaler_output_13 <= -3.2087106704711914) ? ( 433 ) : ( (scaler_output_2 <= 2.313576817512512) ? ( 435 ) : ( 436 ) ) ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( (scaler_output_2 <= 6.679465293884277) ? ( (scaler_output_7 <= -0.19000082835555077) ? ( (scaler_output_13 <= -1.2774259746074677) ? ( 441 ) : ( 442 ) ) : ( 443 ) ) : ( 444 ) ) : ( (scaler_output_7 <= -1.9250257015228271) ? ( 446 ) : ( (scaler_output_6 <= 1.312491774559021) ? ( 448 ) : ( (scaler_output_9 <= -0.9390311241149902) ? ( 450 ) : ( 451 ) ) ) ) ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.6059269905090332) ? ( (scaler_output_2 <= 0.14039993286132812) ? ( (scaler_output_13 <= 0.28467899560928345) ? ( (scaler_output_14 <= -1.0646832585334778) ? ( 456 ) : ( (scaler_output_7 <= 1.3601908087730408) ? ( (scaler_output_8 <= -0.2579568028450012) ? ( 459 ) : ( 460 ) ) : ( 461 ) ) ) : ( (scaler_output_11 <= -0.8116222321987152) ? ( (scaler_output_12 <= 0.15730234794318676) ? ( (scaler_output_6 <= -1.1746256947517395) ? ( 465 ) : ( (scaler_output_2 <= -0.42036372423171997) ? ( 467 ) : ( 468 ) ) ) : ( 469 ) ) : ( (scaler_output_12 <= -2.057953417301178) ? ( (scaler_output_13 <= 0.39902374148368835) ? ( 472 ) : ( 473 ) ) : ( (scaler_output_2 <= -0.42278915643692017) ? ( 475 ) : ( (scaler_output_7 <= 1.258922040462494) ? ( 477 ) : ( 478 ) ) ) ) ) ) : ( 479 ) ) : ( (scaler_output_12 <= -1.3887616395950317) ? ( (scaler_output_7 <= 2.0690723657608032) ? ( (scaler_output_13 <= 0.2685173824429512) ? ( (scaler_output_2 <= -0.32888515293598175) ? ( 484 ) : ( 485 ) ) : ( (scaler_output_13 <= 0.3801593482494354) ? ( (scaler_output_9 <= -0.6276675313711166) ? ( 488 ) : ( 489 ) ) : ( 490 ) ) ) : ( 491 ) ) : ( (scaler_output_8 <= 0.46071508526802063) ? ( (scaler_output_14 <= -1.1790816187858582) ? ( (scaler_output_8 <= -1.6561649441719055) ? ( 495 ) : ( (scaler_output_14 <= -1.2237248420715332) ? ( (scaler_output_9 <= 0.5234652906656265) ? ( 498 ) : ( 499 ) ) : ( 500 ) ) ) : ( 501 ) ) : ( (scaler_output_7 <= 2.270901918411255) ? ( 503 ) : ( 504 ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_13
		
	
		namespace EXT_SubModel_14 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 7 ,  {24.1 }} ,
					{ 8 ,  {24.7 }} ,
					{ 13 ,  {22.5 }} ,
					{ 14 ,  {22.6 }} ,
					{ 15 ,  {23.1 }} ,
					{ 17 ,  {23.7 }} ,
					{ 18 ,  {23.7 }} ,
					{ 21 ,  {21.9 }} ,
					{ 23 ,  {22.2 }} ,
					{ 24 ,  {22.2 }} ,
					{ 25 ,  {22.9 }} ,
					{ 27 ,  {29.1 }} ,
					{ 30 ,  {24.7 }} ,
					{ 31 ,  {25. }} ,
					{ 33 ,  {24.3 }} ,
					{ 35 ,  {22.1 }} ,
					{ 36 ,  {23.1 }} ,
					{ 38 ,  {27.9 }} ,
					{ 45 ,  {21.7 }} ,
					{ 46 ,  {21.4 }} ,
					{ 48 ,  {22.2 }} ,
					{ 49 ,  {22. }} ,
					{ 51 ,  {19.3 }} ,
					{ 52 ,  {20. }} ,
					{ 54 ,  {29.6 }} ,
					{ 60 ,  {22.5 }} ,
					{ 63 ,  {23.2 }} ,
					{ 64 ,  {23.3 }} ,
					{ 65 ,  {22.9 }} ,
					{ 66 ,  {23.9 }} ,
					{ 69 ,  {22.6 }} ,
					{ 70 ,  {22.2 }} ,
					{ 72 ,  {21.6 }} ,
					{ 73 ,  {22. }} ,
					{ 75 ,  {22. }} ,
					{ 78 ,  {21. }} ,
					{ 79 ,  {20.7 }} ,
					{ 80 ,  {20.3 }} ,
					{ 84 ,  {24.7 }} ,
					{ 85 ,  {25. }} ,
					{ 87 ,  {24.4 }} ,
					{ 88 ,  {24.4 }} ,
					{ 91 ,  {22.6 }} ,
					{ 92 ,  {23.1 }} ,
					{ 93 ,  {23.6 }} ,
					{ 97 ,  {19.6 }} ,
					{ 99 ,  {18.5 }} ,
					{ 101 ,  {18.7 }} ,
					{ 102 ,  {18.7 }} ,
					{ 105 ,  {20.4 }} ,
					{ 106 ,  {20.6 }} ,
					{ 107 ,  {21.1 }} ,
					{ 108 ,  {11.9 }} ,
					{ 113 ,  {15.3 }} ,
					{ 114 ,  {16.1 }} ,
					{ 115 ,  {17.2 }} ,
					{ 117 ,  {17.4 }} ,
					{ 119 ,  {20.8 }} ,
					{ 120 ,  {21.9 }} ,
					{ 125 ,  {18.2 }} ,
					{ 127 ,  {17.1 }} ,
					{ 128 ,  {17.4 }} ,
					{ 133 ,  {19.3 }} ,
					{ 134 ,  {19.4 }} ,
					{ 135 ,  {18.6 }} ,
					{ 139 ,  {20.3 }} ,
					{ 141 ,  {19.9 }} ,
					{ 142 ,  {20.1 }} ,
					{ 143 ,  {21. }} ,
					{ 145 ,  {22. }} ,
					{ 147 ,  {20.9 }} ,
					{ 148 ,  {21.7 }} ,
					{ 152 ,  {19.4 }} ,
					{ 153 ,  {19.2 }} ,
					{ 154 ,  {19.6 }} ,
					{ 155 ,  {18.2 }} ,
					{ 160 ,  {20.3 }} ,
					{ 162 ,  {21.7 }} ,
					{ 163 ,  {21.2 }} ,
					{ 165 ,  {18.9 }} ,
					{ 167 ,  {20.4 }} ,
					{ 169 ,  {20.1 }} ,
					{ 170 ,  {19.8 }} ,
					{ 172 ,  {19.3 }} ,
					{ 173 ,  {18.5 }} ,
					{ 176 ,  {24.5 }} ,
					{ 177 ,  {23. }} ,
					{ 180 ,  {19.6 }} ,
					{ 181 ,  {19.3 }} ,
					{ 184 ,  {20.2 }} ,
					{ 185 ,  {20.8 }} ,
					{ 188 ,  {22.6 }} ,
					{ 190 ,  {22.7 }} ,
					{ 191 ,  {22.7 }} ,
					{ 194 ,  {21.2 }} ,
					{ 195 ,  {21.4 }} ,
					{ 197 ,  {21.5 }} ,
					{ 198 ,  {21.7 }} ,
					{ 202 ,  {17.5 }} ,
					{ 203 ,  {17.7 }} ,
					{ 204 ,  {16.8 }} ,
					{ 206 ,  {20. }} ,
					{ 207 ,  {20.1 }} ,
					{ 209 ,  {50. }} ,
					{ 214 ,  {29.8 }} ,
					{ 215 ,  {30.8 }} ,
					{ 218 ,  {31.2 }} ,
					{ 219 ,  {31.6 }} ,
					{ 221 ,  {33.4 }} ,
					{ 224 ,  {35.1 }} ,
					{ 225 ,  {34.9 }} ,
					{ 226 ,  {35.4 }} ,
					{ 230 ,  {24.8 }} ,
					{ 233 ,  {24. }} ,
					{ 234 ,  {23.9 }} ,
					{ 235 ,  {23.6 }} ,
					{ 237 ,  {26.6 }} ,
					{ 239 ,  {28.4 }} ,
					{ 240 ,  {28.2 }} ,
					{ 242 ,  {32. }} ,
					{ 245 ,  {29.9 }} ,
					{ 246 ,  {30.1 }} ,
					{ 247 ,  {29.4 }} ,
					{ 252 ,  {33.1 }} ,
					{ 253 ,  {29.6 }} ,
					{ 258 ,  {26.2 }} ,
					{ 260 ,  {26.6 }} ,
					{ 261 ,  {26.5 }} ,
					{ 262 ,  {27.1 }} ,
					{ 264 ,  {27.9 }} ,
					{ 265 ,  {28.6 }} ,
					{ 267 ,  {29. }} ,
					{ 268 ,  {30.1 }} ,
					{ 271 ,  {22.8 }} ,
					{ 272 ,  {22. }} ,
					{ 273 ,  {23.9 }} ,
					{ 276 ,  {23.8 }} ,
					{ 278 ,  {21. }} ,
					{ 280 ,  {22. }} ,
					{ 281 ,  {22.4 }} ,
					{ 284 ,  {25.1 }} ,
					{ 286 ,  {26.7 }} ,
					{ 287 ,  {27.5 }} ,
					{ 288 ,  {29.8 }} ,
					{ 293 ,  {15.6 }} ,
					{ 294 ,  {15.4 }} ,
					{ 296 ,  {13.8 }} ,
					{ 297 ,  {11.8 }} ,
					{ 301 ,  {14.4 }} ,
					{ 304 ,  {17.3 }} ,
					{ 305 ,  {16.6 }} ,
					{ 306 ,  {19.4 }} ,
					{ 311 ,  {22.5 }} ,
					{ 312 ,  {22.4 }} ,
					{ 313 ,  {21.7 }} ,
					{ 314 ,  {19.3 }} ,
					{ 317 ,  {23.1 }} ,
					{ 319 ,  {19.8 }} ,
					{ 320 ,  {20.4 }} ,
					{ 323 ,  {18.3 }} ,
					{ 325 ,  {17.8 }} ,
					{ 326 ,  {17.5 }} ,
					{ 327 ,  {19.4 }} ,
					{ 328 ,  {27.1 }} ,
					{ 334 ,  {7. }} ,
					{ 335 ,  {7.5 }} ,
					{ 336 ,  {8.3 }} ,
					{ 338 ,  {8.4 }} ,
					{ 339 ,  {8.7 }} ,
					{ 343 ,  {13.4 }} ,
					{ 344 ,  {14.1 }} ,
					{ 345 ,  {12.7 }} ,
					{ 348 ,  {10.2 }} ,
					{ 350 ,  {11. }} ,
					{ 353 ,  {11.7 }} ,
					{ 354 ,  {11.7 }} ,
					{ 355 ,  {11.8 }} ,
					{ 356 ,  {9.6 }} ,
					{ 358 ,  {27.5 }} ,
					{ 363 ,  {16.3 }} ,
					{ 364 ,  {17.2 }} ,
					{ 367 ,  {13.8 }} ,
					{ 369 ,  {14. }} ,
					{ 370 ,  {14.4 }} ,
					{ 371 ,  {13.3 }} ,
					{ 375 ,  {11.3 }} ,
					{ 377 ,  {8.5 }} ,
					{ 378 ,  {9.7 }} ,
					{ 383 ,  {12.7 }} ,
					{ 384 ,  {12.5 }} ,
					{ 385 ,  {12.1 }} ,
					{ 388 ,  {13.3 }} ,
					{ 389 ,  {13.1 }} ,
					{ 390 ,  {13.9 }} ,
					{ 392 ,  {10.4 }} ,
					{ 393 ,  {10.2 }} ,
					{ 396 ,  {5.6 }} ,
					{ 397 ,  {6.3 }} ,
					{ 398 ,  {7.4 }} ,
					{ 401 ,  {23.2 }} ,
					{ 403 ,  {18.9 }} ,
					{ 404 ,  {19.1 }} ,
					{ 409 ,  {13.9 }} ,
					{ 410 ,  {14.9 }} ,
					{ 413 ,  {16.6 }} ,
					{ 414 ,  {17.4 }} ,
					{ 416 ,  {15.2 }} ,
					{ 417 ,  {16.1 }} ,
					{ 421 ,  {14.2 }} ,
					{ 422 ,  {13.6 }} ,
					{ 424 ,  {15.1 }} ,
					{ 425 ,  {14.6 }} ,
					{ 428 ,  {13.1 }} ,
					{ 430 ,  {13.6 }} ,
					{ 431 ,  {13.5 }} ,
					{ 432 ,  {12.6 }} ,
					{ 435 ,  {18. }} ,
					{ 437 ,  {16.7 }} ,
					{ 438 ,  {17.1 }} ,
					{ 439 ,  {15.2 }} ,
					{ 447 ,  {34.7 }} ,
					{ 448 ,  {34.9 }} ,
					{ 449 ,  {33.8 }} ,
					{ 450 ,  {36. }} ,
					{ 452 ,  {37.3 }} ,
					{ 454 ,  {36.1 }} ,
					{ 455 ,  {36.2 }} ,
					{ 458 ,  {34.6 }} ,
					{ 459 ,  {33.3 }} ,
					{ 461 ,  {31.5 }} ,
					{ 463 ,  {32.2 }} ,
					{ 464 ,  {32.9 }} ,
					{ 466 ,  {25. }} ,
					{ 468 ,  {31. }} ,
					{ 469 ,  {30.7 }} ,
					{ 473 ,  {45.4 }} ,
					{ 475 ,  {43.1 }} ,
					{ 476 ,  {42.3 }} ,
					{ 479 ,  {50. }} ,
					{ 481 ,  {48.8 }} ,
					{ 482 ,  {50. }} ,
					{ 485 ,  {50. }} ,
					{ 486 ,  {44.8 }} ,
					{ 487 ,  {37.6 }} ,
					{ 490 ,  {43.8 }} ,
					{ 491 ,  {42.8 }} ,
					{ 492 ,  {38.7 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_7 <= 1.0075204372406006) ? ( (scaler_output_14 <= 0.3004233241081238) ? ( (scaler_output_7 <= 0.32838211953639984) ? ( (scaler_output_14 <= -0.7005618512630463) ? ( (scaler_output_4 <= -0.7603118121623993) ? ( (scaler_output_4 <= -1.2978794574737549) ? ( (scaler_output_3 <= 2.9616817235946655) ? ( 7 ) : ( 8 ) ) : ( (scaler_output_8 <= -1.351974606513977) ? ( (scaler_output_2 <= -0.41481415927410126) ? ( (scaler_output_8 <= -1.563662588596344) ? ( (scaler_output_14 <= -0.9028515219688416) ? ( 13 ) : ( 14 ) ) : ( 15 ) ) : ( (scaler_output_9 <= 1.3341426849365234) ? ( 17 ) : ( 18 ) ) ) : ( (scaler_output_14 <= -0.7682242691516876) ? ( (scaler_output_6 <= -1.115307778120041) ? ( 21 ) : ( (scaler_output_6 <= -0.5941570848226547) ? ( 23 ) : ( 24 ) ) ) : ( 25 ) ) ) ) : ( (scaler_output_6 <= -0.9034578800201416) ? ( 27 ) : ( (scaler_output_8 <= -0.7613828778266907) ? ( (scaler_output_12 <= -0.16575578972697258) ? ( 30 ) : ( 31 ) ) : ( (scaler_output_7 <= -0.2905614674091339) ? ( 33 ) : ( (scaler_output_9 <= -0.10962791740894318) ? ( 35 ) : ( 36 ) ) ) ) ) ) : ( (scaler_output_9 <= -1.133167564868927) ? ( 38 ) : ( (scaler_output_11 <= -0.6113699972629547) ? ( (scaler_output_12 <= 0.45728491246700287) ? ( (scaler_output_6 <= -0.8949838876724243) ? ( (scaler_output_2 <= -0.40626606345176697) ? ( (scaler_output_3 <= 0.1193227767944336) ? ( (scaler_output_8 <= -0.423393614590168) ? ( 45 ) : ( 46 ) ) : ( (scaler_output_9 <= 1.601032555103302) ? ( 48 ) : ( 49 ) ) ) : ( (scaler_output_14 <= -0.06230301409959793) ? ( 51 ) : ( 52 ) ) ) : ( (scaler_output_4 <= -1.1805385947227478) ? ( 54 ) : ( (scaler_output_2 <= -0.4127674400806427) ? ( (scaler_output_12 <= 0.0650000274181366) ? ( (scaler_output_8 <= -0.40738360583782196) ? ( (scaler_output_9 <= 0.37425629794597626) ? ( (scaler_output_11 <= -0.867575079202652) ? ( 60 ) : ( (scaler_output_9 <= -0.10005006939172745) ? ( (scaler_output_5 <= 1.6589429825544357) ? ( 63 ) : ( 64 ) ) : ( 65 ) ) ) : ( 66 ) ) : ( (scaler_output_7 <= -0.05119883269071579) ? ( (scaler_output_7 <= -0.43786151707172394) ? ( 69 ) : ( 70 ) ) : ( (scaler_output_6 <= -0.63652703166008) ? ( 72 ) : ( 73 ) ) ) ) : ( (scaler_output_2 <= -0.4153791069984436) ? ( 75 ) : ( (scaler_output_4 <= 0.7805196642875671) ? ( (scaler_output_14 <= -0.19762782752513885) ? ( 78 ) : ( 79 ) ) : ( 80 ) ) ) ) : ( (scaler_output_13 <= 0.40602894127368927) ? ( (scaler_output_14 <= -0.2897045314311981) ? ( (scaler_output_13 <= 0.38777129352092743) ? ( 84 ) : ( 85 ) ) : ( (scaler_output_14 <= 0.026285916566848755) ? ( 87 ) : ( 88 ) ) ) : ( (scaler_output_7 <= -0.20628882199525833) ? ( (scaler_output_8 <= -0.4429614245891571) ? ( 91 ) : ( 92 ) ) : ( 93 ) ) ) ) ) ) : ( (scaler_output_8 <= 0.38778056204319) ? ( (scaler_output_7 <= -0.42015719413757324) ? ( (scaler_output_8 <= -0.5336848348379135) ? ( 97 ) : ( (scaler_output_13 <= 0.4035467803478241) ? ( 99 ) : ( (scaler_output_14 <= -0.19623272866010666) ? ( 101 ) : ( 102 ) ) ) ) : ( (scaler_output_9 <= 0.7324820160865784) ? ( (scaler_output_4 <= -0.1948757916688919) ? ( 105 ) : ( 106 ) ) : ( 107 ) ) ) : ( 108 ) ) ) : ( (scaler_output_13 <= 0.11390649154782295) ? ( (scaler_output_14 <= 0.0988311842083931) ? ( (scaler_output_14 <= 0.003964297648053616) ? ( (scaler_output_2 <= -0.18905780464410782) ? ( 113 ) : ( 114 ) ) : ( 115 ) ) : ( (scaler_output_2 <= -0.11766893789172173) ? ( 117 ) : ( (scaler_output_8 <= 0.7702420949935913) ? ( 119 ) : ( 120 ) ) ) ) : ( (scaler_output_14 <= 0.22160010039806366) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( (scaler_output_7 <= -0.7678703367710114) ? ( (scaler_output_13 <= 0.37624305486679077) ? ( 125 ) : ( (scaler_output_12 <= -0.23498253524303436) ? ( 127 ) : ( 128 ) ) ) : ( (scaler_output_8 <= 0.5745640993118286) ? ( (scaler_output_4 <= -1.0969332456588745) ? ( (scaler_output_12 <= -0.3734360206872225) ? ( (scaler_output_9 <= 0.9999213218688965) ? ( 133 ) : ( 134 ) ) : ( 135 ) ) : ( (scaler_output_9 <= 0.5126215368509293) ? ( (scaler_output_7 <= -0.3557134121656418) ? ( (scaler_output_12 <= 0.3880581702105701) ? ( 139 ) : ( (scaler_output_11 <= 0.6078127920627594) ? ( 141 ) : ( 142 ) ) ) : ( 143 ) ) : ( (scaler_output_14 <= -0.5833733677864075) ? ( 145 ) : ( (scaler_output_14 <= -0.42712199687957764) ? ( 147 ) : ( 148 ) ) ) ) ) : ( (scaler_output_9 <= 0.19932328164577484) ? ( (scaler_output_2 <= -0.3496679365634918) ? ( (scaler_output_14 <= -0.0650932164862752) ? ( 152 ) : ( 153 ) ) : ( 154 ) ) : ( 155 ) ) ) ) : ( (scaler_output_2 <= -0.40484803915023804) ? ( (scaler_output_2 <= -0.40655042231082916) ? ( (scaler_output_8 <= 0.3504238799214363) ? ( (scaler_output_7 <= -0.3882893919944763) ? ( 160 ) : ( (scaler_output_4 <= -0.24914591759443283) ? ( 162 ) : ( 163 ) ) ) : ( (scaler_output_4 <= -0.40608926117420197) ? ( 165 ) : ( (scaler_output_13 <= 0.3509250432252884) ? ( 167 ) : ( (scaler_output_7 <= 0.030241109430789948) ? ( 169 ) : ( 170 ) ) ) ) ) : ( (scaler_output_7 <= -0.4343206621706486) ? ( 172 ) : ( 173 ) ) ) : ( (scaler_output_8 <= -0.10141438618302345) ? ( (scaler_output_11 <= 0.7226633876562119) ? ( 176 ) : ( 177 ) ) : ( (scaler_output_6 <= 0.03715553134679794) ? ( (scaler_output_12 <= 0.9880232810974121) ? ( 180 ) : ( 181 ) ) : ( (scaler_output_14 <= -0.2429686263203621) ? ( (scaler_output_6 <= 1.5878965854644775) ? ( 184 ) : ( 185 ) ) : ( (scaler_output_14 <= 0.023495715111494064) ? ( (scaler_output_8 <= 0.5158607065677643) ? ( 188 ) : ( (scaler_output_11 <= 0.7580020185559988) ? ( 190 ) : ( 191 ) ) ) : ( (scaler_output_14 <= 0.08627527579665184) ? ( (scaler_output_8 <= -0.08896214887499809) ? ( 194 ) : ( 195 ) ) : ( (scaler_output_11 <= 0.7580020185559988) ? ( 197 ) : ( 198 ) ) ) ) ) ) ) ) ) : ( (scaler_output_14 <= 0.2871698588132858) ? ( (scaler_output_13 <= 0.39477649331092834) ? ( (scaler_output_4 <= 0.3133566379547119) ? ( 202 ) : ( 203 ) ) : ( 204 ) ) : ( (scaler_output_9 <= -0.5012208819389343) ? ( 206 ) : ( 207 ) ) ) ) ) ) ) ) : ( (scaler_output_9 <= -1.020430862903595) ? ( 209 ) : ( (scaler_output_4 <= -0.9847261309623718) ? ( (scaler_output_14 <= -1.0758441090583801) ? ( (scaler_output_7 <= 0.572701945900917) ? ( (scaler_output_9 <= 0.5560681521892548) ? ( 214 ) : ( 215 ) ) : ( (scaler_output_2 <= -0.4202943593263626) ? ( (scaler_output_3 <= 2.7032854557037354) ? ( 218 ) : ( 219 ) ) : ( (scaler_output_14 <= -1.2383733987808228) ? ( 221 ) : ( (scaler_output_8 <= -1.1794221997261047) ? ( (scaler_output_3 <= 1.8764173984527588) ? ( 224 ) : ( 225 ) ) : ( 226 ) ) ) ) ) : ( (scaler_output_2 <= -0.41648028790950775) ? ( (scaler_output_12 <= -0.14268019841983914) ? ( (scaler_output_4 <= -1.2773447632789612) ? ( 230 ) : ( (scaler_output_2 <= -0.4190419614315033) ? ( (scaler_output_4 <= -1.1644042134284973) ? ( 233 ) : ( 234 ) ) : ( 235 ) ) ) : ( (scaler_output_2 <= -0.4192744344472885) ? ( 237 ) : ( (scaler_output_13 <= 0.4054221957921982) ? ( 239 ) : ( 240 ) ) ) ) : ( (scaler_output_6 <= -0.6831340342760086) ? ( 242 ) : ( (scaler_output_9 <= -0.3802677392959595) ? ( (scaler_output_2 <= -0.37898004055023193) ? ( 245 ) : ( 246 ) ) : ( 247 ) ) ) ) ) : ( (scaler_output_14 <= -0.552681103348732) ? ( (scaler_output_6 <= -0.1874053254723549) ? ( (scaler_output_14 <= -1.1435065269470215) ? ( (scaler_output_12 <= -0.027302294969558716) ? ( 252 ) : ( 253 ) ) : ( (scaler_output_2 <= -0.384256511926651) ? ( (scaler_output_13 <= 0.4176675081253052) ? ( (scaler_output_4 <= 0.037605687975883484) ? ( (scaler_output_6 <= -0.9712498486042023) ? ( 258 ) : ( (scaler_output_10 <= -0.6369035243988037) ? ( 260 ) : ( 261 ) ) ) : ( 262 ) ) : ( (scaler_output_14 <= -0.9963233172893524) ? ( 264 ) : ( 265 ) ) ) : ( (scaler_output_2 <= -0.3577604293823242) ? ( 267 ) : ( 268 ) ) ) ) : ( (scaler_output_8 <= 0.7933676838874817) ? ( (scaler_output_8 <= 0.6421619653701782) ? ( 271 ) : ( 272 ) ) : ( 273 ) ) ) : ( (scaler_output_10 <= -0.23593220114707947) ? ( (scaler_output_14 <= -0.45153626799583435) ? ( 276 ) : ( (scaler_output_13 <= 0.30183345079421997) ? ( 278 ) : ( (scaler_output_12 <= 0.18037793040275574) ? ( 280 ) : ( 281 ) ) ) ) : ( (scaler_output_12 <= 0.18037793040275574) ? ( (scaler_output_13 <= 0.3424305319786072) ? ( 284 ) : ( (scaler_output_14 <= -0.39154691994190216) ? ( 286 ) : ( 287 ) ) ) : ( 288 ) ) ) ) ) ) ) : ( (scaler_output_12 <= 0.572662815451622) ? ( (scaler_output_9 <= -1.0949755907058716) ? ( (scaler_output_14 <= 2.020583152770996) ? ( (scaler_output_9 <= -1.0980806350708008) ? ( 293 ) : ( 294 ) ) : ( (scaler_output_14 <= 2.2207802534103394) ? ( 296 ) : ( 297 ) ) ) : ( (scaler_output_7 <= -0.1857517883181572) ? ( (scaler_output_11 <= -0.8881892561912537) ? ( (scaler_output_7 <= -1.1311632990837097) ? ( 301 ) : ( (scaler_output_13 <= 0.40200233459472656) ? ( (scaler_output_13 <= 0.25533435493707657) ? ( 304 ) : ( 305 ) ) : ( 306 ) ) ) : ( (scaler_output_6 <= -0.17045734077692032) ? ( (scaler_output_14 <= 1.4081337451934814) ? ( (scaler_output_7 <= -0.6389828026294708) ? ( (scaler_output_7 <= -0.7140491604804993) ? ( 311 ) : ( 312 ) ) : ( 313 ) ) : ( 314 ) ) : ( (scaler_output_8 <= 0.19388148188591003) ? ( (scaler_output_7 <= -0.8117771148681641) ? ( 317 ) : ( (scaler_output_4 <= -0.15087298303842545) ? ( 319 ) : ( 320 ) ) ) : ( (scaler_output_8 <= 1.0068345665931702) ? ( (scaler_output_13 <= -0.08196338033303618) ? ( 323 ) : ( (scaler_output_10 <= -0.46505868434906006) ? ( 325 ) : ( 326 ) ) ) : ( 327 ) ) ) ) ) : ( 328 ) ) ) : ( (scaler_output_13 <= -2.4091798663139343) ? ( (scaler_output_9 <= -0.9052101075649261) ? ( (scaler_output_6 <= 1.2828327417373657) ? ( (scaler_output_9 <= -0.9340391457080841) ? ( (scaler_output_7 <= -0.9187112748622894) ? ( 334 ) : ( 335 ) ) : ( 336 ) ) : ( (scaler_output_2 <= 1.3791488409042358) ? ( 338 ) : ( 339 ) ) ) : ( (scaler_output_2 <= 0.4560656100511551) ? ( (scaler_output_14 <= 0.8291667103767395) ? ( (scaler_output_9 <= -0.6879530251026154) ? ( 343 ) : ( 344 ) ) : ( 345 ) ) : ( (scaler_output_2 <= 1.3465825915336609) ? ( (scaler_output_8 <= -0.09607771411538124) ? ( 348 ) : ( (scaler_output_9 <= -0.8876069188117981) ? ( 350 ) : ( (scaler_output_6 <= 1.4607866406440735) ? ( (scaler_output_7 <= -0.5844534486532211) ? ( 353 ) : ( 354 ) ) : ( 355 ) ) ) ) : ( 356 ) ) ) ) : ( (scaler_output_13 <= -1.8005546927452087) ? ( 358 ) : ( (scaler_output_9 <= -0.9661643803119659) ? ( (scaler_output_6 <= 0.9777689576148987) ? ( (scaler_output_6 <= 0.4778032600879669) ? ( (scaler_output_13 <= -1.054362714290619) ? ( 363 ) : ( 364 ) ) : ( (scaler_output_9 <= -1.041186809539795) ? ( (scaler_output_12 <= 1.0572500228881836) ? ( 367 ) : ( (scaler_output_2 <= -0.3042064309120178) ? ( 369 ) : ( 370 ) ) ) : ( 371 ) ) ) : ( (scaler_output_14 <= 1.897116780281067) ? ( (scaler_output_7 <= -0.6828895211219788) ? ( (scaler_output_9 <= -1.0571180582046509) ? ( 375 ) : ( (scaler_output_6 <= 1.2065668106079102) ? ( 377 ) : ( 378 ) ) ) : ( (scaler_output_2 <= 1.6478406190872192) ? ( (scaler_output_7 <= 0.19666185975074768) ? ( (scaler_output_14 <= 1.0063445568084717) ? ( (scaler_output_7 <= -0.2169114127755165) ? ( 383 ) : ( 384 ) ) : ( 385 ) ) : ( (scaler_output_14 <= 1.3411688804626465) ? ( (scaler_output_9 <= -1.0881922841072083) ? ( 388 ) : ( 389 ) ) : ( 390 ) ) ) : ( (scaler_output_8 <= 0.9997190237045288) ? ( 392 ) : ( 393 ) ) ) ) : ( (scaler_output_14 <= 2.560487389564514) ? ( (scaler_output_14 <= 2.1963659524917603) ? ( 396 ) : ( 397 ) ) : ( 398 ) ) ) ) : ( (scaler_output_8 <= 0.5425440669059753) ? ( (scaler_output_9 <= -0.6122856587171555) ? ( 401 ) : ( (scaler_output_4 <= 0.009737253189086914) ? ( 403 ) : ( 404 ) ) ) : ( (scaler_output_7 <= 0.07698055810760707) ? ( (scaler_output_8 <= 0.9392367303371429) ? ( (scaler_output_8 <= 0.7168753445148468) ? ( (scaler_output_10 <= 0.5087288022041321) ? ( 409 ) : ( 410 ) ) : ( (scaler_output_14 <= 0.6219941675662994) ? ( (scaler_output_13 <= 0.2116483747959137) ? ( 413 ) : ( 414 ) ) : ( (scaler_output_9 <= -0.8241686224937439) ? ( 416 ) : ( 417 ) ) ) ) : ( (scaler_output_9 <= -0.7813191115856171) ? ( (scaler_output_9 <= -0.9168420433998108) ? ( (scaler_output_4 <= 1.750781536102295) ? ( 421 ) : ( 422 ) ) : ( (scaler_output_14 <= 0.6896565854549408) ? ( 424 ) : ( 425 ) ) ) : ( (scaler_output_7 <= -0.17796187847852707) ? ( (scaler_output_2 <= -0.2739606350660324) ? ( 428 ) : ( (scaler_output_7 <= -0.6602279990911484) ? ( 430 ) : ( 431 ) ) ) : ( 432 ) ) ) ) : ( (scaler_output_9 <= -0.7115751802921295) ? ( (scaler_output_2 <= -0.09939096868038177) ? ( 435 ) : ( (scaler_output_14 <= 0.903107076883316) ? ( 437 ) : ( 438 ) ) ) : ( 439 ) ) ) ) ) ) ) ) ) : ( (scaler_output_7 <= 1.6144251227378845) ? ( (scaler_output_2 <= -0.333599790930748) ? ( (scaler_output_11 <= -0.7733387351036072) ? ( (scaler_output_12 <= -0.027302297297865152) ? ( (scaler_output_2 <= -0.34894798696041107) ? ( (scaler_output_7 <= 1.2674201130867004) ? ( (scaler_output_12 <= -0.16575578041374683) ? ( 447 ) : ( 448 ) ) : ( 449 ) ) : ( 450 ) ) : ( (scaler_output_8 <= -1.1900955438613892) ? ( 452 ) : ( (scaler_output_9 <= 0.583870206028223) ? ( 454 ) : ( 455 ) ) ) ) : ( (scaler_output_12 <= -2.057953417301178) ? ( (scaler_output_13 <= 0.39902374148368835) ? ( 458 ) : ( 459 ) ) : ( (scaler_output_9 <= 0.9113560616970062) ? ( 461 ) : ( (scaler_output_6 <= -1.2932616472244263) ? ( 463 ) : ( 464 ) ) ) ) ) : ( (scaler_output_14 <= -0.487808920443058) ? ( 466 ) : ( (scaler_output_14 <= 0.05488549917936325) ? ( 468 ) : ( 469 ) ) ) ) : ( (scaler_output_12 <= -0.23498252034187317) ? ( (scaler_output_7 <= 2.161843180656433) ? ( (scaler_output_11 <= -0.9765358567237854) ? ( 473 ) : ( (scaler_output_12 <= -2.1041045784950256) ? ( 475 ) : ( 476 ) ) ) : ( (scaler_output_10 <= -0.35049544274806976) ? ( (scaler_output_8 <= 0.7595687508583069) ? ( 479 ) : ( (scaler_output_2 <= -0.29673076421022415) ? ( 481 ) : ( 482 ) ) ) : ( (scaler_output_8 <= 0.6012474596500397) ? ( (scaler_output_13 <= 0.2773979902267456) ? ( 485 ) : ( 486 ) ) : ( 487 ) ) ) ) : ( (scaler_output_14 <= -1.2188419699668884) ? ( (scaler_output_12 <= 0.0650000274181366) ? ( 490 ) : ( 491 ) ) : ( 492 ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_14
		
	
		namespace EXT_SubModel_15 {
		
			typedef std::vector<double> tNodeData;
			std::map<int, tNodeData> Decision_Tree_Node_data = {
					{ 8 ,  {24.1 }} ,
					{ 9 ,  {24.7 }} ,
					{ 11 ,  {23.5 }} ,
					{ 13 ,  {22.9 }} ,
					{ 14 ,  {23.1 }} ,
					{ 17 ,  {21.9 }} ,
					{ 18 ,  {22.2 }} ,
					{ 19 ,  {20.7 }} ,
					{ 24 ,  {25.3 }} ,
					{ 25 ,  {25. }} ,
					{ 29 ,  {24.7 }} ,
					{ 30 ,  {24.6 }} ,
					{ 31 ,  {25.2 }} ,
					{ 33 ,  {23.8 }} ,
					{ 35 ,  {23.1 }} ,
					{ 36 ,  {23. }} ,
					{ 39 ,  {22.6 }} ,
					{ 41 ,  {23.1 }} ,
					{ 42 ,  {23.4 }} ,
					{ 44 ,  {23.7 }} ,
					{ 46 ,  {24.2 }} ,
					{ 47 ,  {24.4 }} ,
					{ 48 ,  {27.5 }} ,
					{ 54 ,  {30.8 }} ,
					{ 56 ,  {29.1 }} ,
					{ 57 ,  {29.8 }} ,
					{ 58 ,  {32.4 }} ,
					{ 60 ,  {23.9 }} ,
					{ 63 ,  {28.4 }} ,
					{ 64 ,  {29.4 }} ,
					{ 67 ,  {27.1 }} ,
					{ 69 ,  {26.6 }} ,
					{ 70 ,  {26.5 }} ,
					{ 72 ,  {28.6 }} ,
					{ 74 ,  {27.9 }} ,
					{ 75 ,  {28. }} ,
					{ 77 ,  {32.5 }} ,
					{ 78 ,  {30.1 }} ,
					{ 80 ,  {22.8 }} ,
					{ 81 ,  {24. }} ,
					{ 85 ,  {29. }} ,
					{ 89 ,  {35.1 }} ,
					{ 90 ,  {34.9 }} ,
					{ 91 ,  {35.4 }} ,
					{ 93 ,  {37. }} ,
					{ 96 ,  {33.1 }} ,
					{ 97 ,  {32.9 }} ,
					{ 100 ,  {31.6 }} ,
					{ 101 ,  {31.2 }} ,
					{ 103 ,  {32. }} ,
					{ 104 ,  {32. }} ,
					{ 106 ,  {33.4 }} ,
					{ 108 ,  {29.6 }} ,
					{ 110 ,  {26.6 }} ,
					{ 112 ,  {28.2 }} ,
					{ 113 ,  {28.5 }} ,
					{ 117 ,  {36.1 }} ,
					{ 118 ,  {35.4 }} ,
					{ 120 ,  {37.9 }} ,
					{ 121 ,  {37.3 }} ,
					{ 124 ,  {34.6 }} ,
					{ 126 ,  {33.3 }} ,
					{ 127 ,  {33.4 }} ,
					{ 129 ,  {31.7 }} ,
					{ 130 ,  {31.5 }} ,
					{ 134 ,  {50. }} ,
					{ 135 ,  {43.1 }} ,
					{ 137 ,  {50. }} ,
					{ 138 ,  {48.8 }} ,
					{ 143 ,  {46.7 }} ,
					{ 144 ,  {46. }} ,
					{ 146 ,  {44. }} ,
					{ 147 ,  {43.8 }} ,
					{ 149 ,  {38.7 }} ,
					{ 150 ,  {37.6 }} ,
					{ 151 ,  {50. }} ,
					{ 154 ,  {50. }} ,
					{ 159 ,  {19.6 }} ,
					{ 162 ,  {15.3 }} ,
					{ 163 ,  {16.1 }} ,
					{ 167 ,  {17.4 }} ,
					{ 168 ,  {17.2 }} ,
					{ 169 ,  {18.2 }} ,
					{ 171 ,  {16. }} ,
					{ 172 ,  {16.8 }} ,
					{ 180 ,  {22.8 }} ,
					{ 181 ,  {22.6 }} ,
					{ 182 ,  {21.8 }} ,
					{ 186 ,  {20.7 }} ,
					{ 188 ,  {21.2 }} ,
					{ 189 ,  {21.1 }} ,
					{ 190 ,  {22. }} ,
					{ 191 ,  {19.3 }} ,
					{ 192 ,  {18.2 }} ,
					{ 194 ,  {23.2 }} ,
					{ 195 ,  {24.4 }} ,
					{ 198 ,  {17.1 }} ,
					{ 200 ,  {18.2 }} ,
					{ 201 ,  {18.6 }} ,
					{ 205 ,  {20.9 }} ,
					{ 206 ,  {22. }} ,
					{ 207 ,  {23.4 }} ,
					{ 211 ,  {19.9 }} ,
					{ 213 ,  {20.3 }} ,
					{ 214 ,  {20.4 }} ,
					{ 215 ,  {21.1 }} ,
					{ 219 ,  {19. }} ,
					{ 220 ,  {19.3 }} ,
					{ 222 ,  {19.5 }} ,
					{ 223 ,  {19.6 }} ,
					{ 225 ,  {20. }} ,
					{ 226 ,  {20.1 }} ,
					{ 229 ,  {11.9 }} ,
					{ 232 ,  {16.8 }} ,
					{ 233 ,  {16.2 }} ,
					{ 235 ,  {17.5 }} ,
					{ 236 ,  {18.3 }} ,
					{ 238 ,  {23.1 }} ,
					{ 241 ,  {19.2 }} ,
					{ 243 ,  {20.1 }} ,
					{ 244 ,  {20. }} ,
					{ 245 ,  {20.8 }} ,
					{ 246 ,  {27.9 }} ,
					{ 251 ,  {22. }} ,
					{ 252 ,  {22.6 }} ,
					{ 254 ,  {33.8 }} ,
					{ 257 ,  {29.6 }} ,
					{ 259 ,  {28.4 }} ,
					{ 260 ,  {29. }} ,
					{ 261 ,  {30.7 }} ,
					{ 266 ,  {22.2 }} ,
					{ 267 ,  {22. }} ,
					{ 269 ,  {24.8 }} ,
					{ 270 ,  {23.9 }} ,
					{ 272 ,  {26.4 }} ,
					{ 275 ,  {24.4 }} ,
					{ 276 ,  {24.5 }} ,
					{ 278 ,  {25.1 }} ,
					{ 279 ,  {25. }} ,
					{ 282 ,  {20.5 }} ,
					{ 283 ,  {20.1 }} ,
					{ 285 ,  {22. }} ,
					{ 286 ,  {22.2 }} ,
					{ 291 ,  {25. }} ,
					{ 292 ,  {24.4 }} ,
					{ 296 ,  {23.8 }} ,
					{ 298 ,  {22.4 }} ,
					{ 301 ,  {22.9 }} ,
					{ 302 ,  {22.8 }} ,
					{ 303 ,  {23. }} ,
					{ 306 ,  {21.6 }} ,
					{ 308 ,  {20.6 }} ,
					{ 309 ,  {20.6 }} ,
					{ 310 ,  {23. }} ,
					{ 312 ,  {20.2 }} ,
					{ 313 ,  {22.7 }} ,
					{ 314 ,  {29.8 }} ,
					{ 318 ,  {22.6 }} ,
					{ 321 ,  {20. }} ,
					{ 324 ,  {21. }} ,
					{ 326 ,  {21.2 }} ,
					{ 327 ,  {21.2 }} ,
					{ 329 ,  {21.7 }} ,
					{ 331 ,  {21.4 }} ,
					{ 332 ,  {21.4 }} ,
					{ 333 ,  {19.5 }} ,
					{ 335 ,  {21.5 }} ,
					{ 339 ,  {19.8 }} ,
					{ 340 ,  {20.1 }} ,
					{ 343 ,  {19.6 }} ,
					{ 344 ,  {19.6 }} ,
					{ 345 ,  {19.2 }} ,
					{ 346 ,  {18.4 }} ,
					{ 347 ,  {15. }} ,
					{ 353 ,  {17.8 }} ,
					{ 355 ,  {11.8 }} ,
					{ 358 ,  {13.1 }} ,
					{ 359 ,  {13.4 }} ,
					{ 360 ,  {14.6 }} ,
					{ 361 ,  {7. }} ,
					{ 368 ,  {15.6 }} ,
					{ 369 ,  {15.7 }} ,
					{ 370 ,  {15.2 }} ,
					{ 371 ,  {17.2 }} ,
					{ 373 ,  {15.6 }} ,
					{ 377 ,  {14. }} ,
					{ 378 ,  {14.2 }} ,
					{ 380 ,  {13.6 }} ,
					{ 381 ,  {13.8 }} ,
					{ 383 ,  {12.5 }} ,
					{ 384 ,  {13.3 }} ,
					{ 385 ,  {18. }} ,
					{ 387 ,  {17.3 }} ,
					{ 388 ,  {17.4 }} ,
					{ 390 ,  {16.7 }} ,
					{ 396 ,  {8.5 }} ,
					{ 399 ,  {10.2 }} ,
					{ 400 ,  {10.8 }} ,
					{ 402 ,  {8.3 }} ,
					{ 403 ,  {9.5 }} ,
					{ 406 ,  {13.1 }} ,
					{ 407 ,  {12.1 }} ,
					{ 408 ,  {9.6 }} ,
					{ 409 ,  {5. }} ,
					{ 413 ,  {13.3 }} ,
					{ 414 ,  {13.1 }} ,
					{ 417 ,  {12.7 }} ,
					{ 418 ,  {12.8 }} ,
					{ 419 ,  {12.3 }} ,
					{ 420 ,  {10.4 }} ,
					{ 422 ,  {10.5 }} ,
					{ 426 ,  {6.3 }} ,
					{ 427 ,  {5.6 }} ,
					{ 428 ,  {7.4 }} ,
					{ 430 ,  {10.4 }} ,
					{ 432 ,  {8.4 }} ,
					{ 434 ,  {7.5 }} ,
					{ 435 ,  {7. }} ,
					{ 440 ,  {20.5 }} ,
					{ 441 ,  {21.7 }} ,
					{ 446 ,  {19.5 }} ,
					{ 447 ,  {19.4 }} ,
					{ 448 ,  {20.4 }} ,
					{ 450 ,  {18.3 }} ,
					{ 452 ,  {18.8 }} ,
					{ 453 ,  {18.7 }} ,
					{ 454 ,  {21.7 }} ,
					{ 455 ,  {27.1 }} ,
					{ 462 ,  {13.5 }} ,
					{ 463 ,  {13.4 }} ,
					{ 464 ,  {14.1 }} ,
					{ 465 ,  {14.9 }} ,
					{ 467 ,  {13.4 }} ,
					{ 469 ,  {13. }} ,
					{ 470 ,  {12.7 }} ,
					{ 472 ,  {19. }} ,
					{ 475 ,  {13.9 }} ,
					{ 476 ,  {13.5 }} ,
					{ 477 ,  {14.9 }} ,
					{ 480 ,  {16.6 }} ,
					{ 482 ,  {17.8 }} ,
					{ 484 ,  {19.8 }} ,
					{ 486 ,  {19.3 }} ,
					{ 487 ,  {19.1 }} ,
					{ 490 ,  {14.4 }} ,
					{ 492 ,  {13.8 }} ,
					{ 493 ,  {13.6 }} ,
					{ 498 ,  {16.6 }} ,
					{ 499 ,  {16.1 }} ,
					{ 501 ,  {15.2 }} ,
					{ 502 ,  {15. }} ,
					{ 506 ,  {18.4 }} ,
					{ 507 ,  {17.8 }} ,
					{ 508 ,  {19.1 }} ,
					{ 510 ,  {15.2 }} ,
					{ 512 ,  {17.8 }} ,
					{ 513 ,  {17.1 }} ,
					{ 515 ,  {12.6 }} ,
					{ 516 ,  {14.6 }} 
			};
			
		
			int get_decision_tree_node_index(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = (scaler_output_14 <= -0.6894010305404663) ? ( (scaler_output_7 <= 1.611592411994934) ? ( (scaler_output_7 <= 0.6831769943237305) ? ( (scaler_output_7 <= 0.32838211953639984) ? ( (scaler_output_2 <= -0.41760143637657166) ? ( (scaler_output_2 <= -0.4195925444364548) ? ( (scaler_output_10 <= -0.7514667510986328) ? ( (scaler_output_3 <= 2.9616817235946655) ? ( 8 ) : ( 9 ) ) : ( (scaler_output_4 <= -1.0595308542251587) ? ( 11 ) : ( (scaler_output_7 <= 0.059984393417835236) ? ( 13 ) : ( 14 ) ) ) ) : ( (scaler_output_8 <= -1.0513420701026917) ? ( (scaler_output_6 <= -0.8526139408349991) ? ( 17 ) : ( 18 ) ) : ( 19 ) ) ) : ( (scaler_output_11 <= 0.8375139385461807) ? ( (scaler_output_11 <= -0.6349290609359741) ? ( (scaler_output_14 <= -0.9056417346000671) ? ( (scaler_output_12 <= 0.1573023572564125) ? ( 24 ) : ( 25 ) ) : ( (scaler_output_2 <= -0.40356315672397614) ? ( (scaler_output_12 <= -0.07345346361398697) ? ( (scaler_output_11 <= -0.8322364091873169) ? ( 29 ) : ( 30 ) ) : ( 31 ) ) : ( (scaler_output_2 <= -0.4023457467556) ? ( 33 ) : ( (scaler_output_9 <= 0.5533214062452316) ? ( 35 ) : ( 36 ) ) ) ) ) : ( (scaler_output_7 <= 0.09043584950268269) ? ( (scaler_output_13 <= 0.19647962599992752) ? ( 39 ) : ( (scaler_output_4 <= -0.22127746418118477) ? ( 41 ) : ( 42 ) ) ) : ( (scaler_output_4 <= -0.8197156190872192) ? ( 44 ) : ( (scaler_output_11 <= -0.5200785398483276) ? ( 46 ) : ( 47 ) ) ) ) ) : ( 48 ) ) ) : ( (scaler_output_6 <= -0.21282730996608734) ? ( (scaler_output_8 <= 0.2917204685509205) ? ( (scaler_output_14 <= -1.1156044602394104) ? ( (scaler_output_7 <= 0.5408341586589813) ? ( (scaler_output_11 <= -0.867575079202652) ? ( 54 ) : ( (scaler_output_11 <= -0.437621733173728) ? ( 56 ) : ( 57 ) ) ) : ( 58 ) ) : ( (scaler_output_2 <= -0.42031998932361603) ? ( 60 ) : ( (scaler_output_4 <= -0.9847261309623718) ? ( (scaler_output_13 <= 0.17750490130856633) ? ( 63 ) : ( 64 ) ) : ( (scaler_output_13 <= 0.4176675081253052) ? ( (scaler_output_6 <= -0.9458278715610504) ? ( 67 ) : ( (scaler_output_13 <= 0.39229433238506317) ? ( 69 ) : ( 70 ) ) ) : ( (scaler_output_12 <= -0.4195872098207474) ? ( 72 ) : ( (scaler_output_2 <= -0.41933882236480713) ? ( 74 ) : ( 75 ) ) ) ) ) ) ) : ( (scaler_output_6 <= -0.4797581285238266) ? ( 77 ) : ( 78 ) ) ) : ( (scaler_output_3 <= -0.12873763591051102) ? ( 80 ) : ( 81 ) ) ) ) : ( (scaler_output_7 <= 1.193061888217926) ? ( (scaler_output_12 <= -0.027302297297865152) ? ( (scaler_output_6 <= -1.2932616472244263) ? ( 85 ) : ( (scaler_output_11 <= -0.8999688029289246) ? ( (scaler_output_8 <= -1.1794221997261047) ? ( (scaler_output_7 <= 0.876508355140686) ? ( 89 ) : ( 90 ) ) : ( 91 ) ) : ( (scaler_output_13 <= 0.24943234026432037) ? ( 93 ) : ( (scaler_output_8 <= -1.4231302738189697) ? ( (scaler_output_14 <= -1.1609452962875366) ? ( 96 ) : ( 97 ) ) : ( (scaler_output_2 <= -0.4173414558172226) ? ( (scaler_output_7 <= 0.7731150388717651) ? ( 100 ) : ( 101 ) ) : ( (scaler_output_14 <= -1.0877024829387665) ? ( 103 ) : ( 104 ) ) ) ) ) ) ) : ( (scaler_output_14 <= -1.3241721391677856) ? ( 106 ) : ( (scaler_output_8 <= -1.7966973185539246) ? ( 108 ) : ( (scaler_output_10 <= -0.8087483942508698) ? ( 110 ) : ( (scaler_output_9 <= 0.15757247805595398) ? ( 112 ) : ( 113 ) ) ) ) ) ) : ( (scaler_output_7 <= 1.3630235195159912) ? ( (scaler_output_2 <= -0.4157934635877609) ? ( (scaler_output_7 <= 1.336112916469574) ? ( 117 ) : ( 118 ) ) : ( (scaler_output_4 <= -1.0675980746746063) ? ( 120 ) : ( 121 ) ) ) : ( (scaler_output_2 <= -0.39054666459560394) ? ( (scaler_output_2 <= -0.4193069338798523) ? ( 124 ) : ( (scaler_output_12 <= -1.342610374558717) ? ( 126 ) : ( 127 ) ) ) : ( (scaler_output_13 <= 0.2727646231651306) ? ( 129 ) : ( 130 ) ) ) ) ) ) : ( (scaler_output_12 <= -1.6656686067581177) ? ( (scaler_output_7 <= 1.9805507063865662) ? ( (scaler_output_13 <= 0.2539553865790367) ? ( 134 ) : ( 135 ) ) : ( (scaler_output_8 <= 0.7595687508583069) ? ( 137 ) : ( 138 ) ) ) : ( (scaler_output_14 <= -1.1574575304985046) ? ( (scaler_output_8 <= -0.17790667712688446) ? ( (scaler_output_13 <= 0.25974708795547485) ? ( (scaler_output_8 <= -1.2274522185325623) ? ( 143 ) : ( 144 ) ) : ( (scaler_output_6 <= -1.1407297551631927) ? ( 146 ) : ( 147 ) ) ) : ( (scaler_output_2 <= -0.39273522794246674) ? ( 149 ) : ( 150 ) ) ) : ( 151 ) ) ) ) : ( (scaler_output_14 <= 0.30321352183818817) ? ( (scaler_output_9 <= -1.2479584217071533) ? ( 154 ) : ( (scaler_output_7 <= -0.2763979882001877) ? ( (scaler_output_2 <= 0.7477581053972244) ? ( (scaler_output_13 <= 0.24297872185707092) ? ( (scaler_output_9 <= -1.059984266757965) ? ( 159 ) : ( (scaler_output_7 <= -1.2628835439682007) ? ( (scaler_output_12 <= -0.8580232416279614) ? ( 162 ) : ( 163 ) ) : ( (scaler_output_14 <= 0.25229233503341675) ? ( (scaler_output_7 <= -0.4279470890760422) ? ( (scaler_output_12 <= -0.7657209187746048) ? ( 167 ) : ( 168 ) ) : ( 169 ) ) : ( (scaler_output_12 <= 0.7111163139343262) ? ( 171 ) : ( 172 ) ) ) ) ) : ( (scaler_output_8 <= 0.08181136101484299) ? ( (scaler_output_9 <= 0.3076174259185791) ? ( (scaler_output_7 <= -0.39607928693294525) ? ( (scaler_output_12 <= 1.011098861694336) ? ( (scaler_output_14 <= -0.10206339880824089) ? ( (scaler_output_4 <= 0.4930347502231598) ? ( (scaler_output_12 <= -1.2041568905115128) ? ( 180 ) : ( 181 ) ) : ( 182 ) ) : ( (scaler_output_11 <= 0.03356003761291504) ? ( (scaler_output_14 <= 0.19300052523612976) ? ( (scaler_output_2 <= -0.4035594016313553) ? ( 186 ) : ( (scaler_output_3 <= -0.08739423751831055) ? ( 188 ) : ( 189 ) ) ) : ( 190 ) ) : ( 191 ) ) ) : ( 192 ) ) : ( (scaler_output_4 <= -0.537364274263382) ? ( 194 ) : ( 195 ) ) ) : ( (scaler_output_13 <= 0.39648643136024475) ? ( (scaler_output_10 <= -0.8087483942508698) ? ( 198 ) : ( (scaler_output_13 <= 0.3219665139913559) ? ( 200 ) : ( 201 ) ) ) : ( (scaler_output_8 <= -1.4409191012382507) ? ( (scaler_output_7 <= -0.5115115493535995) ? ( (scaler_output_4 <= -0.8989206552505493) ? ( 205 ) : ( 206 ) ) : ( 207 ) ) : ( (scaler_output_14 <= -0.48362359404563904) ? ( (scaler_output_9 <= 0.7324820160865784) ? ( (scaler_output_13 <= 0.4132547825574875) ? ( 211 ) : ( (scaler_output_8 <= -0.8752318918704987) ? ( 213 ) : ( 214 ) ) ) : ( 215 ) ) : ( (scaler_output_14 <= -0.1843743771314621) ? ( (scaler_output_9 <= 0.6429375410079956) ? ( (scaler_output_11 <= -1.0442681908607483) ? ( 219 ) : ( 220 ) ) : ( (scaler_output_11 <= -0.8940790295600891) ? ( 222 ) : ( 223 ) ) ) : ( (scaler_output_3 <= 0.1193227767944336) ? ( 225 ) : ( 226 ) ) ) ) ) ) ) : ( (scaler_output_8 <= 0.5087451487779617) ? ( (scaler_output_2 <= -0.40718287229537964) ? ( 229 ) : ( (scaler_output_2 <= -0.3915496915578842) ? ( (scaler_output_2 <= -0.3942994922399521) ? ( 232 ) : ( 233 ) ) : ( (scaler_output_6 <= 0.0625775158405304) ? ( 235 ) : ( 236 ) ) ) ) : ( (scaler_output_6 <= -0.21706430986523628) ? ( 238 ) : ( (scaler_output_6 <= 1.5878965854644775) ? ( (scaler_output_14 <= -0.11182911694049835) ? ( 241 ) : ( (scaler_output_2 <= 0.007828891277313232) ? ( 243 ) : ( 244 ) ) ) : ( 245 ) ) ) ) ) ) : ( 246 ) ) : ( (scaler_output_4 <= -0.5821004509925842) ? ( (scaler_output_9 <= -0.05736774951219559) ? ( (scaler_output_10 <= -0.8087483644485474) ? ( (scaler_output_9 <= -0.34759318828582764) ? ( 251 ) : ( 252 ) ) : ( (scaler_output_9 <= -0.8108169436454773) ? ( 254 ) : ( (scaler_output_6 <= 0.1939244419336319) ? ( (scaler_output_7 <= 0.12088730186223984) ? ( 257 ) : ( (scaler_output_7 <= 0.5266706645488739) ? ( 259 ) : ( 260 ) ) ) : ( 261 ) ) ) ) : ( (scaler_output_14 <= -0.3824787586927414) ? ( (scaler_output_2 <= -0.41390860080718994) ? ( (scaler_output_14 <= -0.435492604970932) ? ( (scaler_output_7 <= 0.07981325685977936) ? ( 266 ) : ( 267 ) ) : ( (scaler_output_2 <= -0.4183213859796524) ? ( 269 ) : ( 270 ) ) ) : ( (scaler_output_2 <= -0.4112156927585602) ? ( 272 ) : ( (scaler_output_10 <= -0.23593220114707947) ? ( (scaler_output_9 <= 0.980311805382371) ? ( 275 ) : ( 276 ) ) : ( (scaler_output_7 <= 0.5627875179052353) ? ( 278 ) : ( 279 ) ) ) ) ) : ( (scaler_output_7 <= -0.0072920843958854675) ? ( (scaler_output_7 <= -0.1007709763944149) ? ( 282 ) : ( 283 ) ) : ( (scaler_output_9 <= 1.3690624237060547) ? ( 285 ) : ( 286 ) ) ) ) ) : ( (scaler_output_14 <= -0.11322421208024025) ? ( (scaler_output_7 <= 0.776655912399292) ? ( (scaler_output_8 <= -0.526569277048111) ? ( (scaler_output_2 <= -0.3974386155605316) ? ( 291 ) : ( 292 ) ) : ( (scaler_output_6 <= 0.9692949652671814) ? ( (scaler_output_13 <= 0.41827426850795746) ? ( (scaler_output_4 <= -0.15087298303842545) ? ( 296 ) : ( (scaler_output_10 <= -0.8087483942508698) ? ( 298 ) : ( (scaler_output_6 <= -0.047584418207407) ? ( (scaler_output_7 <= 0.39565861225128174) ? ( 301 ) : ( 302 ) ) : ( 303 ) ) ) ) : ( (scaler_output_2 <= -0.05736669898033142) ? ( (scaler_output_4 <= -0.21761055290699005) ? ( 306 ) : ( (scaler_output_11 <= -0.7910080552101135) ? ( 308 ) : ( 309 ) ) ) : ( 310 ) ) ) : ( (scaler_output_6 <= 1.5878965854644775) ? ( 312 ) : ( 313 ) ) ) ) : ( 314 ) ) : ( (scaler_output_7 <= 0.9834425747394562) ? ( (scaler_output_8 <= 0.7524531781673431) ? ( (scaler_output_7 <= -0.2643590420484543) ? ( 318 ) : ( (scaler_output_6 <= 1.1006418764591217) ? ( (scaler_output_13 <= 0.20480864495038986) ? ( 321 ) : ( (scaler_output_14 <= 0.03326142579317093) ? ( (scaler_output_10 <= -0.5796219110488892) ? ( 324 ) : ( (scaler_output_8 <= -0.16901224106550217) ? ( 326 ) : ( 327 ) ) ) : ( (scaler_output_7 <= -0.137595996260643) ? ( 329 ) : ( (scaler_output_6 <= 0.6811791360378265) ? ( 331 ) : ( 332 ) ) ) ) ) : ( 333 ) ) ) : ( (scaler_output_13 <= 0.24259261041879654) ? ( 335 ) : ( (scaler_output_9 <= -0.020465582609176636) ? ( (scaler_output_6 <= -0.2382492944598198) ? ( (scaler_output_2 <= -0.40744347870349884) ? ( 339 ) : ( 340 ) ) : ( (scaler_output_7 <= 0.13150990940630436) ? ( (scaler_output_12 <= 1.0572500228881836) ? ( 343 ) : ( 344 ) ) : ( 345 ) ) ) : ( 346 ) ) ) ) : ( 347 ) ) ) ) ) ) : ( (scaler_output_9 <= -0.8675674796104431) ? ( (scaler_output_2 <= 0.5180033445358276) ? ( (scaler_output_7 <= -1.2253503799438477) ? ( (scaler_output_11 <= 0.8905218597501516) ? ( (scaler_output_8 <= 0.926784485578537) ? ( 353 ) : ( (scaler_output_7 <= -1.9611425995826721) ? ( 355 ) : ( (scaler_output_14 <= 2.1691614985466003) ? ( (scaler_output_2 <= -0.0637130900286138) ? ( 358 ) : ( 359 ) ) : ( 360 ) ) ) ) : ( 361 ) ) : ( (scaler_output_9 <= -0.9125666618347168) ? ( (scaler_output_7 <= 0.16833492368459702) ? ( (scaler_output_7 <= -0.7961972951889038) ? ( (scaler_output_7 <= -0.968991607427597) ? ( (scaler_output_11 <= 0.8905218597501516) ? ( (scaler_output_7 <= -1.0745094418525696) ? ( 368 ) : ( 369 ) ) : ( 370 ) ) : ( 371 ) ) : ( (scaler_output_13 <= -2.5143682956695557) ? ( 373 ) : ( (scaler_output_13 <= 0.3606881946325302) ? ( (scaler_output_8 <= 1.0388546288013458) ? ( (scaler_output_9 <= -0.991983950138092) ? ( 377 ) : ( 378 ) ) : ( (scaler_output_14 <= 1.4381283819675446) ? ( 380 ) : ( 381 ) ) ) : ( (scaler_output_4 <= 1.3217542171478271) ? ( 383 ) : ( 384 ) ) ) ) ) : ( 385 ) ) : ( (scaler_output_2 <= -0.39460696280002594) ? ( 387 ) : ( 388 ) ) ) ) : ( (scaler_output_14 <= 0.3806416541337967) ? ( 390 ) : ( (scaler_output_14 <= 1.7506310939788818) ? ( (scaler_output_13 <= 0.40751825273036957) ? ( (scaler_output_2 <= 4.937137007713318) ? ( (scaler_output_7 <= 0.1315099112689495) ? ( (scaler_output_7 <= -0.7182981967926025) ? ( 396 ) : ( (scaler_output_14 <= 1.5776385068893433) ? ( (scaler_output_14 <= 1.4172018766403198) ? ( 399 ) : ( 400 ) ) : ( (scaler_output_8 <= 0.9837089776992798) ? ( 402 ) : ( 403 ) ) ) ) : ( (scaler_output_9 <= -0.934230238199234) ? ( (scaler_output_8 <= 1.122462511062622) ? ( 406 ) : ( 407 ) ) : ( 408 ) ) ) : ( 409 ) ) : ( (scaler_output_2 <= 6.6143141984939575) ? ( (scaler_output_9 <= -1.1274830102920532) ? ( (scaler_output_9 <= -1.169305443763733) ? ( 413 ) : ( 414 ) ) : ( (scaler_output_8 <= 1.0495279729366302) ? ( (scaler_output_6 <= 1.3760466575622559) ? ( 417 ) : ( 418 ) ) : ( 419 ) ) ) : ( 420 ) ) ) : ( (scaler_output_9 <= -1.1159226894378662) ? ( 422 ) : ( (scaler_output_9 <= -1.051743984222412) ? ( (scaler_output_6 <= 1.2065668106079102) ? ( (scaler_output_2 <= 1.7608287632465363) ? ( 426 ) : ( 427 ) ) : ( 428 ) ) : ( (scaler_output_9 <= -1.0351678729057312) ? ( 430 ) : ( (scaler_output_8 <= 0.7649054229259491) ? ( 432 ) : ( (scaler_output_14 <= 2.616989016532898) ? ( 434 ) : ( 435 ) ) ) ) ) ) ) ) ) : ( (scaler_output_2 <= -0.396232470870018) ? ( (scaler_output_14 <= 0.8249813914299011) ? ( (scaler_output_2 <= -0.4121524840593338) ? ( (scaler_output_13 <= 0.2858924865722656) ? ( 440 ) : ( 441 ) ) : ( (scaler_output_5 <= 1.6589429825544357) ? ( (scaler_output_7 <= -0.6000332534313202) ? ( (scaler_output_10 <= -0.46505868434906006) ? ( (scaler_output_2 <= -0.40214575827121735) ? ( 446 ) : ( 447 ) ) : ( 448 ) ) : ( (scaler_output_8 <= 0.8520710468292236) ? ( 450 ) : ( (scaler_output_9 <= -0.7369409799575806) ? ( 452 ) : ( 453 ) ) ) ) : ( 454 ) ) ) : ( 455 ) ) : ( (scaler_output_13 <= -0.4482196271419525) ? ( (scaler_output_9 <= -0.4961811453104019) ? ( (scaler_output_14 <= 0.8696246445178986) ? ( (scaler_output_8 <= 0.9072166979312897) ? ( (scaler_output_13 <= -3.653403162956238) ? ( (scaler_output_14 <= 0.6366427540779114) ? ( 462 ) : ( 463 ) ) : ( 464 ) ) : ( 465 ) ) : ( (scaler_output_9 <= -0.7953634262084961) ? ( 467 ) : ( (scaler_output_9 <= -0.6864721775054932) ? ( 469 ) : ( 470 ) ) ) ) : ( (scaler_output_13 <= -2.462518632411957) ? ( 472 ) : ( (scaler_output_11 <= 0.47529295086860657) ? ( (scaler_output_7 <= -0.639690950512886) ? ( 475 ) : ( 476 ) ) : ( 477 ) ) ) ) : ( (scaler_output_8 <= 0.7684631943702698) ? ( (scaler_output_2 <= -0.39451509714126587) ? ( 480 ) : ( (scaler_output_13 <= 0.3674727529287338) ? ( 482 ) : ( (scaler_output_8 <= 0.28104712814092636) ? ( 484 ) : ( (scaler_output_11 <= 0.3869463801383972) ? ( 486 ) : ( 487 ) ) ) ) ) : ( (scaler_output_7 <= -0.8606410920619965) ? ( (scaler_output_7 <= -1.2550936341285706) ? ( 490 ) : ( (scaler_output_7 <= -1.1339960098266602) ? ( 492 ) : ( 493 ) ) ) : ( (scaler_output_2 <= 0.8038013279438019) ? ( (scaler_output_8 <= 0.9445733726024628) ? ( (scaler_output_13 <= 0.33564597368240356) ? ( (scaler_output_7 <= -0.34579899243544787) ? ( 498 ) : ( 499 ) ) : ( (scaler_output_8 <= 0.8947644531726837) ? ( 501 ) : ( 502 ) ) ) : ( (scaler_output_7 <= 0.01891033723950386) ? ( (scaler_output_9 <= -0.7110975086688995) ? ( (scaler_output_9 <= -0.8390011489391327) ? ( 506 ) : ( 507 ) ) : ( 508 ) ) : ( (scaler_output_2 <= 0.4313425123691559) ? ( 510 ) : ( (scaler_output_14 <= 0.7677822411060333) ? ( 512 ) : ( 513 ) ) ) ) ) : ( (scaler_output_8 <= 1.024623453617096) ? ( 515 ) : ( 516 ) ) ) ) ) ) ) ) );
			
				return lNodeIndex;
			}
			
		
			std::vector<std::string> get_input_names(){
				std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
		
				return lFeatures;
			}
		
			std::vector<std::string> get_output_names(){
				std::vector<std::string> lOutputs = { "Estimator" };
		
				return lOutputs;
			}
		
			tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
				int lNodeIndex = get_decision_tree_node_index(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14);
		
				std::vector<double> lNodeValue = Decision_Tree_Node_data[ lNodeIndex ];
		
		
				tTable lTable;
		
				std::any  lEstimator = lNodeValue [ 0 ];
				lTable[ "Estimator" ] = { lEstimator };
		
				return lTable;
			}
		
			tTable compute_model_outputs_from_table( tTable const & iTable) {
				tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
		
				return lTable;
			}
		
		} // eof namespace EXT_SubModel_15
		
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "scaler_output_2", "scaler_output_3", "scaler_output_4", "scaler_output_5", "scaler_output_6", "scaler_output_7", "scaler_output_8", "scaler_output_9", "scaler_output_10", "scaler_output_11", "scaler_output_12", "scaler_output_13", "scaler_output_14" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Estimator" };
	
			return lOutputs;
		}
	
		tTable compute_regression(std::any scaler_output_2, std::any scaler_output_3, std::any scaler_output_4, std::any scaler_output_5, std::any scaler_output_6, std::any scaler_output_7, std::any scaler_output_8, std::any scaler_output_9, std::any scaler_output_10, std::any scaler_output_11, std::any scaler_output_12, std::any scaler_output_13, std::any scaler_output_14) {
			std::vector<tTable> lTreeScores = { 
				EXT_SubModel_0::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_1::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_2::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_3::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_4::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_5::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_6::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_7::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_8::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_9::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_10::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_11::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_12::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_13::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_14::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14),
				EXT_SubModel_15::compute_regression(scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14)
			};
	
			tTable lAggregatedTable = aggregate_rf_scores(lTreeScores, {"Estimator"});
	
	
			tTable lTable = lAggregatedTable;
	
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_regression(iTable.at("scaler_output_2")[0], iTable.at("scaler_output_3")[0], iTable.at("scaler_output_4")[0], iTable.at("scaler_output_5")[0], iTable.at("scaler_output_6")[0], iTable.at("scaler_output_7")[0], iTable.at("scaler_output_8")[0], iTable.at("scaler_output_9")[0], iTable.at("scaler_output_10")[0], iTable.at("scaler_output_11")[0], iTable.at("scaler_output_12")[0], iTable.at("scaler_output_13")[0], iTable.at("scaler_output_14")[0]);
	
			return lTable;
		}
	
	} // eof namespace model
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { "Estimator" };

		return lOutputs;
	}

	tTable compute_regression(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12) {
		tTable lTable_imputer = imputer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12);

		tTable lTable_scaler = scaler::compute_model_outputs_from_table( lTable_imputer );

		tTable lTable_model = model::compute_model_outputs_from_table( lTable_scaler );


		tTable lTable;

		std::any  lEstimator = lTable_model[ "Estimator" ][0];
		lTable[ "Estimator" ] = { lEstimator };

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_regression(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/boston.csv");
	return 0;
}
