// ******************************************************** 

// This C++ code was automatically generated by ml2cpp (development version).
// Copyright 2020

// https://github.com/antoinecarme/ml2cpp
// Model : MLPClassifier
// Dataset : FourClass_100

// This CPP code can be compiled using any C++-17 compiler.
// g++ -Wall -Wno-unused-function -std=c++17 -g -o ml2cpp-demo_MLPClassifier_FourClass_100.exe ml2cpp-demo_MLPClassifier_FourClass_100.cpp

// Model deployment code

// ******************************************************** 

#include "../../Generic.i"

namespace  {

	std::vector<std::any> get_classes(){
		std::vector<std::any> lClasses = { 0, 1, 2, 3 };

		return lClasses;
	}

	namespace InputLayer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9", "input_10", "input_11", "input_12", "input_13", "input_14", "input_15", "input_16", "input_17", "input_18", "input_19", "input_20", "input_21", "input_22", "input_23", "input_24", "input_25", "input_26", "input_27", "input_28", "input_29", "input_30", "input_31", "input_32", "input_33", "input_34", "input_35", "input_36", "input_37", "input_38", "input_39", "input_40", "input_41", "input_42", "input_43", "input_44", "input_45", "input_46", "input_47", "input_48", "input_49", "input_50", "input_51", "input_52", "input_53", "input_54", "input_55", "input_56", "input_57", "input_58", "input_59", "input_60", "input_61", "input_62", "input_63", "input_64", "input_65", "input_66", "input_67", "input_68", "input_69", "input_70", "input_71", "input_72", "input_73", "input_74", "input_75", "input_76", "input_77", "input_78", "input_79", "input_80", "input_81", "input_82", "input_83", "input_84", "input_85", "input_86", "input_87", "input_88", "input_89", "input_90", "input_91", "input_92", "input_93", "input_94", "input_95", "input_96", "input_97", "input_98", "input_99" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
	
			tTable lTable;
	
			lTable["input_0"] = { Feature_0 };
			lTable["input_1"] = { Feature_1 };
			lTable["input_2"] = { Feature_2 };
			lTable["input_3"] = { Feature_3 };
			lTable["input_4"] = { Feature_4 };
			lTable["input_5"] = { Feature_5 };
			lTable["input_6"] = { Feature_6 };
			lTable["input_7"] = { Feature_7 };
			lTable["input_8"] = { Feature_8 };
			lTable["input_9"] = { Feature_9 };
			lTable["input_10"] = { Feature_10 };
			lTable["input_11"] = { Feature_11 };
			lTable["input_12"] = { Feature_12 };
			lTable["input_13"] = { Feature_13 };
			lTable["input_14"] = { Feature_14 };
			lTable["input_15"] = { Feature_15 };
			lTable["input_16"] = { Feature_16 };
			lTable["input_17"] = { Feature_17 };
			lTable["input_18"] = { Feature_18 };
			lTable["input_19"] = { Feature_19 };
			lTable["input_20"] = { Feature_20 };
			lTable["input_21"] = { Feature_21 };
			lTable["input_22"] = { Feature_22 };
			lTable["input_23"] = { Feature_23 };
			lTable["input_24"] = { Feature_24 };
			lTable["input_25"] = { Feature_25 };
			lTable["input_26"] = { Feature_26 };
			lTable["input_27"] = { Feature_27 };
			lTable["input_28"] = { Feature_28 };
			lTable["input_29"] = { Feature_29 };
			lTable["input_30"] = { Feature_30 };
			lTable["input_31"] = { Feature_31 };
			lTable["input_32"] = { Feature_32 };
			lTable["input_33"] = { Feature_33 };
			lTable["input_34"] = { Feature_34 };
			lTable["input_35"] = { Feature_35 };
			lTable["input_36"] = { Feature_36 };
			lTable["input_37"] = { Feature_37 };
			lTable["input_38"] = { Feature_38 };
			lTable["input_39"] = { Feature_39 };
			lTable["input_40"] = { Feature_40 };
			lTable["input_41"] = { Feature_41 };
			lTable["input_42"] = { Feature_42 };
			lTable["input_43"] = { Feature_43 };
			lTable["input_44"] = { Feature_44 };
			lTable["input_45"] = { Feature_45 };
			lTable["input_46"] = { Feature_46 };
			lTable["input_47"] = { Feature_47 };
			lTable["input_48"] = { Feature_48 };
			lTable["input_49"] = { Feature_49 };
			lTable["input_50"] = { Feature_50 };
			lTable["input_51"] = { Feature_51 };
			lTable["input_52"] = { Feature_52 };
			lTable["input_53"] = { Feature_53 };
			lTable["input_54"] = { Feature_54 };
			lTable["input_55"] = { Feature_55 };
			lTable["input_56"] = { Feature_56 };
			lTable["input_57"] = { Feature_57 };
			lTable["input_58"] = { Feature_58 };
			lTable["input_59"] = { Feature_59 };
			lTable["input_60"] = { Feature_60 };
			lTable["input_61"] = { Feature_61 };
			lTable["input_62"] = { Feature_62 };
			lTable["input_63"] = { Feature_63 };
			lTable["input_64"] = { Feature_64 };
			lTable["input_65"] = { Feature_65 };
			lTable["input_66"] = { Feature_66 };
			lTable["input_67"] = { Feature_67 };
			lTable["input_68"] = { Feature_68 };
			lTable["input_69"] = { Feature_69 };
			lTable["input_70"] = { Feature_70 };
			lTable["input_71"] = { Feature_71 };
			lTable["input_72"] = { Feature_72 };
			lTable["input_73"] = { Feature_73 };
			lTable["input_74"] = { Feature_74 };
			lTable["input_75"] = { Feature_75 };
			lTable["input_76"] = { Feature_76 };
			lTable["input_77"] = { Feature_77 };
			lTable["input_78"] = { Feature_78 };
			lTable["input_79"] = { Feature_79 };
			lTable["input_80"] = { Feature_80 };
			lTable["input_81"] = { Feature_81 };
			lTable["input_82"] = { Feature_82 };
			lTable["input_83"] = { Feature_83 };
			lTable["input_84"] = { Feature_84 };
			lTable["input_85"] = { Feature_85 };
			lTable["input_86"] = { Feature_86 };
			lTable["input_87"] = { Feature_87 };
			lTable["input_88"] = { Feature_88 };
			lTable["input_89"] = { Feature_89 };
			lTable["input_90"] = { Feature_90 };
			lTable["input_91"] = { Feature_91 };
			lTable["input_92"] = { Feature_92 };
			lTable["input_93"] = { Feature_93 };
			lTable["input_94"] = { Feature_94 };
			lTable["input_95"] = { Feature_95 };
			lTable["input_96"] = { Feature_96 };
			lTable["input_97"] = { Feature_97 };
			lTable["input_98"] = { Feature_98 };
			lTable["input_99"] = { Feature_99 };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace InputLayer
	

	namespace HiddenLayer_1 {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "input_0", "input_1", "input_2", "input_3", "input_4", "input_5", "input_6", "input_7", "input_8", "input_9", "input_10", "input_11", "input_12", "input_13", "input_14", "input_15", "input_16", "input_17", "input_18", "input_19", "input_20", "input_21", "input_22", "input_23", "input_24", "input_25", "input_26", "input_27", "input_28", "input_29", "input_30", "input_31", "input_32", "input_33", "input_34", "input_35", "input_36", "input_37", "input_38", "input_39", "input_40", "input_41", "input_42", "input_43", "input_44", "input_45", "input_46", "input_47", "input_48", "input_49", "input_50", "input_51", "input_52", "input_53", "input_54", "input_55", "input_56", "input_57", "input_58", "input_59", "input_60", "input_61", "input_62", "input_63", "input_64", "input_65", "input_66", "input_67", "input_68", "input_69", "input_70", "input_71", "input_72", "input_73", "input_74", "input_75", "input_76", "input_77", "input_78", "input_79", "input_80", "input_81", "input_82", "input_83", "input_84", "input_85", "input_86", "input_87", "input_88", "input_89", "input_90", "input_91", "input_92", "input_93", "input_94", "input_95", "input_96", "input_97", "input_98", "input_99" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "output_1_0", "output_1_1", "output_1_2" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any input_0, std::any input_1, std::any input_2, std::any input_3, std::any input_4, std::any input_5, std::any input_6, std::any input_7, std::any input_8, std::any input_9, std::any input_10, std::any input_11, std::any input_12, std::any input_13, std::any input_14, std::any input_15, std::any input_16, std::any input_17, std::any input_18, std::any input_19, std::any input_20, std::any input_21, std::any input_22, std::any input_23, std::any input_24, std::any input_25, std::any input_26, std::any input_27, std::any input_28, std::any input_29, std::any input_30, std::any input_31, std::any input_32, std::any input_33, std::any input_34, std::any input_35, std::any input_36, std::any input_37, std::any input_38, std::any input_39, std::any input_40, std::any input_41, std::any input_42, std::any input_43, std::any input_44, std::any input_45, std::any input_46, std::any input_47, std::any input_48, std::any input_49, std::any input_50, std::any input_51, std::any input_52, std::any input_53, std::any input_54, std::any input_55, std::any input_56, std::any input_57, std::any input_58, std::any input_59, std::any input_60, std::any input_61, std::any input_62, std::any input_63, std::any input_64, std::any input_65, std::any input_66, std::any input_67, std::any input_68, std::any input_69, std::any input_70, std::any input_71, std::any input_72, std::any input_73, std::any input_74, std::any input_75, std::any input_76, std::any input_77, std::any input_78, std::any input_79, std::any input_80, std::any input_81, std::any input_82, std::any input_83, std::any input_84, std::any input_85, std::any input_86, std::any input_87, std::any input_88, std::any input_89, std::any input_90, std::any input_91, std::any input_92, std::any input_93, std::any input_94, std::any input_95, std::any input_96, std::any input_97, std::any input_98, std::any input_99) {
	
			tTable lTable;
	
			double output_1_0_BA = -0.8197761322263672 * input_0 + -0.09505672752200066 * input_1 + -1.651295085308434 * input_2 + -1.4616977153762303 * input_3 + -0.47691805396807474 * input_4 + 0.09230373018458704 * input_5 + 0.13906217413360203 * input_6 + -0.642817377443501 * input_7 + 0.11009381375962542 * input_8 + 0.05040447361828904 * input_9 + -0.6387565605931245 * input_10 + 0.06992457287483732 * input_11 + -0.3580929040311019 * input_12 + 1.0785334827129482 * input_13 + 0.4691104858391204 * input_14 + -1.429864010740808 * input_15 + 0.5984748957791577 * input_16 + -2.046477515316457 * input_17 + -0.2316527429070133 * input_18 + -0.22106426855557473 * input_19 + -0.5145206242699268 * input_20 + -0.5973847358483445 * input_21 + -0.3184231346904531 * input_22 + -0.22100864817573895 * input_23 + -0.14081583419103683 * input_24 + 0.09871137369476514 * input_25 + 0.17949377861490823 * input_26 + -0.04178176414067837 * input_27 + -0.585699190923352 * input_28 + -0.14909797615976542 * input_29 + 0.39753148458386034 * input_30 + 1.0269950356744315 * input_31 + 0.7693898396094315 * input_32 + -1.0563168990699554 * input_33 + -1.9878224250169427 * input_34 + -0.42038168596338926 * input_35 + -1.2223944392646577 * input_36 + 0.24862823331845718 * input_37 + -0.381563381700443 * input_38 + -0.3721374219236423 * input_39 + -0.5057222695593695 * input_40 + -0.25928996400523013 * input_41 + -0.03402306320719507 * input_42 + 0.028919694924758866 * input_43 + 1.2980494021754594 * input_44 + 2.5562910315928637 * input_45 + -0.6285000801223539 * input_46 + 0.3783493504829487 * input_47 + -0.25076795519348444 * input_48 + -1.2037216458379616 * input_49 + -0.9393383265060455 * input_50 + -0.5025149337782006 * input_51 + 0.5321579604297816 * input_52 + -0.38397127865849806 * input_53 + 1.060897245161847 * input_54 + -0.04926725893140245 * input_55 + -0.17555649167496748 * input_56 + 1.1001544518283635 * input_57 + 0.3363391427613216 * input_58 + -0.8421179658262354 * input_59 + 0.407377647595744 * input_60 + 1.15260484645608 * input_61 + -0.9455701433952216 * input_62 + 0.564584661318958 * input_63 + 0.7514434833816606 * input_64 + 0.4802178304620365 * input_65 + -0.14729866055384971 * input_66 + 0.7842758231842398 * input_67 + -0.10594175782783861 * input_68 + -0.5698057938732656 * input_69 + 0.9497727608171805 * input_70 + 0.5236128550659995 * input_71 + 0.6970043163717856 * input_72 + 0.023780922925907978 * input_73 + 0.5764470838927184 * input_74 + 0.5690046403427965 * input_75 + -0.21410413019120367 * input_76 + 0.5288027594238974 * input_77 + -0.038098352182648315 * input_78 + 0.6325367908283794 * input_79 + -1.6300992437188186 * input_80 + 2.2066090728203354 * input_81 + 0.07899840965458614 * input_82 + -0.9897824311441021 * input_83 + 1.4361243529940562 * input_84 + 0.17416336952195294 * input_85 + -0.6527638096572078 * input_86 + -0.5834930221829564 * input_87 + -0.2348652386974581 * input_88 + -0.04915235983762233 * input_89 + 0.26442556808001144 * input_90 + 0.31783479509361434 * input_91 + 0.15748921515580105 * input_92 + 1.1173917048851332 * input_93 + 1.0410518312024564 * input_94 + 0.353965984517503 * input_95 + -1.7409698258330835 * input_96 + -1.2298129974224412 * input_97 + 0.23211480421809105 * input_98 + 0.13452906664265243 * input_99 + 0.3499066285921775;
	
			double output_1_1_BA = -0.058961669098240584 * input_0 + -0.6739193735756348 * input_1 + -0.20045917145157216 * input_2 + -0.06021704629941711 * input_3 + -0.37487015457540757 * input_4 + -0.0018044862924955264 * input_5 + 0.24272731589348492 * input_6 + -0.32410817030541356 * input_7 + 0.8173048401464786 * input_8 + -0.4161783222071711 * input_9 + 0.48967864872916356 * input_10 + -0.6118834051009472 * input_11 + 1.050884382776442 * input_12 + 1.4423214080229214 * input_13 + 1.4729583782523525 * input_14 + -0.21300183967973443 * input_15 + -0.694736326938668 * input_16 + -0.012346768129740887 * input_17 + -0.32103011884938715 * input_18 + 1.4844427671241176 * input_19 + 0.14132952707040733 * input_20 + 0.004381534380387543 * input_21 + -1.0406896978500688 * input_22 + 1.8526270284796598 * input_23 + 1.5365539018840617 * input_24 + 0.4369078422271433 * input_25 + -0.1903574614730942 * input_26 + -1.6128827573749271 * input_27 + 0.2843188141290604 * input_28 + -0.6416180222551537 * input_29 + -0.9164623226840092 * input_30 + -0.06835302430981828 * input_31 + -0.9903910668747277 * input_32 + 0.4275717299451584 * input_33 + 0.022595996738278917 * input_34 + -0.7723629449585283 * input_35 + 1.7843668529158696 * input_36 + -0.7757681503293637 * input_37 + 0.36610426800027757 * input_38 + 0.29796257658028014 * input_39 + 0.4393913563304279 * input_40 + 0.3266994348634598 * input_41 + 0.8454622971802205 * input_42 + 0.6303610166830512 * input_43 + 0.5736553755754777 * input_44 + -0.9148431947675009 * input_45 + 0.6451735963465781 * input_46 + -0.7268284889558692 * input_47 + -0.8664759792810932 * input_48 + 0.523837293320373 * input_49 + 1.1551070308597273 * input_50 + -0.0046908570075825315 * input_51 + -0.5170249738071461 * input_52 + 0.7179106170912608 * input_53 + 0.7277191330137593 * input_54 + -1.045219580422806 * input_55 + 1.1153986707821104 * input_56 + -1.0646131439820279 * input_57 + 0.31501365957959687 * input_58 + 0.41174375596821644 * input_59 + -0.4024322512469752 * input_60 + 0.6152707665508087 * input_61 + -0.16279176639694723 * input_62 + -0.42694665582404195 * input_63 + -0.47194950769192456 * input_64 + -0.28331879331391624 * input_65 + 0.36201584991008273 * input_66 + 1.5114437087889228 * input_67 + -0.17264842750589357 * input_68 + -0.01840489727365338 * input_69 + -0.9491759866505146 * input_70 + -0.037980762972712 * input_71 + 0.28219443966685714 * input_72 + 0.22677342780360785 * input_73 + -1.3850774462725184 * input_74 + -0.6151648333620671 * input_75 + 0.14627633979201968 * input_76 + 0.021547450144420215 * input_77 + -1.368071837605867 * input_78 + 1.116978804732223 * input_79 + -0.035981214703940514 * input_80 + -0.6256847901416103 * input_81 + -0.03025600730520289 * input_82 + -0.8334917201442449 * input_83 + -0.35528145885088036 * input_84 + -1.3178804716372174 * input_85 + -1.8511237397324556 * input_86 + 0.08532614863605559 * input_87 + -1.9059195044518884 * input_88 + -0.3345285020870161 * input_89 + -0.3135830328220244 * input_90 + -0.0882347761443354 * input_91 + -0.32135921890421437 * input_92 + 0.2090010809107696 * input_93 + -0.09207430349429852 * input_94 + 0.7908102216946015 * input_95 + 1.1471681662445181 * input_96 + -0.49363365277221233 * input_97 + -0.1801720725454761 * input_98 + -0.70719820767826 * input_99 + 0.5979203202892219;
	
			double output_1_2_BA = 0.21200022842325503 * input_0 + -1.6544264872860885 * input_1 + -0.246100641858817 * input_2 + -0.46848885875679763 * input_3 + 0.24403755996541876 * input_4 + 0.898335891640541 * input_5 + -0.1496596039300305 * input_6 + -0.21377207579226343 * input_7 + -0.06897940924755593 * input_8 + 1.7878626791985952 * input_9 + -0.3375892366833466 * input_10 + 0.5257435505372423 * input_11 + 0.14712741878065877 * input_12 + -1.1333670870142285 * input_13 + -0.7293404393076813 * input_14 + -1.329053267279915 * input_15 + -0.8173926720582667 * input_16 + -1.1579698406884795 * input_17 + -0.40279613287980803 * input_18 + -0.9987828642242824 * input_19 + 0.516636196695174 * input_20 + -0.00317225249041596 * input_21 + -0.3810310200461566 * input_22 + 0.34361455885321346 * input_23 + -0.41400357797489135 * input_24 + -0.58916436798497 * input_25 + 0.4207274658488342 * input_26 + 1.302213051385875 * input_27 + 1.2363798416313587 * input_28 + -0.651964887612984 * input_29 + 0.8467463818944292 * input_30 + 0.5772553082076083 * input_31 + -0.5837313102170175 * input_32 + -0.08668729569538387 * input_33 + 0.44888519446391584 * input_34 + -0.9654217951449972 * input_35 + 0.0397232643601901 * input_36 + 0.22008773820138375 * input_37 + 1.0030849213053243 * input_38 + 0.1595366331285423 * input_39 + 0.6985007853891774 * input_40 + 0.08592448757854759 * input_41 + -0.034326441293710354 * input_42 + -1.871567504394636 * input_43 + -2.855743998503513 * input_44 + -0.8332141979655899 * input_45 + 1.0266947077289574 * input_46 + 2.0396618732084444 * input_47 + -0.10539032180984947 * input_48 + -1.0021164518911205 * input_49 + 0.26606505835935723 * input_50 + -0.16522380934964517 * input_51 + -0.0894387853570016 * input_52 + 0.6533010194472357 * input_53 + -2.105823049257666 * input_54 + 0.5418637552823162 * input_55 + -0.6260154997750509 * input_56 + 0.1604240569291228 * input_57 + 0.7389848001086562 * input_58 + -0.8149598655322747 * input_59 + -1.0466008033551635 * input_60 + -0.8317455818547211 * input_61 + -0.008705672477426925 * input_62 + -0.09864657647189157 * input_63 + -0.4523860411522024 * input_64 + -0.19922510885873868 * input_65 + 0.06332801517263666 * input_66 + 0.00428341383464564 * input_67 + -0.8104485437906425 * input_68 + -1.4093161546850712 * input_69 + -0.37239489234759887 * input_70 + 1.0134518137342963 * input_71 + 0.3645210260641116 * input_72 + -0.9592048541923599 * input_73 + -0.411320933392073 * input_74 + -0.7786431751698608 * input_75 + 0.3803162759660873 * input_76 + -0.03696487588253257 * input_77 + -1.2059784925493455 * input_78 + 0.4723150055455305 * input_79 + 0.1708803461721072 * input_80 + 0.37482165701650433 * input_81 + -0.5111358021225669 * input_82 + 0.9026818240527996 * input_83 + -0.11578759620563603 * input_84 + 0.2938598423268255 * input_85 + 0.3588252841483353 * input_86 + -0.5606924176956145 * input_87 + -0.292770637057571 * input_88 + -0.6494472641836557 * input_89 + -0.24362195180718926 * input_90 + -0.02755271905166596 * input_91 + 1.0062884052653456 * input_92 + -0.8037547567994677 * input_93 + 0.040183719127853026 * input_94 + -0.43669650430534557 * input_95 + 1.3674395009979683 * input_96 + 1.1359392997310211 * input_97 + -1.301718992977851 * input_98 + 1.2264184022509272 * input_99 + -0.7376737181625944;
	
			lTable["output_1_0"] = { relu(output_1_0_BA) };
			lTable["output_1_1"] = { relu(output_1_1_BA) };
			lTable["output_1_2"] = { relu(output_1_2_BA) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("input_0")[0], iTable.at("input_1")[0], iTable.at("input_2")[0], iTable.at("input_3")[0], iTable.at("input_4")[0], iTable.at("input_5")[0], iTable.at("input_6")[0], iTable.at("input_7")[0], iTable.at("input_8")[0], iTable.at("input_9")[0], iTable.at("input_10")[0], iTable.at("input_11")[0], iTable.at("input_12")[0], iTable.at("input_13")[0], iTable.at("input_14")[0], iTable.at("input_15")[0], iTable.at("input_16")[0], iTable.at("input_17")[0], iTable.at("input_18")[0], iTable.at("input_19")[0], iTable.at("input_20")[0], iTable.at("input_21")[0], iTable.at("input_22")[0], iTable.at("input_23")[0], iTable.at("input_24")[0], iTable.at("input_25")[0], iTable.at("input_26")[0], iTable.at("input_27")[0], iTable.at("input_28")[0], iTable.at("input_29")[0], iTable.at("input_30")[0], iTable.at("input_31")[0], iTable.at("input_32")[0], iTable.at("input_33")[0], iTable.at("input_34")[0], iTable.at("input_35")[0], iTable.at("input_36")[0], iTable.at("input_37")[0], iTable.at("input_38")[0], iTable.at("input_39")[0], iTable.at("input_40")[0], iTable.at("input_41")[0], iTable.at("input_42")[0], iTable.at("input_43")[0], iTable.at("input_44")[0], iTable.at("input_45")[0], iTable.at("input_46")[0], iTable.at("input_47")[0], iTable.at("input_48")[0], iTable.at("input_49")[0], iTable.at("input_50")[0], iTable.at("input_51")[0], iTable.at("input_52")[0], iTable.at("input_53")[0], iTable.at("input_54")[0], iTable.at("input_55")[0], iTable.at("input_56")[0], iTable.at("input_57")[0], iTable.at("input_58")[0], iTable.at("input_59")[0], iTable.at("input_60")[0], iTable.at("input_61")[0], iTable.at("input_62")[0], iTable.at("input_63")[0], iTable.at("input_64")[0], iTable.at("input_65")[0], iTable.at("input_66")[0], iTable.at("input_67")[0], iTable.at("input_68")[0], iTable.at("input_69")[0], iTable.at("input_70")[0], iTable.at("input_71")[0], iTable.at("input_72")[0], iTable.at("input_73")[0], iTable.at("input_74")[0], iTable.at("input_75")[0], iTable.at("input_76")[0], iTable.at("input_77")[0], iTable.at("input_78")[0], iTable.at("input_79")[0], iTable.at("input_80")[0], iTable.at("input_81")[0], iTable.at("input_82")[0], iTable.at("input_83")[0], iTable.at("input_84")[0], iTable.at("input_85")[0], iTable.at("input_86")[0], iTable.at("input_87")[0], iTable.at("input_88")[0], iTable.at("input_89")[0], iTable.at("input_90")[0], iTable.at("input_91")[0], iTable.at("input_92")[0], iTable.at("input_93")[0], iTable.at("input_94")[0], iTable.at("input_95")[0], iTable.at("input_96")[0], iTable.at("input_97")[0], iTable.at("input_98")[0], iTable.at("input_99")[0]);
	
			return lTable;
		}
	
	} // eof namespace HiddenLayer_1
	

	namespace HiddenLayer_2 {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "output_1_0", "output_1_1", "output_1_2" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "output_2_0", "output_2_1", "output_2_2", "output_2_3", "output_2_4" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any output_1_0, std::any output_1_1, std::any output_1_2) {
	
			tTable lTable;
	
			double output_2_0_BA = 0.4748190077271721 * output_1_0 + -0.5967829064215594 * output_1_1 + 3.104057917116531 * output_1_2 + -1.40421423198232;
	
			double output_2_1_BA = -2.6663502613438337 * output_1_0 + -2.44475165650322 * output_1_1 + 1.1884682079980904 * output_1_2 + 3.550875283554554;
	
			double output_2_2_BA = -1.3321771413449248 * output_1_0 + 1.2125766234215767 * output_1_1 + 0.6118393832487429 * output_1_2 + -1.761691035768767;
	
			double output_2_3_BA = -0.2082916727572683 * output_1_0 + 3.549905089779239 * output_1_1 + -1.6191618998574713 * output_1_2 + 2.0211110881351777;
	
			double output_2_4_BA = -0.609312603159646 * output_1_0 + -0.377647294963034 * output_1_1 + -0.67296389788612 * output_1_2 + -0.01807831622698608;
	
			lTable["output_2_0"] = { relu(output_2_0_BA) };
			lTable["output_2_1"] = { relu(output_2_1_BA) };
			lTable["output_2_2"] = { relu(output_2_2_BA) };
			lTable["output_2_3"] = { relu(output_2_3_BA) };
			lTable["output_2_4"] = { relu(output_2_4_BA) };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("output_1_0")[0], iTable.at("output_1_1")[0], iTable.at("output_1_2")[0]);
	
			return lTable;
		}
	
	} // eof namespace HiddenLayer_2
	

	namespace OutputLayer {
	
		std::vector<std::string> get_input_names(){
			std::vector<std::string> lFeatures = { "output_2_0", "output_2_1", "output_2_2", "output_2_3", "output_2_4" };
	
			return lFeatures;
		}
	
		std::vector<std::string> get_output_names(){
			std::vector<std::string> lOutputs = { "Score_0", "Score_1", "Score_2", "Score_3" };
	
			return lOutputs;
		}
	
		tTable compute_features(std::any output_2_0, std::any output_2_1, std::any output_2_2, std::any output_2_3, std::any output_2_4) {
	
			tTable lTable;
	
			double output_3_0_BA = 0.1740935618600479 * output_2_0 + -4.008365636947392 * output_2_1 + -1.2861330416997383 * output_2_2 + 2.1687115677310222 * output_2_3 + 0.589855874097852 * output_2_4 + 2.9175485448391663;
	
			double output_3_1_BA = 1.4829352580884458 * output_2_0 + 2.2857830512789 * output_2_1 + -1.5775815449951984 * output_2_2 + -4.960615482350141 * output_2_3 + 0.3960822124958043 * output_2_4 + 3.888349616961264;
	
			double output_3_2_BA = 1.9825560362462946 * output_2_0 + 0.9647106505728429 * output_2_1 + 0.7637304387245403 * output_2_2 + 0.5703190899102509 * output_2_3 + 0.6634696059745063 * output_2_4 + -3.2813010976382655;
	
			double output_3_3_BA = -3.0233438778444612 * output_2_0 + 1.1225056821619332 * output_2_1 + 1.3080044810350875 * output_2_2 + 1.9458305494025157 * output_2_3 + -0.485500032751159 * output_2_4 + -4.8420472838163064;
	
			lTable["Score_0"] = { output_3_0_BA };
			lTable["Score_1"] = { output_3_1_BA };
			lTable["Score_2"] = { output_3_2_BA };
			lTable["Score_3"] = { output_3_3_BA };
	
			return lTable;
		}
	
		tTable compute_model_outputs_from_table( tTable const & iTable) {
			tTable lTable = compute_features(iTable.at("output_2_0")[0], iTable.at("output_2_1")[0], iTable.at("output_2_2")[0], iTable.at("output_2_3")[0], iTable.at("output_2_4")[0]);
	
			return lTable;
		}
	
	} // eof namespace OutputLayer
	

	std::vector<std::string> get_input_names(){
		std::vector<std::string> lFeatures = { "Feature_0", "Feature_1", "Feature_2", "Feature_3", "Feature_4", "Feature_5", "Feature_6", "Feature_7", "Feature_8", "Feature_9", "Feature_10", "Feature_11", "Feature_12", "Feature_13", "Feature_14", "Feature_15", "Feature_16", "Feature_17", "Feature_18", "Feature_19", "Feature_20", "Feature_21", "Feature_22", "Feature_23", "Feature_24", "Feature_25", "Feature_26", "Feature_27", "Feature_28", "Feature_29", "Feature_30", "Feature_31", "Feature_32", "Feature_33", "Feature_34", "Feature_35", "Feature_36", "Feature_37", "Feature_38", "Feature_39", "Feature_40", "Feature_41", "Feature_42", "Feature_43", "Feature_44", "Feature_45", "Feature_46", "Feature_47", "Feature_48", "Feature_49", "Feature_50", "Feature_51", "Feature_52", "Feature_53", "Feature_54", "Feature_55", "Feature_56", "Feature_57", "Feature_58", "Feature_59", "Feature_60", "Feature_61", "Feature_62", "Feature_63", "Feature_64", "Feature_65", "Feature_66", "Feature_67", "Feature_68", "Feature_69", "Feature_70", "Feature_71", "Feature_72", "Feature_73", "Feature_74", "Feature_75", "Feature_76", "Feature_77", "Feature_78", "Feature_79", "Feature_80", "Feature_81", "Feature_82", "Feature_83", "Feature_84", "Feature_85", "Feature_86", "Feature_87", "Feature_88", "Feature_89", "Feature_90", "Feature_91", "Feature_92", "Feature_93", "Feature_94", "Feature_95", "Feature_96", "Feature_97", "Feature_98", "Feature_99" };

		return lFeatures;
	}

	std::vector<std::string> get_output_names(){
		std::vector<std::string> lOutputs = { 
			"Score_0", "Score_1", "Score_2", "Score_3",
			"Proba_0", "Proba_1", "Proba_2", "Proba_3",
			"LogProba_0", "LogProba_1", "LogProba_2", "LogProba_3",
			"Decision", "DecisionProba" };

		return lOutputs;
	}

	tTable compute_classification_scores(std::any Feature_0, std::any Feature_1, std::any Feature_2, std::any Feature_3, std::any Feature_4, std::any Feature_5, std::any Feature_6, std::any Feature_7, std::any Feature_8, std::any Feature_9, std::any Feature_10, std::any Feature_11, std::any Feature_12, std::any Feature_13, std::any Feature_14, std::any Feature_15, std::any Feature_16, std::any Feature_17, std::any Feature_18, std::any Feature_19, std::any Feature_20, std::any Feature_21, std::any Feature_22, std::any Feature_23, std::any Feature_24, std::any Feature_25, std::any Feature_26, std::any Feature_27, std::any Feature_28, std::any Feature_29, std::any Feature_30, std::any Feature_31, std::any Feature_32, std::any Feature_33, std::any Feature_34, std::any Feature_35, std::any Feature_36, std::any Feature_37, std::any Feature_38, std::any Feature_39, std::any Feature_40, std::any Feature_41, std::any Feature_42, std::any Feature_43, std::any Feature_44, std::any Feature_45, std::any Feature_46, std::any Feature_47, std::any Feature_48, std::any Feature_49, std::any Feature_50, std::any Feature_51, std::any Feature_52, std::any Feature_53, std::any Feature_54, std::any Feature_55, std::any Feature_56, std::any Feature_57, std::any Feature_58, std::any Feature_59, std::any Feature_60, std::any Feature_61, std::any Feature_62, std::any Feature_63, std::any Feature_64, std::any Feature_65, std::any Feature_66, std::any Feature_67, std::any Feature_68, std::any Feature_69, std::any Feature_70, std::any Feature_71, std::any Feature_72, std::any Feature_73, std::any Feature_74, std::any Feature_75, std::any Feature_76, std::any Feature_77, std::any Feature_78, std::any Feature_79, std::any Feature_80, std::any Feature_81, std::any Feature_82, std::any Feature_83, std::any Feature_84, std::any Feature_85, std::any Feature_86, std::any Feature_87, std::any Feature_88, std::any Feature_89, std::any Feature_90, std::any Feature_91, std::any Feature_92, std::any Feature_93, std::any Feature_94, std::any Feature_95, std::any Feature_96, std::any Feature_97, std::any Feature_98, std::any Feature_99) {
		auto lClasses = get_classes();

		tTable lTable_InputLayer = InputLayer::compute_features(Feature_0, Feature_1, Feature_2, Feature_3, Feature_4, Feature_5, Feature_6, Feature_7, Feature_8, Feature_9, Feature_10, Feature_11, Feature_12, Feature_13, Feature_14, Feature_15, Feature_16, Feature_17, Feature_18, Feature_19, Feature_20, Feature_21, Feature_22, Feature_23, Feature_24, Feature_25, Feature_26, Feature_27, Feature_28, Feature_29, Feature_30, Feature_31, Feature_32, Feature_33, Feature_34, Feature_35, Feature_36, Feature_37, Feature_38, Feature_39, Feature_40, Feature_41, Feature_42, Feature_43, Feature_44, Feature_45, Feature_46, Feature_47, Feature_48, Feature_49, Feature_50, Feature_51, Feature_52, Feature_53, Feature_54, Feature_55, Feature_56, Feature_57, Feature_58, Feature_59, Feature_60, Feature_61, Feature_62, Feature_63, Feature_64, Feature_65, Feature_66, Feature_67, Feature_68, Feature_69, Feature_70, Feature_71, Feature_72, Feature_73, Feature_74, Feature_75, Feature_76, Feature_77, Feature_78, Feature_79, Feature_80, Feature_81, Feature_82, Feature_83, Feature_84, Feature_85, Feature_86, Feature_87, Feature_88, Feature_89, Feature_90, Feature_91, Feature_92, Feature_93, Feature_94, Feature_95, Feature_96, Feature_97, Feature_98, Feature_99);

		tTable lTable_HiddenLayer_1 = HiddenLayer_1::compute_model_outputs_from_table( lTable_InputLayer );

		tTable lTable_HiddenLayer_2 = HiddenLayer_2::compute_model_outputs_from_table( lTable_HiddenLayer_1 );

		tTable lTable_OutputLayer = OutputLayer::compute_model_outputs_from_table( lTable_HiddenLayer_2 );

		tTable lScores = tTable();

		lScores["Score"] = { lTable_OutputLayer[ "Score_0" ][0], lTable_OutputLayer[ "Score_1" ][0], lTable_OutputLayer[ "Score_2" ][0], lTable_OutputLayer[ "Score_3" ][0] };

		tTable lSoftMaxTable = soft_max( lScores );


		tTable lTable = lSoftMaxTable;

		int lBestClass = get_arg_max( lTable["Proba"] );
		auto lDecision = lClasses[lBestClass];
		lTable["Decision"] = { lDecision } ;
		lTable["DecisionProba"] = { lTable["Proba"][lBestClass] };

		recompute_log_probas( lTable );

		return lTable;
	}

	tTable compute_model_outputs_from_table( tTable const & iTable) {
		tTable lTable = compute_classification_scores(iTable.at("Feature_0")[0], iTable.at("Feature_1")[0], iTable.at("Feature_2")[0], iTable.at("Feature_3")[0], iTable.at("Feature_4")[0], iTable.at("Feature_5")[0], iTable.at("Feature_6")[0], iTable.at("Feature_7")[0], iTable.at("Feature_8")[0], iTable.at("Feature_9")[0], iTable.at("Feature_10")[0], iTable.at("Feature_11")[0], iTable.at("Feature_12")[0], iTable.at("Feature_13")[0], iTable.at("Feature_14")[0], iTable.at("Feature_15")[0], iTable.at("Feature_16")[0], iTable.at("Feature_17")[0], iTable.at("Feature_18")[0], iTable.at("Feature_19")[0], iTable.at("Feature_20")[0], iTable.at("Feature_21")[0], iTable.at("Feature_22")[0], iTable.at("Feature_23")[0], iTable.at("Feature_24")[0], iTable.at("Feature_25")[0], iTable.at("Feature_26")[0], iTable.at("Feature_27")[0], iTable.at("Feature_28")[0], iTable.at("Feature_29")[0], iTable.at("Feature_30")[0], iTable.at("Feature_31")[0], iTable.at("Feature_32")[0], iTable.at("Feature_33")[0], iTable.at("Feature_34")[0], iTable.at("Feature_35")[0], iTable.at("Feature_36")[0], iTable.at("Feature_37")[0], iTable.at("Feature_38")[0], iTable.at("Feature_39")[0], iTable.at("Feature_40")[0], iTable.at("Feature_41")[0], iTable.at("Feature_42")[0], iTable.at("Feature_43")[0], iTable.at("Feature_44")[0], iTable.at("Feature_45")[0], iTable.at("Feature_46")[0], iTable.at("Feature_47")[0], iTable.at("Feature_48")[0], iTable.at("Feature_49")[0], iTable.at("Feature_50")[0], iTable.at("Feature_51")[0], iTable.at("Feature_52")[0], iTable.at("Feature_53")[0], iTable.at("Feature_54")[0], iTable.at("Feature_55")[0], iTable.at("Feature_56")[0], iTable.at("Feature_57")[0], iTable.at("Feature_58")[0], iTable.at("Feature_59")[0], iTable.at("Feature_60")[0], iTable.at("Feature_61")[0], iTable.at("Feature_62")[0], iTable.at("Feature_63")[0], iTable.at("Feature_64")[0], iTable.at("Feature_65")[0], iTable.at("Feature_66")[0], iTable.at("Feature_67")[0], iTable.at("Feature_68")[0], iTable.at("Feature_69")[0], iTable.at("Feature_70")[0], iTable.at("Feature_71")[0], iTable.at("Feature_72")[0], iTable.at("Feature_73")[0], iTable.at("Feature_74")[0], iTable.at("Feature_75")[0], iTable.at("Feature_76")[0], iTable.at("Feature_77")[0], iTable.at("Feature_78")[0], iTable.at("Feature_79")[0], iTable.at("Feature_80")[0], iTable.at("Feature_81")[0], iTable.at("Feature_82")[0], iTable.at("Feature_83")[0], iTable.at("Feature_84")[0], iTable.at("Feature_85")[0], iTable.at("Feature_86")[0], iTable.at("Feature_87")[0], iTable.at("Feature_88")[0], iTable.at("Feature_89")[0], iTable.at("Feature_90")[0], iTable.at("Feature_91")[0], iTable.at("Feature_92")[0], iTable.at("Feature_93")[0], iTable.at("Feature_94")[0], iTable.at("Feature_95")[0], iTable.at("Feature_96")[0], iTable.at("Feature_97")[0], iTable.at("Feature_98")[0], iTable.at("Feature_99")[0]);

		return lTable;
	}

} // eof namespace 


int main() {
	score_csv_file("outputs/ml2cpp-demo/datasets/FourClass_100.csv");
	return 0;
}
